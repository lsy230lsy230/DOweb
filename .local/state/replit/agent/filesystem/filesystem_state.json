{"file_contents":{"README.md":{"content":"# DanceOffice - 댄스스포츠 대회 관리 시스템\n\n댄스스코어와 자체 개발 시스템을 통합한 댄스스포츠 대회 관리 및 결과 제공 웹사이트입니다.\n\n## 🎯 주요 기능\n\n### 📅 통합 스케줄러 시스템\n- 댄스스코어와 자체 시스템 결과 통합 관리\n- 대회 상태 자동 관리 (upcoming, ongoing, completed)\n- JSON 기반 유연한 대회 정보 저장\n\n### 🏠 메인페이지 카드 뉴스\n- 다가오는 대회 카드 (최대 3개)\n- 최근 완료된 대회 결과 카드 (최대 2개)\n- 직관적인 네비게이션으로 바로 결과 확인\n\n### 📊 종합결과 페이지\n- **주간 현황**: 지난주, 이번주, 다음주 대회 구분 표시\n- **연도별 목록**: 과거 대회 내역을 연도별로 확인\n- **타임라인 형태**: 시간순 정렬로 대회 이력 관리\n\n### 🎨 반응형 UI/UX\n- **PC 버전**: 좌측 네비게이션 + 메인 콘텐츠 + 우측 광고\n- **모바일 버전**: 상단 헤더 + 메인 콘텐츠 + 하단 네비게이션\n- **일관된 디자인**: 모든 페이지에서 통일된 사용자 경험\n\n## 🛠️ 기술 스택\n\n- **Backend**: PHP 7.4+\n- **Frontend**: HTML5, CSS3, JavaScript\n- **Database**: JSON 파일 기반\n- **Integration**: 댄스스코어 시스템 연동\n- **Responsive**: CSS Grid & Flexbox\n\n## 📁 프로젝트 구조\n\n```\nY:/\n├── index.php              # 메인 페이지\n├── assets/                # CSS, 이미지, 로고\n├── data/                  # 데이터 파일\n│   ├── scheduler.php      # 스케줄러 시스템\n│   ├── competitions.json  # 대회 정보 (예시)\n│   ├── notice.txt         # 공지사항\n│   └── schedule.txt       # 일정\n├── results/               # 경기 결과 (공개)\n│   ├── index.php          # 결과 메인 페이지\n│   └── results/           # 결과 파일들\n├── comprehensive/         # 종합결과 페이지\n│   └── index.php          # 종합결과 메인\n├── notice/                # 공지사항 (공개)\n├── manage/                # 관리자 페이지\n├── comp/                  # 채점 시스템 (비공개)\n├── recall/                # 리콜 시스템\n├── 04_scripts/            # 유틸리티 스크립트\n├── 05_documents/          # 문서 파일\n├── robots.txt             # 검색엔진 설정\n└── sitemap.xml            # 사이트맵\n```\n\n## 🚀 설치 및 설정\n\n### 1. 웹서버 설정\n- PHP 7.4 이상\n- 웹 루트를 프로젝트 폴더로 설정\n\n### 2. 권한 설정\n```bash\nchmod 755 data/\nchmod 644 data/*.json\nchmod 755 comp/\n```\n\n### 3. 대회 데이터 설정\n`data/competitions.json` 파일에 대회 정보를 추가하세요:\n\n```json\n{\n    \"id\": \"comp_2025_001\",\n    \"title\": \"대회명\",\n    \"subtitle\": \"부제목\",\n    \"date\": \"2025-09-14\",\n    \"place\": \"장소\",\n    \"status\": \"upcoming\",\n    \"dancescore_id\": \"ds_2025_001\",\n    \"our_system_id\": \"comp_2025_001\",\n    \"results_url\": \"/results/results/\"\n}\n```\n\n## 📱 사용법\n\n### 메인페이지\n- 다가오는 대회 카드에서 \"대회 정보\" 클릭\n- 최근 대회 카드에서 \"결과 보기\" 클릭\n\n### 종합결과 페이지\n- 주간 현황에서 각 주별 대회 확인\n- 연도별 목록에서 과거 대회 내역 검색\n\n### 관리자 기능\n- `/manage/` 경로에서 대회 관리\n- 스케줄러 시스템을 통한 대회 추가/수정\n\n## 🔧 개발 정보\n\n### 댄스스코어 연동\n- 기존 결과 파일 형식 그대로 유지\n- `results/results/` 폴더의 HTML/PDF 파일 활용\n- 댄스스코어 결과 형식에 맞춰 표시\n\n### 자체 시스템 통합\n- `comp/` 폴더의 채점 시스템 보호\n- 새로운 스케줄러로 대회 관리\n- 두 시스템의 결과를 통합 인터페이스로 제공\n\n## 📄 라이선스\n\n이 프로젝트는 댄스스포츠 대회 관리 목적으로 개발되었습니다.\n\n## 👨‍💻 개발자\n\n- **개발**: Seyoung Lee\n- **시스템**: DanceOffice\n- **연동**: 댄스스코어 + 자체 개발 시스템\n\n## 🔗 관련 링크\n\n- [댄스스코어](http://www.dancescorelive.net)\n- [DanceOffice](https://www.danceoffice.net)\n\n---\n\n**© 2025 DanceOffice | Powered by Seyoung Lee**\n","size_bytes":4259},"index.php":{"content":"<?php\nsession_start();\n\n// 다국어 시스템 로드\nrequire_once __DIR__ . '/lang/Language.php';\n$lang = Language::getInstance();\n\n// NoticeManager 로드\nrequire_once __DIR__ . '/data/NoticeManager.php';\n\n$base_ads_dir = __DIR__ . \"/data/\";\nfunction read_banner($pos) {\n    $img_web = \"/data/$pos.jpg\";\n    $img_file = __DIR__ . \"/data/$pos.jpg\";\n    $link_file = __DIR__ . \"/data/$pos.link\";\n    $link = file_exists($link_file) ? trim(file_get_contents($link_file)) : \"\";\n    if (file_exists($img_file)) {\n        if ($link) return \"<a href='$link' target='_blank'><img src='$img_web' alt='{$pos} 광고'></a>\";\n        else return \"<img src='$img_web' alt='{$pos} 광고'>\";\n    }\n    return \"\";\n}\n\n// 공지사항 로드 (데이터베이스 기반)\ntry {\n    $noticeManager = new NoticeManager();\n    $recent_notices = $noticeManager->getRecentNotices(3);\n} catch (Exception $e) {\n    $recent_notices = [];\n    error_log(\"공지사항 로드 실패: \" . $e->getMessage());\n}\n\n// 일정 미리보기 (기존 파일 기반)\n$schedule_file = __DIR__ . \"/data/schedule.txt\";\n$schedule_preview = file_exists($schedule_file) ? nl2br(htmlspecialchars(file_get_contents($schedule_file))) : t('no_schedule');\n\n// 대회 스케줄러 로드\nrequire_once __DIR__ . '/data/scheduler.php';\n$scheduler = new CompetitionScheduler();\n\n// 다가오는 대회 (최대 3개)\n$upcoming_competitions = $scheduler->getUpcomingCompetitions(3);\n\n// 최근 결과 대회 (대회 전날부터 7일간)\n$recent_results_competitions = $scheduler->getRecentResultsCompetitions();\n\n// 최근 완료된 대회 (최대 2개) - 기존 통계용\n$recent_competitions = $scheduler->getRecentCompetitions(2);\n?>\n<!DOCTYPE html>\n<html lang=\"<?= $lang->getCurrentLang() ?>\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title><?= t('site_title') ?></title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <link rel=\"stylesheet\" href=\"/assets/style.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@24,400,0,0\" rel=\"stylesheet\">\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n\n        body {\n            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n            background: linear-gradient(135deg, #0f172a 0%, #1e293b 50%, #334155 100%);\n            color: #e2e8f0;\n            overflow-x: hidden;\n        }\n\n        /* 새로운 대시보드 레이아웃 */\n        .dashboard-container {\n            display: flex;\n            min-height: 100vh;\n        }\n\n        /* 사이드바 */\n        .sidebar {\n            width: 280px;\n            background: rgba(15, 23, 42, 0.8);\n            backdrop-filter: blur(20px);\n            border-right: 1px solid rgba(59, 130, 246, 0.2);\n            padding: 24px 20px;\n            position: fixed;\n            height: 100vh;\n            z-index: 100;\n            overflow-y: auto;\n        }\n\n        .sidebar-logo {\n            display: flex;\n            align-items: center;\n            gap: 12px;\n            margin-bottom: 40px;\n            padding: 16px;\n            background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);\n            border-radius: 16px;\n            color: white;\n        }\n\n        .sidebar-logo img {\n            width: 32px;\n            height: 32px;\n        }\n\n        .sidebar-logo h1 {\n            font-size: 18px;\n            font-weight: 700;\n        }\n\n        .sidebar-nav {\n            list-style: none;\n        }\n\n        .sidebar-nav li {\n            margin-bottom: 8px;\n        }\n\n        .sidebar-nav a {\n            display: flex;\n            align-items: center;\n            gap: 12px;\n            padding: 12px 16px;\n            color: #94a3b8;\n            text-decoration: none;\n            border-radius: 12px;\n            transition: all 0.3s ease;\n            font-weight: 500;\n        }\n\n        .sidebar-nav a:hover,\n        .sidebar-nav a.active {\n            background: rgba(59, 130, 246, 0.1);\n            color: #3b82f6;\n            transform: translateX(4px);\n        }\n\n        .sidebar-nav .material-symbols-rounded {\n            font-size: 20px;\n        }\n\n        /* 언어 선택 */\n        .language-selector {\n            margin-top: 32px;\n            padding-top: 24px;\n            border-top: 1px solid rgba(59, 130, 246, 0.2);\n        }\n\n        .language-dropdown {\n            position: relative;\n        }\n\n        .language-toggle {\n            display: flex;\n            align-items: center;\n            gap: 8px;\n            padding: 12px 16px;\n            background: rgba(59, 130, 246, 0.1);\n            border: 1px solid rgba(59, 130, 246, 0.2);\n            border-radius: 12px;\n            color: #94a3b8;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            width: 100%;\n            text-align: left;\n        }\n\n        .language-toggle:hover {\n            background: rgba(59, 130, 246, 0.2);\n            color: #3b82f6;\n        }\n\n        .language-menu {\n            position: absolute;\n            bottom: 100%;\n            left: 0;\n            right: 0;\n            background: rgba(15, 23, 42, 0.95);\n            backdrop-filter: blur(20px);\n            border: 1px solid rgba(59, 130, 246, 0.2);\n            border-radius: 12px;\n            margin-bottom: 8px;\n            opacity: 0;\n            visibility: hidden;\n            transform: translateY(10px);\n            transition: all 0.3s ease;\n            z-index: 1000;\n        }\n\n        .language-menu.active {\n            opacity: 1;\n            visibility: visible;\n            transform: translateY(0);\n        }\n\n        .language-option {\n            display: flex;\n            align-items: center;\n            gap: 8px;\n            padding: 12px 16px;\n            color: #94a3b8;\n            text-decoration: none;\n            transition: all 0.3s ease;\n            border-radius: 8px;\n            margin: 4px;\n        }\n\n        .language-option:hover {\n            background: rgba(59, 130, 246, 0.1);\n            color: #3b82f6;\n        }\n\n        .language-option.current {\n            background: rgba(59, 130, 246, 0.2);\n            color: #3b82f6;\n        }\n\n        /* 메인 콘텐츠 */\n        .main-content {\n            flex: 1;\n            margin-left: 280px;\n            padding: 24px;\n        }\n\n        /* 히어로 섹션 */\n        .hero-section {\n            background: linear-gradient(135deg, #1e293b 0%, #334155 100%);\n            border-radius: 24px;\n            padding: 48px;\n            margin-bottom: 32px;\n            position: relative;\n            overflow: hidden;\n            border: 1px solid rgba(59, 130, 246, 0.2);\n        }\n\n        .hero-section::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            background: radial-gradient(circle at 30% 20%, rgba(59, 130, 246, 0.1) 0%, transparent 50%);\n            pointer-events: none;\n        }\n\n        .hero-content {\n            position: relative;\n            z-index: 2;\n        }\n\n        .hero-title {\n            font-size: 48px;\n            font-weight: 700;\n            margin-bottom: 16px;\n            background: linear-gradient(135deg, #ffffff 0%, #94a3b8 100%);\n            -webkit-background-clip: text;\n            -webkit-text-fill-color: transparent;\n            background-clip: text;\n        }\n\n        .hero-subtitle {\n            font-size: 20px;\n            color: #64748b;\n            margin-bottom: 32px;\n            max-width: 600px;\n        }\n\n        .hero-stats {\n            display: flex;\n            gap: 32px;\n        }\n\n        .stat-item {\n            text-align: center;\n        }\n\n        .stat-number {\n            font-size: 32px;\n            font-weight: 700;\n            color: #3b82f6;\n            display: block;\n        }\n\n        .stat-label {\n            font-size: 14px;\n            color: #64748b;\n            margin-top: 4px;\n        }\n\n        /* 대시보드 그리드 */\n        .dashboard-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\n            gap: 24px;\n            margin-bottom: 32px;\n        }\n\n        /* 위젯 카드 */\n        .widget-card {\n            background: rgba(30, 41, 59, 0.6);\n            backdrop-filter: blur(20px);\n            border: 1px solid rgba(59, 130, 246, 0.2);\n            border-radius: 20px;\n            padding: 24px;\n            transition: all 0.3s ease;\n        }\n\n        .widget-card:hover {\n            transform: translateY(-4px);\n            box-shadow: 0 20px 40px rgba(59, 130, 246, 0.1);\n            border-color: rgba(59, 130, 246, 0.4);\n        }\n\n        .widget-header {\n            display: flex;\n            align-items: center;\n            justify-content: between;\n            margin-bottom: 20px;\n        }\n\n        .widget-title {\n            font-size: 18px;\n            font-weight: 600;\n            color: #f1f5f9;\n            display: flex;\n            align-items: center;\n            gap: 8px;\n        }\n\n        .widget-icon {\n            color: #3b82f6;\n            font-size: 24px;\n        }\n\n        .widget-action {\n            color: #3b82f6;\n            text-decoration: none;\n            font-size: 14px;\n            font-weight: 500;\n            transition: color 0.3s ease;\n        }\n\n        .widget-action:hover {\n            color: #60a5fa;\n        }\n\n        /* 대회 카드 */\n        .competition-item {\n            background: rgba(15, 23, 42, 0.6);\n            border-radius: 16px;\n            padding: 20px;\n            margin-bottom: 16px;\n            border: 1px solid rgba(59, 130, 246, 0.1);\n            transition: all 0.3s ease;\n        }\n\n        .competition-item:hover {\n            background: rgba(59, 130, 246, 0.05);\n            border-color: rgba(59, 130, 246, 0.3);\n        }\n\n        /* Recent Results 스타일 */\n        .recent-result-item {\n            background: rgba(15, 23, 42, 0.6);\n            border: 1px solid rgba(59, 130, 246, 0.1);\n            border-radius: 12px;\n            padding: 20px;\n            margin-bottom: 16px;\n        }\n\n        .result-header {\n            display: flex;\n            justify-content: space-between;\n            align-items: flex-start;\n            margin-bottom: 16px;\n        }\n\n        .result-info h3.result-title {\n            color: #f1f5f9;\n            font-size: 16px;\n            font-weight: 600;\n            margin: 0 0 8px 0;\n        }\n\n        .result-meta {\n            display: flex;\n            gap: 12px;\n            font-size: 13px;\n            color: #94a3b8;\n        }\n\n        .result-date {\n            background: rgba(59, 130, 246, 0.1);\n            color: #3b82f6;\n            padding: 3px 8px;\n            border-radius: 8px;\n        }\n\n        .result-location {\n            background: rgba(100, 116, 139, 0.1);\n            color: #64748b;\n            padding: 3px 8px;\n            border-radius: 8px;\n        }\n\n        .result-actions {\n            display: flex;\n            gap: 8px;\n        }\n\n        .result-btn {\n            display: flex;\n            align-items: center;\n            gap: 6px;\n            padding: 8px 16px;\n            border-radius: 8px;\n            text-decoration: none;\n            font-size: 13px;\n            font-weight: 500;\n            transition: all 0.3s ease;\n        }\n\n        .result-btn .material-symbols-rounded {\n            font-size: 16px;\n        }\n\n        .btn-results {\n            background: rgba(34, 197, 94, 0.1);\n            color: #22c55e;\n            border: 1px solid rgba(34, 197, 94, 0.2);\n        }\n\n        .btn-results:hover {\n            background: rgba(34, 197, 94, 0.2);\n            border-color: rgba(34, 197, 94, 0.3);\n        }\n\n        .btn-live {\n            background: rgba(239, 68, 68, 0.1);\n            color: #ef4444;\n            border: 1px solid rgba(239, 68, 68, 0.2);\n        }\n\n        .btn-live:hover {\n            background: rgba(239, 68, 68, 0.2);\n            border-color: rgba(239, 68, 68, 0.3);\n        }\n\n        .comp-header {\n            display: flex;\n            justify-content: between;\n            align-items: center;\n            margin-bottom: 12px;\n        }\n\n        .comp-title {\n            font-size: 16px;\n            font-weight: 600;\n            color: #f1f5f9;\n        }\n\n        .comp-status {\n            padding: 4px 12px;\n            border-radius: 20px;\n            font-size: 12px;\n            font-weight: 500;\n        }\n\n        .status-upcoming {\n            background: rgba(34, 197, 94, 0.1);\n            color: #22c55e;\n            border: 1px solid rgba(34, 197, 94, 0.2);\n        }\n\n        .status-completed {\n            background: rgba(100, 116, 139, 0.1);\n            color: #64748b;\n            border: 1px solid rgba(100, 116, 139, 0.2);\n        }\n\n        .comp-details {\n            color: #94a3b8;\n            font-size: 14px;\n            line-height: 1.5;\n        }\n\n        .comp-meta {\n            display: flex;\n            gap: 16px;\n            margin-top: 12px;\n        }\n\n        .meta-item {\n            display: flex;\n            align-items: center;\n            gap: 4px;\n            font-size: 12px;\n            color: #64748b;\n        }\n\n        .meta-item .material-symbols-rounded {\n            font-size: 16px;\n        }\n\n        /* 액션 버튼 */\n        .action-buttons {\n            display: flex;\n            gap: 12px;\n            margin-top: 24px;\n        }\n\n        .btn {\n            padding: 12px 24px;\n            border-radius: 12px;\n            text-decoration: none;\n            font-weight: 500;\n            font-size: 14px;\n            transition: all 0.3s ease;\n            display: inline-flex;\n            align-items: center;\n            gap: 8px;\n        }\n\n        .btn-primary {\n            background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);\n            color: white;\n            border: 1px solid rgba(59, 130, 246, 0.2);\n        }\n\n        .btn-primary:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 8px 25px rgba(59, 130, 246, 0.3);\n        }\n\n        .btn-secondary {\n            background: rgba(59, 130, 246, 0.1);\n            color: #3b82f6;\n            border: 1px solid rgba(59, 130, 246, 0.2);\n        }\n\n        .btn-secondary:hover {\n            background: rgba(59, 130, 246, 0.2);\n        }\n\n        /* 모바일 대응 */\n        @media (max-width: 768px) {\n            .sidebar {\n                width: 100%;\n                height: auto;\n                position: relative;\n                padding: 16px;\n            }\n\n            .main-content {\n                margin-left: 0;\n                padding: 16px;\n            }\n\n            .dashboard-container {\n                flex-direction: column;\n            }\n\n            .hero-title {\n                font-size: 32px;\n            }\n\n            .hero-section {\n                padding: 32px 24px;\n            }\n\n            .dashboard-grid {\n                grid-template-columns: 1fr;\n                gap: 16px;\n            }\n\n            .hero-stats {\n                flex-direction: column;\n                gap: 16px;\n                text-align: center;\n            }\n        }\n    </style>\n</head>\n<body>\n    <div class=\"dashboard-container\">\n        <!-- 사이드바 -->\n        <nav class=\"sidebar\">\n            <div class=\"sidebar-logo\">\n                <img src=\"/assets/danceoffice-logo.png\" alt=\"DanceOffice\">\n                <h1>DanceOffice</h1>\n            </div>\n            \n            <ul class=\"sidebar-nav\">\n                <li><a href=\"/\" class=\"active\">\n                    <span class=\"material-symbols-rounded\">dashboard</span>\n                    <?= t('nav_dashboard') ?>\n                </a></li>\n                <li><a href=\"/competitions.php\">\n                    <span class=\"material-symbols-rounded\">event</span>\n                    <?= t('nav_competitions') ?>\n                </a></li>\n                <li><a href=\"/results.php\">\n                    <span class=\"material-symbols-rounded\">trophy</span>\n                    <?= t('nav_results') ?>\n                </a></li>\n                <li><a href=\"/manage/\">\n                    <span class=\"material-symbols-rounded\">settings</span>\n                    <?= t('nav_management') ?>\n                </a></li>\n                <li><a href=\"/notice/\">\n                    <span class=\"material-symbols-rounded\">notifications</span>\n                    <?= t('nav_notices') ?>\n                </a></li>\n            </ul>\n\n            <!-- 언어 선택기 -->\n            <div class=\"language-selector\">\n                <div class=\"language-dropdown\">\n                    <div class=\"language-toggle\" onclick=\"toggleLanguageMenu()\">\n                        <span><?= $lang->getLangFlag() ?></span>\n                        <span><?= $lang->getLangName() ?></span>\n                        <span class=\"material-symbols-rounded\" style=\"margin-left: auto;\">expand_more</span>\n                    </div>\n                    <div class=\"language-menu\" id=\"languageMenu\">\n                        <?php foreach ($lang->getAvailableLanguages() as $code => $info): ?>\n                            <a href=\"<?= $lang->getLanguageUrl($code) ?>\" \n                               class=\"language-option <?= $code === $lang->getCurrentLang() ? 'current' : '' ?>\">\n                                <span><?= $info['flag'] ?></span>\n                                <span><?= $info['name'] ?></span>\n                            </a>\n                        <?php endforeach; ?>\n                    </div>\n                </div>\n            </div>\n        </nav>\n\n        <!-- 메인 콘텐츠 -->\n        <main class=\"main-content\">\n            <!-- 히어로 섹션 -->\n            <section class=\"hero-section\">\n                <div class=\"hero-content\">\n                    <h1 class=\"hero-title\"><?= t('hero_title') ?></h1>\n                    <p class=\"hero-subtitle\">\n                        <?= t('hero_subtitle') ?>\n                        <br><?= t('hero_description') ?>\n                    </p>\n                    \n                    <div class=\"hero-stats\">\n                        <div class=\"stat-item\">\n                            <span class=\"stat-number\"><?= count($upcoming_competitions) + count($recent_competitions) ?></span>\n                            <span class=\"stat-label\"><?= t('stat_total_competitions') ?></span>\n                        </div>\n                        <div class=\"stat-item\">\n                            <span class=\"stat-number\"><?= count($upcoming_competitions) ?></span>\n                            <span class=\"stat-label\"><?= t('stat_upcoming_events') ?></span>\n                        </div>\n                        <div class=\"stat-item\">\n                            <span class=\"stat-number\"><?= count($recent_competitions) ?></span>\n                            <span class=\"stat-label\"><?= t('stat_completed') ?></span>\n                        </div>\n                    </div>\n                </div>\n            </section>\n\n            <!-- 대시보드 그리드 -->\n            <div class=\"dashboard-grid\">\n                <!-- 다가오는 대회 위젯 -->\n                <div class=\"widget-card\">\n                    <div class=\"widget-header\">\n                        <h2 class=\"widget-title\">\n                            <span class=\"material-symbols-rounded widget-icon\">upcoming</span>\n                            <?= t('widget_upcoming_competitions') ?>\n                        </h2>\n                        <a href=\"/comp/\" class=\"widget-action\"><?= t('action_view_all') ?></a>\n                    </div>\n                    \n                    <div class=\"widget-content\">\n                        <?php if (!empty($upcoming_competitions)): ?>\n                            <?php foreach ($upcoming_competitions as $comp): ?>\n                                <a href=\"/competition.php?id=<?= urlencode($comp['id']) ?>\" style=\"text-decoration: none; color: inherit;\">\n                                    <div class=\"competition-item\">\n                                        <div class=\"comp-header\">\n                                            <h3 class=\"comp-title\"><?= htmlspecialchars($comp['name']) ?></h3>\n                                            <span class=\"comp-status status-upcoming\"><?= t('status_upcoming') ?></span>\n                                        </div>\n                                        <div class=\"comp-details\">\n                                            <?= htmlspecialchars($comp['description']) ?>\n                                        </div>\n                                        <div class=\"comp-meta\">\n                                            <div class=\"meta-item\">\n                                                <span class=\"material-symbols-rounded\">schedule</span>\n                                                <?= $lang->formatDate($comp['date']) ?>\n                                            </div>\n                                            <div class=\"meta-item\">\n                                                <span class=\"material-symbols-rounded\">location_on</span>\n                                                <?= htmlspecialchars($comp['location']) ?>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </a>\n                            <?php endforeach; ?>\n                        <?php else: ?>\n                            <p style=\"color: #64748b; text-align: center; padding: 20px;\">\n                                <?= t('no_upcoming_competitions') ?>\n                            </p>\n                        <?php endif; ?>\n                    </div>\n                </div>\n\n                <!-- 최근 결과 위젯 -->\n                <div class=\"widget-card\">\n                    <div class=\"widget-header\">\n                        <h2 class=\"widget-title\">\n                            <span class=\"material-symbols-rounded widget-icon\">history</span>\n                            <?= t('widget_recent_results') ?>\n                        </h2>\n                        <a href=\"/results.php\" class=\"widget-action\"><?= t('action_view_all') ?></a>\n                    </div>\n                    \n                    <div class=\"widget-content\">\n                        <?php if (!empty($recent_results_competitions)): ?>\n                            <?php foreach ($recent_results_competitions as $comp): ?>\n                                <div class=\"recent-result-item\">\n                                    <div class=\"result-header\">\n                                        <div class=\"result-info\">\n                                            <h3 class=\"result-title\"><?= htmlspecialchars($comp['name'] ?? $comp['title']) ?></h3>\n                                            <div class=\"result-meta\">\n                                                <span class=\"result-date\"><?= $lang->formatDate($comp['date']) ?></span>\n                                                <span class=\"result-location\"><?= htmlspecialchars($comp['location'] ?? $comp['place']) ?></span>\n                                            </div>\n                                        </div>\n                                        <span class=\"comp-status status-<?= $comp['status'] ?>\"><?= t('status_' . $comp['status']) ?></span>\n                                    </div>\n                                    \n                                    <div class=\"result-actions\">\n                                        <a href=\"/competition.php?id=<?= urlencode($comp['id']) ?>&page=results\" class=\"result-btn btn-results\">\n                                            <span class=\"material-symbols-rounded\">trophy</span>\n                                            종합결과\n                                        </a>\n                                        <a href=\"/competition.php?id=<?= urlencode($comp['id']) ?>&page=live\" class=\"result-btn btn-live\">\n                                            <span class=\"material-symbols-rounded\">live_tv</span>\n                                            실시간 결과\n                                        </a>\n                                    </div>\n                                </div>\n                            <?php endforeach; ?>\n                        <?php else: ?>\n                            <p style=\"color: #64748b; text-align: center; padding: 20px;\">\n                                최근 7일간 완료된 대회가 없습니다\n                            </p>\n                        <?php endif; ?>\n                    </div>\n                </div>\n\n                <!-- 공지사항 위젯 -->\n                <div class=\"widget-card\">\n                    <div class=\"widget-header\">\n                        <h2 class=\"widget-title\">\n                            <span class=\"material-symbols-rounded widget-icon\">campaign</span>\n                            <?= t('widget_announcements') ?>\n                        </h2>\n                        <a href=\"/manage/\" class=\"widget-action\"><?= t('action_manage') ?></a>\n                    </div>\n                    \n                    <div class=\"widget-content\">\n                        <?php if (!empty($recent_notices)): ?>\n                            <?php foreach ($recent_notices as $notice): ?>\n                                <div class=\"notice-item\" style=\"margin-bottom: 16px; padding-bottom: 16px; border-bottom: 1px solid rgba(59, 130, 246, 0.1);\">\n                                    <div style=\"display: flex; align-items: flex-start; gap: 8px; margin-bottom: 8px;\">\n                                        <?php if ($notice['is_pinned']): ?>\n                                            <span class=\"material-symbols-rounded\" style=\"color: #f59e0b; font-size: 16px; margin-top: 2px;\">push_pin</span>\n                                        <?php endif; ?>\n                                        <div style=\"flex: 1;\">\n                                            <h4 style=\"color: #f1f5f9; font-size: 14px; font-weight: 600; margin: 0 0 4px 0; line-height: 1.4;\">\n                                                <?= htmlspecialchars($notice['title']) ?>\n                                            </h4>\n                                            <p style=\"color: #94a3b8; font-size: 12px; margin: 0 0 8px 0;\">\n                                                <?= date('Y-m-d', strtotime($notice['created_at'])) ?>\n                                            </p>\n                                        </div>\n                                    </div>\n                                    \n                                    <div style=\"color: #e2e8f0; font-size: 13px; line-height: 1.5;\">\n                                        <?php \n                                        $content = htmlspecialchars($notice['content']);\n                                        if (strlen($content) > 100) {\n                                            echo substr($content, 0, 100) . '...';\n                                        } else {\n                                            echo nl2br($content);\n                                        }\n                                        ?>\n                                    </div>\n                                    \n                                    <?php if ($notice['image_path']): ?>\n                                        <div style=\"margin-top: 8px;\">\n                                            <img src=\"/<?= $notice['image_path'] ?>\" alt=\"<?= htmlspecialchars($notice['title']) ?>\" \n                                                 style=\"max-width: 100%; height: auto; border-radius: 6px; max-height: 120px;\">\n                                        </div>\n                                    <?php endif; ?>\n                                </div>\n                            <?php endforeach; ?>\n                            \n                            <div style=\"text-align: center; margin-top: 16px;\">\n                                <a href=\"/manage/\" style=\"color: #3b82f6; text-decoration: none; font-size: 12px; display: inline-flex; align-items: center; gap: 4px;\">\n                                    <span class=\"material-symbols-rounded\" style=\"font-size: 14px;\">visibility</span>\n                                    <?= t('view_all_notices') ?>\n                                </a>\n                            </div>\n                        <?php else: ?>\n                            <div style=\"text-align: center; color: #64748b; padding: 20px;\">\n                                <span class=\"material-symbols-rounded\" style=\"font-size: 32px; margin-bottom: 8px; display: block; opacity: 0.5;\">campaign</span>\n                                <?= t('no_notices') ?>\n                            </div>\n                        <?php endif; ?>\n                    </div>\n                </div>\n\n                <!-- 일정 위젯 -->\n                <div class=\"widget-card\">\n                    <div class=\"widget-header\">\n                        <h2 class=\"widget-title\">\n                            <span class=\"material-symbols-rounded widget-icon\">calendar_month</span>\n                            <?= t('widget_schedule') ?>\n                        </h2>\n                        <a href=\"/manage/\" class=\"widget-action\"><?= t('action_edit') ?></a>\n                    </div>\n                    \n                    <div class=\"widget-content\">\n                        <div style=\"color: #94a3b8; line-height: 1.6; font-size: 14px;\">\n                            <?= $schedule_preview ?>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <!-- 액션 버튼 -->\n            <div class=\"action-buttons\">\n                <a href=\"/comp/\" class=\"btn btn-primary\">\n                    <span class=\"material-symbols-rounded\">add</span>\n                    <?= t('action_new_competition') ?>\n                </a>\n                <a href=\"/results/\" class=\"btn btn-secondary\">\n                    <span class=\"material-symbols-rounded\">visibility</span>\n                    <?= t('action_view_results') ?>\n                </a>\n                <a href=\"/manage/\" class=\"btn btn-secondary\">\n                    <span class=\"material-symbols-rounded\">tune</span>\n                    <?= t('action_settings') ?>\n                </a>\n            </div>\n        </main>\n    </div>\n\n    <script>\n        function toggleLanguageMenu() {\n            const menu = document.getElementById('languageMenu');\n            menu.classList.toggle('active');\n        }\n\n        // 언어 메뉴 외부 클릭시 닫기\n        document.addEventListener('click', function(event) {\n            const dropdown = document.querySelector('.language-dropdown');\n            const menu = document.getElementById('languageMenu');\n            \n            if (!dropdown.contains(event.target)) {\n                menu.classList.remove('active');\n            }\n        });\n    </script>\n</body>\n</html>","size_bytes":31404},"04_scripts/logo.py":{"content":"from PIL import Image, ImageDraw, ImageFont\n\n# 캔버스 생성\nimg = Image.new('RGB', (220, 48), color='#222')\ndraw = ImageDraw.Draw(img)\n\n# 폰트 경로 (윈도우: 'arialbd.ttf', 맥: 'Arial Bold', 또는 NotoSansKR-Bold)\nfont_path = 'arialbd.ttf'  # 시스템에 따라 변경\nfont = ImageFont.truetype(font_path, 32)\n\n# \"Dance\" 그린\ndraw.text((18, 6), \"Dance\", font=font, fill='#03C75A')\n\n# \"office\" 흰색\ndraw.text((120, 6), \"office\", font=font, fill='#FFFFFF')\n\n# 저장\nimg.save('danceoffice-logo.png')","size_bytes":514},"04_scripts/sync_recall.py":{"content":"import os\nimport time\nimport shutil\nimport re\n\nsrc_web = r\"C:\\dancescore\\Web\"\ndst_web = r\"Y:\\results\"\nsrc_recall_file = r\"C:\\dancescore\\Recall\\index.php\"\ndst_recall_file = r\"Y:\\Recall\\index.php\"\nCHECK_INTERVAL = 2\n\ndef replace_content(content):\n    # 1. Tag를 등번호로 치환\n    content = re.sub(r\"\\btag\\b\", \"등번호\", content, flags=re.IGNORECASE)\n    # 2. 텍스트 테이블 헤더에 등위 추가 (Recall index.php가 텍스트 테이블인 경우)\n    content = re.sub(r\"^(등번호\\s+\\S+\\s+\\S+)\", r\"등위\\t\\1\", content, flags=re.MULTILINE)\n    # 3. HTML 테이블 헤더에 등위 추가 (Recall index.php가 HTML 테이블인 경우)\n    content = re.sub(r\"(<th[^>]*?>\\s*)</th>\", r\"\\1등위</th>\", content, count=1, flags=re.IGNORECASE)\n    # 4. 경기 진출 치환\n    content = re.sub(r\"Recalled\\s+(\\d+)\\s+Couples\\s+to\\s+Item\\s+(\\d+)\", r\"\\1커플이 \\2번 이벤트로 진출합니다.\", content)\n    content = re.sub(r\"Recalled\\s+(\\d+)\\s+Couples\\s+to\\s+(\\d+)\", r\"\\1커플이 \\2번 이벤트로 진출합니다.\", content)\n    # 5. 기타 라벨 치환\n    content = re.sub(r\"Adjudicators\", \"심사위원\", content)\n    content = re.sub(r\"Marks\", \"득점\", content)\n    content = re.sub(r\"Description\", \"부문\", content)\n    # 6. Results Copyright of 삭제\n    content = re.sub(r\"Results Copyright of\", \"\", content, flags=re.IGNORECASE)\n    # 7. DanceSportLive 문구/링크 삭제\n    content = re.sub(r'<a[^>]*?>\\s*DanceSportLive[^<]*</a>', '', content, flags=re.IGNORECASE)\n    content = re.sub(r'DanceSportLive', '', content, flags=re.IGNORECASE)\n    # 8. 불필요한 문구/링크/저작권 제거\n    content = re.sub(r'<a[^>]*?>\\s*DanceScore Scrutineering Software\\s*</a>', '', content, flags=re.IGNORECASE)\n    content = re.sub(r'DanceScore Scrutineering Software', '', content, flags=re.IGNORECASE)\n    content = re.sub(r'<a[^>]*?>\\s*DanceScore\\s*</a>', '', content, flags=re.IGNORECASE)\n    content = re.sub(r'<a[^>]*?>\\s*DanceSportLive\\.net\\s*</a>', '', content, flags=re.IGNORECASE)\n    content = re.sub(r'©\\s*DanceScore\\s*-\\s*DanceSportLive\\.net\\s*V7-5-00', '', content, flags=re.IGNORECASE)\n    content = re.sub(r'DanceScore\\s*-\\s*DanceSportLive\\.net\\s*V7-5-00', '', content, flags=re.IGNORECASE)\n    content = re.sub(r'DanceScoreLive\\.net', '', content, flags=re.IGNORECASE)\n    # 9. \"© - V7-5-00\" 삭제\n    content = re.sub(r'©\\s*-\\s*V7-5-00', '', content, flags=re.IGNORECASE)\n    # 10. Home 링크 변경\n    content = re.sub(r\"<a\\s+href=[\\'\\\"]?(\\.\\./)?index\\.html[\\'\\\"]?\\s*>Home\\s*</a>\",\n                     r'<a href=\"https://www.danceoffice.net/results/\">Home</a>', content, flags=re.IGNORECASE)\n    content = re.sub(r\"<a\\s+href=[\\'\\\"]?(\\.\\./)?index\\.php[\\'\\\"]?\\s*>Home\\s*</a>\",\n                     r'<a href=\"https://www.danceoffice.net/results/\">Home</a>', content, flags=re.IGNORECASE)\n    content = re.sub(r\"<a\\s+href=[\\'\\\"]?.*?home.*?[\\'\\\"]?\\s*>Home\\s*</a>\",\n                     r'<a href=\"https://www.danceoffice.net/results/\">Home</a>', content, flags=re.IGNORECASE)\n    return content\n\ndef convert_and_copy(src_file, dst_file):\n    try:\n        with open(src_file, \"rb\") as f:\n            raw = f.read()\n        # 인코딩 자동 감지 및 변환\n        if raw.startswith(b'\\xff\\xfe'):\n            text = raw.decode('utf-16le', errors='ignore')\n        elif raw.startswith(b'\\xfe\\xff'):\n            text = raw.decode('utf-16be', errors='ignore')\n        elif raw.startswith(b'\\xef\\xbb\\xbf'):\n            text = raw.decode('utf-8-sig', errors='ignore')\n        else:\n            try:\n                text = raw.decode('utf-8')\n            except:\n                try:\n                    text = raw.decode('euc-kr')\n                except:\n                    text = raw.decode('cp949', errors='ignore')\n        new_content = replace_content(text)\n        ensure_dir_exists(dst_file)\n        with open(dst_file, \"w\", encoding=\"utf-8\") as f:\n            f.write(new_content)\n        shutil.copystat(src_file, dst_file)  # mtime 맞춤\n        print(f\"[치환/복사] {src_file} → {dst_file}\")\n    except Exception as e:\n        print(f\"[치환/복사 실패] {src_file} → {dst_file}: {e}\")\n\ndef copy_file_with_rules(src_file, dst_file, rel_dir, fname):\n    ext = os.path.splitext(fname)[1].lower()\n    # 임시 파일(.tmp)은 건너뜀\n    if fname.lower().endswith('.tmp'):\n        print(f\"[건너뜀] {src_file} (임시 파일)\")\n        return\n    # results index.php는 건너뜀(유지)\n    if rel_dir == '.' and fname == \"index.php\":\n        print(f\"[건너뜀] {src_file} (index.php는 유지)\")\n        return\n    # 텍스트 파일은 치환 복사\n    if ext in [\".html\", \".htm\", \".txt\", \".php\"]:\n        convert_and_copy(src_file, dst_file)\n    else:\n        ensure_dir_exists(dst_file)\n        try:\n            shutil.copy2(src_file, dst_file)\n            shutil.copystat(src_file, dst_file)  # mtime 맞춤\n            print(f\"[일반복사] {src_file} → {dst_file}\")\n        except Exception as e:\n            print(f\"[복사 실패] {src_file} → {dst_file}: {e}\")\n\ndef ensure_dir_exists(path):\n    dirname = os.path.dirname(path)\n    if dirname and not os.path.exists(dirname):\n        os.makedirs(dirname, exist_ok=True)\n\ndef scan_files(base_dir):\n    file_map = {}\n    for root, dirs, files in os.walk(base_dir):\n        for fname in files:\n            # 임시 파일(.tmp)은 제외\n            if fname.lower().endswith('.tmp'):\n                continue\n            fpath = os.path.join(root, fname)\n            try:\n                mtime = os.path.getmtime(fpath)\n                rel_dir = os.path.relpath(root, base_dir)\n                rel_path = os.path.join(rel_dir, fname) if rel_dir != \".\" else fname\n                file_map[rel_path] = (mtime, os.path.getsize(fpath))\n            except Exception:\n                pass\n    return file_map\n\ndef sync_web_folder(prev_web_files):\n    curr_web_files = scan_files(src_web)\n    for rel_path, (mtime, size) in curr_web_files.items():\n        src_file = os.path.join(src_web, rel_path)\n        dst_file = os.path.join(dst_web, rel_path)\n        rel_dir = os.path.dirname(rel_path)\n        fname = os.path.basename(rel_path)\n        # 새 파일/변경 파일만 복사\n        if (rel_path not in prev_web_files or\n            prev_web_files[rel_path] != (mtime, size)):\n            copy_file_with_rules(src_file, dst_file, rel_dir, fname)\n    return curr_web_files\n\ndef sync_recall_index(prev_recall_mtime):\n    # Recall index.php는 항상 치환 복사\n    if os.path.exists(src_recall_file):\n        recall_mtime = os.path.getmtime(src_recall_file)\n        if prev_recall_mtime != recall_mtime:\n            convert_and_copy(src_recall_file, dst_recall_file)\n        return recall_mtime\n    else:\n        print(f\"[Recall index.php 없음] {src_recall_file}\")\n        return prev_recall_mtime\n\ndef main():\n    print(\"실시간 Web/Recall 폴더 감시 + 트리유지 복사 시작...\")\n    prev_web_files = scan_files(src_web)\n    prev_recall_mtime = None\n    while True:\n        prev_web_files = sync_web_folder(prev_web_files)\n        prev_recall_mtime = sync_recall_index(prev_recall_mtime)\n        time.sleep(CHECK_INTERVAL)\n\nif __name__ == \"__main__\":\n    main()","size_bytes":7209},"assets/contest.css":{"content":"/* 프리스타일 채점 시스템 스타일 */\ninput[type=\"text\"], input[type=\"password\"], select, textarea {\n    background: #1E2126;\n    color: #F5F7FA;\n    border: 1px solid #31343a;\n    border-radius: 10px;\n    padding: 0.6em 0.8em;\n    font-size: 1em;\n    transition: border-color 0.2s, box-shadow 0.2s;\n}\n\ninput[type=\"text\"]:focus, input[type=\"password\"]:focus, select:focus, textarea:focus {\n    outline: none;\n    border-color: #03C75A;\n    box-shadow: 0 0 0 2px rgba(3,199,90,0.2);\n}\n\ntable {\n    width: 100%;\n    border-collapse: collapse;\n    margin: 1em 0;\n}\n\nth, td {\n    padding: 0.7em 0.5em;\n    border-bottom: 1px solid #31343a;\n    text-align: left;\n}\n\nth {\n    background: #181B20;\n    color: #03C75A;\n    font-weight: 700;\n}\n\ntd {\n    color: #F5F7FA;\n}\n\ntr:last-child td {\n    border-bottom: none;\n}\n\n/* 숫자 정렬 */\ntd[style*=\"text-align:right\"] {\n    text-align: right !important;\n}\n\n/* 배지 스타일 */\n.badge {\n    display: inline-block;\n    padding: 0.2em 0.6em;\n    border-radius: 8px;\n    background: #2a2d31;\n    font-size: 0.9em;\n    color: #cfe8da;\n    font-weight: 500;\n}\n\n/* 모달 패널 */\n.modal {\n    position: fixed;\n    inset: 0;\n    background: rgba(0,0,0,0.55);\n    display: none;\n    align-items: center;\n    justify-content: center;\n    z-index: 1000;\n}\n\n.modal .panel {\n    background: #1E2126;\n    border: 1px solid #31343a;\n    border-radius: 12px;\n    padding: 1.5em;\n    width: min(520px, 95vw);\n    box-shadow: 0 6px 28px rgba(0,0,0,0.35);\n}\n\n/* 점수 선택 그리드 */\n.grid {\n    display: grid;\n    grid-template-columns: repeat(5, 1fr);\n    gap: 8px;\n    margin: 1em 0;\n}\n\n.grid button {\n    padding: 0.6em;\n    border-radius: 10px;\n    border: 1px solid #31343a;\n    background: #222;\n    color: #F5F7FA;\n    cursor: pointer;\n    transition: background 0.15s, color 0.15s, box-shadow 0.15s;\n    font-size: 0.95em;\n}\n\n.grid button:hover {\n    background: #262a30;\n    box-shadow: 0 2px 8px rgba(3,199,90,0.18);\n}\n\n.grid button.active {\n    background: #03C75A;\n    color: #222;\n    font-weight: 700;\n    box-shadow: 0 2px 8px rgba(3,199,90,0.3);\n}\n\n/* 제출된 행 하이라이트 */\n.tr-submitted {\n    background: #1f2a22 !important;\n}\n\n/* 자동 저장 인디케이터 */\n#autosave-ind {\n    display: none;\n    margin-top: 0.8em;\n    color: #03C75A;\n    font-size: 0.95em;\n    text-align: center;\n    align-items: center;\n    gap: 0.4em;\n    justify-content: center;\n}\n\n#autosave-ind .material-symbols-rounded {\n    font-size: 1.2em;\n    vertical-align: middle;\n}\n\n/* 반응형 */\n@media (max-width: 700px) {\n    .grid {\n        grid-template-columns: repeat(3, 1fr);\n    }\n    \n    .modal .panel {\n        padding: 1em;\n        margin: 1em;\n    }\n    \n    table {\n        font-size: 0.9em;\n    }\n    \n    th, td {\n        padding: 0.5em 0.3em;\n    }\n}\n\n@media (max-width: 480px) {\n    .grid {\n        grid-template-columns: repeat(2, 1fr);\n    }\n    \n    table {\n        font-size: 0.8em;\n    }\n}","size_bytes":2963},"assets/style.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;700&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded');\n\n/* ========================================\n   기본 설정\n======================================== */\nhtml, body {\n    width: 100vw;\n    min-width: 100vw;\n    max-width: 100vw;\n    height: 100%;\n    min-height: 100vh;\n    overflow-x: hidden;\n}\nbody {\n    font-family: 'Noto Sans KR', 'Inter', 'Arial', sans-serif;\n    background: #181B20;\n    margin: 0;\n    padding: 0;\n    color: #F5F7FA;\n    font-size: 14px;\n    line-height: 1.5;\n}\n\n/* ========================================\n   헤더\n======================================== */\n.main-header {\n    background: #1a1d21;\n    color: #fff;\n    padding: 0 0 1.2em 0;\n    text-align: center;\n    box-shadow: 0 2px 14px rgba(0,0,0,0.19);\n    border-bottom: 2px solid #03C75A;\n}\n.logo-nav {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 0.7em;\n}\n.main-logo {\n    height: 70px;\n    margin-top: 1.2em;\n    border-radius: 16px;\n    box-shadow: 0 2px 10px rgba(3,199,90,0.08);\n}\n.main-nav {\n    display: flex;\n    gap: 1.2em;\n    margin: 0.5em 0;\n    justify-content: center;\n    flex-wrap: wrap;\n}\n.main-nav a {\n    color: #fff;\n    background: transparent;\n    text-decoration: none;\n    font-weight: 600;\n    font-size: 14px;\n    padding: 10px 20px;\n    border-radius: 16px;\n    transition: background 0.2s, color 0.2s;\n    min-width: 0;\n    white-space: nowrap;\n}\n.main-nav a:hover, .main-nav a.active {\n    background: #03C75A;\n    color: #222;\n}\n\n/* ========================================\n   광고 영역\n======================================== */\n.ad-top {text-align:center; margin-bottom:1em;}\n.ad-side {position:fixed; top:100px; width:160px;}\n.ad-left {left:0;}\n.ad-right {right:0;}\n.ad-bottom {text-align:center; margin-top:2em;}\n@media (max-width: 900px) {\n    .ad-side {display:none;}\n}\n\n/* ========================================\n   메인 영역 (PC)\n======================================== */\nmain {\n    max-width: 1200px;\n    margin: 20px auto;\n    background: #222;\n    padding: 25px;\n    border-radius: 15px;\n    box-shadow: 0 8px 25px rgba(0,0,0,0.15);\n    width: 100%;\n    box-sizing: border-box;\n    font-size: 14px;\n}\n\n/* ========================================\n   카드형 정보 섹션\n======================================== */\n.info-section {\n    margin-bottom: 2em;\n}\n.info-cards {\n    display: flex;\n    gap: 2em;\n    flex-wrap: wrap;\n    justify-content: center;\n}\n.info-card {\n    background: #181B20;\n    border-radius: 15px;\n    box-shadow: 0 4px 12px rgba(3,199,90,0.08);\n    padding: 20px;\n    width: 320px;\n    min-width: 280px;\n    max-width: 360px;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    margin-bottom: 15px;\n    position: relative;\n    font-size: 14px;\n}\n.card-icon {\n    font-family: 'Material Symbols Rounded';\n    font-size: 36px;\n    color: #00BFAE;\n    position: absolute;\n    top: 15px;\n    right: 15px;\n    opacity: 0.21;\n    pointer-events: none;\n}\n.info-card h2 {\n    font-size: 18px;\n    color: #03C75A;\n    margin-bottom: 15px;\n    margin-top: 5px;\n    font-weight: 700;\n}\n.notice-preview, .schedule-preview {\n    background: #222;\n    border-radius: 12px;\n    padding: 15px;\n    margin-bottom: 15px;\n    font-size: 13px;\n    color: #F5F7FA;\n    border: 1px solid #31343a;\n    box-shadow: 0 4px 12px rgba(3,199,90,0.08);\n    min-height: 80px;\n    line-height: 1.4;\n}\n.notice-preview strong, .schedule-preview strong {\n    color: #03C75A;\n    font-weight: 700;\n}\n.notice-preview a, .schedule-preview a {\n    color: #00BFAE;\n    text-decoration: underline;\n    word-break: break-all;\n}\n.notice-preview a:hover, .schedule-preview a:hover {\n    color: #03C75A;\n    text-decoration: underline;\n}\n\n/* ========================================\n   경기 결과 섹션\n======================================== */\n.results-section {\n    background: #1E2126;\n    box-shadow: 0 4px 12px rgba(3,199,90,0.08);\n    border-radius: 15px;\n    padding: 25px;\n    margin-bottom: 20px;\n    text-align: center;\n    font-size: 14px;\n}\n.results-section h2 {\n    font-size: 20px;\n    color: #03C75A;\n    margin-bottom: 20px;\n    font-weight: 700;\n    display: flex;\n    align-items: center;\n    gap: 12px;\n    justify-content: center;\n}\n.results-cta {\n    margin-top: 0.8em;\n}\n\n/* ========================================\n   광고 및 이벤트 섹션\n======================================== */\n.ad-section {\n    background: #1E2126;\n    box-shadow: 0 4px 12px rgba(3,199,90,0.08);\n    border-radius: 15px;\n    padding: 25px;\n    margin-bottom: 20px;\n    text-align: center;\n}\n.ad-section h2 {\n    font-size: 18px;\n    color: #00BFAE;\n    margin-bottom: 20px;\n    font-weight: 700;\n    display: flex;\n    align-items: center;\n    gap: 12px;\n    justify-content: center;\n}\n.ad-main {\n    margin-top: 1em;\n}\n\n/* ========================================\n   버튼\n======================================== */\na.button {\n    display: inline-block;\n    background: linear-gradient(90deg, #03C75A 70%, #00BFAE 100%);\n    color: #222;\n    padding: 12px 24px;\n    border-radius: 20px;\n    font-weight: bold;\n    text-decoration: none;\n    font-size: 13px;\n    margin-top: 10px;\n    box-shadow: 0 4px 12px rgba(3,199,90,0.15);\n    transition: background 0.2s, box-shadow 0.2s, color 0.2s;\n    border: none;\n    white-space: nowrap;\n    word-break: normal;\n    min-width: 120px;\n    text-align: center;\n}\na.button:hover {\n    background: linear-gradient(90deg, #00BFAE 60%, #03C75A 100%);\n    color: #fff;\n    box-shadow: 0 4px 12px rgba(3,199,90,0.24);\n}\n\n/* ========================================\n   푸터\n======================================== */\n.main-footer {\n    text-align: center;\n    background: #222;\n    padding: 20px;\n    color: #03C75A;\n    font-size: 13px;\n    margin-top: 20px;\n    border-radius: 15px;\n    box-shadow: 0 4px 12px rgba(3,199,90,0.08);\n}\n\n/* ========================================\n   이미지\n======================================== */\nimg {\n    border-radius: 12px;\n    max-width: 100%;\n    margin-top: 0.7em;\n    box-shadow: 0 2px 8px rgba(3,199,90,0.08);\n}\n\n/* ========================================\n   결과 표, 요약 표\n======================================== */\n.summary-table,\n.score-table {\n    font-size: clamp(1em, 2.8vw, 1.2em);\n}\n\n/* ========================================\n   대회명/결과 타이틀\n======================================== */\n.result-title,\n.comp-title {\n    font-size: clamp(1.4em, 5vw, 2em);\n    font-weight: 700;\n}\n\n/* ========================================\n   머티리얼 아이콘\n======================================== */\n.material-symbols-rounded {\n    font-family: 'Material Symbols Rounded';\n    font-weight: normal;\n    font-style: normal;\n    font-size: 1.4em;\n    line-height: 1;\n    letter-spacing: normal;\n    text-transform: none;\n    display: inline-block;\n    white-space: nowrap;\n    direction: ltr;\n    vertical-align: middle;\n    -webkit-font-feature-settings: 'liga';\n    -webkit-font-smoothing: antialiased;\n}\n\n/* ========================================\n   실시간 결과 안내 문구 스타일\n======================================== */\n.result-desc {\n    text-align: center;\n    margin: 0.7em 0 1.2em 0;\n    font-size: clamp(1.07em, 3vw, 1.2em);\n    color: #00BFAE;\n    font-weight: 500;\n}\n\n.result-desc a {\n    color: #03C75A;\n    text-decoration: underline;\n    font-weight: bold;\n}\n\n.result-refresh {\n    margin-top: 1.3em;\n    color: #03C75A;\n    font-size: clamp(0.99em, 2.5vw, 1.1em);\n    text-align: center;\n    display: flex;\n    align-items: center;\n    gap: 0.4em;\n    justify-content: center;\n}\n\n.result-refresh .material-symbols-rounded {\n    font-size: 1.2em;\n    vertical-align: middle;\n}\n\n/* ========================================\n   결과 에러 메시지\n======================================== */\n.result-error {\n    background: #2a2d31;\n    color: #ff5e5e;\n    border-radius: 7px;\n    padding: 1.2em 1.2em;\n    margin: 1em 0;\n    font-size: clamp(1.1em, 3vw, 1.25em);\n    display: flex;\n    align-items: center;\n    gap: 0.7em;\n    font-weight: 600;\n}\n\n.result-area .material-symbols-rounded,\n.result-error .material-symbols-rounded {\n    font-size: 1.4em;\n    vertical-align: middle;\n}\n\n/* ========================================\n   모바일 완전 분리 레이아웃 및 메뉴 개선\n======================================== */\n@media (max-width: 700px) {\n    html, body {\n        width: 100vw;\n        min-width: 100vw;\n        max-width: 100vw;\n        overflow-x: hidden;\n    }\n    body {\n        font-size: clamp(1.2em, 4vw, 1.7em);\n        line-height: 1.7;\n        background: #181B20;\n    }\n    main {\n        width: 100vw !important;\n        min-width: 100vw !important;\n        max-width: 100vw !important;\n        margin: 0 !important;\n        padding: 0 !important;\n        border-radius: 0 !important;\n        box-shadow: none !important;\n        background: #181B20 !important;\n    }\n    .info-section {\n        width: 100vw !important;\n        min-width: 100vw !important;\n        max-width: 100vw !important;\n        margin: 0 !important;\n        padding: 0 !important;\n        border-radius: 0 !important;\n        box-shadow: none !important;\n        background: #181B20 !important;\n    }\n    .info-cards {\n        flex-direction: column;\n        gap: 1.2em;\n        padding: 0 !important;\n        margin: 0 !important;\n        width: 100vw !important;\n        min-width: 100vw !important;\n        max-width: 100vw !important;\n    }\n    .info-card {\n        width: 100vw !important;\n        min-width: 100vw !important;\n        max-width: 100vw !important;\n        margin: 0 !important;\n        border-radius: 0 !important;\n        box-shadow: none !important;\n        padding: 1.2em 0.7em 1.2em 0.7em !important;\n        background: #181B20 !important;\n        align-items: stretch !important;\n    }\n    .main-nav {\n        gap: 0.3em !important;\n        flex-wrap: nowrap !important;\n        justify-content: space-between !important;\n        padding: 0 0.5em !important;\n    }\n    .main-nav a {\n        font-size: 1.1em !important;\n        padding: 0.4em 0.6em !important;\n        min-width: unset !important;\n        width: auto !important;\n        white-space: nowrap !important;\n        flex: 1 1 auto !important;\n    }\n    .main-footer {\n        padding-left: 0.5em;\n        padding-right: 0.5em;\n        border-radius: 0;\n        font-size: 1.1em;\n    }\n    .info-card,\n    .results-section,\n    .summary-table,\n    .score-table {\n        font-size: clamp(1.15em, 3vw, 1.3em) !important;\n    }\n    .result-title, .comp-title {\n        font-size: clamp(1.5em, 6vw, 2.4em) !important;\n    }\n    a.button {\n        font-size: clamp(1.2em, 4vw, 1.35em) !important;\n        padding: 1em 2em !important;\n        white-space: nowrap !important;\n        word-break: normal !important;\n        min-width: 120px !important;\n        text-align: center !important;\n    }\n    .info-section, .results-section, .ad-section {\n        margin-bottom: 1em !important;\n    }\n    /* 모바일에서 테이블 내용 좌우 스크롤 허용 */\n    .score-table, .summary-table {\n        display: block;\n        overflow-x: auto;\n        white-space: nowrap;\n    }\n    /* 모바일에서 큰 그림/로고 더 작게 */\n    .main-logo {\n        height: 48px;\n        margin-top: 0.7em;\n    }\n}","size_bytes":11464},"comp/README_결과모니터링.md":{"content":"# 댄스스코어 결과 모니터링 시스템\n\n## 개요\n댄스스코어에서 생성되는 요약 파일(`숫자.html`)과 상세 파일(`숫자-d.html`)을 자동으로 모니터링하고, 두 파일을 합쳐서 종합 결과를 실시간으로 스크린에 표시하는 시스템입니다.\n\n## 주요 기능\n- 🔍 **실시간 파일 모니터링**: 결과 디렉토리를 지속적으로 모니터링\n- 📊 **자동 결과 처리**: 새 파일이 생성되면 자동으로 종합 결과 생성\n- 🖥️ **전체화면 모니터링**: 이벤트 그룹별 대기화면 및 결과 표시\n- 📱 **웹 대시보드**: 모니터링 상태 및 로그 확인\n- ⚡ **자동 새로고침**: 30초마다 자동으로 결과 업데이트\n- 🎯 **이벤트 제어**: 실시간으로 이벤트 상태 및 결과 발표 제어\n\n## 파일 구조\n```\ncomp/\n├── result_monitor.php      # 핵심 모니터링 클래스\n├── result_dashboard.php    # 웹 대시보드\n├── result_watcher.php      # 백그라운드 모니터링 스크립트\n├── monitor_control.php     # 모니터링 제어 페이지\n├── event_monitor_v2.php    # 전체화면 이벤트 모니터링 (v2)\n├── event_upload.php        # 이벤트 순서 업로드\n├── event_control_panel.php # 이벤트 제어 패널\n├── competition_settings.php # 대회 설정\n├── start_monitoring.bat    # Windows 실행 스크립트\n└── README_결과모니터링.md  # 이 파일\n```\n\n## 설치 및 설정\n\n### 1. 시스템 요구사항\n- PHP 7.4 이상\n- Windows 운영체제\n- 댄스스코어가 설치된 환경\n\n### 2. 디렉토리 설정\n```php\n// result_monitor.php에서 결과 디렉토리 경로 설정\nprivate $resultsPath = \"Y:/results\";\n```\n\n### 3. 웹 서버 설정\n- Apache 또는 IIS에서 PHP 실행 환경 구성\n- `comp` 디렉토리를 웹 루트에 배치\n\n## 사용법\n\n### 방법 1: 웹 인터페이스 사용 (권장)\n\n1. **모니터링 제어 페이지 접속**\n   ```\n   http://localhost/comp/monitor_control.php\n   ```\n\n2. **테스트 페이지로 현재 파일 확인**\n   - \"테스트 페이지\" 버튼 클릭\n   - Y:/results 폴더의 기존 파일들 분석 및 테스트\n\n3. **모니터링 시작**\n   - \"모니터링 시작\" 버튼 클릭\n   - Y:/results 폴더를 실시간으로 모니터링 시작\n\n4. **전체화면 모니터링**\n   - \"전체화면 모니터\" 버튼 클릭\n   - **선수들이 결과를 확인할 수 있는 전체화면 모니터**\n   - 자동 순환으로 모든 결과 표시\n   - 대기화면, 로고 화면, 결과 화면 전환 가능\n\n5. **대시보드 열기**\n   - \"대시보드 열기\" 버튼 클릭\n   - 실시간 모니터링 상태 및 결과 확인\n\n6. **종합 결과 보기**\n   - 대시보드에서 \"전체화면\" 버튼 클릭\n   - 또는 `combined_result_이벤트ID.html` 파일 직접 접속\n\n### 방법 2: 명령줄 사용\n\n1. **Windows 배치 파일 실행**\n   ```cmd\n   start_monitoring.bat\n   ```\n\n2. **PHP 직접 실행**\n   ```cmd\n   php result_watcher.php\n   ```\n\n### 방법 3: 수동 결과 처리\n\n1. **대시보드 접속**\n   ```\n   http://localhost/comp/result_dashboard.php\n   ```\n\n2. **결과 처리**\n   - \"모든 결과 처리\" 버튼 클릭\n   - 기존 파일들을 일괄 처리\n\n## 결과 파일 형식\n\n### 입력 파일\n- **요약 파일**: `83.html` - 최종 순위와 점수\n- **상세 파일**: `83-d.html` - 댄스별 상세 점수\n\n### 출력 파일\n- **종합 결과**: `combined_result_83.html` - 두 파일을 합친 종합 결과\n\n## 종합 결과 화면 특징\n\n### 📊 최종 순위 섹션\n- 순위별 선수 정보\n- 최종 점수 표시\n- 1, 2, 3위 하이라이트\n\n### 💃 댄스별 상세 결과\n- Cha Cha Cha, Samba, Rumba, Paso Doble, Jive\n- 각 댄스별 심판 점수\n- 댄스별 순위\n\n### 👨‍⚖️ 심판진 정보\n- 심판 이름과 국가\n- 심판 코드 (A, B, C, ...)\n\n### 🔄 실시간 업데이트\n- 30초마다 자동 새로고침\n- 수동 새로고침 버튼\n- 전체화면 모드\n\n## 고급 설정\n\n### 자동 새로고침 간격 변경\n```javascript\n// result_dashboard.php에서 수정\nsetInterval(refreshResults, 30000); // 30초 -> 원하는 초로 변경\n```\n\n### 결과 디렉토리 경로 변경\n```php\n// result_monitor.php에서 수정\npublic function __construct($resultsPath = \"새로운/경로\") {\n    $this->resultsPath = $resultsPath;\n}\n```\n\n### 로그 파일 위치 변경\n```php\n// result_watcher.php에서 수정\nprivate $logFile = \"새로운/경로/watcher.log\";\n```\n\n## 문제 해결\n\n### 1. 파일 권한 오류\n- 결과 디렉토리에 읽기/쓰기 권한 확인\n- 웹 서버 계정 권한 확인\n\n### 2. PHP 오류\n- PHP 버전 확인 (7.4 이상)\n- 필요한 확장 모듈 설치 (DOM, SimpleXML)\n\n### 3. 파일 모니터링이 작동하지 않음\n- 결과 디렉토리 경로 확인\n- 파일 생성 시간 확인\n- 로그 파일 확인\n\n### 4. 종합 결과가 생성되지 않음\n- 요약 파일과 상세 파일 쌍 확인\n- HTML 파싱 오류 확인\n- PHP 오류 로그 확인\n\n## 로그 확인\n\n### 모니터링 로그\n```\ncomp/watcher.log\n```\n\n### 웹 서버 오류 로그\n```\nApache: logs/error.log\nIIS: C:\\inetpub\\logs\\LogFiles\\\n```\n\n## 지원 및 문의\n\n문제가 발생하거나 추가 기능이 필요한 경우:\n1. 로그 파일 확인\n2. 오류 메시지 기록\n3. 시스템 환경 정보 수집\n\n## 업데이트 내역\n\n### v1.0.0 (2024-01-XX)\n- 초기 버전 릴리스\n- 기본 모니터링 기능\n- 웹 대시보드\n- 종합 결과 생성\n\n---\n\n**주의사항**: 이 시스템은 댄스스코어와 함께 사용하도록 설계되었습니다. 댄스스코어의 파일 형식이 변경되면 파싱 로직을 수정해야 할 수 있습니다.\n","size_bytes":5727},"comp/admin_event.php":{"content":"<?php\n// 파일 경로 설정 (comp/data 폴더 기준)\n$data_dir        = __DIR__ . '/data';\n$adjudicator_file = $data_dir . '/Adjudicator.txt';\n$adjpanel_file    = $data_dir . '/AdjPanel.txt';\n$event_file       = $data_dir . '/events.txt';\n$compinfo_file    = $data_dir . '/competition_info.txt';\n\n// data 폴더가 없으면 생성\nif (!is_dir($data_dir)) {\n    mkdir($data_dir, 0777, true);\n}\n\n// 대회명/날짜 저장 및 불러오기\n$comp_title = \"\";\n$comp_date = \"\";\nif (file_exists($compinfo_file)) {\n    $compinfo = file($compinfo_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    $comp_title = isset($compinfo[0]) ? trim($compinfo[0]) : \"\";\n    $comp_date  = isset($compinfo[1]) ? trim($compinfo[1]) : \"\";\n}\n\n// 대회명/날짜 저장 처리\nif ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['save_compinfo'])) {\n    $comp_title = trim($_POST['comp_title']);\n    $comp_date  = trim($_POST['comp_date']);\n    file_put_contents($compinfo_file, $comp_title . \"\\n\" . $comp_date . \"\\n\");\n    $compinfo_msg = \"<div class='event-msg success'>대회명/날짜가 저장되었습니다.</div>\";\n}\n\n// 종목 목록 불러오기\n$events = [];\nif (file_exists($event_file)) {\n    $lines = file($event_file);\n    foreach ($lines as $line) {\n        $cols = explode(',', trim($line));\n        if (count($cols) >= 2) {\n            $events[] = ['code' => $cols[0], 'name' => $cols[1]];\n        }\n    }\n}\n\n// 종목 삭제 처리\nif ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['delete_event'])) {\n    $delete_code = trim($_POST['delete_code']);\n    if ($delete_code) {\n        // 해당 종목을 제외한 나머지 종목들로 파일 재작성\n        $remaining_events = [];\n        foreach ($events as $ev) {\n            if ($ev['code'] !== $delete_code) {\n                $remaining_events[] = $ev['code'] . ',' . $ev['name'];\n            }\n        }\n        file_put_contents($event_file, implode(\"\\n\", $remaining_events) . \"\\n\");\n        $message = \"<div class='event-msg success'>종목이 삭제되었습니다.</div>\";\n        \n        // 페이지 새로고침을 위해 리다이렉트\n        header(\"Location: admin_event.php\");\n        exit;\n    }\n}\n\n// 종목 추가 처리\nif ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['add_event'])) {\n    $code = trim($_POST['event_code']);\n    $name = trim($_POST['event_name']);\n    if ($code && $name) {\n        // 중복 방지: 이미 존재하는 코드/이름 체크\n        $is_duplicate = false;\n        foreach ($events as $ev) {\n            if ($ev['code'] === $code || $ev['name'] === $name) {\n                $is_duplicate = true;\n                break;\n            }\n        }\n        if ($is_duplicate) {\n            $message = \"<div class='event-msg error'>이미 등록된 종목 코드 혹은 이름입니다.</div>\";\n        } else {\n            file_put_contents($event_file, \"$code,$name\\n\", FILE_APPEND);\n            header(\"Location: admin_event.php\");\n            exit;\n        }\n    } else {\n        $message = \"<div class='event-msg error'>종목 코드와 이름을 모두 입력하세요.</div>\";\n    }\n}\n\n// 파일 업로드 처리\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    // 심사위원 파일\n    if (isset($_POST['upload_adj']) && isset($_FILES['adj_upload']) && $_FILES['adj_upload']['error'] === UPLOAD_ERR_OK) {\n        move_uploaded_file($_FILES['adj_upload']['tmp_name'], $adjudicator_file);\n        $message = \"<div class='event-msg success'>심사위원 파일을 성공적으로 업로드했습니다.</div>\";\n    }\n    // 패널 파일\n    if (isset($_POST['upload_panel']) && isset($_FILES['panel_upload']) && $_FILES['panel_upload']['error'] === UPLOAD_ERR_OK) {\n        move_uploaded_file($_FILES['panel_upload']['tmp_name'], $adjpanel_file);\n        $message = \"<div class='event-msg success'>패널 파일을 성공적으로 업로드했습니다.</div>\";\n    }\n}\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>대회/종목 관리 - 관리자 | danceoffice.net</title>\n    <link rel=\"stylesheet\" href=\"/assets/style.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded\" rel=\"stylesheet\" />\n    <style>\n        html, body {\n            background: #23262b !important;\n            margin: 0;\n            font-family: 'Pretendard','Apple SD Gothic Neo',sans-serif;\n            font-size: 15px;\n        }\n        body {\n            min-height: 100vh;\n            padding: 0;\n        }\n        .admin-section {\n            background: #23262b;\n            border-radius: 14px;\n            padding: 1.2em 1em 1.7em 1em;\n            max-width: 630px;\n            width: 96vw;\n            margin: 3vh auto 0 auto;\n            box-shadow: 0 4px 24px rgba(0,0,0,0.11);\n            display: flex;\n            flex-direction: column;\n            align-items: stretch;\n        }\n        .admin-title {\n            font-size: 1.17em;\n            font-weight: 700;\n            color: #03C75A;\n            margin-bottom: 0.7em;\n            letter-spacing: -1px;\n            text-align: center;\n        }\n        .compinfo-form {\n            display: flex;\n            gap: 0.6em;\n            flex-wrap: wrap;\n            align-items: center;\n            margin-bottom: 1em;\n            justify-content: center;\n        }\n        .compinfo-form label {\n            color: #03C75A;\n            font-weight: 600;\n            margin-bottom: 0.1em;\n            font-size: 0.97em;\n        }\n        .compinfo-form input[type=\"text\"],\n        .compinfo-form input[type=\"date\"] {\n            padding: 0.28em 0.8em;\n            border-radius: 6px;\n            border: 1px solid #31343a;\n            background: #1E2126;\n            color: #fff;\n            font-size: 0.98em;\n            min-width: 140px;\n        }\n        .compinfo-form button {\n            background: linear-gradient(90deg,#03C75A 70%,#00BFAE 100%);\n            color: #222;\n            border: none;\n            border-radius: 20px;\n            padding: 0.39em 1em;\n            font-weight: 700;\n            font-size: 0.99em;\n            margin-left: 0.2em;\n        }\n        .compinfo-form button:hover {\n            background: linear-gradient(90deg,#00BFAE 60%,#03C75A 100%);\n            color: #fff;\n        }\n        .event-msg {\n            margin: 0.7em 0;\n            padding: 0.6em 0.7em;\n            border-radius: 8px;\n            font-size: 0.98em;\n        }\n        .event-msg.success {background:#232; color:#03C75A;}\n        .event-msg.error {background:#311; color:#ff5e5e;}\n        .event-table {\n            width: 100%;\n            background: #222;\n            border-radius: 8px;\n            border-collapse: separate;\n            border-spacing: 0 0.3em;\n            margin-bottom: 1.1em;\n        }\n        .event-table th, .event-table td {\n            padding: 0.37em 0.2em;\n            border-bottom: 1px solid #31343a;\n        }\n        .event-table th {\n            background: #181B20;\n            color: #03C75A;\n            font-size: 0.98em;\n            font-weight: 700;\n        }\n        .event-table td {\n            color: #F5F7FA;\n            font-size: 0.98em;\n        }\n        .event-table tr:last-child td {border-bottom:none;}\n        .add-event-form {\n            margin-top: 0.7em;\n            display: flex;\n            gap: 0.3em;\n            flex-wrap: wrap;\n            justify-content: center;\n        }\n        .add-event-form input[type=\"text\"] {\n            padding: 0.25em 0.7em;\n            border-radius: 6px;\n            border: 1px solid #31343a;\n            background: #1E2126;\n            color: #fff;\n            font-size: 0.97em;\n        }\n        .add-event-form button {\n            background: linear-gradient(90deg,#03C75A 70%,#00BFAE 100%);\n            color: #222;\n            border: none;\n            border-radius: 20px;\n            padding: 0.34em 1em;\n            font-weight: 700;\n            font-size: 0.97em;\n        }\n        .add-event-form button:hover {\n            background: linear-gradient(90deg,#00BFAE 60%,#03C75A 100%);\n            color: #fff;\n        }\n        .file-manage {\n            margin-top: 1.2em;\n        }\n        .file-manage label {\n            color: #00BFAE;\n            font-weight: 600;\n            font-size: 0.98em;\n        }\n        .file-manage input[type=\"file\"] {\n            margin-left: 0.4em;\n            font-size: 0.97em;\n        }\n        .file-manage button {\n            margin-left: 0.3em;\n            padding: 0.25em 0.7em;\n            font-size: 0.97em;\n            border-radius: 10px;\n            border: none;\n            background: linear-gradient(90deg,#03C75A 70%,#00BFAE 100%);\n            color: #222;\n            font-weight: 700;\n        }\n        .file-manage button:hover {\n            background: linear-gradient(90deg,#00BFAE 60%,#03C75A 100%);\n            color: #fff;\n        }\n        .btn-judge {\n            background: #0057b7;\n            color: #fff;\n            font-weight: 700;\n            padding: 0.25em 0.7em;\n            border-radius: 12px;\n            text-decoration: none;\n            margin: 0 0.09em;\n            display: inline-block;\n            font-size: 0.97em;\n            transition: background 0.14s;\n            border: none;\n        }\n        .btn-judge:hover {\n            background: #003399;\n        }\n        .btn-result {\n            background: #03C75A;\n            color: #222;\n            font-weight: 700;\n            padding: 0.25em 0.7em;\n            border-radius: 12px;\n            text-decoration: none;\n            margin: 0 0.09em;\n            display: inline-block;\n            font-size: 0.97em;\n            border: none;\n            transition: background 0.14s;\n        }\n        .btn-result:hover {\n            background: #00BFAE;\n            color: #fff;\n        }\n        .btn-delete {\n            background: #dc3545;\n            color: #fff;\n            font-weight: 700;\n            padding: 0.25em 0.7em;\n            border-radius: 12px;\n            text-decoration: none;\n            margin: 0 0.09em;\n            display: inline-block;\n            font-size: 0.97em;\n            border: none;\n            cursor: pointer;\n            transition: background 0.14s;\n        }\n        .btn-delete:hover {\n            background: #c82333;\n        }\n        .info-tip {\n            color: #8af;\n            font-size: 0.93em;\n            margin-top: 1.1em;\n            line-height: 1.55;\n        }\n        @media (max-width: 900px) {\n            .admin-section { max-width: 99vw; padding: 0.6em 0.1em 0.6em 0.1em;}\n            .admin-title { font-size: 1em; }\n            .event-table th, .event-table td {font-size: 0.91em; padding: 0.26em 0.08em;}\n            .compinfo-form, .add-event-form {gap:0.19em;}\n            .btn-judge, .btn-result, .btn-delete, .add-event-form button, .compinfo-form button, .file-manage button {\n                font-size: 0.89em; padding: 0.19em 0.5em;\n            }\n        }\n        @media (max-width: 600px) {\n            .admin-section { padding: 0.28em 0.03em;}\n            .admin-title { font-size: 0.93em;}\n            .compinfo-form, .add-event-form { flex-direction: column; align-items: stretch;}\n            .event-table th, .event-table td { font-size: 0.89em; padding: 0.11em 0.07em;}\n            .btn-judge, .btn-result, .btn-delete, .add-event-form button, .compinfo-form button, .file-manage button {\n                font-size: 0.89em; padding: 0.14em 0.4em;\n            }\n        }\n        .main-header, .main-footer {\n            max-width: 630px;\n            margin: 0 auto;\n            color: #aaa;\n            text-align: center;\n            letter-spacing: 0.02em;\n        }\n        .main-header {\n            margin-top: 1.1em;\n            margin-bottom: 1.1em;\n        }\n        .main-logo {\n            height: 32px;\n            vertical-align: middle;\n            margin-right: 0.4em;\n        }\n        .main-nav {\n            display: inline-block;\n            margin-left: 0.6em;\n            vertical-align: middle;\n        }\n        .main-nav a {\n            color: #bbb;\n            text-decoration: none;\n            margin: 0 0.41em;\n            font-weight: 600;\n            font-size: 0.98em;\n            padding-bottom: 0.07em;\n            border-bottom: 2px solid transparent;\n            transition: color 0.12s, border-color 0.12s;\n        }\n        .main-nav a.active, .main-nav a:hover {\n            color: #03C75A;\n            border-bottom: 2px solid #03C75A;\n        }\n        .main-footer {\n            margin-top: 2em;\n            padding-bottom: 0.6em;\n            color: #888;\n            font-size: 0.92em;\n        }\n    </style>\n</head>\n<body>\n    <header class=\"main-header\">\n        <div class=\"logo-nav\">\n            <img src=\"/assets/danceoffice-logo.png\" alt=\"Danceoffice Logo\" class=\"main-logo\">\n            <nav class=\"main-nav\">\n                <a href=\"/\">홈</a>\n                <a href=\"/comp/admin_event.php\" class=\"active\">대회/종목 관리</a>\n                <a href=\"/comp/admin_players.php\">선수 관리</a>\n                <a href=\"/comp/result/result.php?event=<?= urlencode($ev['code'] ?? '') ?>\" class=\"btn-result\" target=\"_blank\">채점 결과</a>\n            </nav>\n        </div>\n    </header>\n    <main>\n        <section class=\"admin-section\">\n            <div class=\"admin-title\">\n                <span class=\"material-symbols-rounded\">event</span> 대회/종목 관리\n            </div>\n            <?php if (isset($compinfo_msg)) echo $compinfo_msg; ?>\n            <form class=\"compinfo-form\" method=\"post\">\n                <label for=\"comp_title\">대회명</label>\n                <input type=\"text\" name=\"comp_title\" id=\"comp_title\" value=\"<?= htmlspecialchars($comp_title) ?>\" placeholder=\"예: 2025 전국댄스경연대회\" required>\n                <label for=\"comp_date\">대회일</label>\n                <input type=\"date\" name=\"comp_date\" id=\"comp_date\" value=\"<?= htmlspecialchars($comp_date) ?>\" required>\n                <button type=\"submit\" name=\"save_compinfo\"><span class=\"material-symbols-rounded\">save</span> 저장</button>\n            </form>\n            <?php if (isset($message)) echo $message; ?>\n            <table class=\"event-table\">\n                <thead>\n                    <tr>\n                        <th>종목 코드</th>\n                        <th>종목 이름</th>\n                        <th>프리스타일 채점</th>\n                        <th>채점 결과</th>\n                        <th>삭제</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <?php foreach($events as $ev): ?>\n                    <tr>\n                        <td><?= htmlspecialchars($ev['code']) ?></td>\n                        <td><?= htmlspecialchars($ev['name']) ?></td>\n                        <td>\n                            <a href=\"judge_login.php?event=<?= urlencode($ev['code']) ?>\"\n                               class=\"btn-judge\" target=\"_blank\">🎭 프리스타일 채점</a>\n                        </td>\n                        <td>\n                            <a href=\"/comp/result/result.php?event=<?= urlencode($ev['code']) ?>\"\n                               class=\"btn-result\" target=\"_blank\">채점 결과</a>\n                        </td>\n                        <td>\n                            <button type=\"button\" class=\"btn-delete\" onclick=\"deleteEvent('<?= htmlspecialchars($ev['code']) ?>', '<?= htmlspecialchars($ev['name']) ?>')\">\n                                <span class=\"material-symbols-rounded\">delete</span> 삭제\n                            </button>\n                        </td>\n                    </tr>\n                    <?php endforeach; ?>\n                </tbody>\n            </table>\n            <form class=\"add-event-form\" method=\"post\">\n                <input type=\"text\" name=\"event_code\" placeholder=\"종목 코드 (예: DUO2)\" required>\n                <input type=\"text\" name=\"event_name\" placeholder=\"종목 이름 (예: 듀오 프리스타일 Class 2)\" required>\n                <button type=\"submit\" name=\"add_event\"><span class=\"material-symbols-rounded\">add</span> 종목 추가</button>\n            </form>\n            <div class=\"file-manage\">\n                <form method=\"post\" enctype=\"multipart/form-data\">\n                    <label for=\"adj_upload\">심사위원 파일(Adjudicator.txt) 업로드:</label>\n                    <input type=\"file\" name=\"adj_upload\" id=\"adj_upload\" accept=\".txt\">\n                    <button type=\"submit\" name=\"upload_adj\">업로드</button>\n                </form>\n                <form method=\"post\" enctype=\"multipart/form-data\" style=\"margin-top:1em;\">\n                    <label for=\"panel_upload\">패널 파일(AdjPanel.txt) 업로드:</label>\n                    <input type=\"file\" name=\"panel_upload\" id=\"panel_upload\" accept=\".txt\">\n                    <button type=\"submit\" name=\"upload_panel\">업로드</button>\n                </form>\n            </div>\n            <div class=\"info-tip\">\n                ※ <b>대회명/일</b>은 반드시 저장 후 심사위원/종목 채점에 반영됩니다.<br>\n                ※ <b>심사위원 채점</b> 버튼을 누르면 해당 종목의 심사위원 채점 입력 페이지로 이동합니다.<br>\n                ※ <b>채점 결과</b> 버튼은 종목별 점수 집계 결과(출력/인쇄 가능 표)를 보여줍니다.<br>\n                ※ 심사위원별 개별 진입이 필요하면 judge_score.php?event=이벤트코드&judge=J01 등으로 추가 구현할 수 있습니다.\n            </div>\n        </section>\n    </main>\n    <footer class=\"main-footer\">\n        &copy; 2025 danceoffice.net | Powered by Seyoung Lee\n    </footer>\n\n    <!-- 종목 삭제용 숨겨진 폼 -->\n    <form id=\"deleteEventForm\" method=\"post\" style=\"display: none;\">\n        <input type=\"hidden\" name=\"delete_event\" value=\"1\">\n        <input type=\"hidden\" name=\"delete_code\" id=\"deleteCode\" value=\"\">\n    </form>\n\n    <script>\n    function deleteEvent(eventCode, eventName) {\n        if (confirm(`종목 \"${eventName}\" (${eventCode})을(를) 정말 삭제하시겠습니까?\\n\\n삭제된 종목은 복구할 수 없습니다.`)) {\n            document.getElementById('deleteCode').value = eventCode;\n            document.getElementById('deleteEventForm').submit();\n        }\n    }\n    </script>\n</body>\n</html>","size_bytes":18407},"comp/admin_players.php":{"content":"<?php\n// 파일 경로 설정\n$data_dir = __DIR__ . '/data';\n$event_file = $data_dir . '/events.txt';\n$event_players_dir = $data_dir . '/event_players';\n$competitor_file = $data_dir . '/Competitor_Tablet.txt';\n\n// 폴더 없으면 생성\nif (!is_dir($data_dir)) {\n    mkdir($data_dir, 0777, true);\n}\nif (!is_dir($event_players_dir)) {\n    mkdir($event_players_dir, 0777, true);\n}\n\n// 이벤트 목록 불러오기\n$events = [];\nif (file_exists($event_file)) {\n    $lines = file($event_file);\n    foreach ($lines as $line) {\n        $cols = explode(',', trim($line));\n        if (count($cols) >= 2) {\n            $events[] = [\n                'code' => $cols[0],\n                'name' => $cols[1]\n            ];\n        }\n    }\n}\n\n// 선택된 이벤트의 선수목록 불러오기\n$selected_event = isset($_GET['event']) ? $_GET['event'] : (isset($events[0]) ? $events[0]['code'] : '');\n$event_players_file = $event_players_dir . \"/{$selected_event}_players.txt\";\n$event_players = [];\nif ($selected_event && file_exists($event_players_file)) {\n    $lines = file($event_players_file);\n    foreach ($lines as $line) {\n        $cols = array_map('trim', explode(',', $line));\n        if (count($cols) >= 2) {\n            $event_players[] = [\n                'number' => $cols[0],\n                'name' => $cols[1],\n                'partner' => isset($cols[2]) ? $cols[2] : ''\n            ];\n        }\n    }\n}\n\n// 선수명단 전체 파일에서 데이터 불러오기(자동 입력용)\n$all_players = [];\nif (file_exists($competitor_file)) {\n    $lines = file($competitor_file);\n    foreach ($lines as $line) {\n        $cols = array_map('trim', explode(',', $line));\n        if (count($cols) >= 2) {\n            $number = $cols[0];\n            $name = $cols[1];\n            $partner = isset($cols[2]) ? $cols[2] : '';\n            $all_players[$number] = ['name'=>$name, 'partner'=>$partner];\n        }\n    }\n}\n\n// 선수 추가 처리\nif ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['add_player']) && $selected_event) {\n    $number = trim($_POST['player_number']);\n    $name = trim($_POST['player_name']);\n    $partner = trim($_POST['player_partner']);\n    if ($number && $name) {\n        // 중복 등번호 체크\n        $is_duplicate = false;\n        foreach ($event_players as $ep) {\n            if ($ep['number'] === $number) {\n                $is_duplicate = true;\n                break;\n            }\n        }\n        if ($is_duplicate) {\n            $message = \"<div class='event-msg error'>이미 등록된 등번호입니다.</div>\";\n        } else {\n            file_put_contents($event_players_file, \"$number,$name,$partner\\n\", FILE_APPEND);\n            header(\"Location: admin_players.php?event=$selected_event\");\n            exit;\n        }\n    } else {\n        $message = \"<div class='event-msg error'>번호와 이름을 모두 입력하세요.</div>\";\n    }\n}\n\n// 선수 삭제 처리\nif ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['delete_player']) && $selected_event) {\n    $delete_number = $_POST['delete_number'];\n    $new_players = [];\n    foreach ($event_players as $ep) {\n        if ($ep['number'] !== $delete_number) {\n            $new_players[] = $ep;\n        }\n    }\n    $fp = fopen($event_players_file, 'w');\n    foreach ($new_players as $ep) {\n        fwrite($fp, \"{$ep['number']},{$ep['name']},{$ep['partner']}\\n\");\n    }\n    fclose($fp);\n    header(\"Location: admin_players.php?event=$selected_event\");\n    exit;\n}\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>이벤트별 선수 관리 - 관리자 | danceoffice.net</title>\n    <link rel=\"stylesheet\" href=\"/assets/style.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded\" rel=\"stylesheet\" />\n    <style>\n        html, body {\n            background: #23262b !important;\n            margin: 0;\n            font-family: 'Pretendard','Apple SD Gothic Neo',sans-serif;\n            font-size: 15px;\n        }\n        body {\n            min-height: 100vh;\n            padding: 0;\n        }\n        .admin-section {\n            background: #23262b;\n            border-radius: 14px;\n            padding: 1.2em 1em 1.7em 1em;\n            max-width: 630px;\n            width: 96vw;\n            margin: 3vh auto 0 auto;\n            box-shadow: 0 4px 24px rgba(0,0,0,0.11);\n            display: flex;\n            flex-direction: column;\n            align-items: stretch;\n        }\n        .admin-title {\n            font-size: 1.17em;\n            font-weight: 700;\n            color: #03C75A;\n            margin-bottom: 0.7em;\n            letter-spacing: -1px;\n            text-align: center;\n        }\n        .event-select-form {\n            margin-bottom: 1.3em;\n            text-align: center;\n        }\n        .event-select-form label {\n            color: #03C75A;\n            font-weight: 600;\n            font-size: 0.98em;\n        }\n        .event-select-form select {\n            padding: 0.32em 0.8em;\n            border-radius: 8px;\n            background: #181B20;\n            color: #03C75A;\n            border: 1px solid #31343a;\n            font-size: 0.99em;\n            margin-left: 0.5em;\n        }\n        .event-table {\n            width: 100%;\n            background: #222;\n            border-radius: 8px;\n            border-collapse: separate;\n            border-spacing: 0 0.3em;\n            margin-bottom: 1.1em;\n        }\n        .event-table th, .event-table td {\n            padding: 0.37em 0.2em;\n            border-bottom: 1px solid #31343a;\n        }\n        .event-table th {\n            background: #181B20;\n            color: #03C75A;\n            font-size: 0.98em;\n            font-weight: 700;\n        }\n        .event-table td {\n            color: #F5F7FA;\n            font-size: 0.98em;\n        }\n        .event-table tr:last-child td {border-bottom:none;}\n        .add-player-form {\n            margin-top: 0.6em;\n            display: flex;\n            gap: 0.3em;\n            flex-wrap: wrap;\n            justify-content: center;\n        }\n        .add-player-form input[type=\"text\"] {\n            padding: 0.25em 0.7em;\n            border-radius: 6px;\n            border: 1px solid #31343a;\n            background: #1E2126;\n            color: #fff;\n            font-size: 0.97em;\n        }\n        .add-player-form button {\n            background: linear-gradient(90deg,#03C75A 70%,#00BFAE 100%);\n            color: #222;\n            border: none;\n            border-radius: 20px;\n            padding: 0.34em 1em;\n            font-weight: 700;\n            font-size: 0.97em;\n        }\n        .add-player-form button:hover {\n            background: linear-gradient(90deg,#00BFAE 60%,#03C75A 100%);\n            color: #fff;\n        }\n        .event-msg {\n            margin: 0.7em 0;\n            padding: 0.6em 0.7em;\n            border-radius: 8px;\n            font-size: 0.98em;\n        }\n        .event-msg.success {background:#232; color:#03C75A;}\n        .event-msg.error {background:#311; color:#ff5e5e;}\n        .delete-btn {\n            background: #ff5e5e;\n            color: #fff;\n            border: none;\n            border-radius: 12px;\n            padding: 0.21em 0.8em;\n            font-weight: 600;\n            font-size: 0.97em;\n            cursor: pointer;\n        }\n        .delete-btn:hover {\n            background: #d32f2f;\n        }\n        .main-header, .main-footer {\n            max-width: 630px;\n            margin: 0 auto;\n            color: #aaa;\n            text-align: center;\n            letter-spacing: 0.02em;\n        }\n        .main-header {\n            margin-top: 1.1em;\n            margin-bottom: 1.1em;\n        }\n        .main-logo {\n            height: 32px;\n            vertical-align: middle;\n            margin-right: 0.4em;\n        }\n        .main-nav {\n            display: inline-block;\n            margin-left: 0.6em;\n            vertical-align: middle;\n        }\n        .main-nav a {\n            color: #bbb;\n            text-decoration: none;\n            margin: 0 0.41em;\n            font-weight: 600;\n            font-size: 0.98em;\n            padding-bottom: 0.07em;\n            border-bottom: 2px solid transparent;\n            transition: color 0.12s, border-color 0.12s;\n        }\n        .main-nav a.active, .main-nav a:hover {\n            color: #03C75A;\n            border-bottom: 2px solid #03C75A;\n        }\n        .main-footer {\n            margin-top: 2em;\n            padding-bottom: 0.6em;\n            color: #888;\n            font-size: 0.92em;\n        }\n        @media (max-width: 900px) {\n            .admin-section { max-width: 99vw; padding: 0.6em 0.1em 0.6em 0.1em;}\n            .admin-title { font-size: 1em; }\n            .event-table th, .event-table td {font-size: 0.91em; padding: 0.26em 0.08em;}\n            .add-player-form {gap:0.19em;}\n            .add-player-form button, .delete-btn {font-size: 0.89em; padding: 0.19em 0.5em;}\n        }\n        @media (max-width: 600px) {\n            .admin-section { padding: 0.28em 0.03em;}\n            .admin-title { font-size: 0.93em;}\n            .add-player-form { flex-direction: column; align-items: stretch;}\n            .event-table th, .event-table td { font-size: 0.89em; padding: 0.11em 0.07em;}\n            .add-player-form button, .delete-btn {font-size: 0.89em; padding: 0.14em 0.4em;}\n        }\n    </style>\n    <script>\n        // 선수명 자동 입력 기능\n        const playerData = <?php echo json_encode($all_players); ?>;\n        function fillPlayerName() {\n            const number = document.getElementById('player_number').value.trim();\n            if (playerData[number]) {\n                document.getElementById('player_name').value = playerData[number].name;\n                document.getElementById('player_partner').value = playerData[number].partner;\n            } else {\n                document.getElementById('player_name').value = '';\n                document.getElementById('player_partner').value = '';\n            }\n        }\n    </script>\n</head>\n<body>\n    <header class=\"main-header\">\n        <div class=\"logo-nav\">\n            <img src=\"/assets/danceoffice-logo.png\" alt=\"Danceoffice Logo\" class=\"main-logo\">\n            <nav class=\"main-nav\">\n                <a href=\"/\">홈</a>\n                <a href=\"/comp/admin_event.php\">대회/종목 관리</a>\n                <a href=\"/comp/admin_players.php\" class=\"active\">선수 전체 관리</a>\n                <a href=\"/comp/result/\">채점/결과 관리</a>\n            </nav>\n        </div>\n    </header>\n    <main>\n        <section class=\"admin-section\">\n            <div class=\"admin-title\">\n                <span class=\"material-symbols-rounded\">groups</span> 선수 관리\n            </div>\n            <form class=\"event-select-form\" method=\"get\">\n                <label for=\"event_select\">종목 선택:</label>\n                <select name=\"event\" id=\"event_select\" onchange=\"this.form.submit()\">\n                    <?php foreach($events as $ev): ?>\n                        <option value=\"<?= htmlspecialchars($ev['code']) ?>\" <?= $selected_event === $ev['code'] ? 'selected' : '' ?>>\n                            <?= htmlspecialchars($ev['name']) ?>\n                        </option>\n                    <?php endforeach; ?>\n                </select>\n            </form>\n            <?php if (isset($message)) echo $message; ?>\n            <table class=\"event-table\">\n                <thead>\n                    <tr>\n                        <th>번호</th>\n                        <th>이름</th>\n                        <th>소속</th>\n                        <th>삭제</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <?php foreach($event_players as $ep): ?>\n                    <tr>\n                        <td><?= htmlspecialchars($ep['number']) ?></td>\n                        <td><?= htmlspecialchars($ep['name']) ?></td>\n                        <td><?= htmlspecialchars($ep['partner']) ?></td>\n                        <td>\n                            <form method=\"post\" style=\"display:inline;\">\n                                <input type=\"hidden\" name=\"delete_number\" value=\"<?= htmlspecialchars($ep['number']) ?>\">\n                                <button type=\"submit\" name=\"delete_player\" class=\"delete-btn\">삭제</button>\n                            </form>\n                        </td>\n                    </tr>\n                    <?php endforeach; ?>\n                </tbody>\n            </table>\n            <?php if ($selected_event): ?>\n            <form class=\"add-player-form\" method=\"post\">\n                <input type=\"text\" name=\"player_number\" id=\"player_number\" placeholder=\"번호 (예: 43)\" required oninput=\"fillPlayerName()\">\n                <input type=\"text\" name=\"player_name\" id=\"player_name\" placeholder=\"이름 (예: 문진호)\" required>\n                <input type=\"text\" name=\"player_partner\" id=\"player_partner\" placeholder=\"파트너 (예: 노명주 또는 공란)\">\n                <button type=\"submit\" name=\"add_player\"><span class=\"material-symbols-rounded\">add</span> 선수 추가</button>\n            </form>\n            <div style=\"margin-top:1em; color:#888; font-size:0.93em;\">\n                ※ 등번호를 입력하면 <b>Competitor_Tablet.txt</b>에 등록된 선수명/파트너가 자동으로 채워집니다.\n            </div>\n            <?php endif; ?>\n        </section>\n    </main>\n    <footer class=\"main-footer\">\n        &copy; 2025 danceoffice.net | Powered by Seyoung Lee\n    </footer>\n</body>\n</html>","size_bytes":13554},"comp/assign_admin.php":{"content":"<?php\nsession_start();\nrequire_once 'auth.php';\n\n// 오너 권한만 접근 가능\nrequirePermission('manage_users');\n\n$user = $_SESSION['user'];\n$message = '';\n$error = '';\n\n// 대회 ID 확인\n$comp_id = $_GET['comp_id'] ?? '';\nif (!$comp_id) {\n    die(\"대회 ID가 필요합니다.\");\n}\n\n// 대회 정보 로드\n$data_dir = __DIR__ . '/data';\n$comp_path = \"$data_dir/$comp_id\";\n$info_file = \"$comp_path/info.json\";\n\nif (!file_exists($info_file)) {\n    die(\"대회 정보를 찾을 수 없습니다.\");\n}\n\n$comp_info = json_decode(file_get_contents($info_file), true);\nif (!$comp_info) {\n    die(\"대회 정보를 읽을 수 없습니다.\");\n}\n\n// 담당자 변경 처리\nif ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['assign_admin'])) {\n    $new_admin = trim($_POST['assigned_admin'] ?? '');\n    \n    if ($new_admin) {\n        $comp_info['assigned_admin'] = $new_admin;\n        file_put_contents($info_file, json_encode($comp_info, JSON_UNESCAPED_UNICODE|JSON_PRETTY_PRINT));\n        $message = \"담당자가 '{$new_admin}'로 변경되었습니다.\";\n    } else {\n        $error = \"담당자를 선택해주세요.\";\n    }\n}\n\n// 사용자 목록 로드\n$users = loadUsers();\n$senior_admins = array_filter($users, function($u) {\n    return $u['role'] === 'senior_admin';\n});\n\nfunction h($s) { return htmlspecialchars($s ?? ''); }\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>담당자 지정 | danceoffice.net</title>\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded\" rel=\"stylesheet\" />\n    <style>\n        body {\n            background: #181B20;\n            min-height: 100vh;\n            font-size: 14px;\n            line-height: 1.5;\n            margin: 0;\n            padding: 0;\n            font-family: 'Noto Sans KR', sans-serif;\n        }\n        \n        .container {\n            max-width: 600px;\n            margin: 0 auto;\n            padding: 20px;\n        }\n        \n        .header {\n            background: linear-gradient(135deg, #1a1d21 0%, #181B20 100%);\n            border-radius: 15px;\n            padding: 25px;\n            margin-bottom: 20px;\n            box-shadow: 0 8px 25px rgba(3, 199, 90, 0.15);\n            border: 2px solid #03C75A;\n            text-align: center;\n        }\n        \n        .header h1 {\n            color: #03C75A;\n            font-size: 24px;\n            margin: 0 0 10px 0;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 10px;\n        }\n        \n        .header p {\n            color: #00BFAE;\n            font-size: 16px;\n            margin: 0;\n        }\n        \n        .nav {\n            display: flex;\n            gap: 15px;\n            margin-top: 20px;\n            justify-content: center;\n        }\n        \n        .nav a {\n            color: white;\n            text-decoration: none;\n            font-weight: 600;\n            font-size: 14px;\n            padding: 10px 20px;\n            border-radius: 20px;\n            background: rgba(3, 199, 90, 0.1);\n            backdrop-filter: blur(10px);\n            transition: all 0.3s ease;\n            display: flex;\n            align-items: center;\n            gap: 5px;\n        }\n        \n        .nav a:hover {\n            background: #03C75A;\n            color: #222;\n            transform: translateY(-2px);\n        }\n        \n        .card {\n            background: #222;\n            border-radius: 15px;\n            padding: 25px;\n            margin-bottom: 20px;\n            box-shadow: 0 8px 25px rgba(3, 199, 90, 0.08);\n            border: 1px solid #31343a;\n        }\n        \n        .card h3 {\n            color: #03C75A;\n            font-size: 18px;\n            margin: 0 0 20px 0;\n            display: flex;\n            align-items: center;\n            gap: 10px;\n        }\n        \n        .comp-info {\n            background: #181B20;\n            border-radius: 8px;\n            padding: 15px;\n            margin-bottom: 20px;\n            border: 1px solid #31343a;\n        }\n        \n        .comp-info h4 {\n            color: #03C75A;\n            margin: 0 0 10px 0;\n            font-size: 16px;\n        }\n        \n        .comp-info p {\n            color: #F5F7FA;\n            margin: 5px 0;\n            font-size: 14px;\n        }\n        \n        .form-group {\n            margin-bottom: 15px;\n        }\n        \n        .form-group label {\n            display: block;\n            color: #F5F7FA;\n            font-size: 13px;\n            margin-bottom: 5px;\n            font-weight: 600;\n        }\n        \n        .form-group select {\n            width: 100%;\n            padding: 10px;\n            border: 1px solid #31343a;\n            border-radius: 8px;\n            background: #181B20;\n            color: #F5F7FA;\n            font-size: 13px;\n            box-sizing: border-box;\n            cursor: pointer;\n        }\n        \n        .form-group select option {\n            background: #181B20;\n            color: #F5F7FA;\n        }\n        \n        .btn {\n            background: linear-gradient(90deg, #03C75A 70%, #00BFAE 100%);\n            color: #222;\n            border: none;\n            padding: 10px 20px;\n            border-radius: 20px;\n            font-weight: 600;\n            font-size: 13px;\n            cursor: pointer;\n            transition: all 0.3s ease;\n        }\n        \n        .btn:hover {\n            background: linear-gradient(90deg, #00BFAE 60%, #03C75A 100%);\n            color: white;\n            transform: translateY(-2px);\n        }\n        \n        .btn-secondary {\n            background: linear-gradient(90deg, #6c757d 70%, #5a6268 100%);\n            color: white;\n        }\n        \n        .btn-secondary:hover {\n            background: linear-gradient(90deg, #5a6268 60%, #6c757d 100%);\n        }\n        \n        .message {\n            color: #03C75A;\n            background: rgba(3, 199, 90, 0.1);\n            padding: 10px;\n            border-radius: 8px;\n            margin-bottom: 15px;\n            font-size: 13px;\n        }\n        \n        .error {\n            color: #ff4444;\n            background: rgba(255, 68, 68, 0.1);\n            padding: 10px;\n            border-radius: 8px;\n            margin-bottom: 15px;\n            font-size: 13px;\n        }\n        \n        .current-assignment {\n            background: rgba(3, 199, 90, 0.1);\n            border: 1px solid #03C75A;\n            border-radius: 8px;\n            padding: 15px;\n            margin-bottom: 20px;\n        }\n        \n        .current-assignment strong {\n            color: #03C75A;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <header class=\"header\">\n            <h1>\n                <span class=\"material-symbols-rounded\">person_add</span>\n                대회 담당자 지정\n            </h1>\n            <p>대회의 담당 선임관리자를 변경합니다</p>\n            <nav class=\"nav\">\n                <a href=\"index.php\">\n                    <span class=\"material-symbols-rounded\">sports</span>\n                    대회 관리\n                </a>\n                <a href=\"manage_users.php\">\n                    <span class=\"material-symbols-rounded\">group</span>\n                    사용자 관리\n                </a>\n                <a href=\"logout.php\">\n                    <span class=\"material-symbols-rounded\">logout</span>\n                    로그아웃\n                </a>\n            </nav>\n        </header>\n        \n        <div class=\"card\">\n            <h3>\n                <span class=\"material-symbols-rounded\">info</span>\n                대회 정보\n            </h3>\n            <div class=\"comp-info\">\n                <h4><?= h($comp_info['title']) ?></h4>\n                <p><strong>일자:</strong> <?= h($comp_info['date']) ?></p>\n                <p><strong>장소:</strong> <?= h($comp_info['place']) ?></p>\n                <p><strong>주최:</strong> <?= h($comp_info['host']) ?></p>\n            </div>\n            \n            <div class=\"current-assignment\">\n                <strong>현재 담당자:</strong> \n                <?= h($comp_info['assigned_admin'] ?? '미지정') ?>\n            </div>\n            \n            <?php if ($message): ?>\n                <div class=\"message\"><?= h($message) ?></div>\n            <?php endif; ?>\n            <?php if ($error): ?>\n                <div class=\"error\"><?= h($error) ?></div>\n            <?php endif; ?>\n            \n            <form method=\"post\">\n                <div class=\"form-group\">\n                    <label for=\"assigned_admin\">새 담당 선임관리자</label>\n                    <select id=\"assigned_admin\" name=\"assigned_admin\" required>\n                        <option value=\"\">선임관리자를 선택하세요</option>\n                        <?php foreach ($senior_admins as $admin): ?>\n                            <option value=\"<?= h($admin['username']) ?>\" \n                                    <?= ($comp_info['assigned_admin'] ?? '') === $admin['username'] ? 'selected' : '' ?>>\n                                <?= h($admin['username']) ?> (<?= getRoleDisplayName($admin['role']) ?>)\n                            </option>\n                        <?php endforeach; ?>\n                    </select>\n                </div>\n                <div style=\"display: flex; gap: 10px;\">\n                    <button type=\"submit\" name=\"assign_admin\" class=\"btn\">\n                        <span class=\"material-symbols-rounded\">save</span>\n                        담당자 변경\n                    </button>\n                    <a href=\"index.php\" class=\"btn btn-secondary\">\n                        <span class=\"material-symbols-rounded\">arrow_back</span>\n                        돌아가기\n                    </a>\n                </div>\n            </form>\n        </div>\n    </div>\n</body>\n</html>\n\n\n\n\n\n\n","size_bytes":9942},"comp/auth.php":{"content":"<?php\n// 인증 및 권한 관리 시스템\n\nfunction loadUsers() {\n    $users_file = __DIR__ . '/users.txt';\n    $users = [];\n    \n    if (file_exists($users_file)) {\n        $lines = file($users_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n        foreach ($lines as $line) {\n            if (strpos($line, '#') === 0) continue; // 주석 무시\n            $parts = explode(',', $line);\n            if (count($parts) >= 5) {\n                $users[] = [\n                    'username' => trim($parts[0]),\n                    'password' => trim($parts[1]),\n                    'role' => trim($parts[2]),\n                    'created_by' => trim($parts[3]),\n                    'created_at' => trim($parts[4])\n                ];\n            }\n        }\n    }\n    return $users;\n}\n\nfunction saveUsers($users) {\n    $users_file = __DIR__ . '/users.txt';\n    $content = \"# 사용자 관리 파일\\n\";\n    $content .= \"# 형식: username,password,role,created_by,created_at\\n\";\n    $content .= \"# role: owner, senior_admin, admin\\n\";\n    $content .= \"# created_by: 이 사용자를 생성한 사용자 (owner는 'system')\\n\\n\";\n    \n    foreach ($users as $user) {\n        $content .= implode(',', $user) . \"\\n\";\n    }\n    \n    file_put_contents($users_file, $content);\n}\n\nfunction authenticateUser($username, $password) {\n    $users = loadUsers();\n    foreach ($users as $user) {\n        if ($user['username'] === $username && $user['password'] === $password) {\n            return $user;\n        }\n    }\n    return false;\n}\n\nfunction hasPermission($user, $permission) {\n    if (!$user) return false;\n    \n    $role_permissions = [\n        'owner' => ['create_comp', 'manage_users', 'view_all_comps', 'manage_comp'],\n        'senior_admin' => ['view_all_comps', 'manage_comp'],\n        'admin' => ['manage_content']\n    ];\n    \n    return in_array($permission, $role_permissions[$user['role']] ?? []);\n}\n\nfunction requirePermission($permission) {\n    if (!isset($_SESSION['user'])) {\n        header(\"Location: login.php\");\n        exit;\n    }\n    \n    if (!hasPermission($_SESSION['user'], $permission)) {\n        die(\"권한이 없습니다.\");\n    }\n}\n\nfunction getRoleDisplayName($role) {\n    $role_names = [\n        'owner' => '오너',\n        'senior_admin' => '선임관리자',\n        'admin' => '관리자'\n    ];\n    return $role_names[$role] ?? $role;\n}\n","size_bytes":2371},"comp/auto_fullscreen.php":{"content":"<?php\n/**\n * 자동 전체화면 진입 페이지\n * F11 키를 자동으로 눌러서 전체화면으로 진입\n */\n\n$mode = isset($_GET['mode']) ? $_GET['mode'] : 'results';\n$event = isset($_GET['event']) ? $_GET['event'] : '';\n$auto = isset($_GET['auto']) ? $_GET['auto'] : 'true';\n\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>자동 전체화면</title>\n    <style>\n        body {\n            margin: 0;\n            padding: 0;\n            background: #000;\n            color: #fff;\n            font-family: Arial, sans-serif;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            height: 100vh;\n        }\n        \n        .loading {\n            text-align: center;\n        }\n        \n        .spinner {\n            border: 4px solid #f3f3f3;\n            border-top: 4px solid #667eea;\n            border-radius: 50%;\n            width: 50px;\n            height: 50px;\n            animation: spin 1s linear infinite;\n            margin: 0 auto 20px;\n        }\n        \n        @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n        }\n    </style>\n</head>\n<body>\n    <div class=\"loading\">\n        <div class=\"spinner\"></div>\n        <h2>전체화면으로 전환 중...</h2>\n        <p>잠시만 기다려주세요.</p>\n    </div>\n\n    <script>\n        // 페이지 로드 후 자동으로 전체화면 모니터로 리다이렉트\n        window.addEventListener('load', function() {\n            setTimeout(() => {\n                const url = `fullscreen_monitor.php?mode=${encodeURIComponent('<?php echo $mode; ?>')}&event=${encodeURIComponent('<?php echo $event; ?>')}&auto=${encodeURIComponent('<?php echo $auto; ?>')}`;\n                window.location.href = url;\n            }, 1000);\n        });\n        \n        // F11 키 자동 실행 (사용자 상호작용 후에만 가능)\n        document.addEventListener('click', function() {\n            if (document.documentElement.requestFullscreen) {\n                document.documentElement.requestFullscreen();\n            } else if (document.documentElement.webkitRequestFullscreen) {\n                document.documentElement.webkitRequestFullscreen();\n            } else if (document.documentElement.mozRequestFullScreen) {\n                document.documentElement.mozRequestFullScreen();\n            } else if (document.documentElement.msRequestFullscreen) {\n                document.documentElement.msRequestFullscreen();\n            }\n        });\n    </script>\n</body>\n</html>\n\n\n\n\n","size_bytes":2675},"comp/check_result_file.php":{"content":"<?php\n/**\n * 결과 파일 존재 여부 확인 API\n */\n\n$eventId = isset($_GET['event']) ? $_GET['event'] : '';\n\nif (!$eventId) {\n    echo json_encode(['success' => false, 'message' => '이벤트 ID가 필요합니다.']);\n    exit;\n}\n\n// combined_result 파일 경로 설정\n$resultsPath = __DIR__ . \"/../results/results\";\n$combinedFile = $resultsPath . \"/combined_result_\" . $eventId . \".html\";\n\n// 파일 존재 여부 확인\n$exists = file_exists($combinedFile) && is_readable($combinedFile);\n\n// 추가 정보\n$fileInfo = [];\nif ($exists) {\n    $fileInfo = [\n        'path' => $combinedFile,\n        'size' => filesize($combinedFile),\n        'modified' => date('Y-m-d H:i:s', filemtime($combinedFile))\n    ];\n}\n\necho json_encode([\n    'success' => true,\n    'event_id' => $eventId,\n    'exists' => $exists,\n    'file_info' => $fileInfo,\n    'message' => $exists ? '결과 파일이 존재합니다.' : '결과 파일이 없습니다.'\n]);\n?>\n","size_bytes":949},"comp/competition_settings.php":{"content":"<?php\n/**\n * 대회 설정 관리\n */\n\n$settingsFile = __DIR__ . '/uploads/competition_settings.json';\n\n// 기본 설정\n$defaultSettings = [\n    'competition_title' => '2025 경기도지사배 전국장애인댄스스포츠선수권대회',\n    'competition_subtitle' => 'DanceOffice 댄스스포츠 관리 시스템'\n];\n\n// 설정 로드\n$settings = $defaultSettings;\nif (file_exists($settingsFile)) {\n    $loadedSettings = json_decode(file_get_contents($settingsFile), true);\n    if ($loadedSettings) {\n        $settings = array_merge($defaultSettings, $loadedSettings);\n    }\n}\n\n// 설정 저장\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $newSettings = [\n        'competition_title' => $_POST['competition_title'] ?? $defaultSettings['competition_title'],\n        'competition_subtitle' => $_POST['competition_subtitle'] ?? $defaultSettings['competition_subtitle']\n    ];\n    \n    if (file_put_contents($settingsFile, json_encode($newSettings, JSON_PRETTY_PRINT))) {\n        $message = '대회 설정이 저장되었습니다.';\n        $settings = $newSettings;\n    } else {\n        $error = '설정 저장에 실패했습니다.';\n    }\n}\n\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>대회 설정</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            margin: 20px;\n            background: #f5f5f5;\n        }\n        \n        .container {\n            max-width: 800px;\n            margin: 0 auto;\n            background: white;\n            padding: 20px;\n            border-radius: 10px;\n            box-shadow: 0 0 20px rgba(0,0,0,0.1);\n        }\n        \n        .header {\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            color: white;\n            padding: 20px;\n            border-radius: 10px;\n            margin-bottom: 30px;\n            text-align: center;\n        }\n        \n        .header h1 {\n            margin: 0;\n            font-size: 2em;\n        }\n        \n        .form-group {\n            margin-bottom: 20px;\n        }\n        \n        .form-group label {\n            display: block;\n            margin-bottom: 5px;\n            font-weight: bold;\n            color: #333;\n        }\n        \n        .form-group input[type=\"text\"] {\n            width: 100%;\n            padding: 12px;\n            border: 1px solid #ddd;\n            border-radius: 5px;\n            font-size: 16px;\n        }\n        \n        .btn {\n            background: #007bff;\n            color: white;\n            border: none;\n            padding: 12px 20px;\n            border-radius: 5px;\n            cursor: pointer;\n            font-size: 14px;\n            transition: background 0.3s;\n        }\n        \n        .btn:hover {\n            background: #0056b3;\n        }\n        \n        .btn.success {\n            background: #28a745;\n        }\n        \n        .btn.success:hover {\n            background: #218838;\n        }\n        \n        .btn.info {\n            background: #17a2b8;\n        }\n        \n        .btn.info:hover {\n            background: #138496;\n        }\n        \n        .message {\n            padding: 15px;\n            border-radius: 5px;\n            margin-bottom: 20px;\n        }\n        \n        .message.success {\n            background: #d4edda;\n            color: #155724;\n            border: 1px solid #c3e6cb;\n        }\n        \n        .message.error {\n            background: #f8d7da;\n            color: #721c24;\n            border: 1px solid #f5c6cb;\n        }\n        \n        .preview {\n            background: #f8f9fa;\n            padding: 20px;\n            border-radius: 5px;\n            margin-top: 20px;\n            text-align: center;\n        }\n        \n        .preview h2 {\n            color: #333;\n            margin-bottom: 10px;\n        }\n        \n        .preview p {\n            color: #666;\n            margin: 0;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"header\">\n            <h1>🏆 대회 설정</h1>\n            <p>대회 제목과 부제목을 설정하세요</p>\n        </div>\n        \n        <?php if (isset($message)): ?>\n        <div class=\"message success\"><?php echo $message; ?></div>\n        <?php endif; ?>\n        \n        <?php if (isset($error)): ?>\n        <div class=\"message error\"><?php echo $error; ?></div>\n        <?php endif; ?>\n        \n        <form method=\"POST\">\n            <div class=\"form-group\">\n                <label for=\"competition_title\">대회 제목</label>\n                <input type=\"text\" id=\"competition_title\" name=\"competition_title\" \n                       value=\"<?php echo htmlspecialchars($settings['competition_title']); ?>\" required>\n            </div>\n            \n            <div class=\"form-group\">\n                <label for=\"competition_subtitle\">대회 부제목</label>\n                <input type=\"text\" id=\"competition_subtitle\" name=\"competition_subtitle\" \n                       value=\"<?php echo htmlspecialchars($settings['competition_subtitle']); ?>\">\n            </div>\n            \n            <div style=\"display: flex; gap: 15px;\">\n                <button type=\"submit\" class=\"btn success\">💾 설정 저장</button>\n                <button type=\"button\" class=\"btn info\" onclick=\"openEventMonitor()\">🖥️ 전체화면 미리보기</button>\n                <button type=\"button\" class=\"btn\" onclick=\"openEventUpload()\">📁 이벤트 업로드</button>\n            </div>\n        </form>\n        \n        <div class=\"preview\">\n            <h2>미리보기</h2>\n            <h3 id=\"previewTitle\"><?php echo htmlspecialchars($settings['competition_title']); ?></h3>\n            <p id=\"previewSubtitle\"><?php echo htmlspecialchars($settings['competition_subtitle']); ?></p>\n        </div>\n    </div>\n\n    <script>\n        function openEventMonitor() {\n            window.open('event_monitor_v2.php', '_blank');\n        }\n        \n        function openEventUpload() {\n            window.open('event_upload.php', '_blank');\n        }\n        \n        // 실시간 미리보기\n        document.getElementById('competition_title').addEventListener('input', function() {\n            document.getElementById('previewTitle').textContent = this.value;\n        });\n        \n        document.getElementById('competition_subtitle').addEventListener('input', function() {\n            document.getElementById('previewSubtitle').textContent = this.value;\n        });\n    </script>\n</body>\n</html>\n","size_bytes":6550},"comp/create_next_round_players.php":{"content":"<?php\nheader('Content-Type: application/json');\nerror_reporting(E_ALL);\nini_set('display_errors', 1);\n\n$input = json_decode(file_get_contents('php://input'), true);\n\nif (!$input) {\n    echo json_encode(['success' => false, 'message' => 'Invalid input data']);\n    exit;\n}\n\n$comp_id = $input['comp_id'] ?? '';\n$eventNo = $input['eventNo'] ?? '';\n$players = $input['players'] ?? [];\n\nif (empty($comp_id) || empty($eventNo) || empty($players)) {\n    echo json_encode(['success' => false, 'message' => 'Missing required parameters']);\n    exit;\n}\n\n// 대회 데이터 디렉토리\n$data_dir = __DIR__ . \"/data/$comp_id\";\n\n// 디렉토리가 없으면 생성\nif (!is_dir($data_dir)) {\n    mkdir($data_dir, 0755, true);\n}\n\n// 선수 파일 경로\n$players_file = \"$data_dir/players_$eventNo.txt\";\n\ntry {\n    // 선수 목록을 파일에 저장\n    $content = implode(\"\\n\", $players);\n    $result = file_put_contents($players_file, $content);\n    \n    if ($result === false) {\n        throw new Exception('Failed to write players file');\n    }\n    \n    echo json_encode([\n        'success' => true, \n        'message' => \"Players file created successfully: players_$eventNo.txt\",\n        'file_path' => $players_file,\n        'player_count' => count($players)\n    ]);\n    \n} catch (Exception $e) {\n    echo json_encode([\n        'success' => false, \n        'message' => 'Error creating players file: ' . $e->getMessage()\n    ]);\n}\n?>\n\n\n\n\n\n","size_bytes":1434},"comp/dance_done_update.php":{"content":"<?php\nheader('Content-Type: application/json');\n$comp_id = $_POST['comp_id'] ?? '';\n$event_no = $_POST['event_no'] ?? '';\n$dance_code = $_POST['dance_code'] ?? '';\n$done = ($_POST['done'] ?? '') === 'true';\n\n// BOM 제거\nif (substr($event_no, 0, 3) === \"\\xEF\\xBB\\xBF\") {\n    $event_no = substr($event_no, 3);\n}\n\nif (!$comp_id || !$event_no || !$dance_code) {\n    echo json_encode(['success'=>false, 'error'=>'필수값 누락']);\n    exit;\n}\n\n$data_dir = __DIR__ . \"/data/$comp_id\";\nif (!is_dir($data_dir)) {\n    echo json_encode(['success'=>false, 'error'=>'대회 디렉토리 없음']);\n    exit;\n}\n\n$file = \"$data_dir/dance_done_$event_no.json\";\n$dance_done = [];\nif (is_file($file)) {\n    $content = file_get_contents($file);\n    $dance_done = json_decode($content, true);\n    if (!is_array($dance_done)) $dance_done = [];\n}\n\n$dance_done[$dance_code] = $done;\n\nif (file_put_contents($file, json_encode($dance_done, JSON_UNESCAPED_UNICODE|JSON_PRETTY_PRINT)) === false) {\n    echo json_encode(['success'=>false, 'error'=>'파일 저장 실패']);\n    exit;\n}\n\necho json_encode(['success'=>true]);","size_bytes":1101},"comp/dashboard.php":{"content":"<?php\n$comp_id = $_GET['comp_id'] ?? '';\n$data_dir = __DIR__ . \"/data/$comp_id\";\n$info_file = \"$data_dir/info.json\";\nif (!preg_match('/^\\d{8}-\\d+$/', $comp_id) || !is_file($info_file)) {\n    echo \"<h1>잘못된 대회 ID 또는 대회 정보가 없습니다.</h1>\";\n    exit;\n}\n$info = json_decode(file_get_contents($info_file), true);\n\nfunction count_lines($file) {\n    if (!is_file($file)) return 0;\n    $lines = file($file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    return count($lines);\n}\n\n// 기존 방식(선수/심사위원/시간표)은 txt 줄 수로 셈\n$counts = [\n    'competitor'   => count_lines(\"$data_dir/players.txt\"),\n    // events.txt는 라인수 그대로 사용 (필요시 RunOrder 기반으로 변경)\n    'events_txt'   => count_lines(\"$data_dir/events.txt\"),\n    'adjudicator'  => count_lines(\"$data_dir/adjudicators.txt\"),\n    'timetable'    => count_lines(\"$data_dir/timetable.txt\"),\n];\n\n// ---- RunOrder 기반 '경기 이벤트' 갯수 구하기 ----\n$runorder_file = \"$data_dir/RunOrder_Tablet.txt\";\n$event_count = 0;\nif (is_file($runorder_file)) {\n    $lines = file($runorder_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    foreach ($lines as $line) {\n        if (preg_match('/^bom/', $line)) continue;\n        $cols = array_map('trim', explode(',', $line));\n        // 댄스 1~5 중 하나라도 값이 있으면 경기 이벤트로 간주\n        $has_dance = false;\n        for ($i=6; $i<=10; $i++) {\n            if (isset($cols[$i]) && $cols[$i] !== '') {\n                $has_dance = true;\n                break;\n            }\n        }\n        if ($has_dance) $event_count++;\n    }\n}\nfunction h($s) { return htmlspecialchars($s ?? ''); }\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title><?= h($info['title']) ?> 대시보드 | danceoffice.net COMP</title>\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\n    <style>\n        body { background:#1a1a1a; font-family:sans-serif; margin:0;}\n        .dash-main { max-width:850px; margin:3vh auto 0 auto; background:#222; border-radius:18px; box-shadow:0 6px 32px #00339922; padding:2.7em 2em 2.2em 2em;}\n        h1 { color:#fff; font-size:1.35em; margin-bottom:1.4em; text-align:center;}\n        .dash-grid { display:grid; grid-template-columns: 1fr 1fr 1fr 1fr 1fr; gap:1.7em; margin-bottom:2.5em;}\n        .dash-block {\n            background:#181818; border-radius:10px; padding:1.2em 0.8em;\n            display:flex; flex-direction:column; align-items:center;\n            box-shadow:0 2px 12px #0004; cursor:pointer; transition:background 0.15s;\n            min-width:120px; min-height:112px;\n        }\n        .dash-block:hover { background:#2c2c2c;}\n        .dash-block .num { font-size:2.1em; font-weight:700; color:#03C75A; margin-bottom:0.25em;}\n        .dash-block .lbl { color:#fff; font-size:1.08em; font-weight:600; margin-bottom:0.25em;}\n        .dash-block .sub { color:#bbb; font-size:0.96em;}\n        .dash-btns { margin-top:2.5em; display:flex; gap:1.1em; justify-content:center;}\n        .dash-btn {\n            display:inline-block; background:#03C75A; color:#fff; border-radius:13px;\n            padding:0.7em 2.5em; font-weight:700; font-size:1.12em; text-decoration:none;\n            box-shadow:0 2px 8px #03c75a22; transition:background 0.13s;\n        }\n        .dash-btn:hover { background:#00BFAE;}\n        .compinfo {text-align:center; color:#bbb; margin-bottom:2.2em;}\n        .dash-icons {margin-top:2em; text-align:center;}\n        .dash-icons img {width:36px; margin:0 0.8em; opacity:0.8; transition:opacity 0.2s;}\n        .dash-icons img:hover {opacity:1;}\n        a { text-decoration:none;}\n        .goto-list {display:inline-block; margin-bottom:1.2em; color:#bbb;}\n        .goto-list:hover {color:#03C75A;}\n        footer {margin-top:2.2em;text-align:center;font-size:0.92em;color:#aaa; padding: 1em 0;}\n        @media (max-width:1050px) {\n            .dash-main {max-width:99vw;}\n            .dash-grid {grid-template-columns: 1fr 1fr 1fr;}\n        }\n        @media (max-width:700px) {\n            .dash-main {padding:1.3em 0.2em;}\n            .dash-grid {grid-template-columns: 1fr 1fr;}\n        }\n        @media (max-width:430px) {\n            .dash-grid {grid-template-columns: 1fr;}\n        }\n    </style>\n</head>\n<body>\n<div class=\"dash-main\">\n    <a href=\"index.php\" class=\"goto-list\">&lt; 대회 목록으로</a>\n    <h1><?= h($info['title']) ?> <span style=\"font-size:0.8em; color:#03C75A;\">대시보드</span></h1>\n    <div class=\"compinfo\">\n        <b>일자:</b> <?= h($info['date']) ?> <b>장소:</b> <?= h($info['place']) ?> <b>주최/주관:</b> <?= h($info['host']) ?>\n    </div>\n    <div class=\"dash-grid\">\n        <a class=\"dash-block\" href=\"manage_competitors.php?comp_id=<?= urlencode($comp_id) ?>\">\n            <div class=\"num\"><?= $counts['competitor'] ?></div>\n            <div class=\"lbl\">Competitors</div>\n            <div class=\"sub\">선수 명단</div>\n        </a>\n        <a class=\"dash-block\" href=\"manage_events.php?comp_id=<?= urlencode($comp_id) ?>\">\n            <div class=\"num\"><?= $event_count ?></div>\n            <div class=\"lbl\">Events</div>\n            <div class=\"sub\">종목/이벤트</div>\n        </a>\n        <a class=\"dash-block\" href=\"manage_adjudicators.php?comp_id=<?= urlencode($comp_id) ?>\">\n            <div class=\"num\"><?= $counts['adjudicator'] ?></div>\n            <div class=\"lbl\">Adjudicators</div>\n            <div class=\"sub\">심사위원</div>\n        </a>\n        <a class=\"dash-block\" href=\"manage_timetable.php?comp_id=<?= urlencode($comp_id) ?>\">\n            <div class=\"num\"><?= $counts['timetable'] ?></div>\n            <div class=\"lbl\">Timetable</div>\n            <div class=\"sub\">시간표</div>\n        </a>\n        <a class=\"dash-block\" href=\"live_panel.php?comp_id=<?= urlencode($comp_id) ?>\">\n            <div class=\"num\">LIVE</div>\n            <div class=\"lbl\">Live Panel</div>\n            <div class=\"sub\">진행/심사 컨트롤</div>\n        </a>\n    </div>\n    <div class=\"dash-btns\">\n        <a class=\"dash-btn\" href=\"data_manage.php?comp_id=<?= urlencode($comp_id) ?>\">데이터 관리</a>\n        <a class=\"dash-btn\" href=\"scoring_login.php?comp_id=<?= urlencode($comp_id) ?>\">심사/채점</a>\n        <a class=\"dash-btn\" href=\"#\">결과 집계</a>\n        <a class=\"dash-btn\" href=\"#\">상장 인쇄</a>\n    </div>\n    <div class=\"dash-icons\" style=\"margin-top:2.7em;\">\n        <a href=\"index.php\" title=\"홈\"><img src=\"assets/home_icon.svg\" alt=\"Home\"></a>\n        <a href=\"data_manage.php?comp_id=<?= urlencode($comp_id) ?>\" title=\"DB 관리\"><img src=\"assets/db_icon.svg\" alt=\"DB\"></a>\n        <a href=\"#\" title=\"설정\"><img src=\"assets/settings_icon.svg\" alt=\"설정\"></a>\n        <a href=\"#\" title=\"리셋\"><img src=\"assets/reset_icon.svg\" alt=\"초기화\"></a>\n    </div>\n</div>\n<footer>\n    2025 danceoffice.net | Powered by Seyoung Lee\n</footer>\n</body>\n</html>","size_bytes":6945},"comp/data_manage.php":{"content":"<?php\n$comp_id = $_GET['comp_id'] ?? '';\n$data_dir = __DIR__ . \"/data/$comp_id\";\n$info_file = \"$data_dir/info.json\";\nif (!preg_match('/^\\d{8}-\\d+$/', $comp_id) || !is_file($info_file)) {\n    echo \"<h1>잘못된 대회 ID 또는 대회 정보가 없습니다.</h1>\";\n    exit;\n}\n$info = json_decode(file_get_contents($info_file), true);\nfunction count_lines($file) {\n    if (!is_file($file)) return 0;\n    $lines = file($file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    return count($lines);\n}\n$counts = [\n    'competitor'   => count_lines(\"$data_dir/players.txt\"),\n    'events'       => count_lines(\"$data_dir/events.txt\"),\n    'adjudicator'  => count_lines(\"$data_dir/adjudicators.txt\"),\n    'timetable'    => count_lines(\"$data_dir/timetable.txt\"),\n];\nfunction h($s) { return htmlspecialchars($s ?? ''); }\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title><?= h($info['title']) ?> 데이터 관리 | danceoffice.net COMP</title>\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\n    <style>\n        body { background:#1a1a1a; font-family:sans-serif; margin:0;}\n        .mainbox { max-width:900px; margin:3vh auto 0 auto; background:#222; border-radius:18px; box-shadow:0 6px 32px #00339922; padding:2.7em 2em 2.2em 2em;}\n        h1 { color:#fff; font-size:1.25em; margin-bottom:1.4em; text-align:center;}\n        .compinfo {text-align:center; color:#bbb; margin-bottom:2.2em;}\n        .db-grid { display:grid; grid-template-columns: 1fr 1fr 1fr 1fr; gap:1.5em; margin-bottom:2.5em;}\n        .db-block {\n            background:#181818; border-radius:10px; padding:1.3em 0.8em;\n            display:flex; flex-direction:column; align-items:center;\n            box-shadow:0 2px 12px #0004; cursor:pointer; transition:background 0.15s;\n            min-width:120px; min-height:110px;\n        }\n        .db-block:hover { background:#2c2c2c;}\n        .db-block .num { font-size:2em; font-weight:700; color:#03C75A; margin-bottom:0.2em;}\n        .db-block .lbl { color:#fff; font-size:1.05em; font-weight:600; margin-bottom:0.22em;}\n        .db-block .sub { color:#bbb; font-size:0.97em;}\n        .goto-dash {display:inline-block; margin-bottom:1.4em; color:#bbb;}\n        .goto-dash:hover {color:#03C75A;}\n        footer {margin-top:2.2em;text-align:center;font-size:0.92em;color:#aaa; padding: 1em 0;}\n        @media (max-width:1050px) {\n            .mainbox {max-width:99vw;}\n            .db-grid {grid-template-columns: 1fr 1fr;}\n        }\n        @media (max-width:700px) {\n            .mainbox {padding:1.3em 0.2em;}\n            .db-grid {grid-template-columns: 1fr;}\n        }\n    </style>\n</head>\n<body>\n<div class=\"mainbox\">\n    <a href=\"dashboard.php?comp_id=<?= urlencode($comp_id) ?>\" class=\"goto-dash\">&lt; 대시보드로</a>\n    <h1><?= h($info['title']) ?> 데이터 관리</h1>\n    <div class=\"compinfo\">\n        <b>일자:</b> <?= h($info['date']) ?> <b>장소:</b> <?= h($info['place']) ?> <b>주최/주관:</b> <?= h($info['host']) ?>\n    </div>\n    <div class=\"db-grid\">\n        <a class=\"db-block\" href=\"manage_competitors.php?comp_id=<?= urlencode($comp_id) ?>\">\n            <div class=\"num\"><?= $counts['competitor'] ?></div>\n            <div class=\"lbl\">Competitors</div>\n            <div class=\"sub\">선수 명단 관리</div>\n        </a>\n        <a class=\"db-block\" href=\"manage_events.php?comp_id=<?= urlencode($comp_id) ?>\">\n            <div class=\"num\"><?= $counts['events'] ?></div>\n            <div class=\"lbl\">Events</div>\n            <div class=\"sub\">종목/이벤트 관리</div>\n        </a>\n        <a class=\"db-block\" href=\"manage_adjudicators.php?comp_id=<?= urlencode($comp_id) ?>\">\n            <div class=\"num\"><?= $counts['adjudicator'] ?></div>\n            <div class=\"lbl\">Adjudicators</div>\n            <div class=\"sub\">심사위원 관리</div>\n        </a>\n        <a class=\"db-block\" href=\"manage_timetable.php?comp_id=<?= urlencode($comp_id) ?>\">\n            <div class=\"num\"><?= $counts['timetable'] ?></div>\n            <div class=\"lbl\">Timetable</div>\n            <div class=\"sub\">시간표 관리</div>\n        </a>\n    </div>\n</div>\n<footer>\n    2025 danceoffice.net | Powered by Seyoung Lee\n</footer>\n</body>\n</html>","size_bytes":4229},"comp/debug_auto_advance.php":{"content":"<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>자동 전환 디버깅</title>\n    <style>\n        body { font-family: Arial, sans-serif; margin: 20px; background: #f5f5f5; }\n        .container { max-width: 1200px; margin: 0 auto; background: white; padding: 20px; border-radius: 10px; box-shadow: 0 0 10px rgba(0,0,0,0.1); }\n        .section { margin-bottom: 30px; padding: 20px; border: 1px solid #ddd; border-radius: 5px; }\n        .success { background: #d4edda; border-color: #c3e6cb; }\n        .error { background: #f8d7da; border-color: #f5c6cb; }\n        .info { background: #d1ecf1; border-color: #bee5eb; }\n        .btn { background: #667eea; color: white; border: none; padding: 10px 20px; border-radius: 5px; cursor: pointer; margin: 5px; }\n        .btn:hover { background: #5a6fd8; }\n        pre { background: #f8f9fa; padding: 15px; border-radius: 5px; overflow-x: auto; }\n        .log { background: #000; color: #0f0; padding: 15px; border-radius: 5px; font-family: monospace; height: 200px; overflow-y: auto; }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <h1>🔍 자동 전환 디버깅</h1>\n        \n        <div class=\"section info\">\n            <h2>📋 현재 상태</h2>\n            <div id=\"currentStatus\">로딩 중...</div>\n        </div>\n        \n        <div class=\"section\">\n            <h2>🎯 이벤트 그룹 정보</h2>\n            <div id=\"eventGroups\">로딩 중...</div>\n        </div>\n        \n        <div class=\"section\">\n            <h2>📁 결과 파일 확인</h2>\n            <div id=\"resultFiles\">로딩 중...</div>\n        </div>\n        \n        <div class=\"section\">\n            <h2>⚙️ 자동 전환 설정</h2>\n            <div>\n                <button class=\"btn\" onclick=\"testAutoAdvance()\">자동 전환 테스트</button>\n                <button class=\"btn\" onclick=\"checkResultFile()\">결과 파일 확인</button>\n                <button class=\"btn\" onclick=\"forceAdvance()\">강제 다음 그룹</button>\n                <button class=\"btn\" onclick=\"resetToFirst()\">첫 번째 그룹으로</button>\n            </div>\n        </div>\n        \n        <div class=\"section\">\n            <h2>📝 실시간 로그</h2>\n            <div id=\"log\" class=\"log\"></div>\n        </div>\n    </div>\n\n    <script>\n        let currentGroupIndex = 0;\n        let events = [];\n        let eventGroups = {};\n        let autoAdvanceEnabled = true;\n        let autoAdvanceTime = 5000;\n        \n        // 로그 함수\n        function log(message) {\n            const logDiv = document.getElementById('log');\n            const timestamp = new Date().toLocaleTimeString();\n            logDiv.innerHTML += `[${timestamp}] ${message}\\n`;\n            logDiv.scrollTop = logDiv.scrollHeight;\n            console.log(message);\n        }\n        \n        // 이벤트 로드\n        async function loadEvents() {\n            try {\n                log('이벤트 로드 시작...');\n                const response = await fetch('get_event_schedule.php');\n                const data = await response.json();\n                \n                if (data.success) {\n                    events = data.events;\n                    eventGroups = groupEvents(events);\n                    log(`이벤트 로드 완료: ${events.length}개 이벤트, ${Object.keys(eventGroups).length}개 그룹`);\n                    updateDisplay();\n                } else {\n                    log('이벤트 로드 실패: ' + data.message);\n                }\n            } catch (error) {\n                log('이벤트 로드 오류: ' + error.message);\n            }\n        }\n        \n        // 이벤트 그룹화\n        function groupEvents(events) {\n            const groups = {};\n            events.forEach(event => {\n                const eventNumber = event.id.replace(/[^0-9]/g, '');\n                if (eventNumber && eventNumber !== '') {\n                    if (!groups[eventNumber]) {\n                        groups[eventNumber] = [];\n                    }\n                    groups[eventNumber].push(event);\n                }\n            });\n            \n            const sortedGroups = {};\n            Object.keys(groups).sort((a, b) => parseInt(a) - parseInt(b)).forEach(key => {\n                sortedGroups[key] = groups[key];\n            });\n            \n            return sortedGroups;\n        }\n        \n        // 화면 업데이트\n        function updateDisplay() {\n            // 현재 상태\n            const groupNumbers = Object.keys(eventGroups).sort((a, b) => parseInt(a) - parseInt(b));\n            const currentGroupNumber = groupNumbers[currentGroupIndex];\n            const currentGroupEvents = eventGroups[currentGroupNumber] || [];\n            \n            document.getElementById('currentStatus').innerHTML = `\n                <p><strong>현재 그룹:</strong> ${currentGroupIndex + 1}/${groupNumbers.length} (이벤트 ${currentGroupNumber})</p>\n                <p><strong>자동 전환:</strong> ${autoAdvanceEnabled ? 'ON' : 'OFF'}</p>\n                <p><strong>전환 시간:</strong> ${autoAdvanceTime/1000}초</p>\n            `;\n            \n            // 이벤트 그룹 정보\n            let groupsHtml = '';\n            groupNumbers.forEach((groupNum, index) => {\n                const groupEvents = eventGroups[groupNum];\n                const isActive = index === currentGroupIndex;\n                groupsHtml += `\n                    <div style=\"margin: 10px 0; padding: 10px; border: 1px solid #ddd; border-radius: 5px; ${isActive ? 'background: #e7f3ff;' : ''}\">\n                        <strong>이벤트 ${groupNum} ${isActive ? '(현재)' : ''}</strong>\n                        <ul>\n                            ${groupEvents.map(event => `\n                                <li>${event.id}: ${event.name} (결과발표: ${event.show_result ? 'ON' : 'OFF'})</li>\n                            `).join('')}\n                        </ul>\n                    </div>\n                `;\n            });\n            document.getElementById('eventGroups').innerHTML = groupsHtml;\n            \n            // 결과 파일 확인\n            checkResultFiles();\n        }\n        \n        // 결과 파일 확인\n        async function checkResultFiles() {\n            const groupNumbers = Object.keys(eventGroups).sort((a, b) => parseInt(a) - parseInt(b));\n            const currentGroupNumber = groupNumbers[currentGroupIndex];\n            const currentGroupEvents = eventGroups[currentGroupNumber] || [];\n            \n            let resultHtml = '';\n            for (const event of currentGroupEvents) {\n                try {\n                    const response = await fetch(`check_result_file.php?event=${event.id}`);\n                    const data = await response.json();\n                    resultHtml += `\n                        <p><strong>${event.id}:</strong> \n                            ${data.exists ? '✅ 결과 파일 존재' : '❌ 결과 파일 없음'}\n                            ${data.file_info ? ` (크기: ${data.file_info.size}bytes)` : ''}\n                        </p>\n                    `;\n                } catch (error) {\n                    resultHtml += `<p><strong>${event.id}:</strong> ❌ 확인 오류</p>`;\n                }\n            }\n            document.getElementById('resultFiles').innerHTML = resultHtml || '<p>현재 그룹에 이벤트가 없습니다.</p>';\n        }\n        \n        // 자동 전환 테스트\n        async function testAutoAdvance() {\n            log('자동 전환 테스트 시작...');\n            const groupNumbers = Object.keys(eventGroups).sort((a, b) => parseInt(a) - parseInt(b));\n            const currentGroupNumber = groupNumbers[currentGroupIndex];\n            const currentGroupEvents = eventGroups[currentGroupNumber] || [];\n            \n            log(`현재 그룹 ${currentGroupNumber}: ${currentGroupEvents.length}개 이벤트 확인 중...`);\n            \n            let foundResult = false;\n            for (const event of currentGroupEvents) {\n                log(`결과 파일 확인 중: ${event.id}`);\n                \n                try {\n                    const response = await fetch(`check_result_file.php?event=${event.id}`);\n                    const data = await response.json();\n                    \n                    if (data.exists) {\n                        log(`✅ 결과 파일 발견: ${event.id}`);\n                        foundResult = true;\n                        break;\n                    } else {\n                        log(`❌ 결과 파일 없음: ${event.id}`);\n                    }\n                } catch (error) {\n                    log(`결과 파일 확인 오류 (${event.id}): ${error.message}`);\n                }\n            }\n            \n            if (foundResult) {\n                log(`자동 전환 시뮬레이션: ${autoAdvanceTime/1000}초 후 다음 그룹으로...`);\n                \n                setTimeout(() => {\n                    if (currentGroupIndex < groupNumbers.length - 1) {\n                        currentGroupIndex++;\n                        log(`자동 전환 완료: 이벤트 ${groupNumbers[currentGroupIndex]}로 이동`);\n                        updateDisplay();\n                    } else {\n                        log('모든 이벤트 완료');\n                    }\n                }, autoAdvanceTime);\n            } else {\n                log('현재 그룹에 결과 파일이 없습니다.');\n            }\n        }\n        \n        // 결과 파일 확인\n        function checkResultFile() {\n            log('결과 파일 확인 중...');\n            checkResultFiles();\n        }\n        \n        // 강제 다음 그룹\n        function forceAdvance() {\n            const groupNumbers = Object.keys(eventGroups).sort((a, b) => parseInt(a) - parseInt(b));\n            if (currentGroupIndex < groupNumbers.length - 1) {\n                currentGroupIndex++;\n                log(`강제 다음 그룹: 이벤트 ${groupNumbers[currentGroupIndex]}로 이동`);\n                updateDisplay();\n            } else {\n                log('마지막 그룹입니다.');\n            }\n        }\n        \n        // 첫 번째 그룹으로\n        function resetToFirst() {\n            currentGroupIndex = 0;\n            log('첫 번째 그룹으로 리셋');\n            updateDisplay();\n        }\n        \n        // 페이지 로드 시 시작\n        document.addEventListener('DOMContentLoaded', function() {\n            log('디버깅 페이지 로드 완료');\n            loadEvents();\n        });\n    </script>\n</body>\n</html>\n","size_bytes":10706},"comp/debug_event_data.php":{"content":"<?php\n/**\n * 이벤트 데이터 디버깅 API\n */\n\nheader('Content-Type: application/json');\n\n// 이벤트 순서 파일 경로\n$eventFile = __DIR__ . '/uploads/event_schedule.txt';\n$statusFile = __DIR__ . '/uploads/event_status.json';\n\n$events = [];\n$debugInfo = [];\n\nif (file_exists($eventFile)) {\n    $lines = file($eventFile, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    $debugInfo['file_exists'] = true;\n    $debugInfo['file_lines'] = count($lines);\n    \n    // 상태 로드\n    $status = [];\n    if (file_exists($statusFile)) {\n        $status = json_decode(file_get_contents($statusFile), true) ?: [];\n    }\n    \n    foreach ($lines as $lineNum => $line) {\n        $parts = explode(',', $line);\n        $debugInfo['line_' . ($lineNum + 1)] = [\n            'raw' => $line,\n            'parts' => $parts,\n            'part_count' => count($parts)\n        ];\n        \n        if (count($parts) >= 3) {\n            $eventId = trim($parts[0]);\n            $showResult = trim($parts[2]) === '1';\n            \n            $events[] = [\n                'id' => $eventId,\n                'name' => trim($parts[1]),\n                'show_result' => isset($status[$eventId]) ? $status[$eventId] : $showResult\n            ];\n        }\n    }\n} else {\n    $debugInfo['file_exists'] = false;\n}\n\n// 그룹화 테스트\n$groupedEvents = [];\nforeach ($events as $event) {\n    $eventNumber = preg_replace('/[^0-9]/', '', $event['id']);\n    if ($eventNumber && $eventNumber !== '') {\n        if (!isset($groupedEvents[$eventNumber])) {\n            $groupedEvents[$eventNumber] = [];\n        }\n        $groupedEvents[$eventNumber][] = $event;\n    }\n}\n\n// 숫자 순으로 정렬\nksort($groupedEvents, SORT_NUMERIC);\n\necho json_encode([\n    'success' => true,\n    'events' => $events,\n    'grouped_events' => $groupedEvents,\n    'debug_info' => $debugInfo,\n    'total_events' => count($events),\n    'total_groups' => count($groupedEvents)\n], JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE);\n?>\n\n\n\n\n","size_bytes":1988},"comp/debug_events.php":{"content":"<?php\n/**\n * 이벤트 그룹화 디버깅 페이지\n */\n\n// 테스트용 이벤트 데이터\n$testEvents = [\n    ['id' => '1A', 'name' => '지적 라틴', 'show_result' => true],\n    ['id' => '1B', 'name' => '시각 라틴', 'show_result' => false],\n    ['id' => '1C', 'name' => '청각 라틴', 'show_result' => true],\n    ['id' => '2A', 'name' => '지적 스탠더드', 'show_result' => true],\n    ['id' => '2B', 'name' => '시각 스탠더드', 'show_result' => false],\n    ['id' => '2C', 'name' => '청각 스탠더드', 'show_result' => true],\n    ['id' => '3A', 'name' => '지적 왈츠', 'show_result' => true],\n    ['id' => '3B', 'name' => '시각 왈츠', 'show_result' => false],\n    ['id' => '3C', 'name' => '청각 왈츠', 'show_result' => true],\n];\n\n// 그룹화 함수\nfunction groupEvents($events) {\n    $groups = [];\n    \n    foreach ($events as $event) {\n        // 이벤트 ID에서 숫자 부분 추출 (예: 1A -> 1, 2B -> 2)\n        $eventNumber = preg_replace('/[^0-9]/', '', $event['id']);\n        \n        if ($eventNumber && $eventNumber !== '') {\n            if (!isset($groups[$eventNumber])) {\n                $groups[$eventNumber] = [];\n            }\n            $groups[$eventNumber][] = $event;\n        }\n    }\n    \n    // 숫자 순으로 정렬\n    ksort($groups, SORT_NUMERIC);\n    \n    return $groups;\n}\n\n$groupedEvents = groupEvents($testEvents);\n\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>이벤트 그룹화 디버깅</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            margin: 20px;\n            background: #f5f5f5;\n        }\n        \n        .container {\n            max-width: 1200px;\n            margin: 0 auto;\n            background: white;\n            padding: 20px;\n            border-radius: 10px;\n            box-shadow: 0 0 20px rgba(0,0,0,0.1);\n        }\n        \n        .header {\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            color: white;\n            padding: 20px;\n            border-radius: 10px;\n            margin-bottom: 30px;\n            text-align: center;\n        }\n        \n        .section {\n            margin-bottom: 30px;\n            padding: 20px;\n            border: 1px solid #ddd;\n            border-radius: 10px;\n        }\n        \n        .section h3 {\n            color: #333;\n            margin-bottom: 15px;\n        }\n        \n        .event-group {\n            margin-bottom: 20px;\n            padding: 15px;\n            background: #f8f9fa;\n            border-radius: 5px;\n            text-align: center;\n        }\n        \n        .group-title {\n            font-size: 1.5em;\n            font-weight: bold;\n            color: #667eea;\n            margin-bottom: 10px;\n            text-align: center;\n        }\n        \n        .event-item {\n            padding: 5px 0;\n            border-bottom: 1px solid #eee;\n            text-align: center;\n        }\n        \n        .event-item:last-child {\n            border-bottom: none;\n        }\n        \n        .event-name {\n            color: #666;\n            font-weight: 500;\n        }\n        \n        .status-badge {\n            padding: 2px 6px;\n            border-radius: 3px;\n            font-size: 12px;\n            margin-left: 10px;\n        }\n        \n        .status-show {\n            background: #d4edda;\n            color: #155724;\n        }\n        \n        .status-hide {\n            background: #f8d7da;\n            color: #721c24;\n        }\n        \n        .json-output {\n            background: #f8f9fa;\n            padding: 15px;\n            border-radius: 5px;\n            font-family: monospace;\n            white-space: pre-wrap;\n            overflow-x: auto;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"header\">\n            <h1>🔍 이벤트 그룹화 디버깅</h1>\n            <p>이벤트가 올바르게 그룹화되는지 확인하세요</p>\n        </div>\n        \n        <div class=\"section\">\n            <h3>📋 원본 이벤트 데이터</h3>\n            <div class=\"json-output\"><?php echo json_encode($testEvents, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE); ?></div>\n        </div>\n        \n        <div class=\"section\">\n            <h3>🎯 그룹화된 이벤트</h3>\n            <?php foreach ($groupedEvents as $groupNumber => $groupEvents): ?>\n            <div class=\"event-group\">\n                <div class=\"group-title\">이벤트 <?php echo $groupNumber; ?> (<?php echo count($groupEvents); ?>개)</div>\n                <?php foreach ($groupEvents as $event): ?>\n                <div class=\"event-item\">\n                    <span class=\"event-name\"><?php echo htmlspecialchars($event['name']); ?></span>\n                    <span class=\"status-badge <?php echo $event['show_result'] ? 'status-show' : 'status-hide'; ?>\">\n                        <?php echo $event['show_result'] ? '발표' : '대기'; ?>\n                    </span>\n                </div>\n                <?php endforeach; ?>\n            </div>\n            <?php endforeach; ?>\n        </div>\n        \n        <div class=\"section\">\n            <h3>📊 그룹화 결과 JSON</h3>\n            <div class=\"json-output\"><?php echo json_encode($groupedEvents, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE); ?></div>\n        </div>\n        \n        <div class=\"section\">\n            <h3>🧪 테스트 링크</h3>\n            <p>\n                <a href=\"event_monitor_v2.php\" target=\"_blank\" style=\"color: #007bff; text-decoration: none; font-weight: bold;\">\n                    📺 그룹 모니터링 테스트\n                </a>\n            </p>\n        </div>\n    </div>\n</body>\n</html>\n","size_bytes":5766},"comp/debug_path.php":{"content":"<?php\n/**\n * 경로 디버깅 파일\n */\n\necho \"<h1>🔍 경로 디버깅</h1>\";\n\n// 다양한 경로 형식 테스트\n$paths = [\n    \"Y:/results/results\",\n    \"Y:\\\\results\\\\results\", \n    \"Y:/results/results/\",\n    \"Y:\\\\results\\\\results\\\\\",\n    \"Y:/results\",\n    \"Y:\\\\results\"\n];\n\necho \"<h2>📁 경로 테스트</h2>\";\n\nforeach ($paths as $path) {\n    echo \"<div style='border: 1px solid #ddd; padding: 10px; margin: 5px;'>\";\n    echo \"<strong>경로:</strong> \" . $path . \"<br>\";\n    echo \"<strong>폴더 존재:</strong> \" . (is_dir($path) ? \"✅ YES\" : \"❌ NO\") . \"<br>\";\n    echo \"<strong>읽기 가능:</strong> \" . (is_readable($path) ? \"✅ YES\" : \"❌ NO\") . \"<br>\";\n    \n    if (is_dir($path)) {\n        $files = glob($path . \"/*.html\");\n        echo \"<strong>HTML 파일 수:</strong> \" . count($files) . \"<br>\";\n        \n        if (count($files) > 0) {\n            echo \"<strong>파일 목록 (처음 5개):</strong><br>\";\n            for ($i = 0; $i < min(5, count($files)); $i++) {\n                echo \"- \" . basename($files[$i]) . \"<br>\";\n            }\n        }\n    }\n    echo \"</div>\";\n}\n\n// 현재 작업 디렉토리 확인\necho \"<h2>📂 현재 작업 디렉토리</h2>\";\necho \"<strong>getcwd():</strong> \" . getcwd() . \"<br>\";\necho \"<strong>__DIR__:</strong> \" . __DIR__ . \"<br>\";\n\n// 상대 경로 테스트\n$relativePath = __DIR__ . \"/../results/results\";\necho \"<h2>🔗 상대 경로 테스트</h2>\";\necho \"<strong>상대 경로:</strong> \" . $relativePath . \"<br>\";\necho \"<strong>폴더 존재:</strong> \" . (is_dir($relativePath) ? \"✅ YES\" : \"❌ NO\") . \"<br>\";\necho \"<strong>읽기 가능:</strong> \" . (is_readable($relativePath) ? \"✅ YES\" : \"❌ NO\") . \"<br>\";\n\nif (is_dir($relativePath)) {\n    $files = glob($relativePath . \"/*.html\");\n    echo \"<strong>HTML 파일 수:</strong> \" . count($files) . \"<br>\";\n}\n\n// 드라이브 확인\necho \"<h2>💾 드라이브 확인</h2>\";\n$drives = ['Y:', 'C:', 'D:'];\nforeach ($drives as $drive) {\n    echo \"<strong>{$drive} 드라이브:</strong> \" . (is_dir($drive) ? \"✅ 존재\" : \"❌ 없음\") . \"<br>\";\n}\n?>\n\n\n\n\n","size_bytes":2094},"comp/debug_router.php":{"content":"<?php\n/**\n * 디버그용 라우터 - 단계별 테스트\n */\n\n// session_start(); // 임시로 주석 처리\n\n// HTML 이스케이프 함수\nfunction h($s) {\n    return htmlspecialchars($s ?? '');\n}\n\n$comp_id = $_GET['comp_id'] ?? '';\n$event_no = $_GET['event_no'] ?? '';\n$lang = $_GET['lang'] ?? 'ko';\n\necho \"<h1>Debug Router Test</h1>\";\necho \"<p>Comp ID: \" . h($comp_id) . \"</p>\";\necho \"<p>Event No: \" . h($event_no) . \"</p>\";\necho \"<p>Language: \" . h($lang) . \"</p>\";\n\n// Step 1: functions.php 포함\necho \"<h2>Step 1: Including functions.php</h2>\";\nrequire_once __DIR__ . '/scoring/shared/functions.php';\necho \"<p style='color: green;'>✓ functions.php included successfully!</p>\";\n\n// Step 2: 이벤트 데이터 로드\necho \"<h2>Step 2: Loading event data</h2>\";\ntry {\n    $event_data = loadEventData($comp_id, $event_no);\n    if ($event_data) {\n        echo \"<p style='color: green;'>✓ Event Data Loaded: \" . h($event_data['name']) . \"</p>\";\n    } else {\n        echo \"<p style='color: red;'>✗ Failed to load event data.</p>\";\n        die();\n    }\n} catch (Exception $e) {\n    echo \"<p style='color: red;'>✗ Error loading event data: \" . h($e->getMessage()) . \"</p>\";\n    die();\n}\n\n// Step 3: 선수 데이터 로드\necho \"<h2>Step 3: Loading players data</h2>\";\ntry {\n    $players = loadPlayersData($comp_id, $event_no);\n    if ($players) {\n        echo \"<p style='color: green;'>✓ Players Data Loaded: \" . count($players) . \" players</p>\";\n    } else {\n        echo \"<p style='color: red;'>✗ Failed to load players data.</p>\";\n        die();\n    }\n} catch (Exception $e) {\n    echo \"<p style='color: red;'>✗ Error loading players data: \" . h($e->getMessage()) . \"</p>\";\n    die();\n}\n\n// Step 4: 댄스 매핑 로드\necho \"<h2>Step 4: Loading dance mapping</h2>\";\ntry {\n    $dance_mapping = loadDanceMapping($comp_id);\n    echo \"<p style='color: green;'>✓ Dance mapping loaded: \" . count($dance_mapping) . \" dances</p>\";\n} catch (Exception $e) {\n    echo \"<p style='color: red;'>✗ Error loading dance mapping: \" . h($e->getMessage()) . \"</p>\";\n    die();\n}\n\n// Step 5: 라운드 정보 로드\necho \"<h2>Step 5: Loading round info</h2>\";\ntry {\n    $round_info = loadRoundInfo($comp_id);\n    echo \"<p style='color: green;'>✓ Round info loaded</p>\";\n} catch (Exception $e) {\n    echo \"<p style='color: red;'>✗ Error loading round info: \" . h($e->getMessage()) . \"</p>\";\n    die();\n}\n\n// Step 6: 결승전 여부 확인\necho \"<h2>Step 6: Checking if final round</h2>\";\ntry {\n    $is_final = isFinalRound($event_no, $round_info, $event_data);\n    echo \"<p style='color: green;'>✓ Is final round: \" . ($is_final ? 'TRUE' : 'FALSE') . \"</p>\";\n} catch (Exception $e) {\n    echo \"<p style='color: red;'>✗ Error checking final round: \" . h($e->getMessage()) . \"</p>\";\n    die();\n}\n\n// Step 7: 언어 텍스트 로드\necho \"<h2>Step 7: Loading language texts</h2>\";\ntry {\n    $t = getLanguageTexts($lang);\n    echo \"<p style='color: green;'>✓ Language texts loaded</p>\";\n} catch (Exception $e) {\n    echo \"<p style='color: red;'>✗ Error loading language texts: \" . h($e->getMessage()) . \"</p>\";\n    die();\n}\n\n// Step 8: 심사 방식 결정\necho \"<h2>Step 8: Determining scoring type</h2>\";\n$scoring_type = 'multievent_final'; // 기본값\n\n$scoring_type_mapping = [\n    '8' => 'multievent_final',\n    '9' => 'multievent_preliminary',\n    '10' => 'freestyle',\n    '11' => 'formation',\n    '12' => 'multievent_final_only'\n];\n\nif (isset($scoring_type_mapping[$event_no])) {\n    $scoring_type = $scoring_type_mapping[$event_no];\n} elseif ($is_final || $event_no === '8') {\n    $scoring_type = 'multievent_final';\n}\n\necho \"<p style='color: green;'>✓ Scoring type determined: \" . h($scoring_type) . \"</p>\";\n\n// Step 9: 심사 파일 존재 확인\necho \"<h2>Step 9: Checking scoring file</h2>\";\n$scoring_file = __DIR__ . \"/scoring/types/{$scoring_type}.php\";\necho \"<p>File path: \" . h($scoring_file) . \"</p>\";\nif (file_exists($scoring_file)) {\n    echo \"<p style='color: green;'>✓ Scoring file exists</p>\";\n} else {\n    echo \"<p style='color: red;'>✗ Scoring file does not exist!</p>\";\n    die();\n}\n\necho \"<h2 style='color: green;'>All steps completed successfully!</h2>\";\necho \"<p>Now you can try the full router: <a href='judge_scoring_router.php?comp_id=\" . h($comp_id) . \"&event_no=\" . h($event_no) . \"&lang=\" . h($lang) . \"'>judge_scoring_router.php</a></p>\";\n?>\n","size_bytes":4395},"comp/debug_router2.php":{"content":"<?php\n/**\n * 디버그용 라우터 - 단계별 테스트 (수정된 버전)\n */\n\necho \"<h1>Debug Router Test</h1>\";\n\n$comp_id = $_GET['comp_id'] ?? '';\n$event_no = $_GET['event_no'] ?? '';\n$lang = $_GET['lang'] ?? 'ko';\n\necho \"<p>Comp ID: \" . htmlspecialchars($comp_id) . \"</p>\";\necho \"<p>Event No: \" . htmlspecialchars($event_no) . \"</p>\";\necho \"<p>Language: \" . htmlspecialchars($lang) . \"</p>\";\n\n// Step 1: functions.php 포함\necho \"<h2>Step 1: Including functions.php</h2>\";\nrequire_once __DIR__ . '/scoring/shared/functions.php';\necho \"<p style='color: green;'>✓ functions.php included successfully!</p>\";\n\n// Step 2: 이벤트 데이터 로드\necho \"<h2>Step 2: Loading event data</h2>\";\n$event_data = loadEventData($comp_id, $event_no);\nif ($event_data) {\n    echo \"<p style='color: green;'>✓ Event Data Loaded: \" . htmlspecialchars($event_data['name']) . \"</p>\";\n} else {\n    echo \"<p style='color: red;'>✗ Failed to load event data.</p>\";\n    die();\n}\n\n// Step 3: 선수 데이터 로드\necho \"<h2>Step 3: Loading players data</h2>\";\n$players = loadPlayersData($comp_id, $event_no);\nif ($players) {\n    echo \"<p style='color: green;'>✓ Players Data Loaded: \" . count($players) . \" players</p>\";\n} else {\n    echo \"<p style='color: red;'>✗ Failed to load players data.</p>\";\n    die();\n}\n\n// Step 4: 댄스 매핑 로드\necho \"<h2>Step 4: Loading dance mapping</h2>\";\n$dance_mapping = loadDanceMapping($comp_id);\necho \"<p style='color: green;'>✓ Dance mapping loaded: \" . count($dance_mapping) . \" dances</p>\";\n\n// Step 5: 라운드 정보 로드\necho \"<h2>Step 5: Loading round info</h2>\";\n$round_info = loadRoundInfo($comp_id);\necho \"<p style='color: green;'>✓ Round info loaded</p>\";\n\n// Step 6: 결승전 여부 확인\necho \"<h2>Step 6: Checking if final round</h2>\";\n$is_final = isFinalRound($event_no, $round_info, $event_data);\necho \"<p style='color: green;'>✓ Is final round: \" . ($is_final ? 'TRUE' : 'FALSE') . \"</p>\";\n\n// Step 7: 언어 텍스트 로드\necho \"<h2>Step 7: Loading language texts</h2>\";\n$t = getLanguageTexts($lang);\necho \"<p style='color: green;'>✓ Language texts loaded</p>\";\n\n// Step 8: 심사 방식 결정\necho \"<h2>Step 8: Determining scoring type</h2>\";\n$scoring_type = 'multievent_final'; // 기본값\n\n$scoring_type_mapping = [\n    '8' => 'multievent_final',\n    '9' => 'multievent_preliminary',\n    '10' => 'freestyle',\n    '11' => 'formation',\n    '12' => 'multievent_final_only'\n];\n\nif (isset($scoring_type_mapping[$event_no])) {\n    $scoring_type = $scoring_type_mapping[$event_no];\n} elseif ($is_final || $event_no === '8') {\n    $scoring_type = 'multievent_final';\n}\n\necho \"<p style='color: green;'>✓ Scoring type determined: \" . htmlspecialchars($scoring_type) . \"</p>\";\n\n// Step 9: 심사 파일 존재 확인\necho \"<h2>Step 9: Checking scoring file</h2>\";\n$scoring_file = __DIR__ . \"/scoring/types/{$scoring_type}.php\";\necho \"<p>File path: \" . htmlspecialchars($scoring_file) . \"</p>\";\nif (file_exists($scoring_file)) {\n    echo \"<p style='color: green;'>✓ Scoring file exists</p>\";\n} else {\n    echo \"<p style='color: red;'>✗ Scoring file does not exist!</p>\";\n    die();\n}\n\necho \"<h2 style='color: green;'>All steps completed successfully!</h2>\";\necho \"<p>Now you can try the full router: <a href='judge_scoring_router.php?comp_id=\" . htmlspecialchars($comp_id) . \"&event_no=\" . htmlspecialchars($event_no) . \"&lang=\" . htmlspecialchars($lang) . \"'>judge_scoring_router.php</a></p>\";\n?>\n\n\n\n\n\n\n","size_bytes":3473},"comp/debug_simple.php":{"content":"<?php\necho \"<h1>Debug Simple Test</h1>\";\n\necho \"<p>Step 1: Starting...</p>\";\n\necho \"<p>Step 2: Including functions.php...</p>\";\nrequire_once __DIR__ . '/scoring/shared/functions.php';\n\necho \"<p>Step 3: functions.php included successfully!</p>\";\n\necho \"<p>Step 4: Testing basic functions...</p>\";\n\n$comp_id = '20250907-001';\n$event_no = '8';\n\necho \"<p>Step 5: Loading event data...</p>\";\n$event_data = loadEventData($comp_id, $event_no);\necho \"<p>Event data loaded: \" . (isset($event_data['name']) ? $event_data['name'] : 'No name') . \"</p>\";\n\necho \"<p>Step 6: Loading players data...</p>\";\n$players = loadPlayersData($comp_id, $event_no);\necho \"<p>Players loaded: \" . count($players) . \" players</p>\";\n\necho \"<p style='color: green; font-weight: bold;'>All tests completed successfully!</p>\";\n?>\n\n\n\n\n\n\n","size_bytes":802},"comp/debug_test.php":{"content":"<?php\necho \"PHP is working!<br>\";\necho \"Current time: \" . date('Y-m-d H:i:s') . \"<br>\";\n\n// 세션 테스트\nsession_start();\necho \"Session started successfully<br>\";\n\n// GET 파라미터 테스트\n$comp_id = $_GET['comp_id'] ?? '';\n$event_no = $_GET['event_no'] ?? '';\necho \"comp_id: \" . htmlspecialchars($comp_id) . \"<br>\";\necho \"event_no: \" . htmlspecialchars($event_no) . \"<br>\";\n\n// 파일 존재 테스트\n$data_dir = __DIR__ . \"/data/$comp_id\";\necho \"Data directory: \" . $data_dir . \"<br>\";\necho \"Directory exists: \" . (is_dir($data_dir) ? 'YES' : 'NO') . \"<br>\";\n\nif (is_dir($data_dir)) {\n    $files = scandir($data_dir);\n    echo \"Files in directory: \" . implode(', ', $files) . \"<br>\";\n}\n\necho \"Test completed successfully!<br>\";\n?>","size_bytes":742},"comp/detail_numbers_manager.php":{"content":"<?php\n// 세부번호 관리 시스템\n\nfunction loadDetailNumbers($comp_id) {\n    $data_dir = __DIR__ . \"/data/$comp_id\";\n    $detail_file = \"$data_dir/detail_numbers.json\";\n    \n    if (file_exists($detail_file)) {\n        $data = json_decode(file_get_contents($detail_file), true);\n        return $data ?: [];\n    }\n    \n    return [];\n}\n\nfunction saveDetailNumbers($comp_id, $detail_numbers) {\n    $data_dir = __DIR__ . \"/data/$comp_id\";\n    if (!is_dir($data_dir)) {\n        mkdir($data_dir, 0777, true);\n    }\n    \n    $detail_file = \"$data_dir/detail_numbers.json\";\n    file_put_contents($detail_file, json_encode($detail_numbers, JSON_UNESCAPED_UNICODE|JSON_PRETTY_PRINT));\n}\n\nfunction generateDetailNumbers($events) {\n    $detail_numbers = [];\n    $group_counters = [];\n    \n    foreach ($events as $idx => $event) {\n        $raw_no = $event['raw_no'];\n        $group_no = preg_replace('/[^0-9]/', '', $raw_no); // 숫자만 추출\n        \n        if (!isset($group_counters[$group_no])) {\n            $group_counters[$group_no] = 0;\n        }\n        $group_counters[$group_no]++;\n        \n        $detail_numbers[] = [\n            'event_idx' => $idx,\n            'raw_no' => $raw_no,\n            'group_no' => $group_no,\n            'detail_no' => $group_no . '-' . $group_counters[$group_no],\n            'name' => $event['name'],\n            'dances' => $event['dances']\n        ];\n    }\n    \n    return $detail_numbers;\n}\n\nfunction getDetailNumber($comp_id, $raw_no, $name = '') {\n    $detail_numbers = loadDetailNumbers($comp_id);\n    \n    foreach ($detail_numbers as $detail) {\n        if ($detail['raw_no'] === $raw_no && ($name === '' || $detail['name'] === $name)) {\n            return $detail['detail_no'];\n        }\n    }\n    \n    return $raw_no; // 세부번호가 없으면 원본 번호 반환\n}\n\nfunction updateDetailNumber($comp_id, $raw_no, $name, $new_detail_no) {\n    $detail_numbers = loadDetailNumbers($comp_id);\n    \n    foreach ($detail_numbers as &$detail) {\n        if ($detail['raw_no'] === $raw_no && $detail['name'] === $name) {\n            $detail['detail_no'] = $new_detail_no;\n            saveDetailNumbers($comp_id, $detail_numbers);\n            return true;\n        }\n    }\n    \n    return false;\n}\n\nfunction getEventByDetailNumber($comp_id, $detail_no) {\n    $detail_numbers = loadDetailNumbers($comp_id);\n    \n    foreach ($detail_numbers as $detail) {\n        if ($detail['detail_no'] === $detail_no) {\n            return $detail;\n        }\n    }\n    \n    return null;\n}\n\nfunction getPlayersByDetailNumber($comp_id, $detail_no) {\n    $players_file = __DIR__ . \"/data/$comp_id/players_{$detail_no}.txt\";\n    if (file_exists($players_file)) {\n        $lines = file($players_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n        return array_filter(array_map('trim', $lines));\n    }\n    \n    return [];\n}\n\nfunction savePlayersByDetailNumber($comp_id, $detail_no, $players) {\n    $data_dir = __DIR__ . \"/data/$comp_id\";\n    if (!is_dir($data_dir)) {\n        mkdir($data_dir, 0777, true);\n    }\n    \n    $players_file = \"$data_dir/players_{$detail_no}.txt\";\n    $content = implode(\"\\n\", $players);\n    \n    return file_put_contents($players_file, $content) !== false;\n}\n?>\n","size_bytes":3224},"comp/event_control.php":{"content":"<?php\n/**\n * 이벤트 제어 화면 (관리자용)\n */\n\nrequire_once 'event_schedule_manager.php';\nrequire_once 'result_monitor.php';\n\n$scheduleManager = new EventScheduleManager();\n$monitor = new ResultMonitor();\n\n$currentEvent = isset($_GET['event']) ? $_GET['event'] : '';\n$action = isset($_GET['action']) ? $_GET['action'] : '';\n\n// 액션 처리\nif ($action === 'update_visibility') {\n    $eventId = $_POST['event_id'] ?? '';\n    $showResult = $_POST['show_result'] === 'true';\n    $scheduleManager->updateEventVisibility($eventId, $showResult);\n    echo json_encode(['success' => true]);\n    exit;\n}\n\n$schedule = $scheduleManager->getSchedule();\n$pairs = $monitor->findResultPairs();\n\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>이벤트 제어</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            margin: 20px;\n            background: #f5f5f5;\n        }\n        \n        .container {\n            max-width: 1400px;\n            margin: 0 auto;\n            background: white;\n            padding: 20px;\n            border-radius: 10px;\n            box-shadow: 0 0 20px rgba(0,0,0,0.1);\n        }\n        \n        .header {\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            color: white;\n            padding: 20px;\n            border-radius: 10px;\n            margin-bottom: 30px;\n            text-align: center;\n        }\n        \n        .header h1 {\n            margin: 0;\n            font-size: 2em;\n        }\n        \n        .controls {\n            display: flex;\n            gap: 15px;\n            margin-bottom: 30px;\n            flex-wrap: wrap;\n        }\n        \n        .btn {\n            background: #007bff;\n            color: white;\n            border: none;\n            padding: 12px 20px;\n            border-radius: 5px;\n            cursor: pointer;\n            font-size: 14px;\n            transition: background 0.3s;\n        }\n        \n        .btn:hover {\n            background: #0056b3;\n        }\n        \n        .btn.success {\n            background: #28a745;\n        }\n        \n        .btn.success:hover {\n            background: #218838;\n        }\n        \n        .btn.danger {\n            background: #dc3545;\n        }\n        \n        .btn.danger:hover {\n            background: #c82333;\n        }\n        \n        .btn.info {\n            background: #17a2b8;\n        }\n        \n        .btn.info:hover {\n            background: #138496;\n        }\n        \n        .schedule-table {\n            width: 100%;\n            border-collapse: collapse;\n            margin-bottom: 30px;\n        }\n        \n        .schedule-table th,\n        .schedule-table td {\n            padding: 12px;\n            text-align: left;\n            border: 1px solid #ddd;\n        }\n        \n        .schedule-table th {\n            background: #f8f9fa;\n            font-weight: bold;\n            color: #333;\n        }\n        \n        .schedule-table tr:nth-child(even) {\n            background: #f8f9fa;\n        }\n        \n        .schedule-table tr:hover {\n            background: #e9ecef;\n        }\n        \n        .status-badge {\n            padding: 4px 8px;\n            border-radius: 4px;\n            font-size: 12px;\n            font-weight: bold;\n        }\n        \n        .status-show {\n            background: #d4edda;\n            color: #155724;\n        }\n        \n        .status-hide {\n            background: #f8d7da;\n            color: #721c24;\n        }\n        \n        .toggle-switch {\n            position: relative;\n            display: inline-block;\n            width: 60px;\n            height: 34px;\n        }\n        \n        .toggle-switch input {\n            opacity: 0;\n            width: 0;\n            height: 0;\n        }\n        \n        .slider {\n            position: absolute;\n            cursor: pointer;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            background-color: #ccc;\n            transition: .4s;\n            border-radius: 34px;\n        }\n        \n        .slider:before {\n            position: absolute;\n            content: \"\";\n            height: 26px;\n            width: 26px;\n            left: 4px;\n            bottom: 4px;\n            background-color: white;\n            transition: .4s;\n            border-radius: 50%;\n        }\n        \n        input:checked + .slider {\n            background-color: #2196F3;\n        }\n        \n        input:checked + .slider:before {\n            transform: translateX(26px);\n        }\n        \n        .current-event {\n            background: #fff3cd !important;\n            border-left: 4px solid #ffc107;\n        }\n        \n        .status-panel {\n            background: #e9ecef;\n            padding: 15px;\n            border-radius: 5px;\n            margin-bottom: 20px;\n        }\n        \n        .status-item {\n            display: inline-block;\n            margin-right: 20px;\n            font-weight: bold;\n        }\n        \n        .status-value {\n            color: #007bff;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"header\">\n            <h1>🎯 이벤트 제어 시스템</h1>\n            <p>대회 순서 관리 및 결과 표시 제어</p>\n        </div>\n        \n        <div class=\"status-panel\">\n            <div class=\"status-item\">\n                총 이벤트: <span class=\"status-value\"><?php echo count($schedule); ?></span>\n            </div>\n            <div class=\"status-item\">\n                결과 파일: <span class=\"status-value\"><?php echo count($pairs); ?></span>\n            </div>\n            <div class=\"status-item\">\n                현재 이벤트: <span class=\"status-value\"><?php echo $currentEvent ?: '선택 안됨'; ?></span>\n            </div>\n        </div>\n        \n        <div class=\"controls\">\n            <button class=\"btn success\" onclick=\"openFullscreen()\">🖥️ 전체화면 열기</button>\n            <button class=\"btn info\" onclick=\"openWaitingScreen()\">⏳ 대기화면 열기</button>\n            <button class=\"btn\" onclick=\"openDashboard()\">📊 대시보드 열기</button>\n            <button class=\"btn\" onclick=\"refreshPage()\">🔄 새로고침</button>\n            <button class=\"btn danger\" onclick=\"resetAllVisibility()\">🔄 모든 표시 초기화</button>\n        </div>\n        \n        <h2>📋 대회 순서 및 표시 설정</h2>\n        <table class=\"schedule-table\">\n            <thead>\n                <tr>\n                    <th>순서</th>\n                    <th>이벤트 ID</th>\n                    <th>이벤트명</th>\n                    <th>결과 표시</th>\n                    <th>상태</th>\n                    <th>액션</th>\n                </tr>\n            </thead>\n            <tbody>\n                <?php foreach ($schedule as $index => $event): ?>\n                <tr class=\"<?php echo $event['event_id'] === $currentEvent ? 'current-event' : ''; ?>\">\n                    <td><?php echo $index + 1; ?></td>\n                    <td><strong><?php echo htmlspecialchars($event['event_id']); ?></strong></td>\n                    <td><?php echo htmlspecialchars($event['event_name']); ?></td>\n                    <td>\n                        <label class=\"toggle-switch\">\n                            <input type=\"checkbox\" \n                                   <?php echo $event['show_result'] ? 'checked' : ''; ?>\n                                   onchange=\"updateVisibility('<?php echo $event['event_id']; ?>', this.checked)\">\n                            <span class=\"slider\"></span>\n                        </label>\n                    </td>\n                    <td>\n                        <span class=\"status-badge <?php echo $event['show_result'] ? 'status-show' : 'status-hide'; ?>\">\n                            <?php echo $event['show_result'] ? '표시' : '숨김'; ?>\n                        </span>\n                    </td>\n                    <td>\n                        <button class=\"btn\" onclick=\"setCurrentEvent('<?php echo $event['event_id']; ?>')\">\n                            선택\n                        </button>\n                        <button class=\"btn info\" onclick=\"openEventResult('<?php echo $event['event_id']; ?>')\">\n                            결과보기\n                        </button>\n                    </td>\n                </tr>\n                <?php endforeach; ?>\n            </tbody>\n        </table>\n    </div>\n\n    <script>\n        function updateVisibility(eventId, showResult) {\n            fetch('event_control.php?action=update_visibility', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                },\n                body: `event_id=${eventId}&show_result=${showResult}`\n            })\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    location.reload();\n                } else {\n                    alert('업데이트 실패');\n                }\n            })\n            .catch(error => {\n                console.error('Error:', error);\n                alert('오류가 발생했습니다.');\n            });\n        }\n        \n        function setCurrentEvent(eventId) {\n            window.location.href = `event_control.php?event=${eventId}`;\n        }\n        \n        function openFullscreen() {\n            const currentEvent = '<?php echo $currentEvent; ?>';\n            if (currentEvent) {\n                window.open(`simple_fullscreen.php?event=${currentEvent}&mode=results`, '_blank');\n            } else {\n                window.open('simple_fullscreen.php', '_blank');\n            }\n        }\n        \n        function openWaitingScreen() {\n            const currentEvent = '<?php echo $currentEvent; ?>';\n            if (currentEvent) {\n                window.open(`simple_fullscreen.php?event=${currentEvent}&mode=waiting`, '_blank');\n            } else {\n                window.open('simple_fullscreen.php?mode=waiting', '_blank');\n            }\n        }\n        \n        function openDashboard() {\n            window.open('result_dashboard.php', '_blank');\n        }\n        \n        function openEventResult(eventId) {\n            window.open(`combined_result_${eventId}.html`, '_blank');\n        }\n        \n        function refreshPage() {\n            location.reload();\n        }\n        \n        function resetAllVisibility() {\n            if (confirm('모든 이벤트의 표시 설정을 초기화하시겠습니까?')) {\n                // 모든 이벤트를 표시로 설정\n                const checkboxes = document.querySelectorAll('input[type=\"checkbox\"]');\n                checkboxes.forEach(checkbox => {\n                    if (!checkbox.checked) {\n                        checkbox.checked = true;\n                        updateVisibility(checkbox.getAttribute('onchange').match(/'([^']+)'/)[1], true);\n                    }\n                });\n            }\n        }\n        \n        // 자동 새로고침 (30초마다)\n        setInterval(refreshPage, 30000);\n    </script>\n</body>\n</html>\n\n\n\n\n","size_bytes":11255},"comp/event_control_panel.php":{"content":"<?php\n/**\n * 이벤트 제어 패널\n * 실시간으로 이벤트 상태를 제어하고 모니터링\n */\n\n$action = isset($_GET['action']) ? $_GET['action'] : '';\n\nif ($action === 'update_status') {\n    $eventId = $_POST['event_id'] ?? '';\n    $showResult = $_POST['show_result'] === 'true';\n    \n    if ($eventId) {\n        $statusFile = __DIR__ . '/uploads/event_status.json';\n        $status = [];\n        \n        if (file_exists($statusFile)) {\n            $status = json_decode(file_get_contents($statusFile), true) ?: [];\n        }\n        \n        $status[$eventId] = $showResult;\n        \n        if (file_put_contents($statusFile, json_encode($status, JSON_PRETTY_PRINT))) {\n            echo json_encode(['success' => true]);\n        } else {\n            echo json_encode(['success' => false, 'message' => '파일 저장 실패']);\n        }\n    } else {\n        echo json_encode(['success' => false, 'message' => '이벤트 ID 필요']);\n    }\n    exit;\n}\n\n// 이벤트 데이터 로드\n$eventFile = __DIR__ . '/uploads/event_schedule.txt';\n$statusFile = __DIR__ . '/uploads/event_status.json';\n\n$events = [];\n$status = [];\n\nif (file_exists($eventFile)) {\n    $lines = file($eventFile, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    foreach ($lines as $line) {\n        $parts = explode(',', $line);\n        if (count($parts) >= 3) {\n            $events[] = [\n                'id' => trim($parts[0]),\n                'name' => trim($parts[1]),\n                'show_result' => trim($parts[2]) === '1'\n            ];\n        }\n    }\n}\n\nif (file_exists($statusFile)) {\n    $status = json_decode(file_get_contents($statusFile), true) ?: [];\n}\n\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>이벤트 제어 패널</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            margin: 20px;\n            background: #f5f5f5;\n        }\n        \n        .container {\n            max-width: 1400px;\n            margin: 0 auto;\n            background: white;\n            padding: 20px;\n            border-radius: 10px;\n            box-shadow: 0 0 20px rgba(0,0,0,0.1);\n        }\n        \n        .header {\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            color: white;\n            padding: 20px;\n            border-radius: 10px;\n            margin-bottom: 30px;\n            text-align: center;\n        }\n        \n        .header h1 {\n            margin: 0;\n            font-size: 2em;\n        }\n        \n        .controls {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n            gap: 15px;\n            margin-bottom: 30px;\n        }\n        \n        .btn {\n            background: #007bff;\n            color: white;\n            border: none;\n            padding: 15px 20px;\n            border-radius: 8px;\n            cursor: pointer;\n            font-size: 14px;\n            font-weight: 500;\n            transition: all 0.3s;\n            text-align: center;\n            min-height: 50px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n        }\n        \n        .btn:hover {\n            background: #0056b3;\n            transform: translateY(-2px);\n            box-shadow: 0 4px 12px rgba(0,123,255,0.3);\n        }\n        \n        .btn.success {\n            background: #28a745;\n        }\n        \n        .btn.success:hover {\n            background: #218838;\n        }\n        \n        .btn.info {\n            background: #17a2b8;\n        }\n        \n        .btn.info:hover {\n            background: #138496;\n        }\n        \n        .btn.danger {\n            background: #dc3545;\n        }\n        \n        .btn.danger:hover {\n            background: #c82333;\n        }\n        \n        .event-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n            gap: 20px;\n            margin-bottom: 30px;\n        }\n        \n        .event-card {\n            border: 1px solid #ddd;\n            border-radius: 10px;\n            padding: 20px;\n            background: white;\n            transition: transform 0.3s, box-shadow 0.3s;\n        }\n        \n        .event-card:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 4px 15px rgba(0,0,0,0.1);\n        }\n        \n        .event-card.current {\n            border-color: #667eea;\n            background: linear-gradient(135deg, #f8f9ff 0%, #e8f0ff 100%);\n        }\n        \n        .event-id {\n            font-size: 1.2em;\n            font-weight: bold;\n            color: #667eea;\n            margin-bottom: 10px;\n        }\n        \n        .event-name {\n            font-size: 1.1em;\n            color: #333;\n            margin-bottom: 15px;\n            line-height: 1.4;\n        }\n        \n        .event-controls {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n        }\n        \n        .toggle-switch {\n            position: relative;\n            display: inline-block;\n            width: 60px;\n            height: 34px;\n        }\n        \n        .toggle-switch input {\n            opacity: 0;\n            width: 0;\n            height: 0;\n        }\n        \n        .slider {\n            position: absolute;\n            cursor: pointer;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            background-color: #ccc;\n            transition: .4s;\n            border-radius: 34px;\n        }\n        \n        .slider:before {\n            position: absolute;\n            content: \"\";\n            height: 26px;\n            width: 26px;\n            left: 4px;\n            bottom: 4px;\n            background-color: white;\n            transition: .4s;\n            border-radius: 50%;\n        }\n        \n        input:checked + .slider {\n            background-color: #2196F3;\n        }\n        \n        input:checked + .slider:before {\n            transform: translateX(26px);\n        }\n        \n        .status-badge {\n            padding: 6px 12px;\n            border-radius: 20px;\n            font-size: 12px;\n            font-weight: bold;\n        }\n        \n        .status-show {\n            background: #d4edda;\n            color: #155724;\n        }\n        \n        .status-hide {\n            background: #f8d7da;\n            color: #721c24;\n        }\n        \n        .status-panel {\n            background: #e9ecef;\n            padding: 15px;\n            border-radius: 5px;\n            margin-bottom: 20px;\n        }\n        \n        .status-item {\n            display: inline-block;\n            margin-right: 20px;\n            font-weight: bold;\n        }\n        \n        .status-value {\n            color: #007bff;\n        }\n        \n        .current-event {\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            color: white;\n            padding: 20px;\n            border-radius: 10px;\n            margin-bottom: 20px;\n            text-align: center;\n        }\n        \n        .current-event h2 {\n            margin: 0 0 10px 0;\n            font-size: 1.5em;\n        }\n        \n        .current-event p {\n            margin: 0;\n            opacity: 0.9;\n        }\n        \n        /* 반응형 디자인 */\n        @media (max-width: 768px) {\n            .controls {\n                grid-template-columns: 1fr;\n                gap: 10px;\n            }\n            \n            .btn {\n                padding: 12px 15px;\n                font-size: 13px;\n                min-height: 45px;\n            }\n            \n            .container {\n                margin: 10px;\n                padding: 15px;\n            }\n            \n            .event-grid {\n                grid-template-columns: 1fr;\n            }\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"header\">\n            <h1>🎯 이벤트 제어 패널</h1>\n            <p>실시간으로 이벤트 상태를 제어하고 모니터링하세요</p>\n        </div>\n        \n        <div class=\"status-panel\">\n            <div class=\"status-item\">\n                총 이벤트: <span class=\"status-value\"><?php echo count($events); ?></span>\n            </div>\n            <div class=\"status-item\">\n                결과 발표 예정: <span class=\"status-value\" id=\"showCount\">-</span>\n            </div>\n            <div class=\"status-item\">\n                결과 발표 안함: <span class=\"status-value\" id=\"hideCount\">-</span>\n            </div>\n        </div>\n        \n        <div class=\"controls\">\n            <button class=\"btn success\" onclick=\"openFullscreenMonitor()\">🖥️ 전체화면 모니터링</button>\n            <button class=\"btn info\" onclick=\"openEventUpload()\">📁 이벤트 업로드</button>\n            <button class=\"btn\" onclick=\"openResultMonitoring()\">🔍 결과 모니터링</button>\n            <button class=\"btn\" onclick=\"openResultDashboard()\">📊 결과 대시보드</button>\n            <button class=\"btn\" onclick=\"openResultGenerator()\">⚙️ 결과 생성기</button>\n            <button class=\"btn\" onclick=\"refreshPage()\">🔄 새로고침</button>\n            <button class=\"btn danger\" onclick=\"resetAllStatus()\">🔄 모든 상태 초기화</button>\n        </div>\n        \n        <div class=\"current-event\" id=\"currentEventInfo\">\n            <h2>현재 이벤트</h2>\n            <p id=\"currentEventText\">이벤트를 선택하세요</p>\n        </div>\n        \n        <h3>📋 이벤트 목록</h3>\n        <div class=\"event-grid\" id=\"eventGrid\">\n            <?php foreach ($events as $index => $event): ?>\n            <div class=\"event-card\" data-event-id=\"<?php echo htmlspecialchars($event['id']); ?>\" data-event-index=\"<?php echo $index; ?>\">\n                <div class=\"event-id\"><?php echo htmlspecialchars($event['id']); ?></div>\n                <div class=\"event-name\"><?php echo htmlspecialchars($event['name']); ?></div>\n                <div class=\"event-controls\">\n                    <label class=\"toggle-switch\">\n                        <input type=\"checkbox\" \n                               <?php echo (isset($status[$event['id']]) && $status[$event['id']]) ? 'checked' : ''; ?>\n                               onchange=\"updateEventStatus('<?php echo $event['id']; ?>', this.checked)\">\n                        <span class=\"slider\"></span>\n                    </label>\n                    <span class=\"status-badge <?php echo (isset($status[$event['id']]) && $status[$event['id']]) ? 'status-show' : 'status-hide'; ?>\">\n                        <?php echo (isset($status[$event['id']]) && $status[$event['id']]) ? '발표' : '대기' ?>\n                    </span>\n                </div>\n            </div>\n            <?php endforeach; ?>\n        </div>\n    </div>\n\n    <script>\n        let currentEventIndex = 0;\n        let events = <?php echo json_encode($events); ?>;\n        \n        function updateEventStatus(eventId, showResult) {\n            fetch('event_control_panel.php?action=update_status', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                },\n                body: `event_id=${eventId}&show_result=${showResult}`\n            })\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    // 상태 배지 업데이트\n                    const eventCard = document.querySelector(`[data-event-id=\"${eventId}\"]`);\n                    const statusBadge = eventCard.querySelector('.status-badge');\n                    \n                    if (showResult) {\n                        statusBadge.textContent = '발표';\n                        statusBadge.className = 'status-badge status-show';\n                    } else {\n                        statusBadge.textContent = '대기';\n                        statusBadge.className = 'status-badge status-hide';\n                    }\n                    \n                    updateStatusCounts();\n                } else {\n                    alert('상태 업데이트에 실패했습니다: ' + (data.message || '알 수 없는 오류'));\n                }\n            })\n            .catch(error => {\n                console.error('Error:', error);\n                alert('오류가 발생했습니다.');\n            });\n        }\n        \n        function updateStatusCounts() {\n            const showCount = document.querySelectorAll('.status-badge.status-show').length;\n            const hideCount = document.querySelectorAll('.status-badge.status-hide').length;\n            \n            document.getElementById('showCount').textContent = showCount;\n            document.getElementById('hideCount').textContent = hideCount;\n        }\n        \n        function setCurrentEvent(eventIndex) {\n            currentEventIndex = eventIndex;\n            \n            // 모든 카드에서 current 클래스 제거\n            document.querySelectorAll('.event-card').forEach(card => {\n                card.classList.remove('current');\n            });\n            \n            // 현재 이벤트 카드에 current 클래스 추가\n            const currentCard = document.querySelector(`[data-event-index=\"${eventIndex}\"]`);\n            if (currentCard) {\n                currentCard.classList.add('current');\n            }\n            \n            // 현재 이벤트 정보 업데이트\n            if (events[eventIndex]) {\n                const event = events[eventIndex];\n                document.getElementById('currentEventText').textContent = \n                    `${event.id}: ${event.name}`;\n            }\n        }\n        \n        function openFullscreenMonitor() {\n            window.open('event_monitor_v2.php', '_blank');\n        }\n        \n        function openEventUpload() {\n            window.open('event_upload.php', '_blank');\n        }\n        \n        function openResultMonitoring() {\n            window.open('monitor_control.php', '_blank');\n        }\n        \n        function openResultDashboard() {\n            window.open('result_dashboard.php', '_blank');\n        }\n        \n        function openResultGenerator() {\n            window.open('test_results.php', '_blank');\n        }\n        \n        function refreshPage() {\n            location.reload();\n        }\n        \n        function resetAllStatus() {\n            if (confirm('모든 이벤트의 상태를 초기화하시겠습니까?')) {\n                const checkboxes = document.querySelectorAll('input[type=\"checkbox\"]');\n                checkboxes.forEach(checkbox => {\n                    checkbox.checked = false;\n                    updateEventStatus(checkbox.getAttribute('onchange').match(/'([^']+)'/)[1], false);\n                });\n            }\n        }\n        \n        // 이벤트 카드 클릭으로 현재 이벤트 설정\n        document.querySelectorAll('.event-card').forEach(card => {\n            card.addEventListener('click', function() {\n                const eventIndex = parseInt(this.getAttribute('data-event-index'));\n                setCurrentEvent(eventIndex);\n            });\n        });\n        \n        // 초기화\n        document.addEventListener('DOMContentLoaded', function() {\n            updateStatusCounts();\n            setCurrentEvent(0);\n            \n            // 30초마다 자동 새로고침\n            setInterval(refreshPage, 30000);\n        });\n    </script>\n</body>\n</html>\n","size_bytes":15590},"comp/event_group_manager.php":{"content":"<?php\n/**\n * 이벤트 그룹 관리 클래스\n */\n\nclass EventGroupManager {\n    \n    /**\n     * 이벤트를 그룹별로 분류\n     */\n    public static function groupEvents($events) {\n        $groups = [];\n        \n        foreach ($events as $event) {\n            // 이벤트 ID에서 숫자 부분 추출 (예: 1A -> 1, 2B -> 2)\n            $eventNumber = preg_replace('/[^0-9]/', '', $event['id']);\n            \n            if (!isset($groups[$eventNumber])) {\n                $groups[$eventNumber] = [];\n            }\n            \n            $groups[$eventNumber][] = $event;\n        }\n        \n        // 숫자 순으로 정렬\n        ksort($groups);\n        \n        return $groups;\n    }\n    \n    /**\n     * 특정 그룹의 이벤트들 반환\n     */\n    public static function getGroupEvents($events, $groupNumber) {\n        $groupEvents = [];\n        \n        foreach ($events as $event) {\n            $eventNumber = preg_replace('/[^0-9]/', '', $event['id']);\n            if ($eventNumber == $groupNumber) {\n                $groupEvents[] = $event;\n            }\n        }\n        \n        return $groupEvents;\n    }\n    \n    /**\n     * 그룹별 이벤트 수 반환\n     */\n    public static function getGroupCount($events) {\n        $groups = self::groupEvents($events);\n        return count($groups);\n    }\n    \n    /**\n     * 현재 그룹 인덱스 계산\n     */\n    public static function getCurrentGroupIndex($events, $currentEventId) {\n        $currentEventNumber = preg_replace('/[^0-9]/', '', $currentEventId);\n        $groups = self::groupEvents($events);\n        $groupNumbers = array_keys($groups);\n        \n        return array_search($currentEventNumber, $groupNumbers);\n    }\n}\n?>\n\n\n\n\n","size_bytes":1724},"comp/event_monitor.php":{"content":"<?php\n/**\n * 이벤트 모니터링 시스템\n * 업로드된 이벤트 순서에 따른 대기화면 및 결과 표시\n */\n\n$currentEventIndex = isset($_GET['event']) ? (int)$_GET['event'] : 0;\n$mode = isset($_GET['mode']) ? $_GET['mode'] : 'waiting';\n\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>이벤트 모니터링</title>\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n        \n        html, body {\n            width: 100%;\n            height: 100%;\n            overflow: hidden;\n        }\n        \n        body {\n            font-family: 'Arial', sans-serif;\n            background: #000;\n            color: #fff;\n        }\n        \n        .screen {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100vw;\n            height: 100vh;\n            display: none;\n        }\n        \n        .screen.active {\n            display: block;\n        }\n        \n        /* 대기화면 */\n        .waiting-screen {\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            text-align: center;\n            animation: pulse 2s infinite;\n        }\n        \n        .waiting-screen h1 {\n            font-size: 4em;\n            margin-bottom: 30px;\n            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);\n        }\n        \n        .event-info {\n            background: rgba(255,255,255,0.1);\n            padding: 30px;\n            border-radius: 15px;\n            margin: 20px 0;\n            backdrop-filter: blur(10px);\n            min-width: 600px;\n        }\n        \n        .event-name {\n            font-size: 2.5em;\n            margin-bottom: 15px;\n            font-weight: bold;\n        }\n        \n        .event-id {\n            font-size: 1.5em;\n            opacity: 0.8;\n        }\n        \n        .event-status {\n            margin-top: 20px;\n            font-size: 1.2em;\n        }\n        \n        .status-waiting {\n            color: #ffeb3b;\n        }\n        \n        .status-ready {\n            color: #4caf50;\n        }\n        \n        .next-events {\n            margin-top: 30px;\n            font-size: 1.2em;\n            opacity: 0.7;\n        }\n        \n        .next-events h3 {\n            margin-bottom: 15px;\n            font-size: 1.5em;\n        }\n        \n        .next-event-list {\n            display: flex;\n            flex-wrap: wrap;\n            gap: 15px;\n            justify-content: center;\n        }\n        \n        .next-event-item {\n            background: rgba(255,255,255,0.1);\n            padding: 10px 15px;\n            border-radius: 8px;\n            font-size: 0.9em;\n        }\n        \n        /* 결과 화면 */\n        .results-screen {\n            background: #f5f5f5;\n            color: #333;\n        }\n        \n        .results-content {\n            width: 100%;\n            height: 100%;\n            border: none;\n            display: block;\n        }\n        \n        /* 제어 패널 */\n        .control-panel {\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            z-index: 1000;\n            background: rgba(0,0,0,0.8);\n            padding: 15px;\n            border-radius: 10px;\n            display: flex;\n            gap: 10px;\n            opacity: 0;\n            transition: opacity 0.3s;\n        }\n        \n        .control-panel:hover {\n            opacity: 1;\n        }\n        \n        .control-btn {\n            background: #667eea;\n            color: white;\n            border: none;\n            padding: 10px 15px;\n            border-radius: 5px;\n            cursor: pointer;\n            font-size: 14px;\n            transition: background 0.3s;\n        }\n        \n        .control-btn:hover {\n            background: #5a6fd8;\n        }\n        \n        .control-btn.active {\n            background: #28a745;\n        }\n        \n        .control-btn.danger {\n            background: #dc3545;\n        }\n        \n        /* 상태 표시 */\n        .status-bar {\n            position: fixed;\n            bottom: 20px;\n            left: 20px;\n            background: rgba(0,0,0,0.8);\n            color: white;\n            padding: 10px 15px;\n            border-radius: 5px;\n            font-size: 14px;\n        }\n        \n        /* 진행률 표시 */\n        .progress-bar {\n            position: fixed;\n            bottom: 0;\n            left: 0;\n            width: 100%;\n            height: 4px;\n            background: rgba(255,255,255,0.2);\n        }\n        \n        .progress-fill {\n            height: 100%;\n            background: linear-gradient(90deg, #667eea, #764ba2);\n            transition: width 0.3s ease;\n        }\n        \n        /* 애니메이션 */\n        @keyframes pulse {\n            0% { transform: scale(1); }\n            50% { transform: scale(1.05); }\n            100% { transform: scale(1); }\n        }\n        \n        @keyframes fadeIn {\n            from { opacity: 0; transform: translateY(20px); }\n            to { opacity: 1; transform: translateY(0); }\n        }\n        \n        .fade-in {\n            animation: fadeIn 0.5s ease-in-out;\n        }\n        \n        /* 반응형 */\n        @media (max-width: 768px) {\n            .waiting-screen h1 { font-size: 2.5em; }\n            .event-name { font-size: 1.8em; }\n            .event-id { font-size: 1.2em; }\n            .event-info { min-width: 90%; }\n        }\n    </style>\n</head>\n<body>\n    <!-- 대기화면 -->\n    <div id=\"waitingScreen\" class=\"screen waiting-screen\">\n        <h1>🏆 댄스스포츠 대회</h1>\n        \n        <div class=\"event-info\" id=\"eventInfo\">\n            <div class=\"event-name\" id=\"currentEventName\">이벤트를 불러오는 중...</div>\n            <div class=\"event-id\" id=\"currentEventId\">이벤트 ID: -</div>\n            <div class=\"event-status\" id=\"eventStatus\">\n                <span class=\"status-waiting\">결과 대기 중...</span>\n            </div>\n        </div>\n        \n        <div class=\"next-events\" id=\"nextEvents\">\n            <h3>다음 이벤트</h3>\n            <div class=\"next-event-list\" id=\"nextEventList\">\n                <!-- 동적으로 생성 -->\n            </div>\n        </div>\n    </div>\n    \n    <!-- 결과 화면 -->\n    <div id=\"resultsScreen\" class=\"screen results-screen\">\n        <iframe src=\"\" class=\"results-content\" id=\"resultFrame\"></iframe>\n    </div>\n    \n    <!-- 제어 패널 -->\n    <div class=\"control-panel\" id=\"controlPanel\">\n        <button class=\"control-btn\" onclick=\"showMode('waiting')\">⏳ 대기화면</button>\n        <button class=\"control-btn\" onclick=\"showMode('results')\">📊 결과</button>\n        <button class=\"control-btn\" onclick=\"previousEvent()\">⬅️ 이전</button>\n        <button class=\"control-btn\" onclick=\"nextEvent()\">다음 ➡️</button>\n        <button class=\"control-btn\" onclick=\"checkResult()\">🔍 결과확인</button>\n        <button class=\"control-btn danger\" onclick=\"exitFullscreen()\">❌ 종료</button>\n    </div>\n    \n    <!-- 상태 표시 -->\n    <div class=\"status-bar\" id=\"statusBar\">\n        현재 이벤트: <span id=\"currentEventIndex\"><?php echo $currentEventIndex; ?></span> | \n        모드: <span id=\"currentMode\"><?php echo $mode; ?></span> | \n        총 이벤트: <span id=\"totalEvents\">-</span>\n    </div>\n    \n    <!-- 진행률 표시 -->\n    <div class=\"progress-bar\">\n        <div class=\"progress-fill\" id=\"progressFill\" style=\"width: 0%\"></div>\n    </div>\n\n    <script>\n        let currentEventIndex = <?php echo $currentEventIndex; ?>;\n        let currentMode = '<?php echo $mode; ?>';\n        let events = [];\n        let resultCheckInterval;\n        \n        // 이벤트 데이터 로드\n        async function loadEvents() {\n            try {\n                const response = await fetch('get_event_schedule.php');\n                const data = await response.json();\n                \n                if (data.success) {\n                    events = data.events;\n                    document.getElementById('totalEvents').textContent = events.length;\n                    updateCurrentEvent();\n                    updateNextEvents();\n                } else {\n                    console.error('이벤트 로드 실패:', data.message);\n                }\n            } catch (error) {\n                console.error('이벤트 로드 오류:', error);\n            }\n        }\n        \n        // 현재 이벤트 업데이트\n        function updateCurrentEvent() {\n            if (events.length > 0 && currentEventIndex < events.length) {\n                const event = events[currentEventIndex];\n                document.getElementById('currentEventName').textContent = event.name;\n                document.getElementById('currentEventId').textContent = `이벤트 ID: ${event.id}`;\n                document.getElementById('currentEventIndex').textContent = currentEventIndex + 1;\n                \n                // 상태 업데이트\n                const statusElement = document.getElementById('eventStatus');\n                if (event.show_result) {\n                    statusElement.innerHTML = '<span class=\"status-ready\">결과 발표 예정</span>';\n                } else {\n                    statusElement.innerHTML = '<span class=\"status-waiting\">결과 발표 안함</span>';\n                }\n            }\n        }\n        \n        // 다음 이벤트들 업데이트\n        function updateNextEvents() {\n            const nextEventList = document.getElementById('nextEventList');\n            nextEventList.innerHTML = '';\n            \n            // 다음 3개 이벤트 표시\n            for (let i = 1; i <= 3; i++) {\n                const nextIndex = currentEventIndex + i;\n                if (nextIndex < events.length) {\n                    const event = events[nextIndex];\n                    const eventItem = document.createElement('div');\n                    eventItem.className = 'next-event-item';\n                    eventItem.textContent = `${event.id}: ${event.name}`;\n                    nextEventList.appendChild(eventItem);\n                }\n            }\n        }\n        \n        // 모드 전환\n        function showMode(mode) {\n            document.querySelectorAll('.screen').forEach(screen => {\n                screen.classList.remove('active');\n            });\n            \n            currentMode = mode;\n            document.getElementById('currentMode').textContent = mode;\n            \n            switch(mode) {\n                case 'waiting':\n                    document.getElementById('waitingScreen').classList.add('active');\n                    break;\n                case 'results':\n                    document.getElementById('resultsScreen').classList.add('active');\n                    loadCurrentResult();\n                    break;\n            }\n        }\n        \n        // 현재 결과 로드\n        function loadCurrentResult() {\n            if (events.length > 0 && currentEventIndex < events.length) {\n                const event = events[currentEventIndex];\n                const iframe = document.getElementById('resultFrame');\n                iframe.src = `combined_result_${event.id}.html`;\n            }\n        }\n        \n        // 이전 이벤트\n        function previousEvent() {\n            if (currentEventIndex > 0) {\n                currentEventIndex--;\n                updateCurrentEvent();\n                updateNextEvents();\n                showMode('waiting');\n            }\n        }\n        \n        // 다음 이벤트\n        function nextEvent() {\n            if (currentEventIndex < events.length - 1) {\n                currentEventIndex++;\n                updateCurrentEvent();\n                updateNextEvents();\n                showMode('waiting');\n            }\n        }\n        \n        // 결과 확인\n        function checkResult() {\n            if (events.length > 0 && currentEventIndex < events.length) {\n                const event = events[currentEventIndex];\n                if (event.show_result) {\n                    showMode('results');\n                } else {\n                    alert('이 이벤트는 결과 발표가 설정되지 않았습니다.');\n                }\n            }\n        }\n        \n        // 결과 파일 존재 여부 확인\n        async function checkResultFile() {\n            if (events.length > 0 && currentEventIndex < events.length) {\n                const event = events[currentEventIndex];\n                \n                try {\n                    const response = await fetch(`check_result_file.php?event=${event.id}`);\n                    const data = await response.json();\n                    \n                    if (data.exists && event.show_result) {\n                        showMode('results');\n                        startProgress();\n                    }\n                } catch (error) {\n                    console.error('결과 파일 확인 오류:', error);\n                }\n            }\n        }\n        \n        // 진행률 시작\n        function startProgress() {\n            let progress = 0;\n            const duration = 10000; // 10초\n            const increment = 100 / (duration / 100);\n            \n            const progressInterval = setInterval(() => {\n                progress += increment;\n                document.getElementById('progressFill').style.width = progress + '%';\n                \n                if (progress >= 100) {\n                    clearInterval(progressInterval);\n                    nextEvent();\n                }\n            }, 100);\n        }\n        \n        // 전체화면 종료\n        function exitFullscreen() {\n            if (document.exitFullscreen) {\n                document.exitFullscreen();\n            } else if (document.webkitExitFullscreen) {\n                document.webkitExitFullscreen();\n            } else if (document.mozCancelFullScreen) {\n                document.mozCancelFullScreen();\n            } else if (document.msExitFullscreen) {\n                document.msExitFullscreen();\n            }\n        }\n        \n        // 키보드 단축키\n        document.addEventListener('keydown', function(e) {\n            switch(e.key) {\n                case 'F11':\n                    e.preventDefault();\n                    if (!document.fullscreenElement) {\n                        document.documentElement.requestFullscreen();\n                    } else {\n                        exitFullscreen();\n                    }\n                    break;\n                case 'ArrowLeft':\n                    previousEvent();\n                    break;\n                case 'ArrowRight':\n                    nextEvent();\n                    break;\n                case ' ':\n                    e.preventDefault();\n                    checkResult();\n                    break;\n                case '1':\n                    showMode('waiting');\n                    break;\n                case '2':\n                    showMode('results');\n                    break;\n                case 'Escape':\n                    exitFullscreen();\n                    break;\n            }\n        });\n        \n        // 초기화\n        document.addEventListener('DOMContentLoaded', function() {\n            loadEvents();\n            showMode(currentMode);\n            \n            // 3초 후 제어 패널 숨기기\n            setTimeout(() => {\n                document.getElementById('controlPanel').style.opacity = '0';\n            }, 3000);\n            \n            // 5초마다 결과 파일 확인\n            resultCheckInterval = setInterval(checkResultFile, 5000);\n        });\n        \n        // 마우스 움직임 감지로 제어 패널 표시\n        let mouseTimer;\n        document.addEventListener('mousemove', function() {\n            document.getElementById('controlPanel').style.opacity = '1';\n            clearTimeout(mouseTimer);\n            mouseTimer = setTimeout(() => {\n                document.getElementById('controlPanel').style.opacity = '0';\n            }, 3000);\n        });\n    </script>\n</body>\n</html>\n\n\n\n\n","size_bytes":16295},"comp/event_monitor_v2.php":{"content":"<?php\n/**\n * 이벤트 모니터링 시스템 v2\n * 그룹별 이벤트 표시 및 대회 제목 설정\n */\n\nrequire_once 'event_group_manager.php';\n\n$currentGroupIndex = isset($_GET['group']) ? (int)$_GET['group'] : 0;\n$mode = isset($_GET['mode']) ? $_GET['mode'] : 'waiting';\n\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>이벤트 모니터링 v2</title>\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n        \n        html, body {\n            width: 100%;\n            height: 100%;\n            overflow: hidden;\n        }\n        \n        body {\n            font-family: 'Arial', sans-serif;\n            background: #000;\n            color: #fff;\n        }\n        \n        .screen {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100vw;\n            height: 100vh;\n            display: none;\n        }\n        \n        .screen.active {\n            display: block;\n        }\n        \n        /* 대기화면 */\n        .waiting-screen {\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            text-align: center;\n            padding: 20px;\n        }\n        \n        .competition-title {\n            font-size: 4em;\n            margin-bottom: 20px;\n            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);\n            font-weight: bold;\n        }\n        \n        .competition-subtitle {\n            font-size: 2em;\n            margin-bottom: 50px;\n            opacity: 0.9;\n        }\n        \n        .event-group {\n            background: rgba(255,255,255,0.1);\n            padding: 40px;\n            border-radius: 20px;\n            backdrop-filter: blur(10px);\n            min-width: 600px;\n            max-width: 800px;\n            text-align: center;\n            margin: 0 auto;\n            box-shadow: 0 8px 32px rgba(0,0,0,0.3);\n        }\n        \n        .group-title {\n            font-size: 3.5em;\n            margin-bottom: 30px;\n            font-weight: bold;\n            color: #ffeb3b;\n            text-align: center;\n        }\n        \n        .event-list {\n            list-style: none;\n            padding: 0;\n            text-align: center;\n        }\n        \n        .event-item {\n            font-size: 2.5em;\n            margin-bottom: 25px;\n            padding: 20px 0;\n            border-bottom: 1px solid rgba(255,255,255,0.2);\n            text-align: center;\n        }\n        \n        .event-item:last-child {\n            border-bottom: none;\n        }\n        \n        .event-name {\n            color: #fff;\n            font-weight: 500;\n            display: block;\n            text-align: center;\n        }\n        \n        .next-groups {\n            margin-top: 40px;\n            font-size: 1.8em;\n            opacity: 0.7;\n            text-align: center;\n            width: 100%;\n        }\n        \n        .next-groups h3 {\n            margin-bottom: 20px;\n            font-size: 2.2em;\n        }\n        \n        .next-group-list {\n            display: flex;\n            flex-wrap: wrap;\n            gap: 15px;\n            justify-content: center;\n            align-items: center;\n        }\n        \n        .next-group-item {\n            background: rgba(255,255,255,0.1);\n            padding: 15px 25px;\n            border-radius: 10px;\n            font-size: 1.4em;\n            text-align: center;\n        }\n        \n        /* 결과 화면 */\n        .results-screen {\n            background: #f5f5f5;\n            color: #333;\n            overflow: hidden;\n        }\n        \n        .results-content {\n            width: 100%;\n            height: 100%;\n            border: none;\n            display: block;\n            transform: scale(0.8);\n            transform-origin: top left;\n            overflow: hidden;\n        }\n        \n        /* 결과 화면 전체화면 최적화 */\n        .results-screen.fullscreen-optimized .results-content {\n            transform: scale(0.7);\n            width: 142.86%; /* 100 / 0.7 */\n            height: 142.86%; /* 100 / 0.7 */\n        }\n        \n        /* 제어 패널 */\n        .control-panel {\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            z-index: 1000;\n            background: rgba(0,0,0,0.8);\n            padding: 15px;\n            border-radius: 10px;\n            display: flex;\n            gap: 10px;\n            opacity: 0;\n            transition: opacity 0.3s;\n        }\n        \n        .control-panel:hover {\n            opacity: 1;\n        }\n        \n        .control-btn {\n            background: #667eea;\n            color: white;\n            border: none;\n            padding: 10px 15px;\n            border-radius: 5px;\n            cursor: pointer;\n            font-size: 14px;\n            transition: background 0.3s;\n        }\n        \n        .control-btn:hover {\n            background: #5a6fd8;\n        }\n        \n        .control-btn.active {\n            background: #28a745;\n        }\n        \n        .control-btn.danger {\n            background: #dc3545;\n        }\n        \n        /* 상태 표시 */\n        .status-bar {\n            position: fixed;\n            bottom: 20px;\n            left: 20px;\n            background: rgba(0,0,0,0.8);\n            color: white;\n            padding: 10px 15px;\n            border-radius: 5px;\n            font-size: 14px;\n            transition: opacity 0.3s;\n        }\n        \n        .status-bar.hidden {\n            opacity: 0;\n            pointer-events: none;\n        }\n        \n        /* 반응형 */\n        @media (max-width: 768px) {\n            .competition-title { font-size: 2.5em; }\n            .competition-subtitle { font-size: 1.5em; }\n            .group-title { font-size: 2.5em; }\n            .event-item { font-size: 1.8em; }\n            .next-groups { font-size: 1.4em; }\n            .next-groups h3 { font-size: 1.8em; }\n            .next-group-item { font-size: 1.2em; }\n            .event-group { \n                min-width: 90%; \n                max-width: 95%;\n                padding: 20px; \n                text-align: center;\n                margin: 0 auto;\n            }\n            .event-list {\n                text-align: center;\n            }\n            .event-name {\n                text-align: center;\n            }\n            .next-groups {\n                text-align: center;\n            }\n            .next-group-list {\n                justify-content: center;\n            }\n        }\n    </style>\n</head>\n<body>\n    <!-- 대기화면 -->\n    <div id=\"waitingScreen\" class=\"screen waiting-screen\">\n        <div class=\"competition-title\" id=\"competitionTitle\">대회 제목을 불러오는 중...</div>\n        <div class=\"competition-subtitle\" id=\"competitionSubtitle\">부제목을 불러오는 중...</div>\n        \n        <div class=\"event-group\" id=\"eventGroup\">\n            <div class=\"group-title\" id=\"groupTitle\">이벤트 그룹을 불러오는 중...</div>\n            <ul class=\"event-list\" id=\"eventList\">\n                <!-- 동적으로 생성 -->\n            </ul>\n        </div>\n        \n        <div class=\"next-groups\" id=\"nextGroups\">\n            <h3>다음 이벤트 그룹</h3>\n            <div class=\"next-group-list\" id=\"nextGroupList\">\n                <!-- 동적으로 생성 -->\n            </div>\n        </div>\n    </div>\n    \n    <!-- 결과 화면 -->\n    <div id=\"resultsScreen\" class=\"screen results-screen\">\n        <iframe src=\"\" class=\"results-content\" id=\"resultFrame\"></iframe>\n    </div>\n    \n    <!-- 제어 패널 -->\n    <div class=\"control-panel\" id=\"controlPanel\">\n        <button class=\"control-btn\" onclick=\"showMode('waiting')\">⏳ 대기화면</button>\n        <button class=\"control-btn\" onclick=\"showMode('results')\">📊 결과</button>\n        <button class=\"control-btn\" onclick=\"previousGroup()\">⬅️ 이전 그룹</button>\n        <button class=\"control-btn\" onclick=\"nextGroup()\">다음 그룹 ➡️</button>\n        <button class=\"control-btn\" onclick=\"checkResult()\">🔍 결과확인</button>\n        <button class=\"control-btn\" onclick=\"toggleResultScale()\">🔍 크기조절</button>\n        <button class=\"control-btn\" onclick=\"toggleAutoAdvance()\">⚡ 자동전환</button>\n        <button class=\"control-btn\" onclick=\"toggleStatusBar()\">📊 상태바</button>\n        <button class=\"control-btn\" onclick=\"hideControlPanel()\">👁️ 숨기기</button>\n        <button class=\"control-btn danger\" onclick=\"exitFullscreen()\">❌ 종료</button>\n    </div>\n    \n    <!-- 상태 표시 -->\n    <div class=\"status-bar\" id=\"statusBar\">\n        현재 그룹: <span id=\"currentGroupIndex\"><?php echo $currentGroupIndex; ?></span> | \n        모드: <span id=\"currentMode\"><?php echo $mode; ?></span> | \n        총 그룹: <span id=\"totalGroups\">-</span> | \n        자동전환: <span id=\"autoAdvanceStatus\">ON</span> | \n        단축키: S(크기조절) F11(전체화면) A(자동전환) B(상태바) H(숨기기)\n    </div>\n\n    <script>\n        let currentGroupIndex = <?php echo $currentGroupIndex; ?>;\n        let currentMode = '<?php echo $mode; ?>';\n        let events = [];\n        let eventGroups = [];\n        let competitionSettings = {};\n        let autoAdvanceTime = 5000; // 자동 전환 시간 (밀리초)\n        let autoAdvanceEnabled = true; // 자동 전환 활성화 상태\n        let isAdvancing = false; // 자동 전환 중인지 확인\n        let isFullscreen = false; // 전체화면 상태\n        let statusBarHidden = false; // 상태 표시바 숨김 상태\n        let advanceTimer = null; // 자동 전환 타이머\n        let monitoringInterval = null; // 모니터링 인터벌\n        \n        // 대회 설정 로드\n        async function loadCompetitionSettings() {\n            try {\n                const response = await fetch('get_competition_settings.php');\n                const data = await response.json();\n                \n                if (data.success) {\n                    competitionSettings = data.settings;\n                    document.getElementById('competitionTitle').textContent = competitionSettings.competition_title;\n                    document.getElementById('competitionSubtitle').textContent = competitionSettings.competition_subtitle;\n                }\n            } catch (error) {\n                console.error('대회 설정 로드 오류:', error);\n            }\n        }\n        \n        // 이벤트 데이터 로드\n        async function loadEvents() {\n            try {\n                const response = await fetch('get_event_schedule.php');\n                const data = await response.json();\n                \n                if (data.success) {\n                    events = data.events;\n                    console.log('로드된 이벤트:', events);\n                    eventGroups = groupEvents(events);\n                    console.log('그룹화된 이벤트:', eventGroups);\n                    document.getElementById('totalGroups').textContent = Object.keys(eventGroups).length;\n                    updateCurrentGroup();\n                    updateNextGroups();\n                } else {\n                    console.error('이벤트 로드 실패:', data.message);\n                }\n            } catch (error) {\n                console.error('이벤트 로드 오류:', error);\n            }\n        }\n        \n        // 이벤트를 그룹별로 분류\n        function groupEvents(events) {\n            const groups = {};\n            \n            events.forEach(event => {\n                // 이벤트 ID에서 숫자 부분 추출 (예: 1A -> 1, 2B -> 2)\n                const eventNumber = event.id.replace(/[^0-9]/g, '');\n                \n                if (eventNumber && eventNumber !== '') {\n                    if (!groups[eventNumber]) {\n                        groups[eventNumber] = [];\n                    }\n                    groups[eventNumber].push(event);\n                }\n            });\n            \n            // 숫자 순으로 정렬\n            const sortedGroups = {};\n            Object.keys(groups).sort((a, b) => parseInt(a) - parseInt(b)).forEach(key => {\n                sortedGroups[key] = groups[key];\n            });\n            \n            return sortedGroups;\n        }\n        \n        // 현재 그룹 업데이트\n        function updateCurrentGroup() {\n            const groupNumbers = Object.keys(eventGroups).sort((a, b) => parseInt(a) - parseInt(b));\n            \n            if (groupNumbers.length > 0 && currentGroupIndex < groupNumbers.length) {\n                const currentGroupNumber = groupNumbers[currentGroupIndex];\n                const currentGroupEvents = eventGroups[currentGroupNumber];\n                \n                document.getElementById('groupTitle').textContent = `이벤트 ${currentGroupNumber}`;\n                document.getElementById('currentGroupIndex').textContent = currentGroupIndex + 1;\n                \n                // 이벤트 목록 업데이트\n                const eventList = document.getElementById('eventList');\n                eventList.innerHTML = '';\n                \n                currentGroupEvents.forEach(event => {\n                    const eventItem = document.createElement('li');\n                    eventItem.className = 'event-item';\n                    eventItem.innerHTML = `\n                        <span class=\"event-name\">${event.name}</span>\n                    `;\n                    eventList.appendChild(eventItem);\n                });\n            }\n        }\n        \n        // 다음 그룹들 업데이트\n        function updateNextGroups() {\n            const nextGroupList = document.getElementById('nextGroupList');\n            nextGroupList.innerHTML = '';\n            \n            const groupNumbers = Object.keys(eventGroups).sort((a, b) => parseInt(a) - parseInt(b));\n            \n            // 다음 3개 그룹 표시\n            for (let i = 1; i <= 3; i++) {\n                const nextIndex = currentGroupIndex + i;\n                if (nextIndex < groupNumbers.length) {\n                    const groupNumber = groupNumbers[nextIndex];\n                    const groupEvents = eventGroups[groupNumber];\n                    \n                    const groupItem = document.createElement('div');\n                    groupItem.className = 'next-group-item';\n                    groupItem.textContent = `이벤트 ${groupNumber} (${groupEvents.length}개)`;\n                    nextGroupList.appendChild(groupItem);\n                }\n            }\n        }\n        \n        // 모드 전환\n        function showMode(mode) {\n            document.querySelectorAll('.screen').forEach(screen => {\n                screen.classList.remove('active');\n            });\n            \n            currentMode = mode;\n            document.getElementById('currentMode').textContent = mode;\n            \n            switch(mode) {\n                case 'waiting':\n                    document.getElementById('waitingScreen').classList.add('active');\n                    break;\n                case 'results':\n                    document.getElementById('resultsScreen').classList.add('active');\n                    loadCurrentResult();\n                    break;\n            }\n        }\n        \n        // 현재 결과 로드\n        function loadCurrentResult() {\n            const groupNumbers = Object.keys(eventGroups).sort((a, b) => parseInt(a) - parseInt(b));\n            \n            if (groupNumbers.length > 0 && currentGroupIndex < groupNumbers.length) {\n                const currentGroupNumber = groupNumbers[currentGroupIndex];\n                const currentGroupEvents = eventGroups[currentGroupNumber];\n                \n                // 첫 번째 이벤트의 결과 로드\n                if (currentGroupEvents.length > 0) {\n                    const firstEvent = currentGroupEvents[0];\n                    const iframe = document.getElementById('resultFrame');\n                    iframe.src = `combined_result_${firstEvent.id}.html`;\n                }\n            }\n        }\n        \n        // 이전 그룹\n        function previousGroup() {\n            const groupNumbers = Object.keys(eventGroups).sort((a, b) => parseInt(a) - parseInt(b));\n            \n            if (currentGroupIndex > 0) {\n                // 기존 타이머 취소\n                if (advanceTimer) {\n                    clearTimeout(advanceTimer);\n                    advanceTimer = null;\n                }\n                \n                // 기존 모니터링 완전 중단\n                stopResultFileMonitoring();\n                \n                currentGroupIndex--;\n                updateCurrentGroup();\n                updateNextGroups();\n                showMode('waiting');\n                isAdvancing = false; // 수동 전환 시에도 플래그 리셋\n                \n                // 잠시 대기 후 새로운 이벤트 모니터링 시작\n                setTimeout(() => {\n                    startResultFileMonitoring();\n                }, 1000);\n            }\n        }\n        \n        // 다음 그룹\n        function nextGroup() {\n            const groupNumbers = Object.keys(eventGroups).sort((a, b) => parseInt(a) - parseInt(b));\n            \n            if (currentGroupIndex < groupNumbers.length - 1) {\n                // 기존 타이머 취소\n                if (advanceTimer) {\n                    clearTimeout(advanceTimer);\n                    advanceTimer = null;\n                }\n                \n                // 기존 모니터링 완전 중단\n                stopResultFileMonitoring();\n                \n                currentGroupIndex++;\n                updateCurrentGroup();\n                updateNextGroups();\n                showMode('waiting');\n                isAdvancing = false; // 수동 전환 시에도 플래그 리셋\n                \n                // 잠시 대기 후 새로운 이벤트 모니터링 시작\n                setTimeout(() => {\n                    startResultFileMonitoring();\n                }, 1000);\n            }\n        }\n        \n        // 결과 확인\n        function checkResult() {\n            const groupNumbers = Object.keys(eventGroups).sort((a, b) => parseInt(a) - parseInt(b));\n            \n            if (groupNumbers.length > 0 && currentGroupIndex < groupNumbers.length) {\n                const currentGroupNumber = groupNumbers[currentGroupIndex];\n                const currentGroupEvents = eventGroups[currentGroupNumber];\n                \n                // 그룹 내에서 결과 발표가 설정된 이벤트가 있는지 확인\n                const hasResultEvent = currentGroupEvents.some(event => event.show_result);\n                \n                if (hasResultEvent) {\n                    showMode('results');\n                } else {\n                    alert('이 그룹에는 결과 발표가 설정된 이벤트가 없습니다.');\n                }\n            }\n        }\n        \n        // 전체화면 종료\n        function exitFullscreen() {\n            if (document.exitFullscreen) {\n                document.exitFullscreen();\n            } else if (document.webkitExitFullscreen) {\n                document.webkitExitFullscreen();\n            } else if (document.mozCancelFullScreen) {\n                document.mozCancelFullScreen();\n            } else if (document.msExitFullscreen) {\n                document.msExitFullscreen();\n            }\n        }\n        \n        // 결과 화면 크기 조절\n        function toggleResultScale() {\n            const resultsScreen = document.getElementById('resultsScreen');\n            const resultFrame = document.getElementById('resultFrame');\n            \n            if (resultsScreen.classList.contains('fullscreen-optimized')) {\n                // 일반 크기로 복원\n                resultsScreen.classList.remove('fullscreen-optimized');\n                resultFrame.style.transform = 'scale(0.8)';\n                resultFrame.style.width = '100%';\n                resultFrame.style.height = '100%';\n            } else {\n                // 전체화면 최적화\n                resultsScreen.classList.add('fullscreen-optimized');\n                resultFrame.style.transform = 'scale(0.7)';\n                resultFrame.style.width = '142.86%';\n                resultFrame.style.height = '142.86%';\n            }\n        }\n        \n        // 키보드 단축키\n        document.addEventListener('keydown', function(e) {\n            switch(e.key) {\n                case 'F11':\n                    e.preventDefault();\n                    if (!document.fullscreenElement) {\n                        document.documentElement.requestFullscreen();\n                    } else {\n                        exitFullscreen();\n                    }\n                    break;\n                case 'ArrowLeft':\n                    previousGroup();\n                    break;\n                case 'ArrowRight':\n                    nextGroup();\n                    break;\n                case ' ':\n                    e.preventDefault();\n                    checkResult();\n                    break;\n                case '1':\n                    showMode('waiting');\n                    break;\n                case '2':\n                    showMode('results');\n                    break;\n                case 'S':\n                    toggleResultScale();\n                    break;\n                case 'A':\n                case 'a':\n                    toggleAutoAdvance();\n                    break;\n                case 'H':\n                case 'h':\n                    hideControlPanel();\n                    break;\n                case 'B':\n                case 'b':\n                    toggleStatusBar();\n                    break;\n                case 'Escape':\n                    exitFullscreen();\n                    break;\n            }\n        });\n        \n        // 결과 파일 자동 확인\n        async function checkResultFileAndShow() {\n            if (events.length > 0 && currentGroupIndex >= 0 && currentGroupIndex < Object.keys(eventGroups).length) {\n                const groupNumbers = Object.keys(eventGroups).sort((a, b) => parseInt(a) - parseInt(b));\n                const currentGroupNumber = groupNumbers[currentGroupIndex];\n                const currentGroupEvents = eventGroups[currentGroupNumber];\n                \n                // 현재 그룹이 올바른지 확인\n                if (!currentGroupEvents) {\n                    console.log('❌ 현재 그룹 이벤트를 찾을 수 없습니다:', currentGroupNumber);\n                    return;\n                }\n                \n                console.log(`이벤트 ${currentGroupNumber} 확인 중... (${currentGroupEvents.length}개 이벤트)`);\n                \n                // 그룹 내의 모든 이벤트에 대해 combined_result 파일 확인\n                let hasAnyResult = false;\n                \n                for (const event of currentGroupEvents) {\n                    try {\n                        const response = await fetch(`check_result_file.php?event=${event.id}`);\n                        const data = await response.json();\n                        \n                        if (data.exists) {\n                            hasAnyResult = true;\n                            console.log(`✅ 결과 파일 발견: ${event.id}`);\n                            break; // 하나라도 찾으면 중단\n                        } else {\n                            console.log(`❌ 결과 파일 없음: ${event.id}`);\n                        }\n                    } catch (error) {\n                        console.error(`결과 파일 확인 오류 (${event.id}):`, error);\n                    }\n                }\n                \n                // 결과 파일이 있으면 자동으로 다음 이벤트로 전환 (중복 실행 방지)\n                if (hasAnyResult && autoAdvanceEnabled && !isAdvancing) {\n                    isAdvancing = true;\n                    console.log(`이벤트 ${currentGroupNumber}에서 결과 파일 발견! ${autoAdvanceTime/1000}초 후 다음 이벤트로 전환합니다...`);\n                    \n                    // 기존 타이머가 있으면 취소\n                    if (advanceTimer) {\n                        clearTimeout(advanceTimer);\n                    }\n                    \n                    advanceTimer = setTimeout(() => {\n                        autoAdvanceToNextEvent();\n                        isAdvancing = false; // 전환 완료 후 플래그 리셋\n                        advanceTimer = null; // 타이머 리셋\n                    }, autoAdvanceTime);\n                } else if (!hasAnyResult) {\n                    console.log(`이벤트 ${currentGroupNumber}에 결과 파일이 없습니다. 대기 중...`);\n                } else if (isAdvancing) {\n                    console.log(`이벤트 ${currentGroupNumber}에서 결과 파일 발견했지만 이미 전환 중입니다.`);\n                }\n            }\n        }\n        \n        // 자동으로 다음 이벤트로 전환\n        function autoAdvanceToNextEvent() {\n            const groupNumbers = Object.keys(eventGroups).sort((a, b) => parseInt(a) - parseInt(b));\n            \n            if (currentGroupIndex < groupNumbers.length - 1) {\n                console.log('자동으로 다음 이벤트로 전환합니다...');\n                \n                // 기존 모니터링 완전 중단\n                stopResultFileMonitoring();\n                \n                // 기존 타이머도 취소\n                if (advanceTimer) {\n                    clearTimeout(advanceTimer);\n                    advanceTimer = null;\n                }\n                \n                currentGroupIndex++;\n                updateCurrentGroup();\n                updateNextGroups();\n                showMode('waiting');\n                \n                // 다음 이벤트 그룹 정보 표시\n                const nextGroupNumber = groupNumbers[currentGroupIndex];\n                console.log(`이제 이벤트 ${nextGroupNumber}를 모니터링합니다.`);\n                \n                // 전환 완료 후 플래그 리셋\n                isAdvancing = false;\n                \n                // 잠시 대기 후 새로운 이벤트 모니터링 시작\n                setTimeout(() => {\n                    startResultFileMonitoring();\n                }, 1000);\n            } else {\n                console.log('모든 이벤트가 완료되었습니다.');\n                // 모든 이벤트 완료 시 대기화면으로\n                showMode('waiting');\n                isAdvancing = false;\n                advanceTimer = null;\n                // 모니터링 중단\n                stopResultFileMonitoring();\n            }\n        }\n        \n        // 자동 전환 토글\n        function toggleAutoAdvance() {\n            autoAdvanceEnabled = !autoAdvanceEnabled;\n            const button = event.target;\n            \n            if (autoAdvanceEnabled) {\n                button.textContent = '⚡ 자동전환 ON';\n                button.style.background = '#28a745';\n                document.getElementById('autoAdvanceStatus').textContent = 'ON';\n                console.log('자동 전환이 활성화되었습니다.');\n            } else {\n                button.textContent = '⚡ 자동전환 OFF';\n                button.style.background = '#dc3545';\n                document.getElementById('autoAdvanceStatus').textContent = 'OFF';\n                console.log('자동 전환이 비활성화되었습니다.');\n            }\n        }\n        \n        // 제어 패널 숨기기\n        function hideControlPanel() {\n            document.getElementById('controlPanel').style.opacity = '0';\n            console.log('제어 패널이 숨겨졌습니다.');\n        }\n        \n        // 상태 표시바 토글\n        function toggleStatusBar() {\n            const statusBar = document.getElementById('statusBar');\n            statusBarHidden = !statusBarHidden;\n            \n            if (statusBarHidden) {\n                statusBar.classList.add('hidden');\n                console.log('상태 표시바가 숨겨졌습니다.');\n            } else {\n                statusBar.classList.remove('hidden');\n                console.log('상태 표시바가 표시되었습니다.');\n            }\n        }\n        \n        // 결과 파일 모니터링 시작\n        function startResultFileMonitoring() {\n            // 기존 인터벌이 있으면 중단\n            if (monitoringInterval) {\n                clearInterval(monitoringInterval);\n                console.log('기존 모니터링 중단됨');\n            }\n            // 5초마다 결과 파일 확인\n            monitoringInterval = setInterval(checkResultFileAndShow, 5000);\n            console.log('새로운 모니터링 시작됨 - 이벤트', Object.keys(eventGroups).sort((a, b) => parseInt(a) - parseInt(b))[currentGroupIndex]);\n        }\n        \n        // 결과 파일 모니터링 중단\n        function stopResultFileMonitoring() {\n            if (monitoringInterval) {\n                clearInterval(monitoringInterval);\n                monitoringInterval = null;\n                console.log('모니터링 중단됨');\n            }\n        }\n        \n        // 초기화\n        document.addEventListener('DOMContentLoaded', function() {\n            loadCompetitionSettings();\n            loadEvents();\n            showMode(currentMode);\n            \n            // 결과 파일 자동 모니터링 시작\n            startResultFileMonitoring();\n            \n            // 3초 후 제어 패널 숨기기\n            setTimeout(() => {\n                document.getElementById('controlPanel').style.opacity = '0';\n            }, 3000);\n        });\n        \n        // 마우스 움직임 감지로 제어 패널 표시 (전체화면 모드에서만)\n        let mouseTimer;\n        let isMouseMoving = false;\n        \n        document.addEventListener('mousemove', function() {\n            if (isFullscreen) {\n                document.getElementById('controlPanel').style.opacity = '1';\n                clearTimeout(mouseTimer);\n                mouseTimer = setTimeout(() => {\n                    document.getElementById('controlPanel').style.opacity = '0';\n                }, 3000);\n            }\n        });\n        \n        // 전체화면 상태 업데이트\n        function updateFullscreenStatus() {\n            isFullscreen = !!(document.fullscreenElement || \n                            document.webkitFullscreenElement || \n                            document.mozFullScreenElement || \n                            document.msFullscreenElement);\n        }\n        \n        // 전체화면 진입 시 제어 패널과 상태 표시바 숨기기\n        document.addEventListener('fullscreenchange', function() {\n            updateFullscreenStatus();\n            if (isFullscreen) {\n                setTimeout(() => {\n                    document.getElementById('controlPanel').style.opacity = '0';\n                    document.getElementById('statusBar').classList.add('hidden');\n                    statusBarHidden = true;\n                }, 2000);\n            } else {\n                document.getElementById('controlPanel').style.opacity = '1';\n                document.getElementById('statusBar').classList.remove('hidden');\n                statusBarHidden = false;\n            }\n        });\n        \n        document.addEventListener('webkitfullscreenchange', updateFullscreenStatus);\n        document.addEventListener('mozfullscreenchange', updateFullscreenStatus);\n        document.addEventListener('MSFullscreenChange', updateFullscreenStatus);\n    </script>\n</body>\n</html>\n\n","size_bytes":32026},"comp/event_schedule_editor.php":{"content":"<?php\n/**\n * 이벤트 순서 편집기\n */\n\nrequire_once 'event_schedule_manager.php';\n\n$scheduleManager = new EventScheduleManager();\n$action = isset($_GET['action']) ? $_GET['action'] : '';\n\n// 액션 처리\nif ($action === 'add_event') {\n    $eventId = $_POST['event_id'] ?? '';\n    $eventName = $_POST['event_name'] ?? '';\n    $showResult = $_POST['show_result'] === 'true';\n    \n    if ($eventId && $eventName) {\n        // 새 이벤트 추가 로직\n        echo json_encode(['success' => true, 'message' => '이벤트가 추가되었습니다.']);\n    } else {\n        echo json_encode(['success' => false, 'message' => '필수 정보가 누락되었습니다.']);\n    }\n    exit;\n}\n\nif ($action === 'delete_event') {\n    $eventId = $_POST['event_id'] ?? '';\n    // 이벤트 삭제 로직\n    echo json_encode(['success' => true, 'message' => '이벤트가 삭제되었습니다.']);\n    exit;\n}\n\nif ($action === 'reorder_events') {\n    $newOrder = $_POST['event_order'] ?? [];\n    // 이벤트 순서 재정렬 로직\n    echo json_encode(['success' => true, 'message' => '순서가 업데이트되었습니다.']);\n    exit;\n}\n\n$schedule = $scheduleManager->getSchedule();\n\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>이벤트 순서 편집기</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            margin: 20px;\n            background: #f5f5f5;\n        }\n        \n        .container {\n            max-width: 1200px;\n            margin: 0 auto;\n            background: white;\n            padding: 20px;\n            border-radius: 10px;\n            box-shadow: 0 0 20px rgba(0,0,0,0.1);\n        }\n        \n        .header {\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            color: white;\n            padding: 20px;\n            border-radius: 10px;\n            margin-bottom: 30px;\n            text-align: center;\n        }\n        \n        .header h1 {\n            margin: 0;\n            font-size: 2em;\n        }\n        \n        .controls {\n            display: flex;\n            gap: 15px;\n            margin-bottom: 30px;\n            flex-wrap: wrap;\n        }\n        \n        .btn {\n            background: #007bff;\n            color: white;\n            border: none;\n            padding: 12px 20px;\n            border-radius: 5px;\n            cursor: pointer;\n            font-size: 14px;\n            transition: background 0.3s;\n        }\n        \n        .btn:hover {\n            background: #0056b3;\n        }\n        \n        .btn.success {\n            background: #28a745;\n        }\n        \n        .btn.success:hover {\n            background: #218838;\n        }\n        \n        .btn.danger {\n            background: #dc3545;\n        }\n        \n        .btn.danger:hover {\n            background: #c82333;\n        }\n        \n        .btn.info {\n            background: #17a2b8;\n        }\n        \n        .btn.info:hover {\n            background: #138496;\n        }\n        \n        .event-list {\n            border: 1px solid #ddd;\n            border-radius: 5px;\n            overflow: hidden;\n        }\n        \n        .event-item {\n            display: flex;\n            align-items: center;\n            padding: 15px;\n            border-bottom: 1px solid #eee;\n            background: white;\n            transition: background 0.3s;\n        }\n        \n        .event-item:hover {\n            background: #f8f9fa;\n        }\n        \n        .event-item:last-child {\n            border-bottom: none;\n        }\n        \n        .event-order {\n            width: 50px;\n            text-align: center;\n            font-weight: bold;\n            color: #667eea;\n        }\n        \n        .event-id {\n            width: 100px;\n            font-weight: bold;\n            color: #333;\n        }\n        \n        .event-name {\n            flex: 1;\n            margin: 0 15px;\n            color: #555;\n        }\n        \n        .event-controls {\n            display: flex;\n            gap: 10px;\n            align-items: center;\n        }\n        \n        .drag-handle {\n            cursor: move;\n            color: #999;\n            font-size: 18px;\n        }\n        \n        .toggle-switch {\n            position: relative;\n            display: inline-block;\n            width: 50px;\n            height: 24px;\n        }\n        \n        .toggle-switch input {\n            opacity: 0;\n            width: 0;\n            height: 0;\n        }\n        \n        .slider {\n            position: absolute;\n            cursor: pointer;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            background-color: #ccc;\n            transition: .4s;\n            border-radius: 24px;\n        }\n        \n        .slider:before {\n            position: absolute;\n            content: \"\";\n            height: 18px;\n            width: 18px;\n            left: 3px;\n            bottom: 3px;\n            background-color: white;\n            transition: .4s;\n            border-radius: 50%;\n        }\n        \n        input:checked + .slider {\n            background-color: #2196F3;\n        }\n        \n        input:checked + .slider:before {\n            transform: translateX(26px);\n        }\n        \n        .add-event-form {\n            background: #f8f9fa;\n            padding: 20px;\n            border-radius: 5px;\n            margin-bottom: 20px;\n        }\n        \n        .form-group {\n            margin-bottom: 15px;\n        }\n        \n        .form-group label {\n            display: block;\n            margin-bottom: 5px;\n            font-weight: bold;\n            color: #333;\n        }\n        \n        .form-group input {\n            width: 100%;\n            padding: 8px 12px;\n            border: 1px solid #ddd;\n            border-radius: 4px;\n            font-size: 14px;\n        }\n        \n        .form-row {\n            display: flex;\n            gap: 15px;\n        }\n        \n        .form-row .form-group {\n            flex: 1;\n        }\n        \n        .status-badge {\n            padding: 4px 8px;\n            border-radius: 4px;\n            font-size: 12px;\n            font-weight: bold;\n        }\n        \n        .status-show {\n            background: #d4edda;\n            color: #155724;\n        }\n        \n        .status-hide {\n            background: #f8d7da;\n            color: #721c24;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"header\">\n            <h1>📋 이벤트 순서 편집기</h1>\n            <p>대회 순서를 추가, 수정, 삭제하고 표시 여부를 설정하세요</p>\n        </div>\n        \n        <div class=\"controls\">\n            <button class=\"btn success\" onclick=\"openEventControl()\">🎯 이벤트 제어</button>\n            <button class=\"btn info\" onclick=\"openSmartFullscreen()\">📺 스마트 전체화면</button>\n            <button class=\"btn\" onclick=\"refreshPage()\">🔄 새로고침</button>\n            <button class=\"btn danger\" onclick=\"resetAllVisibility()\">🔄 모든 표시 초기화</button>\n        </div>\n        \n        <!-- 새 이벤트 추가 폼 -->\n        <div class=\"add-event-form\">\n            <h3>➕ 새 이벤트 추가</h3>\n            <form id=\"addEventForm\">\n                <div class=\"form-row\">\n                    <div class=\"form-group\">\n                        <label for=\"newEventId\">이벤트 ID</label>\n                        <input type=\"text\" id=\"newEventId\" placeholder=\"예: 26A\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"newEventName\">이벤트명</label>\n                        <input type=\"text\" id=\"newEventName\" placeholder=\"예: 26. 청각 스탠더드 왈츠\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"newShowResult\">결과 표시</label>\n                        <label class=\"toggle-switch\">\n                            <input type=\"checkbox\" id=\"newShowResult\" checked>\n                            <span class=\"slider\"></span>\n                        </label>\n                    </div>\n                </div>\n                <button type=\"submit\" class=\"btn success\">➕ 이벤트 추가</button>\n            </form>\n        </div>\n        \n        <!-- 이벤트 목록 -->\n        <h3>📋 현재 이벤트 순서</h3>\n        <div class=\"event-list\" id=\"eventList\">\n            <?php foreach ($schedule as $index => $event): ?>\n            <div class=\"event-item\" data-event-id=\"<?php echo htmlspecialchars($event['event_id']); ?>\">\n                <div class=\"drag-handle\">⋮⋮</div>\n                <div class=\"event-order\"><?php echo $index + 1; ?></div>\n                <div class=\"event-id\"><?php echo htmlspecialchars($event['event_id']); ?></div>\n                <div class=\"event-name\"><?php echo htmlspecialchars($event['event_name']); ?></div>\n                <div class=\"event-controls\">\n                    <label class=\"toggle-switch\">\n                        <input type=\"checkbox\" \n                               <?php echo $event['show_result'] ? 'checked' : ''; ?>\n                               onchange=\"updateVisibility('<?php echo $event['event_id']; ?>', this.checked)\">\n                        <span class=\"slider\"></span>\n                    </label>\n                    <span class=\"status-badge <?php echo $event['show_result'] ? 'status-show' : 'status-hide'; ?>\">\n                        <?php echo $event['show_result'] ? '표시' : '숨김'; ?>\n                    </span>\n                    <button class=\"btn danger\" onclick=\"deleteEvent('<?php echo $event['event_id']; ?>')\" style=\"padding: 5px 10px; font-size: 12px;\">\n                        삭제\n                    </button>\n                </div>\n            </div>\n            <?php endforeach; ?>\n        </div>\n    </div>\n\n    <script>\n        // 새 이벤트 추가\n        document.getElementById('addEventForm').addEventListener('submit', function(e) {\n            e.preventDefault();\n            \n            const eventId = document.getElementById('newEventId').value;\n            const eventName = document.getElementById('newEventName').value;\n            const showResult = document.getElementById('newShowResult').checked;\n            \n            if (eventId && eventName) {\n                addEvent(eventId, eventName, showResult);\n            }\n        });\n        \n        function addEvent(eventId, eventName, showResult) {\n            // 실제로는 서버에 전송하여 처리\n            const eventList = document.getElementById('eventList');\n            const newEvent = document.createElement('div');\n            newEvent.className = 'event-item';\n            newEvent.setAttribute('data-event-id', eventId);\n            newEvent.innerHTML = `\n                <div class=\"drag-handle\">⋮⋮</div>\n                <div class=\"event-order\">${eventList.children.length + 1}</div>\n                <div class=\"event-id\">${eventId}</div>\n                <div class=\"event-name\">${eventName}</div>\n                <div class=\"event-controls\">\n                    <label class=\"toggle-switch\">\n                        <input type=\"checkbox\" ${showResult ? 'checked' : ''} onchange=\"updateVisibility('${eventId}', this.checked)\">\n                        <span class=\"slider\"></span>\n                    </label>\n                    <span class=\"status-badge ${showResult ? 'status-show' : 'status-hide'}\">\n                        ${showResult ? '표시' : '숨김'}\n                    </span>\n                    <button class=\"btn danger\" onclick=\"deleteEvent('${eventId}')\" style=\"padding: 5px 10px; font-size: 12px;\">\n                        삭제\n                    </button>\n                </div>\n            `;\n            eventList.appendChild(newEvent);\n            \n            // 폼 초기화\n            document.getElementById('newEventId').value = '';\n            document.getElementById('newEventName').value = '';\n            document.getElementById('newShowResult').checked = true;\n        }\n        \n        function updateVisibility(eventId, showResult) {\n            // 실제로는 서버에 전송하여 처리\n            console.log(`이벤트 ${eventId} 표시 여부: ${showResult}`);\n        }\n        \n        function deleteEvent(eventId) {\n            if (confirm(`이벤트 ${eventId}를 삭제하시겠습니까?`)) {\n                const eventItem = document.querySelector(`[data-event-id=\"${eventId}\"]`);\n                if (eventItem) {\n                    eventItem.remove();\n                    updateEventOrder();\n                }\n            }\n        }\n        \n        function updateEventOrder() {\n            const eventItems = document.querySelectorAll('.event-item');\n            eventItems.forEach((item, index) => {\n                const orderElement = item.querySelector('.event-order');\n                orderElement.textContent = index + 1;\n            });\n        }\n        \n        function openEventControl() {\n            window.open('event_control.php', '_blank');\n        }\n        \n        function openSmartFullscreen() {\n            window.open('smart_fullscreen.php', '_blank');\n        }\n        \n        function refreshPage() {\n            location.reload();\n        }\n        \n        function resetAllVisibility() {\n            if (confirm('모든 이벤트의 표시 설정을 초기화하시겠습니까?')) {\n                const checkboxes = document.querySelectorAll('input[type=\"checkbox\"]');\n                checkboxes.forEach(checkbox => {\n                    checkbox.checked = true;\n                    updateVisibility(checkbox.getAttribute('onchange').match(/'([^']+)'/)[1], true);\n                });\n            }\n        }\n        \n        // 드래그 앤 드롭 기능 (간단한 버전)\n        let draggedElement = null;\n        \n        document.querySelectorAll('.event-item').forEach(item => {\n            item.draggable = true;\n            \n            item.addEventListener('dragstart', function(e) {\n                draggedElement = this;\n                e.dataTransfer.effectAllowed = 'move';\n            });\n            \n            item.addEventListener('dragover', function(e) {\n                e.preventDefault();\n                e.dataTransfer.dropEffect = 'move';\n            });\n            \n            item.addEventListener('drop', function(e) {\n                e.preventDefault();\n                if (draggedElement && draggedElement !== this) {\n                    const parent = this.parentNode;\n                    const nextSibling = this.nextSibling;\n                    parent.insertBefore(draggedElement, nextSibling);\n                    updateEventOrder();\n                }\n            });\n        });\n    </script>\n</body>\n</html>\n\n\n\n\n","size_bytes":14921},"comp/event_schedule_manager.php":{"content":"<?php\n/**\n * 대회 순서 및 이벤트 관리 클래스\n */\n\nclass EventScheduleManager {\n    private $scheduleFile;\n    private $schedule;\n    \n    public function __construct($scheduleFile = __DIR__ . \"/event_schedule.txt\") {\n        $this->scheduleFile = $scheduleFile;\n        $this->loadSchedule();\n    }\n    \n    /**\n     * 스케줄 파일 로드\n     */\n    private function loadSchedule() {\n        $this->schedule = [];\n        \n        if (file_exists($this->scheduleFile)) {\n            $lines = file($this->scheduleFile, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n            \n            foreach ($lines as $line) {\n                $parts = explode(',', $line, 3);\n                if (count($parts) >= 3) {\n                    $this->schedule[] = [\n                        'event_id' => trim($parts[0]),\n                        'event_name' => trim($parts[1]),\n                        'show_result' => trim($parts[2]) === 'true'\n                    ];\n                }\n            }\n        }\n    }\n    \n    /**\n     * 전체 스케줄 반환\n     */\n    public function getSchedule() {\n        return $this->schedule;\n    }\n    \n    /**\n     * 현재 이벤트 정보 반환\n     */\n    public function getCurrentEvent($eventId) {\n        foreach ($this->schedule as $event) {\n            if ($event['event_id'] === $eventId) {\n                return $event;\n            }\n        }\n        return null;\n    }\n    \n    /**\n     * 다음 이벤트 정보 반환\n     */\n    public function getNextEvent($currentEventId) {\n        $currentIndex = -1;\n        foreach ($this->schedule as $index => $event) {\n            if ($event['event_id'] === $currentEventId) {\n                $currentIndex = $index;\n                break;\n            }\n        }\n        \n        if ($currentIndex >= 0 && $currentIndex < count($this->schedule) - 1) {\n            return $this->schedule[$currentIndex + 1];\n        }\n        \n        return null;\n    }\n    \n    /**\n     * 이전 이벤트 정보 반환\n     */\n    public function getPreviousEvent($currentEventId) {\n        $currentIndex = -1;\n        foreach ($this->schedule as $index => $event) {\n            if ($event['event_id'] === $currentEventId) {\n                $currentIndex = $index;\n                break;\n            }\n        }\n        \n        if ($currentIndex > 0) {\n            return $this->schedule[$currentIndex - 1];\n        }\n        \n        return null;\n    }\n    \n    /**\n     * 이벤트 표시 여부 업데이트\n     */\n    public function updateEventVisibility($eventId, $showResult) {\n        foreach ($this->schedule as &$event) {\n            if ($event['event_id'] === $eventId) {\n                $event['show_result'] = $showResult;\n                break;\n            }\n        }\n        \n        $this->saveSchedule();\n    }\n    \n    /**\n     * 스케줄 파일 저장\n     */\n    private function saveSchedule() {\n        $lines = [];\n        foreach ($this->schedule as $event) {\n            $lines[] = $event['event_id'] . ',' . $event['event_name'] . ',' . ($event['show_result'] ? 'true' : 'false');\n        }\n        \n        file_put_contents($this->scheduleFile, implode(\"\\n\", $lines));\n    }\n    \n    /**\n     * 현재 진행 중인 이벤트 인덱스 반환\n     */\n    public function getCurrentEventIndex($eventId) {\n        foreach ($this->schedule as $index => $event) {\n            if ($event['event_id'] === $eventId) {\n                return $index;\n            }\n        }\n        return 0;\n    }\n    \n    /**\n     * 전체 이벤트 수 반환\n     */\n    public function getTotalEvents() {\n        return count($this->schedule);\n    }\n}\n?>\n\n\n\n\n","size_bytes":3666},"comp/event_upload.php":{"content":"<?php\n/**\n * 이벤트 순서 업로드 및 관리 시스템\n */\n\n$message = '';\n$error = '';\n\nif ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_FILES['event_file'])) {\n    $uploadDir = __DIR__ . '/uploads/';\n    if (!is_dir($uploadDir)) {\n        mkdir($uploadDir, 0755, true);\n    }\n    \n    $uploadFile = $uploadDir . 'event_schedule.txt';\n    \n    // 파일 형식 검증\n    $tempFile = $_FILES['event_file']['tmp_name'];\n    $lines = file($tempFile, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    $validFormat = true;\n    $errorLines = [];\n    \n    foreach ($lines as $lineNum => $line) {\n        $parts = explode(',', $line);\n        if (count($parts) < 3) {\n            $validFormat = false;\n            $errorLines[] = $lineNum + 1;\n        } else {\n            $gabu = trim($parts[2]);\n            if ($gabu !== '0' && $gabu !== '1') {\n                $validFormat = false;\n                $errorLines[] = $lineNum + 1;\n            }\n        }\n    }\n    \n    if (!$validFormat) {\n        $error = '파일 형식이 올바르지 않습니다. ' . implode(', ', $errorLines) . '번째 줄을 확인해주세요.';\n    } else {\n        if (move_uploaded_file($tempFile, $uploadFile)) {\n            $message = '이벤트 순서가 성공적으로 업로드되었습니다. (총 ' . count($lines) . '개 이벤트)';\n        } else {\n            $error = '파일 업로드에 실패했습니다.';\n        }\n    }\n}\n\n// 현재 이벤트 순서 파일 읽기\n$eventFile = __DIR__ . '/uploads/event_schedule.txt';\n$events = [];\n\nif (file_exists($eventFile)) {\n    $lines = file($eventFile, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    foreach ($lines as $line) {\n        $parts = explode(',', $line);\n        if (count($parts) >= 3) {\n            $events[] = [\n                'id' => trim($parts[0]),\n                'name' => trim($parts[1]),\n                'show_result' => trim($parts[2]) === '1' // 1이면 true, 0이면 false\n            ];\n        }\n    }\n}\n\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>이벤트 순서 업로드</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            margin: 20px;\n            background: #f5f5f5;\n        }\n        \n        .container {\n            max-width: 1200px;\n            margin: 0 auto;\n            background: white;\n            padding: 20px;\n            border-radius: 10px;\n            box-shadow: 0 0 20px rgba(0,0,0,0.1);\n        }\n        \n        .header {\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            color: white;\n            padding: 20px;\n            border-radius: 10px;\n            margin-bottom: 30px;\n            text-align: center;\n        }\n        \n        .header h1 {\n            margin: 0;\n            font-size: 2em;\n        }\n        \n        .upload-section {\n            background: #f8f9fa;\n            padding: 20px;\n            border-radius: 10px;\n            margin-bottom: 30px;\n        }\n        \n        .form-group {\n            margin-bottom: 15px;\n        }\n        \n        .form-group label {\n            display: block;\n            margin-bottom: 5px;\n            font-weight: bold;\n            color: #333;\n        }\n        \n        .form-group input[type=\"file\"] {\n            width: 100%;\n            padding: 10px;\n            border: 2px dashed #ddd;\n            border-radius: 5px;\n            background: white;\n        }\n        \n        .btn {\n            background: #007bff;\n            color: white;\n            border: none;\n            padding: 12px 20px;\n            border-radius: 5px;\n            cursor: pointer;\n            font-size: 14px;\n            transition: background 0.3s;\n        }\n        \n        .btn:hover {\n            background: #0056b3;\n        }\n        \n        .btn.success {\n            background: #28a745;\n        }\n        \n        .btn.success:hover {\n            background: #218838;\n        }\n        \n        .btn.info {\n            background: #17a2b8;\n        }\n        \n        .btn.info:hover {\n            background: #138496;\n        }\n        \n        .btn.danger {\n            background: #dc3545;\n        }\n        \n        .btn.danger:hover {\n            background: #c82333;\n        }\n        \n        .event-list {\n            border: 1px solid #ddd;\n            border-radius: 5px;\n            overflow: hidden;\n        }\n        \n        .event-item {\n            display: flex;\n            align-items: center;\n            padding: 15px;\n            border-bottom: 1px solid #eee;\n            background: white;\n            transition: background 0.3s;\n        }\n        \n        .event-item:hover {\n            background: #f8f9fa;\n        }\n        \n        .event-item:last-child {\n            border-bottom: none;\n        }\n        \n        .event-id {\n            width: 80px;\n            font-weight: bold;\n            color: #667eea;\n        }\n        \n        .event-name {\n            flex: 1;\n            margin: 0 15px;\n            color: #333;\n        }\n        \n        .event-controls {\n            display: flex;\n            gap: 10px;\n            align-items: center;\n        }\n        \n        .toggle-switch {\n            position: relative;\n            display: inline-block;\n            width: 50px;\n            height: 24px;\n        }\n        \n        .toggle-switch input {\n            opacity: 0;\n            width: 0;\n            height: 0;\n        }\n        \n        .slider {\n            position: absolute;\n            cursor: pointer;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            background-color: #ccc;\n            transition: .4s;\n            border-radius: 24px;\n        }\n        \n        .slider:before {\n            position: absolute;\n            content: \"\";\n            height: 18px;\n            width: 18px;\n            left: 3px;\n            bottom: 3px;\n            background-color: white;\n            transition: .4s;\n            border-radius: 50%;\n        }\n        \n        input:checked + .slider {\n            background-color: #2196F3;\n        }\n        \n        input:checked + .slider:before {\n            transform: translateX(26px);\n        }\n        \n        .status-badge {\n            padding: 4px 8px;\n            border-radius: 4px;\n            font-size: 12px;\n            font-weight: bold;\n        }\n        \n        .status-show {\n            background: #d4edda;\n            color: #155724;\n        }\n        \n        .status-hide {\n            background: #f8d7da;\n            color: #721c24;\n        }\n        \n        .message {\n            padding: 15px;\n            border-radius: 5px;\n            margin-bottom: 20px;\n        }\n        \n        .message.success {\n            background: #d4edda;\n            color: #155724;\n            border: 1px solid #c3e6cb;\n        }\n        \n        .message.error {\n            background: #f8d7da;\n            color: #721c24;\n            border: 1px solid #f5c6cb;\n        }\n        \n        .file-format {\n            background: #e9ecef;\n            padding: 15px;\n            border-radius: 5px;\n            margin-bottom: 20px;\n            font-family: monospace;\n        }\n        \n        .controls {\n            display: flex;\n            gap: 15px;\n            margin-bottom: 30px;\n            flex-wrap: wrap;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"header\">\n            <h1>📋 이벤트 순서 업로드 및 관리</h1>\n            <p>대회 순서를 업로드하고 실시간으로 결과 발표를 제어하세요</p>\n        </div>\n        \n        <?php if ($message): ?>\n        <div class=\"message success\"><?php echo $message; ?></div>\n        <?php endif; ?>\n        \n        <?php if ($error): ?>\n        <div class=\"message error\"><?php echo $error; ?></div>\n        <?php endif; ?>\n        \n        <div class=\"controls\">\n            <button class=\"btn success\" onclick=\"openFullscreenMonitor()\">🖥️ 전체화면 모니터링</button>\n            <button class=\"btn info\" onclick=\"openEventControl()\">🎯 이벤트 제어</button>\n            <button class=\"btn\" onclick=\"refreshPage()\">🔄 새로고침</button>\n        </div>\n        \n        <!-- 파일 업로드 섹션 -->\n        <div class=\"upload-section\">\n            <h3>📁 이벤트 순서 파일 업로드</h3>\n            <p>텍스트 파일 형식: <code>이벤트번호,이벤트명,가부</code></p>\n            \n            <div class=\"file-format\">\n                <strong>파일 형식 예시:</strong><br>\n                1A,지적 라틴,1<br>\n                1B,시각 라틴,0<br>\n                1C,청각 라틴,1<br>\n                2A,지적 스탠더드,1<br>\n                2B,시각 스탠더드,0<br><br>\n                <strong>가부 설명:</strong><br>\n                1 = 결과 발표함, 0 = 결과 발표 안함\n            </div>\n            \n            <form method=\"POST\" enctype=\"multipart/form-data\">\n                <div class=\"form-group\">\n                    <label for=\"event_file\">이벤트 순서 파일 선택</label>\n                    <input type=\"file\" id=\"event_file\" name=\"event_file\" accept=\".txt\" required>\n                </div>\n                <div style=\"display: flex; gap: 10px; align-items: center;\">\n                    <button type=\"submit\" class=\"btn success\">📤 파일 업로드</button>\n                    <a href=\"sample_event_schedule.txt\" download class=\"btn info\">📥 샘플 파일 다운로드</a>\n                </div>\n            </form>\n        </div>\n        \n        <!-- 현재 이벤트 목록 -->\n        <?php if (!empty($events)): ?>\n        <h3>📋 현재 이벤트 순서 (총 <?php echo count($events); ?>개)</h3>\n        <div class=\"event-list\" id=\"eventList\">\n            <?php foreach ($events as $index => $event): ?>\n            <div class=\"event-item\" data-event-id=\"<?php echo htmlspecialchars($event['id']); ?>\">\n                <div class=\"event-id\"><?php echo htmlspecialchars($event['id']); ?></div>\n                <div class=\"event-name\"><?php echo htmlspecialchars($event['name']); ?></div>\n                <div class=\"event-controls\">\n                    <label class=\"toggle-switch\">\n                        <input type=\"checkbox\" \n                               <?php echo $event['show_result'] ? 'checked' : ''; ?>\n                               onchange=\"updateEventStatus('<?php echo $event['id']; ?>', this.checked)\">\n                        <span class=\"slider\"></span>\n                    </label>\n                    <span class=\"status-badge <?php echo $event['show_result'] ? 'status-show' : 'status-hide'; ?>\">\n                        <?php echo $event['show_result'] ? '발표' : '대기' ?>\n                    </span>\n                </div>\n            </div>\n            <?php endforeach; ?>\n        </div>\n        <?php else: ?>\n        <div class=\"message error\">\n            이벤트 순서 파일이 없습니다. 위에서 파일을 업로드해주세요.\n        </div>\n        <?php endif; ?>\n    </div>\n\n    <script>\n        function updateEventStatus(eventId, showResult) {\n            // AJAX로 서버에 상태 업데이트 요청\n            fetch('update_event_status.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                },\n                body: `event_id=${eventId}&show_result=${showResult}`\n            })\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    // 상태 배지 업데이트\n                    const eventItem = document.querySelector(`[data-event-id=\"${eventId}\"]`);\n                    const statusBadge = eventItem.querySelector('.status-badge');\n                    if (showResult) {\n                        statusBadge.textContent = '발표';\n                        statusBadge.className = 'status-badge status-show';\n                    } else {\n                        statusBadge.textContent = '대기';\n                        statusBadge.className = 'status-badge status-hide';\n                    }\n                } else {\n                    alert('상태 업데이트에 실패했습니다.');\n                }\n            })\n            .catch(error => {\n                console.error('Error:', error);\n                alert('오류가 발생했습니다.');\n            });\n        }\n        \n        function openFullscreenMonitor() {\n            window.open('event_monitor_v2.php', '_blank');\n        }\n        \n        function openEventControl() {\n            window.open('event_control_panel.php', '_blank');\n        }\n        \n        function refreshPage() {\n            location.reload();\n        }\n    </script>\n</body>\n</html>\n","size_bytes":12953},"comp/export_excel.php":{"content":"<?php\n$comp_id = $_GET['comp'] ?? $_GET['comp_id'] ?? '';\n$data_dir = __DIR__ . \"/data/$comp_id\";\n$info_file = \"$data_dir/info.json\";\n$runorder_file = \"$data_dir/RunOrder_Tablet.txt\";\n$dance_file = \"$data_dir/DanceName.txt\";\n\n// 대회 정보 로드\nif (!preg_match('/^\\d{8}-\\d+$/', $comp_id) || !is_file($info_file)) {\n    die('잘못된 대회 ID 또는 대회 정보가 없습니다.');\n}\n$info = json_decode(file_get_contents($info_file), true);\n\n// 댄스 번호 => 풀네임 매핑\n$dance_types = [];\nif (file_exists($dance_file)) {\n    $lines = file($dance_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    foreach ($lines as $line) {\n        if (preg_match('/^bom/', $line)) continue;\n        $cols = array_map('trim', explode(',', $line));\n        if (isset($cols[0]) && $cols[0] && isset($cols[1]) && $cols[1]) {\n            $dance_types[$cols[0]] = $cols[1]; // 번호 => 풀네임\n        }\n    }\n}\n\n// RunOrder_Tablet.txt 파일 읽기\n$lines = file($runorder_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n$events = [];\n\nforeach ($lines as $line) {\n    $cols = explode(',', $line);\n    if (count($cols) >= 15) {\n        // 댄스 데이터는 6-10번째 컬럼에 있음 (인덱스 5-9)\n        $dance_data = [];\n        for ($i = 5; $i <= 9; $i++) {\n            if (isset($cols[$i]) && trim($cols[$i]) !== '') {\n                $dance_data[] = trim($cols[$i]);\n            }\n        }\n        \n        $events[] = [\n            'no' => trim($cols[0]),\n            'desc' => trim($cols[1]),\n            'roundtype' => trim($cols[2]),\n            'roundnum' => trim($cols[3]),\n            'dances' => implode(' ', $dance_data), // 6-10번째 컬럼의 댄스 데이터\n            'panel' => trim($cols[10]),\n            'time' => trim($cols[11]),\n            'detail_no' => trim($cols[13]),\n            'extra_time' => intval($cols[14] ?? 0)\n        ];\n    }\n}\n\n// 이벤트 그룹화 및 시간 계산 (manage_timetable.php와 동일한 로직)\n$raw_no_groups = [];\nforeach ($events as $event) {\n    $raw_no = $event['no'];\n    if (!isset($raw_no_groups[$raw_no])) {\n        $raw_no_groups[$raw_no] = [];\n    }\n    \n    // 댄스 파싱\n    $dance_numbers = explode(' ', $event['dances']);\n    $dance_count = 0;\n    $dance_list = [];\n    \n    foreach ($dance_numbers as $dance_num) {\n        $dance_num = trim($dance_num);\n        if ($dance_num && $dance_num !== '0' && $dance_num !== '?' && $dance_num !== 'None' && $dance_num !== '-') {\n            $dance_count++;\n            if (isset($dance_types[$dance_num])) {\n                $dance_list[] = $dance_types[$dance_num];\n            }\n        }\n    }\n    \n    $event['dance_count'] = $dance_count;\n    $event['dance_list'] = implode(', ', $dance_list);\n    $raw_no_groups[$raw_no][] = $event;\n}\n\n// manage_timetable.php와 동일한 이벤트 배열 생성 (순번 순서로 정렬)\n$events_for_timetable = [];\n$sorted_raw_nos = array_keys($raw_no_groups);\nsort($sorted_raw_nos, SORT_NUMERIC);\n\nforeach ($sorted_raw_nos as $raw_no) {\n    $group = $raw_no_groups[$raw_no];\n    if (count($group) > 0) {\n        // 댄스 수가 가장 많은 이벤트 찾기\n        $max_dance_count = 0;\n        $selected_event = null;\n        \n        foreach ($group as $event) {\n            if ($event['dance_count'] > $max_dance_count) {\n                $max_dance_count = $event['dance_count'];\n                $selected_event = $event;\n            }\n        }\n        \n        if ($selected_event) {\n            $base_time = 1.5; // 기본 시간 (분)\n            $duration = $base_time * $max_dance_count;\n            $extra_time = $selected_event['extra_time'];\n            $total_duration = $duration + $extra_time;\n            \n            $events_for_timetable[] = [\n                'no' => $selected_event['no'],\n                'desc' => $selected_event['desc'],\n                'round' => 'Final', // 기본값\n                'dances' => $selected_event['dance_list'],\n                'duration' => $total_duration,\n                'detail_no' => $selected_event['detail_no'],\n                'extra_time' => $extra_time,\n                'group_events' => $group\n            ];\n        }\n    }\n}\n\n// 특별 이벤트 로드\n$special_events = [];\n$special_events_file = \"$data_dir/special_events.json\";\nif (file_exists($special_events_file)) {\n    $special_events = json_decode(file_get_contents($special_events_file), true) ?? [];\n}\n\n// 시간표 계산 (manage_timetable.php와 동일한 로직)\n$rows = [];\n$current_time = 9 * 60; // 09:00 시작 (분 단위)\n\nforeach ($events_for_timetable as $event) {\n    $start_time = sprintf('%02d:%02d', floor($current_time / 60), $current_time % 60);\n    $end_time = sprintf('%02d:%02d', floor(($current_time + $event['duration']) / 60), ($current_time + $event['duration']) % 60);\n    \n    // 멀티이벤트 처리: 각 세부번호별로 별도 행 생성\n    if (count($event['group_events']) > 1) {\n        // 멀티이벤트: 각 세부번호별로 행 생성\n        foreach ($event['group_events'] as $group_event) {\n            if (!empty($group_event['detail_no'])) {\n                $rows[] = [\n                    'no' => $event['no'],\n                    'detail_no' => $group_event['detail_no'],\n                    'desc' => $group_event['desc'],\n                    'dances' => $group_event['dance_list'],\n                    'start_time' => $start_time,\n                    'end_time' => $end_time\n                ];\n            }\n        }\n    } else {\n        // 단일 이벤트: 세부번호 없이 표시\n        $rows[] = [\n            'no' => $event['no'],\n            'detail_no' => '',\n            'desc' => $event['desc'],\n            'dances' => $event['dances'],\n            'start_time' => $start_time,\n            'end_time' => $end_time\n        ];\n    }\n    \n    $current_time += $event['duration'];\n    \n    // 특별 이벤트 처리 (manage_timetable.php와 동일한 로직)\n    foreach ($special_events as $special_event) {\n        if ($special_event['after_event'] == $event['no']) {\n            $special_start_time = sprintf('%02d:%02d', floor($current_time / 60), $current_time % 60);\n            $special_end_time = sprintf('%02d:%02d', floor(($current_time + $special_event['duration']) / 60), ($current_time + $special_event['duration']) % 60);\n            \n            $rows[] = [\n                'no' => '',\n                'detail_no' => '',\n                'desc' => $special_event['name'],\n                'dances' => '',\n                'start_time' => $special_start_time,\n                'end_time' => $special_end_time\n            ];\n            \n            $current_time += $special_event['duration'];\n        }\n    }\n}\n\n// CSV 파일 생성\n$filename = $info['title'] . '_시간표_' . date('Y-m-d') . '.csv';\n\n// UTF-8 BOM 추가 (엑셀에서 한글 깨짐 방지)\nheader('Content-Type: text/csv; charset=utf-8');\nheader('Content-Disposition: attachment; filename=\"' . $filename . '\"');\nheader('Cache-Control: max-age=0');\n\n// BOM 출력\necho \"\\xEF\\xBB\\xBF\";\n\n// CSV 헤더\necho \"순번,시작시간,종료시간,세부번호,이벤트명,댄스\\n\";\n\n// 같은 순번과 시간의 행들을 그룹화하여 출력\n$grouped_rows = [];\nforeach ($rows as $row) {\n    $key = $row['no'] . '|' . $row['start_time'] . '|' . $row['end_time'];\n    if (!isset($grouped_rows[$key])) {\n        $grouped_rows[$key] = [\n            'no' => $row['no'],\n            'start_time' => $row['start_time'],\n            'end_time' => $row['end_time'],\n            'rows' => []\n        ];\n    }\n    $grouped_rows[$key]['rows'][] = $row;\n}\n\n// CSV 데이터 출력\nforeach ($grouped_rows as $group) {\n    $first_row = true;\n    foreach ($group['rows'] as $row) {\n        if ($first_row) {\n            // 첫 번째 행: 순번과 시간 표시\n            echo '\"' . $row['no'] . '\",';\n            echo '\"' . $row['start_time'] . '\",';\n            echo '\"' . $row['end_time'] . '\",';\n            $first_row = false;\n        } else {\n            // 나머지 행: 순번과 시간은 빈 값으로 표시 (Excel에서 병합 효과)\n            echo '\"\",';\n            echo '\"\",';\n            echo '\"\",';\n        }\n        echo '\"' . $row['detail_no'] . '\",';\n        echo '\"' . $row['desc'] . '\",';\n        echo '\"' . $row['dances'] . '\"';\n        echo \"\\n\";\n    }\n}\n?>\n","size_bytes":8331},"comp/export_timetable.php":{"content":"<?php\n$comp_id = $_GET['comp'] ?? $_GET['comp_id'] ?? '';\n$data_dir = __DIR__ . \"/data/$comp_id\";\n$info_file = \"$data_dir/info.json\";\n$runorder_file = \"$data_dir/RunOrder_Tablet.txt\";\n$dance_file = \"$data_dir/DanceName.txt\";\n\n// 대회 정보 로드\nif (!preg_match('/^\\d{8}-\\d+$/', $comp_id) || !is_file($info_file)) {\n    die('잘못된 대회 ID 또는 대회 정보가 없습니다.');\n}\n$info = json_decode(file_get_contents($info_file), true);\n\n// 댄스 번호 => 풀네임 매핑\n$dance_types = [];\nif (file_exists($dance_file)) {\n    $lines = file($dance_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    foreach ($lines as $line) {\n        if (preg_match('/^bom/', $line)) continue;\n        $cols = array_map('trim', explode(',', $line));\n        if (isset($cols[0]) && $cols[0] && isset($cols[1]) && $cols[1]) {\n            $dance_types[$cols[0]] = $cols[1]; // 번호 => 풀네임\n        }\n    }\n}\n\n// RunOrder_Tablet.txt 파일 읽기\n$lines = file($runorder_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n$events = [];\n\nforeach ($lines as $line) {\n    $cols = explode(',', $line);\n    if (count($cols) >= 15) {\n        // 댄스 데이터는 6-10번째 컬럼에 있음 (인덱스 5-9)\n        $dance_data = [];\n        for ($i = 5; $i <= 9; $i++) {\n            if (isset($cols[$i]) && trim($cols[$i]) !== '') {\n                $dance_data[] = trim($cols[$i]);\n            }\n        }\n        \n        $events[] = [\n            'no' => trim($cols[0]),\n            'desc' => trim($cols[1]),\n            'roundtype' => trim($cols[2]),\n            'roundnum' => trim($cols[3]),\n            'dances' => implode(' ', $dance_data), // 6-10번째 컬럼의 댄스 데이터\n            'panel' => trim($cols[10]),\n            'time' => trim($cols[11]),\n            'detail_no' => trim($cols[13]),\n            'extra_time' => intval($cols[14] ?? 0)\n        ];\n    }\n}\n\n// 이벤트 그룹화 및 시간 계산 (manage_timetable.php와 동일한 로직)\n$raw_no_groups = [];\nforeach ($events as $event) {\n    $raw_no = $event['no'];\n    if (!isset($raw_no_groups[$raw_no])) {\n        $raw_no_groups[$raw_no] = [];\n    }\n    \n    // 댄스 파싱\n    $dance_numbers = explode(' ', $event['dances']);\n    $dance_count = 0;\n    $dance_list = [];\n    \n    foreach ($dance_numbers as $dance_num) {\n        $dance_num = trim($dance_num);\n        if ($dance_num && $dance_num !== '0' && $dance_num !== '?' && $dance_num !== 'None' && $dance_num !== '-') {\n            $dance_count++;\n            if (isset($dance_types[$dance_num])) {\n                $dance_list[] = $dance_types[$dance_num];\n            }\n        }\n    }\n    \n    $event['dance_count'] = $dance_count;\n    $event['dance_list'] = implode(', ', $dance_list);\n    $raw_no_groups[$raw_no][] = $event;\n}\n\n// manage_timetable.php와 동일한 이벤트 배열 생성 (순번 순서로 정렬)\n$events_for_timetable = [];\n$sorted_raw_nos = array_keys($raw_no_groups);\nsort($sorted_raw_nos, SORT_NUMERIC);\n\nforeach ($sorted_raw_nos as $raw_no) {\n    $group = $raw_no_groups[$raw_no];\n    if (count($group) > 0) {\n        // 댄스 수가 가장 많은 이벤트 찾기\n        $max_dance_count = 0;\n        $selected_event = null;\n        \n        foreach ($group as $event) {\n            if ($event['dance_count'] > $max_dance_count) {\n                $max_dance_count = $event['dance_count'];\n                $selected_event = $event;\n            }\n        }\n        \n        if ($selected_event) {\n            $base_time = 1.5; // 기본 시간 (분)\n            $duration = $base_time * $max_dance_count;\n            $extra_time = $selected_event['extra_time'];\n            $total_duration = $duration + $extra_time;\n            \n            $events_for_timetable[] = [\n                'no' => $selected_event['no'],\n                'desc' => $selected_event['desc'],\n                'round' => 'Final', // 기본값\n                'dances' => $selected_event['dance_list'],\n                'duration' => $total_duration,\n                'detail_no' => $selected_event['detail_no'],\n                'extra_time' => $extra_time,\n                'group_events' => $group\n            ];\n        }\n    }\n}\n\n// 특별 이벤트 로드\n$special_events = [];\n$special_events_file = \"$data_dir/special_events.json\";\nif (file_exists($special_events_file)) {\n    $special_events = json_decode(file_get_contents($special_events_file), true) ?? [];\n}\n\n// 시간표 계산 (manage_timetable.php와 동일한 로직)\n$rows = [];\n$current_time = 9 * 60; // 09:00 시작 (분 단위)\n\nforeach ($events_for_timetable as $event) {\n    $start_time = sprintf('%02d:%02d', floor($current_time / 60), $current_time % 60);\n    $end_time = sprintf('%02d:%02d', floor(($current_time + $event['duration']) / 60), ($current_time + $event['duration']) % 60);\n    \n    // 멀티이벤트 처리: 각 세부번호별로 별도 행 생성\n    if (count($event['group_events']) > 1) {\n        // 멀티이벤트: 각 세부번호별로 행 생성\n        foreach ($event['group_events'] as $group_event) {\n            if (!empty($group_event['detail_no'])) {\n                $rows[] = [\n                    'no' => $event['no'],\n                    'detail_no' => $group_event['detail_no'],\n                    'desc' => $group_event['desc'],\n                    'dances' => $group_event['dance_list'],\n                    'start_time' => $start_time,\n                    'end_time' => $end_time\n                ];\n            }\n        }\n    } else {\n        // 단일 이벤트: 세부번호 없이 표시\n        $rows[] = [\n            'no' => $event['no'],\n            'detail_no' => '',\n            'desc' => $event['desc'],\n            'dances' => $event['dances'],\n            'start_time' => $start_time,\n            'end_time' => $end_time\n        ];\n    }\n    \n    $current_time += $event['duration'];\n    \n    // 특별 이벤트 처리 (manage_timetable.php와 동일한 로직)\n    foreach ($special_events as $special_event) {\n        if ($special_event['after_event'] == $event['no']) {\n            $special_start_time = sprintf('%02d:%02d', floor($current_time / 60), $current_time % 60);\n            $special_end_time = sprintf('%02d:%02d', floor(($current_time + $special_event['duration']) / 60), ($current_time + $special_event['duration']) % 60);\n            \n            $rows[] = [\n                'no' => '',\n                'detail_no' => '',\n                'desc' => $special_event['name'],\n                'dances' => '',\n                'start_time' => $special_start_time,\n                'end_time' => $special_end_time\n            ];\n            \n            $current_time += $special_event['duration'];\n        }\n    }\n}\n\n// HTML to PDF 출력\n$filename = $info['title'] . '_시간표_' . date('Y-m-d') . '.html';\n\nheader('Content-Type: text/html; charset=utf-8');\nheader('Content-Disposition: attachment; filename=\"' . $filename . '\"');\nheader('Cache-Control: max-age=0');\n\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title><?= htmlspecialchars($info['title']) ?> 시간표</title>\n    <style>\n        @page {\n            size: A4 landscape;\n            margin: 20mm;\n        }\n        \n        body {\n            font-family: 'Malgun Gothic', '맑은 고딕', Arial, sans-serif;\n            font-size: 12px;\n            line-height: 1.4;\n            color: #333;\n            margin: 0;\n            padding: 0;\n        }\n        \n        .header {\n            text-align: center;\n            margin-bottom: 30px;\n            border-bottom: 3px solid #03C75A;\n            padding-bottom: 20px;\n        }\n        \n        .title {\n            font-size: 24px;\n            font-weight: bold;\n            color: #03C75A;\n            margin-bottom: 10px;\n        }\n        \n        .subtitle {\n            font-size: 16px;\n            color: #666;\n            margin-bottom: 5px;\n        }\n        \n        .info {\n            font-size: 14px;\n            color: #888;\n        }\n        \n        table {\n            width: 100%;\n            border-collapse: collapse;\n            margin-top: 20px;\n        }\n        \n        th {\n            background-color: #34495E;\n            color: white;\n            padding: 12px 8px;\n            text-align: center;\n            font-weight: bold;\n            border: 1px solid #2C3E50;\n        }\n        \n        td {\n            padding: 10px 8px;\n            border: 1px solid #BDC3C7;\n            text-align: center;\n        }\n        \n        tr:nth-child(even) {\n            background-color: #F8F9FA;\n        }\n        \n        tr:nth-child(odd) {\n            background-color: #FFFFFF;\n        }\n        \n        .no-col { width: 8%; }\n        .detail-col { width: 12%; }\n        .desc-col { width: 40%; }\n        .dance-col { width: 20%; }\n        .time-col { width: 8%; }\n        .duration-col { width: 8%; }\n        \n        .desc-col {\n            text-align: left;\n        }\n        \n        .footer {\n            margin-top: 30px;\n            text-align: center;\n            font-size: 10px;\n            color: #888;\n            border-top: 1px solid #BDC3C7;\n            padding-top: 10px;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"header\">\n        <div class=\"title\"><?= htmlspecialchars($info['title']) ?> 시간표</div>\n        <div class=\"subtitle\">대회일: <?= htmlspecialchars($info['date']) ?></div>\n        <div class=\"info\">장소: <?= htmlspecialchars($info['place']) ?> | 주최/주관: <?= htmlspecialchars($info['host']) ?></div>\n    </div>\n    \n    <table>\n        <thead>\n            <tr>\n                <th class=\"no-col\">순번</th>\n                <th class=\"time-col\">시작시간</th>\n                <th class=\"time-col\">종료시간</th>\n                <th class=\"detail-col\">세부번호</th>\n                <th class=\"desc-col\">이벤트명</th>\n                <th class=\"dance-col\">댄스</th>\n            </tr>\n        </thead>\n        <tbody>\n            <?php \n            $grouped_rows = [];\n            $current_group = null;\n            \n            // 같은 순번과 시간의 행들을 그룹화\n            foreach ($rows as $row) {\n                $key = $row['no'] . '|' . $row['start_time'] . '|' . $row['end_time'];\n                if (!isset($grouped_rows[$key])) {\n                    $grouped_rows[$key] = [\n                        'no' => $row['no'],\n                        'start_time' => $row['start_time'],\n                        'end_time' => $row['end_time'],\n                        'rows' => []\n                    ];\n                }\n                $grouped_rows[$key]['rows'][] = $row;\n            }\n            \n            foreach ($grouped_rows as $group): \n                $row_count = count($group['rows']);\n            ?>\n                <?php foreach ($group['rows'] as $index => $row): ?>\n                <tr>\n                    <?php if ($index === 0): ?>\n                        <td rowspan=\"<?= $row_count ?>\"><?= htmlspecialchars($row['no']) ?></td>\n                        <td rowspan=\"<?= $row_count ?>\"><?= htmlspecialchars($row['start_time']) ?></td>\n                        <td rowspan=\"<?= $row_count ?>\"><?= htmlspecialchars($row['end_time']) ?></td>\n                    <?php endif; ?>\n                    <td><?= htmlspecialchars($row['detail_no']) ?></td>\n                    <td class=\"desc-col\"><?= htmlspecialchars($row['desc']) ?></td>\n                    <td><?= htmlspecialchars($row['dances']) ?></td>\n                </tr>\n                <?php endforeach; ?>\n            <?php endforeach; ?>\n        </tbody>\n    </table>\n    \n    <div class=\"footer\">\n        <p>생성일: <?= date('Y-m-d H:i:s') ?> | danceoffice.net</p>\n    </div>\n</body>\n</html>\n","size_bytes":11797},"comp/final_aggregation_api.php":{"content":"<?php\n// JSON 출력을 위한 헤더 설정\nif (!headers_sent()) {\n    header('Content-Type: application/json; charset=utf-8');\n}\n\n// 오류 출력 비활성화 (JSON 응답을 위해)\nerror_reporting(0);\nini_set('display_errors', 0);\nini_set('log_errors', 0);\n\n$comp_id = $_GET['comp_id'] ?? '';\n$event_no = $_GET['event_no'] ?? '';\n\nif (empty($comp_id) || empty($event_no)) {\n    echo json_encode(['error' => 'Missing parameters', 'debug' => [\n        'comp_id' => $comp_id,\n        'event_no' => $event_no,\n        'get_params' => $_GET\n    ]]);\n    exit;\n}\n\n// 이벤트 정보 로드\n$runorder_file = \"data/{$comp_id}/RunOrder_Tablet.txt\";\nif (!file_exists($runorder_file)) {\n    echo json_encode(['error' => 'RunOrder file not found']);\n    exit;\n}\n\n$events = [];\n$lines = file($runorder_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\nforeach ($lines as $line) {\n    $parts = explode(\",\", $line);  // 쉼표로 분리\n    if (count($parts) >= 14) {  // 충분한 컬럼이 있는지 확인\n        $events[] = [\n            'no' => trim($parts[0]),\n            'desc' => trim($parts[1]),\n            'round' => trim($parts[2]),\n            'detail_no' => trim($parts[11]),  // 12번째 컬럼이 detail_no (패널)\n            'event_no' => trim($parts[13]),   // 14번째 컬럼이 이벤트 번호 (1-1, 1-2 등)\n            'dances' => array_filter(array_map('trim', array_slice($parts, 6, 5))), // 7-11번째 컬럼이 댄스\n            'panel' => trim($parts[11])  // 12번째 컬럼이 패널\n        ];\n    }\n}\n\n// 현재 이벤트 찾기\n$current_event = null;\nerror_log(\"Looking for event_no: \" . $event_no);\nerror_log(\"Available events: \" . json_encode($events));\n\nforeach ($events as $event) {\n    // event_no (1-1, 1-2 등) 또는 detail_no (SA, LA 등)로 매칭\n    $event_key = $event['event_no'] ?: $event['detail_no'] ?: $event['no'];\n    error_log(\"Checking event_key: \" . $event_key . \" against \" . $event_no);\n    if ($event_key == $event_no) {\n        $current_event = $event;\n        error_log(\"Found matching event: \" . json_encode($event));\n        break;\n    }\n}\n\nif (!$current_event) {\n    error_log(\"Event not found for event_no: \" . $event_no);\n    echo json_encode(['error' => 'Event not found', 'debug' => [\n        'requested_event' => $event_no,\n        'requested_event_type' => gettype($event_no),\n        'available_events' => array_map(function($e) {\n            return [\n                'no' => $e['no'],\n                'detail_no' => $e['detail_no'],\n                'key' => $e['detail_no'] ? $e['detail_no'] : $e['no'],\n                'desc' => $e['desc'],\n                'round' => $e['round']\n            ];\n        }, $events)\n    ]]);\n    exit;\n}\n\n// 선수 정보 로드\n$players_file = \"data/{$comp_id}/players_{$event_no}.txt\";\n$players = [];\nif (file_exists($players_file)) {\n    $lines = file($players_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    foreach ($lines as $line) {\n        $line = trim($line);\n        if (!empty($line)) {\n            // 선수 번호만 있는 경우\n            $players[] = [\n                'number' => $line,\n                'male' => '',\n                'female' => ''\n            ];\n        }\n    }\n}\n\n// 심사위원 정보 로드\n$adjudicators_file = \"data/{$comp_id}/adjudicators.txt\";\n$adjudicators = [];\nif (file_exists($adjudicators_file)) {\n    $lines = file($adjudicators_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    foreach ($lines as $line) {\n        $parts = explode(\",\", $line);  // 쉼표로 분리\n        if (count($parts) >= 2) {\n            $adjudicators[] = [\n                'code' => trim($parts[0]),\n                'name' => trim($parts[1])\n            ];\n        }\n    }\n}\nerror_log(\"심사위원 수: \" . count($adjudicators));\n\n// 댄스별 채점 데이터 수집\n$dance_results = [];\n$dance_names = [\n    '6' => 'Cha Cha Cha',\n    '7' => 'Samba', \n    '8' => 'Rumba',\n    '9' => 'Paso Doble',\n    '10' => 'Jive'\n];\n\nforeach ($current_event['dances'] as $dance_code) {\n    $dance_name = $dance_names[$dance_code] ?? $dance_code;\n    $dance_results[$dance_code] = [\n        'name' => $dance_name,\n        'code' => $dance_code,\n        'judge_scores' => [],\n        'final_rankings' => []\n    ];\n    \n    // 각 심사위원의 채점 파일에서 데이터 수집\n    foreach ($adjudicators as $judge) {\n        $score_file = \"data/{$comp_id}/{$event_no}_{$dance_code}_{$judge['code']}.adj\";\n        if (file_exists($score_file)) {\n            $content = file_get_contents($score_file);\n            $lines = explode(\"\\n\", $content);\n            \n            $judge_scores = [];\n            foreach ($lines as $line) {\n                $line = trim($line);\n                if (preg_match('/^(\\d+),(\\d+)$/', $line, $matches)) {\n                    $player_no = $matches[1];\n                    $rank = intval($matches[2]);\n                    $judge_scores[$player_no] = $rank;\n                }\n            }\n            \n            if (!empty($judge_scores)) {\n                $dance_results[$dance_code]['judge_scores'][$judge['code']] = $judge_scores;\n            }\n        }\n    }\n    \n    // 스케이팅 시스템으로 댄스별 순위 계산\n    $dance_results[$dance_code]['final_rankings'] = calculateSkatingRankings(\n        $dance_results[$dance_code]['judge_scores'], \n        $players\n    );\n}\n\n// 최종 순위 계산 (SUM of Places)\n$final_rankings = calculateFinalRankings($dance_results, $players);\n\n// 결과 반환\n$result = [\n    'event_info' => $current_event,\n    'players' => $players,\n    'adjudicators' => $adjudicators,\n    'dance_results' => $dance_results,\n    'final_rankings' => $final_rankings,\n    'debug' => [\n        'total_events' => count($events),\n        'event_found' => $current_event ? 'yes' : 'no',\n        'players_count' => count($players),\n        'adjudicators_count' => count($adjudicators),\n        'dance_results_count' => count($dance_results)\n    ]\n];\n\nerror_log(\"Final aggregation result: \" . json_encode($result));\n\n// 결과 보고서 생성\ngenerateProfessionalReport($result, $comp_id, $event_no);\n\necho json_encode($result);\n\n// 스케이팅 시스템으로 댄스별 순위 계산\nfunction calculateSkatingRankings($judge_scores, $players) {\n    $player_rankings = [];\n    \n    foreach ($players as $player) {\n        $player_no = $player['number'];\n        $rankings = [];\n        \n        // 각 심사위원이 부여한 순위 수집\n        foreach ($judge_scores as $judge_code => $scores) {\n            if (isset($scores[$player_no])) {\n                $rankings[] = $scores[$player_no];\n            }\n        }\n        \n        if (!empty($rankings)) {\n            // 스케이팅 시스템 계산\n            $skating_data = calculateSkatingData($rankings);\n            $player_rankings[$player_no] = $skating_data;\n        }\n    }\n    \n    // 순위 결정\n    $ranked_players = [];\n    foreach ($player_rankings as $player_no => $data) {\n        $ranked_players[] = [\n            'player_no' => $player_no,\n            'skating_data' => $data\n        ];\n    }\n    \n    // 스케이팅 시스템 규칙에 따라 정렬\n    usort($ranked_players, function($a, $b) {\n        $data_a = $a['skating_data'];\n        $data_b = $b['skating_data'];\n        \n        // 1위 수 비교\n        if ($data_a['place_1'] != $data_b['place_1']) {\n            return $data_b['place_1'] - $data_a['place_1'];\n        }\n        \n        // 1&2위 수 비교\n        if ($data_a['place_1_2'] != $data_b['place_1_2']) {\n            return $data_b['place_1_2'] - $data_a['place_1_2'];\n        }\n        \n        // 1to3위 수 비교\n        if ($data_a['place_1to3'] != $data_b['place_1to3']) {\n            return $data_b['place_1to3'] - $data_a['place_1to3'];\n        }\n        \n        // 1to3 합계 비교 (낮은 합계가 우위)\n        if ($data_a['sum_1to3'] != $data_b['sum_1to3']) {\n            return $data_a['sum_1to3'] - $data_b['sum_1to3'];\n        }\n        \n        // 1to4 비교\n        if ($data_a['place_1to4'] != $data_b['place_1to4']) {\n            return $data_b['place_1to4'] - $data_a['place_1to4'];\n        }\n        \n        // 1to4 합계 비교\n        if ($data_a['sum_1to4'] != $data_b['sum_1to4']) {\n            return $data_a['sum_1to4'] - $data_b['sum_1to4'];\n        }\n        \n        // 1to5 비교\n        if ($data_a['place_1to5'] != $data_b['place_1to5']) {\n            return $data_b['place_1to5'] - $data_a['place_1to5'];\n        }\n        \n        // 1to5 합계 비교\n        if ($data_a['sum_1to5'] != $data_b['sum_1to5']) {\n            return $data_a['sum_1to5'] - $data_b['sum_1to5'];\n        }\n        \n        // 1to6 비교\n        if ($data_a['place_1to6'] != $data_b['place_1to6']) {\n            return $data_b['place_1to6'] - $data_a['place_1to6'];\n        }\n        \n        // 1to6 합계 비교\n        return $data_a['sum_1to6'] - $data_b['sum_1to6'];\n    });\n    \n    // 최종 순위 부여\n    $final_rankings = [];\n    for ($i = 0; $i < count($ranked_players); $i++) {\n        $final_rankings[$ranked_players[$i]['player_no']] = $i + 1;\n    }\n    \n    return $final_rankings;\n}\n\n// 스케이팅 데이터 계산\nfunction calculateSkatingData($rankings) {\n    $place_1 = 0;\n    $place_1_2 = 0;\n    $place_1to3 = 0;\n    $place_1to4 = 0;\n    $place_1to5 = 0;\n    $place_1to6 = 0;\n    \n    $sum_1to3 = 0;\n    $sum_1to4 = 0;\n    $sum_1to5 = 0;\n    $sum_1to6 = 0;\n    \n    foreach ($rankings as $rank) {\n        if ($rank == 1) $place_1++;\n        if ($rank <= 2) $place_1_2++;\n        if ($rank <= 3) {\n            $place_1to3++;\n            $sum_1to3 += $rank;\n        }\n        if ($rank <= 4) {\n            $place_1to4++;\n            $sum_1to4 += $rank;\n        }\n        if ($rank <= 5) {\n            $place_1to5++;\n            $sum_1to5 += $rank;\n        }\n        if ($rank <= 6) {\n            $place_1to6++;\n            $sum_1to6 += $rank;\n        }\n    }\n    \n    return [\n        'place_1' => $place_1,\n        'place_1_2' => $place_1_2,\n        'place_1to3' => $place_1to3,\n        'place_1to4' => $place_1to4,\n        'place_1to5' => $place_1to5,\n        'place_1to6' => $place_1to6,\n        'sum_1to3' => $sum_1to3,\n        'sum_1to4' => $sum_1to4,\n        'sum_1to5' => $sum_1to5,\n        'sum_1to6' => $sum_1to6\n    ];\n}\n\n// 최종 순위 계산 (SUM of Places)\nfunction calculateFinalRankings($dance_results, $players) {\n    $player_sums = [];\n    \n    foreach ($players as $player) {\n        $player_no = $player['number'];\n        $sum = 0;\n        \n        foreach ($dance_results as $dance_code => $dance_data) {\n            if (isset($dance_data['final_rankings'][$player_no])) {\n                $sum += $dance_data['final_rankings'][$player_no];\n            }\n        }\n        \n        $player_sums[$player_no] = $sum;\n    }\n    \n    // SUM of Places로 정렬 (낮은 합계가 우위)\n    asort($player_sums);\n    \n    // 최종 순위 부여\n    $final_rankings = [];\n    $rank = 1;\n    foreach ($player_sums as $player_no => $sum) {\n        $final_rankings[] = [\n            'player_no' => $player_no,\n            'sum_of_places' => $sum,\n            'final_rank' => $rank++\n        ];\n    }\n    \n    return $final_rankings;\n}\n\n// 전문적인 결과 보고서 생성\nfunction generateProfessionalReport($result, $comp_id, $event_no) {\n    $event_info = $result['event_info'];\n    $players = $result['players'];\n    $adjudicators = $result['adjudicators'];\n    $dance_results = $result['dance_results'];\n    $final_rankings = $result['final_rankings'];\n    \n    // 댄스 이름 매핑\n    $dance_names = [\n        '2' => 'Tango',\n        '6' => 'Cha Cha Cha',\n        '7' => 'Samba', \n        '8' => 'Rumba',\n        '9' => 'Paso Doble',\n        '10' => 'Jive'\n    ];\n    \n    // HTML 보고서 생성 - DanceOffice 스타일\n    $html = '<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n<meta charset=\"UTF-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<title>' . $event_no . '. ' . htmlspecialchars($event_info['desc']) . ' - ' . $event_info['round'] . ' | DanceOffice</title>\n<meta name=\"description\" content=\"DanceOffice - ' . $event_no . '. ' . htmlspecialchars($event_info['desc']) . ' - ' . $event_info['round'] . '\">\n\n<style>\n* { margin: 0; padding: 0; box-sizing: border-box; }\nbody { \n    font-family: \"Noto Sans KR\", \"Malgun Gothic\", sans-serif; \n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n    min-height: 100vh;\n    color: #333;\n}\n.container {\n    max-width: 1200px;\n    margin: 0 auto;\n    background: white;\n    box-shadow: 0 20px 40px rgba(0,0,0,0.1);\n    border-radius: 20px;\n    overflow: hidden;\n    margin-top: 20px;\n    margin-bottom: 20px;\n}\n.header {\n    background: linear-gradient(135deg, #2c3e50 0%, #34495e 100%);\n    color: white;\n    padding: 30px;\n    text-align: center;\n    position: relative;\n}\n.header::before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: url(\"data:image/svg+xml,%3Csvg width=\"60\" height=\"60\" viewBox=\"0 0 60 60\" xmlns=\"http://www.w3.org/2000/svg\"%3E%3Cg fill=\"none\" fill-rule=\"evenodd\"%3E%3Cg fill=\"%23ffffff\" fill-opacity=\"0.05\"%3E%3Ccircle cx=\"30\" cy=\"30\" r=\"2\"/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\") repeat;\n}\n.header h1 {\n    font-size: 2.5em;\n    font-weight: 700;\n    margin-bottom: 10px;\n    position: relative;\n    z-index: 1;\n}\n.header .subtitle {\n    font-size: 1.2em;\n    opacity: 0.9;\n    position: relative;\n    z-index: 1;\n}\n.event-info {\n    background: #f8f9fa;\n    padding: 25px;\n    border-bottom: 3px solid #e9ecef;\n}\n.event-title {\n    font-size: 1.8em;\n    font-weight: 600;\n    color: #2c3e50;\n    margin-bottom: 15px;\n    display: flex;\n    align-items: center;\n    gap: 15px;\n}\n.event-badge {\n    background: linear-gradient(45deg, #ff6b6b, #ee5a24);\n    color: white;\n    padding: 8px 16px;\n    border-radius: 25px;\n    font-size: 0.7em;\n    font-weight: 600;\n    text-transform: uppercase;\n    letter-spacing: 1px;\n}\n.event-details {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n    gap: 20px;\n    margin-top: 20px;\n}\n.detail-item {\n    background: white;\n    padding: 15px;\n    border-radius: 10px;\n    border-left: 4px solid #3498db;\n    box-shadow: 0 2px 10px rgba(0,0,0,0.05);\n}\n.detail-label {\n    font-size: 0.9em;\n    color: #7f8c8d;\n    font-weight: 500;\n    margin-bottom: 5px;\n}\n.detail-value {\n    font-size: 1.1em;\n    color: #2c3e50;\n    font-weight: 600;\n}\n.results-section {\n    padding: 30px;\n}\n.section-title {\n    font-size: 1.5em;\n    font-weight: 600;\n    color: #2c3e50;\n    margin-bottom: 25px;\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n.section-title::before {\n    content: \"🏆\";\n    font-size: 1.2em;\n}\n.results-table {\n    width: 100%;\n    border-collapse: collapse;\n    background: white;\n    border-radius: 15px;\n    overflow: hidden;\n    box-shadow: 0 10px 30px rgba(0,0,0,0.1);\n}\n.results-table th {\n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n    color: white;\n    padding: 20px 15px;\n    text-align: center;\n    font-weight: 600;\n    font-size: 0.9em;\n    text-transform: uppercase;\n    letter-spacing: 1px;\n}\n.results-table td {\n    padding: 20px 15px;\n    text-align: center;\n    border-bottom: 1px solid #ecf0f1;\n    font-weight: 500;\n}\n.results-table tr:nth-child(even) {\n    background: #f8f9fa;\n}\n.results-table tr:hover {\n    background: #e3f2fd;\n    transform: scale(1.01);\n    transition: all 0.2s ease;\n}\n.rank-1 { background: linear-gradient(45deg, #ffd700, #ffed4e) !important; color: #333 !important; }\n.rank-2 { background: linear-gradient(45deg, #c0c0c0, #e8e8e8) !important; color: #333 !important; }\n.rank-3 { background: linear-gradient(45deg, #cd7f32, #daa520) !important; color: white !important; }\n.player-name {\n    font-weight: 600;\n    color: #2c3e50;\n    text-align: left;\n}\n.judge-score {\n    font-weight: 600;\n    font-size: 1.1em;\n}\n.total-points {\n    font-weight: 700;\n    font-size: 1.2em;\n    color: #e74c3c;\n}\n.adjudicators-section {\n    background: #f8f9fa;\n    padding: 30px;\n    border-top: 3px solid #e9ecef;\n}\n.adjudicators-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n    gap: 15px;\n    margin-top: 20px;\n}\n.adjudicator-card {\n    background: white;\n    padding: 20px;\n    border-radius: 10px;\n    box-shadow: 0 5px 15px rgba(0,0,0,0.08);\n    display: flex;\n    align-items: center;\n    gap: 15px;\n    transition: transform 0.2s ease;\n}\n.adjudicator-card:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 8px 25px rgba(0,0,0,0.15);\n}\n.adjudicator-code {\n    background: linear-gradient(45deg, #3498db, #2980b9);\n    color: white;\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-weight: 700;\n    font-size: 1.1em;\n}\n.adjudicator-name {\n    font-weight: 600;\n    color: #2c3e50;\n}\n.footer {\n    background: #2c3e50;\n    color: white;\n    padding: 25px;\n    text-align: center;\n    font-size: 0.9em;\n}\n.footer a {\n    color: #3498db;\n    text-decoration: none;\n}\n.footer a:hover {\n    text-decoration: underline;\n}\n@media (max-width: 768px) {\n    .container { margin: 10px; border-radius: 15px; }\n    .header h1 { font-size: 2em; }\n    .event-details { grid-template-columns: 1fr; }\n    .results-table { font-size: 0.9em; }\n    .results-table th, .results-table td { padding: 15px 10px; }\n    .adjudicators-grid { grid-template-columns: 1fr; }\n}\n</style>\n</head>\n<body>\n<div class=\"container\">\n<div class=\"header\">\n    <h1>2025 서초구청장배 댄스스포츠 대회</h1>\n    <div class=\"subtitle\">DanceOffice Competition Management System</div>\n</div>\n<div class=\"event-info\">\n    <div class=\"event-title\">\n        <span class=\"event-badge\">' . $event_info['round'] . '</span>\n        ' . $event_no . '. ' . htmlspecialchars($event_info['desc']) . '\n    </div>\n    <div class=\"event-details\">\n        <div class=\"detail-item\">\n            <div class=\"detail-label\">이벤트 번호</div>\n            <div class=\"detail-value\">' . $event_no . '</div>\n        </div>\n        <div class=\"detail-item\">\n            <div class=\"detail-label\">라운드</div>\n            <div class=\"detail-value\">' . $event_info['round'] . '</div>\n        </div>\n        <div class=\"detail-item\">\n            <div class=\"detail-label\">패널</div>\n            <div class=\"detail-value\">' . $event_info['panel'] . '</div>\n        </div>\n        <div class=\"detail-item\">\n            <div class=\"detail-label\">댄스</div>\n            <div class=\"detail-value\">' . implode(', ', array_map(function($code) use ($dance_names) { return $dance_names[$code] ?? $code; }, $event_info['dances'])) . '</div>\n        </div>\n        <div class=\"detail-item\">\n            <div class=\"detail-label\">참가자 수</div>\n            <div class=\"detail-value\">' . count($players) . '명</div>\n        </div>\n        <div class=\"detail-item\">\n            <div class=\"detail-label\">심사위원 수</div>\n            <div class=\"detail-value\">' . count($adjudicators) . '명</div>\n        </div>\n    </div>\n</div>\n<div class=\"results-section\">\n    <div class=\"section-title\">최종 결과</div>\n    <table class=\"results-table\">';\n\n    // 결과 테이블 헤더\n    $html .= '<thead><tr>\n<th>순위</th>\n<th>번호</th>\n<th>선수명</th>';\n\n    // 심사위원 컬럼 헤더\n    foreach ($adjudicators as $index => $judge) {\n        $html .= '<th>' . $judge['code'] . '</th>';\n    }\n\n    $html .= '<th>총점</th></tr></thead><tbody>';\n\n    // 결과 행들\n    foreach ($final_rankings as $index => $ranking) {\n        $player_no = $ranking['player_no'];\n        $place = $ranking['final_rank'];\n        $points = $ranking['sum_of_places'];\n        \n        // 선수 정보 찾기\n        $player_info = null;\n        foreach ($players as $player) {\n            if ($player['number'] == $player_no) {\n                $player_info = $player;\n                break;\n            }\n        }\n        \n        $player_name = $player_info ? ($player_info['male'] . ($player_info['female'] ? ' & ' . $player_info['female'] : '')) : \"선수 \" . $player_no;\n        if (empty(trim($player_name))) {\n            $player_name = \"선수 \" . $player_no;\n        }\n        \n        $rank_class = '';\n        if ($place == 1) $rank_class = 'rank-1';\n        elseif ($place == 2) $rank_class = 'rank-2';\n        elseif ($place == 3) $rank_class = 'rank-3';\n        \n        $html .= '<tr class=\"' . $rank_class . '\">\n<td><strong>' . $place . '</strong></td>\n<td><strong>' . $player_no . '</strong></td>\n<td class=\"player-name\">' . htmlspecialchars($player_name) . '</td>';\n\n        // 각 심사위원의 채점 결과\n        foreach ($adjudicators as $judge) {\n            $judge_code = $judge['code'];\n            $score = '';\n            \n            // 해당 심사위원의 채점 찾기\n            foreach ($dance_results as $dance_code => $dance_data) {\n                if (isset($dance_data['judge_scores'][$judge_code][$player_no])) {\n                    $score = $dance_data['judge_scores'][$judge_code][$player_no];\n                    break;\n                }\n            }\n            \n            $html .= '<td class=\"judge-score\">' . $score . '</td>';\n        }\n\n        $html .= '<td class=\"total-points\">' . $points . '</td></tr>';\n    }\n\n    $html .= '</tbody></table></div>';\n\n    // 심사위원 정보\n    $html .= '<div class=\"adjudicators-section\">\n    <div class=\"section-title\">심사위원</div>\n    <div class=\"adjudicators-grid\">';\n\n    // 심사위원 카드들\n    foreach ($adjudicators as $judge) {\n        $html .= '<div class=\"adjudicator-card\">\n            <div class=\"adjudicator-code\">' . $judge['code'] . '</div>\n            <div class=\"adjudicator-name\">' . htmlspecialchars($judge['name']) . '</div>\n        </div>';\n    }\n\n    $html .= '</div>\n</div>\n</div>\n<div class=\"footer\">\n    <p>&copy; 2025 <a href=\"http://www.danceoffice.net\">DanceOffice</a> - Competition Management System</p>\n    <p>Generated on ' . date('Y-m-d H:i:s') . ' | <a href=\"http://www.danceoffice.net\">DanceOffice.net</a></p>\n</div>\n</body>\n</html>';\n\n    // 보고서 저장\n    $report_dir = \"results_reports/{$comp_id}/Event_{$event_no}\";\n    if (!is_dir($report_dir)) {\n        mkdir($report_dir, 0755, true);\n    }\n    \n    $report_file = \"{$report_dir}/combined_report_{$event_no}.html\";\n    file_put_contents($report_file, $html);\n    \n    error_log(\"Professional report generated: \" . $report_file);\n}\n?>\n","size_bytes":22546},"comp/final_report_generator.js":{"content":"// 결승전 결과 리포트 생성 함수들\n\nfunction generateFinalReportHtml(data, eventInfo) {\n    const compInfo = window.compInfo || { title: '대회', date: '2025.09.13', place: '장소' };\n    \n    return `\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>${eventInfo.desc} - Final Results</title>\n    <style>\n        body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background: #f5f5f5; }\n        .container { max-width: 1200px; margin: 0 auto; background: white; padding: 30px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }\n        .header { text-align: center; margin-bottom: 30px; border-bottom: 2px solid #333; padding-bottom: 20px; }\n        .title { font-size: 24px; font-weight: bold; color: #333; margin-bottom: 10px; }\n        .subtitle { font-size: 18px; color: #666; margin-bottom: 5px; }\n        .date { font-size: 14px; color: #888; }\n        .results-section { margin-bottom: 40px; }\n        .section-title { font-size: 20px; font-weight: bold; color: #333; margin-bottom: 15px; border-left: 4px solid #007bff; padding-left: 10px; }\n        .final-table { width: 100%; border-collapse: collapse; margin-bottom: 30px; }\n        .final-table th, .final-table td { padding: 12px; text-align: center; border: 1px solid #ddd; }\n        .final-table th { background: #333; color: white; font-weight: bold; }\n        .final-table tbody tr:nth-child(even) { background: #f8f9fa; }\n        .final-table tbody tr:hover { background: #e9ecef; }\n        .final-table th:first-child, .final-table td:first-child { background: #e9ecef; font-weight: bold; }\n        .final-table th:nth-child(2), .final-table td:nth-child(2) { text-align: left; min-width: 200px; }\n        .final-table th:last-child, .final-table td:last-child { background: #ffd700; font-weight: bold; color: #333; }\n        .dance-tabs { display: flex; gap: 10px; margin-bottom: 20px; flex-wrap: wrap; }\n        .dance-tab { background: #f8f9fa; border: 1px solid #ddd; padding: 8px 16px; cursor: pointer; border-radius: 4px; }\n        .dance-tab.active { background: #007bff; color: white; }\n        .dance-details { display: none; }\n        .dance-details.active { display: block; }\n        .skating-table { width: 100%; border-collapse: collapse; font-size: 12px; }\n        .skating-table th, .skating-table td { padding: 6px; text-align: center; border: 1px solid #ddd; }\n        .skating-table th { background: #f8f9fa; font-weight: bold; }\n        .skating-table tbody tr:nth-child(even) { background: #f8f9fa; }\n        .skating-table th:first-child, .skating-table td:first-child { background: #e9ecef; font-weight: bold; }\n        .skating-table th:nth-child(2), .skating-table td:nth-child(2) { text-align: left; min-width: 150px; }\n        .skating-table th:last-child, .skating-table td:last-child { background: #ffd700; font-weight: bold; }\n        .footer { text-align: center; margin-top: 40px; padding-top: 20px; border-top: 1px solid #ddd; color: #666; font-size: 12px; }\n        @media print { body { background: white; } .container { box-shadow: none; } }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"header\">\n            <div class=\"title\">${compInfo.title}</div>\n            <div class=\"subtitle\">${eventInfo.desc} - Final Results</div>\n            <div class=\"date\">${compInfo.date} | ${compInfo.place}</div>\n        </div>\n        \n        <div class=\"results-section\">\n            <div class=\"section-title\">Final Rankings (Skating System)</div>\n            <table class=\"final-table\">\n                <thead>\n                    <tr>\n                        <th>Place</th>\n                        <th>Competitor Name(s)</th>\n                        <th>SUM of Places</th>\n                        ${Object.keys(data.dance_results).map(danceCode => {\n                            const dance = data.dance_results[danceCode];\n                            return `<th>${dance.name}</th>`;\n                        }).join('')}\n                    </tr>\n                </thead>\n                <tbody>\n                    ${data.final_rankings.map(ranking => {\n                        const player = data.players.find(p => p.number === ranking.player_no);\n                        const playerName = player ? `${player.male} / ${player.female}` : `선수 ${ranking.player_no}`;\n                        const danceRankings = Object.keys(data.dance_results).map(danceCode => {\n                            const dance = data.dance_results[danceCode];\n                            return dance.final_rankings[ranking.player_no] || '-';\n                        });\n                        \n                        return `\n                            <tr>\n                                <td>${ranking.final_rank}</td>\n                                <td>${playerName}</td>\n                                <td>${ranking.sum_of_places}</td>\n                                ${danceRankings.map(rank => `<td>${rank}</td>`).join('')}\n                            </tr>\n                        `;\n                    }).join('')}\n                </tbody>\n            </table>\n        </div>\n        \n        <div class=\"results-section\">\n            <div class=\"section-title\">Detailed Results by Dance</div>\n            <div class=\"dance-tabs\">\n                ${Object.keys(data.dance_results).map((danceCode, index) => {\n                    const dance = data.dance_results[danceCode];\n                    return `<div class=\"dance-tab ${index === 0 ? 'active' : ''}\" onclick=\"showDanceDetails('${danceCode}')\">${dance.name}</div>`;\n                }).join('')}\n            </div>\n            \n            ${Object.keys(data.dance_results).map((danceCode, index) => {\n                const dance = data.dance_results[danceCode];\n                return `\n                    <div class=\"dance-details ${index === 0 ? 'active' : ''}\" id=\"dance-${danceCode}\">\n                        <h4>${dance.name} - Skating System Results</h4>\n                        <table class=\"skating-table\">\n                            <thead>\n                                <tr>\n                                    <th>Cpl. No.</th>\n                                    <th>Competitor Name(s)</th>\n                                    ${data.adjudicators.map(adj => `<th>${adj.code}</th>`).join('')}\n                                    <th>1</th>\n                                    <th>1&2</th>\n                                    <th>1to3</th>\n                                    <th>1to4</th>\n                                    <th>1to5</th>\n                                    <th>1to6</th>\n                                    <th>Place</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                ${data.players.map(player => {\n                                    const playerNo = player.number;\n                                    const playerName = `${player.male} / ${player.female}`;\n                                    const judgeRanks = data.adjudicators.map(adj => {\n                                        const scores = dance.judge_scores[adj.code];\n                                        return scores && scores[playerNo] ? scores[playerNo] : '-';\n                                    });\n                                    const skatingData = calculateSkatingDataForPlayer(dance.judge_scores, playerNo);\n                                    const finalRank = dance.final_rankings[playerNo] || '-';\n                                    \n                                    return `\n                                        <tr>\n                                            <td>${playerNo}</td>\n                                            <td>${playerName}</td>\n                                            ${judgeRanks.map(rank => `<td>${rank}</td>`).join('')}\n                                            <td>${skatingData.place_1}</td>\n                                            <td>${skatingData.place_1_2}</td>\n                                            <td>${skatingData.place_1to3} (${skatingData.sum_1to3})</td>\n                                            <td>${skatingData.place_1to4} (${skatingData.sum_1to4})</td>\n                                            <td>${skatingData.place_1to5} (${skatingData.sum_1to5})</td>\n                                            <td>${skatingData.place_1to6} (${skatingData.sum_1to6})</td>\n                                            <td><strong>${finalRank}</strong></td>\n                                        </tr>\n                                    `;\n                                }).join('')}\n                            </tbody>\n                        </table>\n                    </div>\n                `;\n            }).join('')}\n        </div>\n        \n        <div class=\"footer\">\n            <p>&copy; 2025 DanceOffice - Powered by Seyoung Lee</p>\n        </div>\n    </div>\n    \n    <script>\n        function showDanceDetails(danceCode) {\n            // 모든 탭과 내용 비활성화\n            document.querySelectorAll('.dance-tab').forEach(tab => tab.classList.remove('active'));\n            document.querySelectorAll('.dance-details').forEach(details => details.classList.remove('active'));\n            \n            // 선택된 탭과 내용 활성화\n            document.querySelector('[onclick=\"showDanceDetails(\\\\'' + danceCode + '\\\\')\"]').classList.add('active');\n            document.getElementById('dance-' + danceCode).classList.add('active');\n        }\n        \n        function calculateSkatingDataForPlayer(judgeScores, playerNo) {\n            const rankings = [];\n            Object.values(judgeScores).forEach(scores => {\n                if (scores[playerNo]) {\n                    rankings.push(scores[playerNo]);\n                }\n            });\n            \n            if (rankings.length === 0) {\n                return { place_1: 0, place_1_2: 0, place_1to3: 0, place_1to4: 0, place_1to5: 0, place_1to6: 0, sum_1to3: 0, sum_1to4: 0, sum_1to5: 0, sum_1to6: 0 };\n            }\n            \n            let place_1 = 0, place_1_2 = 0, place_1to3 = 0, place_1to4 = 0, place_1to5 = 0, place_1to6 = 0;\n            let sum_1to3 = 0, sum_1to4 = 0, sum_1to5 = 0, sum_1to6 = 0;\n            \n            rankings.forEach(rank => {\n                if (rank === 1) place_1++;\n                if (rank <= 2) place_1_2++;\n                if (rank <= 3) { place_1to3++; sum_1to3 += rank; }\n                if (rank <= 4) { place_1to4++; sum_1to4 += rank; }\n                if (rank <= 5) { place_1to5++; sum_1to5 += rank; }\n                if (rank <= 6) { place_1to6++; sum_1to6 += rank; }\n            });\n            \n            return { place_1, place_1_2, place_1to3, place_1to4, place_1to5, place_1to6, sum_1to3, sum_1to4, sum_1to5, sum_1to6 };\n        }\n    </script>\n</body>\n</html>\n    `;\n}\n\n\n\n\n\n","size_bytes":10923},"comp/fullscreen_monitor.php":{"content":"<?php\n/**\n * 전체화면 모니터링 시스템\n * 결과를 자동으로 순환 표시하고 대기화면과 전환\n */\n\nrequire_once 'result_monitor.php';\n\n$monitor = new ResultMonitor();\n$pairs = $monitor->findResultPairs();\n\n// 현재 표시할 이벤트 ID (URL 파라미터로 받음)\n$currentEvent = isset($_GET['event']) ? $_GET['event'] : (count($pairs) > 0 ? $pairs[0]['event_id'] : '');\n$mode = isset($_GET['mode']) ? $_GET['mode'] : 'results'; // results, waiting, logo\n$autoRotate = isset($_GET['auto']) ? $_GET['auto'] : 'true';\n\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>전체화면 모니터링</title>\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n        \n        body {\n            font-family: 'Arial', sans-serif;\n            background: #000;\n            color: #fff;\n            overflow: hidden;\n            height: 100vh;\n        }\n        \n        .monitor-container {\n            width: 100vw;\n            height: 100vh;\n            position: relative;\n            display: flex;\n            flex-direction: column;\n            overflow: hidden;\n        }\n        \n        /* 대기화면 스타일 */\n        .waiting-screen {\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            text-align: center;\n            animation: pulse 2s infinite;\n            width: 100vw;\n            height: 100vh;\n            position: absolute;\n            top: 0;\n            left: 0;\n        }\n        \n        .waiting-screen h1 {\n            font-size: 4em;\n            margin-bottom: 30px;\n            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);\n        }\n        \n        .waiting-screen p {\n            font-size: 2em;\n            opacity: 0.9;\n        }\n        \n        /* 로고 화면 스타일 */\n        .logo-screen {\n            background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            text-align: center;\n            width: 100vw;\n            height: 100vh;\n            position: absolute;\n            top: 0;\n            left: 0;\n        }\n        \n        .logo-screen img {\n            max-width: 80%;\n            max-height: 60%;\n            margin-bottom: 30px;\n        }\n        \n        .logo-screen h1 {\n            font-size: 3em;\n            margin-bottom: 20px;\n        }\n        \n        .logo-screen p {\n            font-size: 1.5em;\n            opacity: 0.9;\n        }\n        \n        /* 결과 화면 스타일 */\n        .results-screen {\n            background: #f5f5f5;\n            color: #333;\n            overflow: hidden;\n            position: relative;\n            width: 100vw;\n            height: 100vh;\n        }\n        \n        .results-screen iframe {\n            width: 100vw;\n            height: 100vh;\n            border: none;\n            position: absolute;\n            top: 0;\n            left: 0;\n        }\n        \n        /* 제어 패널 */\n        .control-panel {\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            z-index: 1000;\n            background: rgba(0,0,0,0.8);\n            padding: 15px;\n            border-radius: 10px;\n            display: flex;\n            gap: 10px;\n            opacity: 0;\n            transition: opacity 0.3s;\n        }\n        \n        .control-panel:hover {\n            opacity: 1;\n        }\n        \n        .control-btn {\n            background: #667eea;\n            color: white;\n            border: none;\n            padding: 10px 15px;\n            border-radius: 5px;\n            cursor: pointer;\n            font-size: 14px;\n            transition: background 0.3s;\n        }\n        \n        .control-btn:hover {\n            background: #5a6fd8;\n        }\n        \n        .control-btn.active {\n            background: #28a745;\n        }\n        \n        .control-btn.danger {\n            background: #dc3545;\n        }\n        \n        /* 상태 표시 */\n        .status-bar {\n            position: fixed;\n            bottom: 20px;\n            left: 20px;\n            background: rgba(0,0,0,0.8);\n            color: white;\n            padding: 10px 15px;\n            border-radius: 5px;\n            font-size: 14px;\n        }\n        \n        /* 애니메이션 */\n        @keyframes pulse {\n            0% { transform: scale(1); }\n            50% { transform: scale(1.05); }\n            100% { transform: scale(1); }\n        }\n        \n        @keyframes fadeIn {\n            from { opacity: 0; transform: translateY(20px); }\n            to { opacity: 1; transform: translateY(0); }\n        }\n        \n        .fade-in {\n            animation: fadeIn 0.5s ease-in-out;\n        }\n        \n        /* 반응형 */\n        @media (max-width: 768px) {\n            .waiting-screen h1 { font-size: 2.5em; }\n            .waiting-screen p { font-size: 1.5em; }\n            .logo-screen h1 { font-size: 2em; }\n            .logo-screen p { font-size: 1.2em; }\n        }\n    </style>\n</head>\n<body>\n    <div class=\"monitor-container\">\n        <!-- 대기화면 -->\n        <div id=\"waitingScreen\" class=\"waiting-screen\" style=\"display: none;\">\n            <h1>🏆 2025 경기도지사배 전국장애인댄스스포츠선수권대회</h1>\n            <p>결과를 기다려주세요...</p>\n        </div>\n        \n        <!-- 로고 화면 -->\n        <div id=\"logoScreen\" class=\"logo-screen\" style=\"display: none;\">\n            <img src=\"assets/danceoffice-logo.png\" alt=\"DanceOffice 로고\" onerror=\"this.style.display='none'\">\n            <h1>DanceOffice</h1>\n            <p>댄스스포츠 관리 시스템</p>\n        </div>\n        \n        <!-- 결과 화면 -->\n        <div id=\"resultsScreen\" class=\"results-screen\">\n            <?php if ($currentEvent && $mode === 'results'): ?>\n                <iframe src=\"combined_result_<?php echo htmlspecialchars($currentEvent); ?>.html\" \n                        id=\"resultFrame\"></iframe>\n            <?php else: ?>\n                <div style=\"display: flex; justify-content: center; align-items: center; height: 100vh; font-size: 2em; color: #666;\">\n                    결과를 불러오는 중...\n                </div>\n            <?php endif; ?>\n        </div>\n    </div>\n    \n    <!-- 제어 패널 -->\n    <div class=\"control-panel\" id=\"controlPanel\">\n        <button class=\"control-btn\" onclick=\"showMode('waiting')\">⏳ 대기화면</button>\n        <button class=\"control-btn\" onclick=\"showMode('logo')\">🏢 로고</button>\n        <button class=\"control-btn\" onclick=\"showMode('results')\">📊 결과</button>\n        <button class=\"control-btn\" onclick=\"toggleAutoRotate()\">🔄 자동순환</button>\n        <button class=\"control-btn\" onclick=\"previousEvent()\">⬅️ 이전</button>\n        <button class=\"control-btn\" onclick=\"nextEvent()\">다음 ➡️</button>\n        <button class=\"control-btn danger\" onclick=\"exitFullscreen()\">❌ 종료</button>\n    </div>\n    \n    <!-- 상태 표시 -->\n    <div class=\"status-bar\" id=\"statusBar\">\n        현재 모드: <span id=\"currentMode\"><?php echo $mode; ?></span> | \n        이벤트: <span id=\"currentEvent\"><?php echo $currentEvent; ?></span> | \n        자동순환: <span id=\"autoStatus\"><?php echo $autoRotate === 'true' ? 'ON' : 'OFF'; ?></span>\n    </div>\n\n    <script>\n        let currentMode = '<?php echo $mode; ?>';\n        let currentEvent = '<?php echo $currentEvent; ?>';\n        let autoRotate = <?php echo $autoRotate === 'true' ? 'true' : 'false'; ?>;\n        let eventIndex = 0;\n        let events = <?php echo json_encode(array_column($pairs, 'event_id')); ?>;\n        let rotationInterval;\n        \n        // 현재 이벤트 인덱스 찾기\n        eventIndex = events.indexOf(currentEvent);\n        if (eventIndex === -1) eventIndex = 0;\n        \n        // 모드 전환 함수\n        function showMode(mode) {\n            // 모든 화면 숨기기\n            document.getElementById('waitingScreen').style.display = 'none';\n            document.getElementById('logoScreen').style.display = 'none';\n            document.getElementById('resultsScreen').style.display = 'none';\n            \n            // 선택된 모드 표시\n            currentMode = mode;\n            document.getElementById('currentMode').textContent = mode;\n            \n            switch(mode) {\n                case 'waiting':\n                    document.getElementById('waitingScreen').style.display = 'flex';\n                    break;\n                case 'logo':\n                    document.getElementById('logoScreen').style.display = 'flex';\n                    break;\n                case 'results':\n                    document.getElementById('resultsScreen').style.display = 'block';\n                    loadCurrentEvent();\n                    break;\n            }\n            \n            // 제어 버튼 활성화 상태 업데이트\n            updateControlButtons();\n        }\n        \n        // 이벤트 로드 함수\n        function loadCurrentEvent() {\n            if (events.length > 0 && eventIndex >= 0 && eventIndex < events.length) {\n                currentEvent = events[eventIndex];\n                document.getElementById('currentEvent').textContent = currentEvent;\n                \n                const iframe = document.getElementById('resultFrame');\n                if (iframe) {\n                    iframe.src = `combined_result_${currentEvent}.html`;\n                }\n            }\n        }\n        \n        // 이전 이벤트\n        function previousEvent() {\n            if (events.length > 0) {\n                eventIndex = (eventIndex - 1 + events.length) % events.length;\n                loadCurrentEvent();\n            }\n        }\n        \n        // 다음 이벤트\n        function nextEvent() {\n            if (events.length > 0) {\n                eventIndex = (eventIndex + 1) % events.length;\n                loadCurrentEvent();\n            }\n        }\n        \n        // 자동 순환 토글\n        function toggleAutoRotate() {\n            autoRotate = !autoRotate;\n            document.getElementById('autoStatus').textContent = autoRotate ? 'ON' : 'OFF';\n            \n            if (autoRotate) {\n                startAutoRotation();\n            } else {\n                stopAutoRotation();\n            }\n        }\n        \n        // 자동 순환 시작\n        function startAutoRotation() {\n            if (rotationInterval) clearInterval(rotationInterval);\n            \n            rotationInterval = setInterval(() => {\n                if (currentMode === 'results' && events.length > 0) {\n                    nextEvent();\n                }\n            }, 10000); // 10초마다 순환\n        }\n        \n        // 자동 순환 중지\n        function stopAutoRotation() {\n            if (rotationInterval) {\n                clearInterval(rotationInterval);\n                rotationInterval = null;\n            }\n        }\n        \n        // 제어 버튼 상태 업데이트\n        function updateControlButtons() {\n            const buttons = document.querySelectorAll('.control-btn');\n            buttons.forEach(btn => btn.classList.remove('active'));\n            \n            // 현재 모드 버튼 활성화\n            const modeButtons = {\n                'waiting': buttons[0],\n                'logo': buttons[1],\n                'results': buttons[2]\n            };\n            \n            if (modeButtons[currentMode]) {\n                modeButtons[currentMode].classList.add('active');\n            }\n        }\n        \n        // 전체화면 종료\n        function exitFullscreen() {\n            if (document.exitFullscreen) {\n                document.exitFullscreen();\n            } else if (document.webkitExitFullscreen) {\n                document.webkitExitFullscreen();\n            } else if (document.mozCancelFullScreen) {\n                document.mozCancelFullScreen();\n            } else if (document.msExitFullscreen) {\n                document.msExitFullscreen();\n            }\n        }\n        \n        // 키보드 단축키\n        document.addEventListener('keydown', function(e) {\n            switch(e.key) {\n                case 'F11':\n                    e.preventDefault();\n                    if (!document.fullscreenElement) {\n                        document.documentElement.requestFullscreen();\n                    } else {\n                        exitFullscreen();\n                    }\n                    break;\n                case 'ArrowLeft':\n                    previousEvent();\n                    break;\n                case 'ArrowRight':\n                    nextEvent();\n                    break;\n                case ' ':\n                    e.preventDefault();\n                    toggleAutoRotate();\n                    break;\n                case '1':\n                    showMode('waiting');\n                    break;\n                case '2':\n                    showMode('logo');\n                    break;\n                case '3':\n                    showMode('results');\n                    break;\n                case 'Escape':\n                    exitFullscreen();\n                    break;\n            }\n        });\n        \n        // 초기화\n        document.addEventListener('DOMContentLoaded', function() {\n            showMode(currentMode);\n            \n            if (autoRotate) {\n                startAutoRotation();\n            }\n            \n            // 3초 후 제어 패널 숨기기\n            setTimeout(() => {\n                document.getElementById('controlPanel').style.opacity = '0';\n            }, 3000);\n        });\n        \n        // 마우스 움직임 감지로 제어 패널 표시\n        let mouseTimer;\n        document.addEventListener('mousemove', function() {\n            document.getElementById('controlPanel').style.opacity = '1';\n            clearTimeout(mouseTimer);\n            mouseTimer = setTimeout(() => {\n                document.getElementById('controlPanel').style.opacity = '0';\n            }, 3000);\n        });\n    </script>\n</body>\n</html>\n","size_bytes":14400},"comp/get_competition_settings.php":{"content":"<?php\n/**\n * 대회 설정 조회 API\n */\n\nheader('Content-Type: application/json');\n\n$settingsFile = __DIR__ . '/uploads/competition_settings.json';\n\n// 기본 설정\n$defaultSettings = [\n    'competition_title' => '2025 경기도지사배 전국장애인댄스스포츠선수권대회',\n    'competition_subtitle' => 'DanceOffice 댄스스포츠 관리 시스템'\n];\n\n// 설정 로드\n$settings = $defaultSettings;\nif (file_exists($settingsFile)) {\n    $loadedSettings = json_decode(file_get_contents($settingsFile), true);\n    if ($loadedSettings) {\n        $settings = array_merge($defaultSettings, $loadedSettings);\n    }\n}\n\necho json_encode([\n    'success' => true,\n    'settings' => $settings\n]);\n?>\n\n\n\n\n","size_bytes":711},"comp/get_dance_done.php":{"content":"<?php\nheader('Content-Type: application/json');\nheader('Cache-Control: no-cache, must-revalidate');\n\n$comp_id = $_GET['comp_id'] ?? '';\n$event_no = $_GET['event_no'] ?? '';\n\n// BOM 제거\nif (substr($event_no, 0, 3) === \"\\xEF\\xBB\\xBF\") {\n    $event_no = substr($event_no, 3);\n}\n\nif (!$comp_id || !$event_no) {\n    http_response_code(400);\n    echo json_encode(['error' => '필수 파라미터 누락']);\n    exit;\n}\n\n$data_dir = __DIR__ . \"/data/$comp_id\";\nif (!is_dir($data_dir)) {\n    http_response_code(404);\n    echo json_encode(['error' => '대회 디렉토리 없음']);\n    exit;\n}\n\n$file = \"$data_dir/dance_done_$event_no.json\";\nif (!file_exists($file)) {\n    // 파일이 없으면 빈 객체 반환\n    echo json_encode([]);\n    exit;\n}\n\n$content = file_get_contents($file);\nif ($content === false) {\n    http_response_code(500);\n    echo json_encode(['error' => '파일 읽기 실패']);\n    exit;\n}\n\n$json = json_decode($content, true);\nif (json_last_error() !== JSON_ERROR_NONE) {\n    http_response_code(500);\n    echo json_encode(['error' => 'JSON 파싱 실패: ' . json_last_error_msg()]);\n    exit;\n}\n\necho json_encode($json ?: []);\n?>\n\n","size_bytes":1154},"comp/get_event_info.php":{"content":"<?php\nheader('Content-Type: application/json; charset=utf-8');\n$comp_id = $_GET['comp_id'] ?? '';\n\n// 정규화: BOM 제거 및 허용 문자만 유지\n$comp_id = preg_replace('/\\x{FEFF}/u', '', $comp_id);\n$comp_id = preg_replace('/[^0-9\\-]/', '', $comp_id);\n$comp_id = trim($comp_id);\n\nif (!$comp_id) {\n    echo json_encode(['success' => false, 'error' => 'comp_id 누락']);\n    exit;\n}\n\nif (!preg_match('/^\\d{8}-\\d+$/', $comp_id)) {\n    echo json_encode(['success' => false, 'error' => '잘못된 대회 ID']);\n    exit;\n}\n\n$data_dir = __DIR__ . \"/data/$comp_id\";\n$event_info_file = \"$data_dir/event_info.json\";\n\n// 이벤트 정보 로드\n$event_info = [];\nif (file_exists($event_info_file)) {\n    $content = file_get_contents($event_info_file);\n    $event_info = json_decode($content, true) ?: [];\n}\n\necho json_encode(['success' => true, 'event_info' => $event_info]);\n?>\n","size_bytes":877},"comp/get_event_schedule.php":{"content":"<?php\n/**\n * 이벤트 순서 조회 API\n */\n\nheader('Content-Type: application/json');\n\n// 이벤트 순서 파일 경로\n$eventFile = __DIR__ . '/uploads/event_schedule.txt';\n$statusFile = __DIR__ . '/uploads/event_status.json';\n\n$events = [];\n\nif (file_exists($eventFile)) {\n    $lines = file($eventFile, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    \n    // 상태 로드\n    $status = [];\n    if (file_exists($statusFile)) {\n        $status = json_decode(file_get_contents($statusFile), true) ?: [];\n    }\n    \n    foreach ($lines as $line) {\n        $parts = explode(',', $line);\n        if (count($parts) >= 3) {\n            $eventId = trim($parts[0]);\n            $showResult = trim($parts[2]) === '1'; // 파일에서 읽은 값 우선\n            \n            $events[] = [\n                'id' => $eventId,\n                'name' => trim($parts[1]),\n                'show_result' => $showResult // 파일에서 읽은 값 사용\n            ];\n        }\n    }\n}\n\necho json_encode([\n    'success' => true,\n    'events' => $events,\n    'total' => count($events)\n]);\n?>\n","size_bytes":1084},"comp/get_event_status.php":{"content":"<?php\n/**\n * 이벤트 상태 조회 API\n */\n\nheader('Content-Type: application/json');\n\n$eventId = $_GET['event_id'] ?? '';\n\nif (!$eventId) {\n    echo json_encode(['success' => false, 'message' => '이벤트 ID가 필요합니다.']);\n    exit;\n}\n\n// 이벤트 상태 파일 경로\n$statusFile = __DIR__ . '/uploads/event_status.json';\n\n// 상태 로드\n$status = [];\nif (file_exists($statusFile)) {\n    $status = json_decode(file_get_contents($statusFile), true) ?: [];\n}\n\n$showResult = isset($status[$eventId]) ? $status[$eventId] : false;\n\necho json_encode([\n    'success' => true,\n    'event_id' => $eventId,\n    'show_result' => $showResult,\n    'message' => $showResult ? '결과 발표 예정' : '결과 발표 안함'\n]);\n?>\n\n\n\n\n","size_bytes":738},"comp/get_hits.php":{"content":"<?php\nheader('Content-Type: application/json; charset=utf-8');\n$comp_id = $_GET['comp_id'] ?? '';\n$event_no = $_GET['eventNo'] ?? '';\n\n// 정규화: BOM 제거 및 허용 문자만 유지\n$comp_id = preg_replace('/\\x{FEFF}/u', '', $comp_id);\n$event_no = preg_replace('/\\x{FEFF}/u', '', $event_no);\n$comp_id = preg_replace('/[^0-9\\-]/', '', $comp_id);\n$event_no = preg_replace('/\\D+/', '', $event_no);\n$comp_id = trim($comp_id);\n$event_no = trim($event_no);\n\nif (!$comp_id || !$event_no) {\n    echo json_encode(['success' => false, 'error' => 'comp_id 또는 eventNo 누락']);\n    exit;\n}\n\nif (!preg_match('/^\\d{8}-\\d+$/', $comp_id)) {\n    echo json_encode(['success' => false, 'error' => '잘못된 대회 ID']);\n    exit;\n}\n\n$data_dir = __DIR__ . \"/data/$comp_id\";\n$file = \"$data_dir/players_hits_{$event_no}.json\";\n\nif (!is_file($file)) {\n    echo json_encode(['success' => false, 'error' => '히트 파일이 없습니다']);\n    exit;\n}\n\n$content = file_get_contents($file);\nif ($content === false) {\n    echo json_encode(['success' => false, 'error' => '파일 읽기 실패']);\n    exit;\n}\n\n$hits = json_decode($content, true);\nif ($hits === null) {\n    echo json_encode(['success' => false, 'error' => 'JSON 파싱 실패']);\n    exit;\n}\n\necho json_encode(['success' => true, 'hits' => $hits]);\n?>\n","size_bytes":1306},"comp/get_judge_status.php":{"content":"<?php\nheader('Content-Type: application/json; charset=utf-8');\n\n$comp_id = $_GET['comp_id'] ?? '';\n$event_no = $_GET['event_no'] ?? '';\n\nif (!$comp_id || !$event_no) {\n    echo json_encode(['success' => false, 'error' => '필수 매개변수 누락']);\n    exit;\n}\n\n$data_dir = __DIR__ . \"/data/$comp_id\";\n\n// 이벤트 번호 정규화 (하이픈 포함 허용)\n$event_no = preg_replace('/[^0-9\\-]/', '', $event_no);\n\n// 심사위원 목록 로드\n$adjudicator_file = \"$data_dir/adjudicators.txt\";\n$panel_map_file = \"$data_dir/panel_list.json\";\n$runorder_file = \"$data_dir/RunOrder_Tablet.txt\";\n\n$adjudicators = [];\n$panel_map = [];\n$event_panel = '';\n\n// 심사위원 정보 로드\nif (file_exists($adjudicator_file)) {\n    $lines = file($adjudicator_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    foreach ($lines as $line) {\n        $cols = array_map('trim', explode(',', $line));\n        if (count($cols) >= 2) {\n            $adjudicators[$cols[0]] = [\n                'code' => $cols[0],\n                'name' => $cols[1],\n                'nation' => $cols[2] ?? ''\n            ];\n        }\n    }\n}\n\n// 패널 매핑 로드\nif (file_exists($panel_map_file)) {\n    $panel_map = json_decode(file_get_contents($panel_map_file), true) ?: [];\n}\n\n// 이벤트의 패널 정보 찾기\nif (file_exists($runorder_file)) {\n    $lines = file($runorder_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    foreach ($lines as $line) {\n        $cols = array_map('trim', explode(',', $line));\n        $no = preg_replace('/\\x{FEFF}/u', '', $cols[0] ?? '');\n        $detail_no = $cols[13] ?? '';\n        \n        // 이벤트 번호 매칭 (세부번호 우선)\n        $file_event_no = !empty($detail_no) ? $detail_no : preg_replace('/\\D+/', '', $no);\n        \n        if ($file_event_no === $event_no) {\n            $event_panel = strtoupper($cols[11] ?? '');\n            break;\n        }\n    }\n}\n\n// 해당 패널의 심사위원들 찾기\n$event_judges = [];\nforeach ($panel_map as $mapping) {\n    if (strtoupper($mapping['panel_code'] ?? '') === $event_panel) {\n        $judge_code = $mapping['adj_code'] ?? '';\n        if (isset($adjudicators[$judge_code])) {\n            $event_judges[] = $judge_code;\n        }\n    }\n}\n\n// 각 심사위원의 채점 상태 확인\n$judge_status = [];\nforeach ($event_judges as $judge_code) {\n    $status = getJudgeScoringStatus($data_dir, $event_no, $judge_code);\n    $judge_status[$judge_code] = $status;\n}\n\n// 디버그 정보 추가\nerror_log(\"get_judge_status.php Debug - Event: $event_no, Panel: $event_panel, Judges: \" . implode(',', $event_judges));\nerror_log(\"Judge status for $event_no: \" . json_encode($judge_status));\n\necho json_encode([\n    'success' => true,\n    'status' => $judge_status,\n    'event_panel' => $event_panel,\n    'event_judges' => $event_judges,\n    'debug' => [\n        'event_no' => $event_no,\n        'data_dir' => $data_dir,\n        'adjudicator_file_exists' => file_exists($adjudicator_file),\n        'panel_map_file_exists' => file_exists($panel_map_file),\n        'runorder_file_exists' => file_exists($runorder_file)\n    ]\n]);\n\nfunction getJudgeScoringStatus($data_dir, $event_no, $judge_code) {\n    // 댄스 목록 가져오기 (RunOrder_Tablet.txt에서)\n    $dances = getDancesForEvent($data_dir, $event_no);\n    \n    if (empty($dances)) {\n        error_log(\"getJudgeScoringStatus: No dances found for $event_no\");\n        return ['class' => 'offline', 'text' => '오프라인'];\n    }\n    \n    $total_dances = count($dances);\n    $completed_dances = 0;\n    \n    // 각 댄스별 .adj 파일 확인\n    foreach ($dances as $dance) {\n        $adj_file = \"$data_dir/{$event_no}_{$dance}_{$judge_code}.adj\";\n        error_log(\"Checking file: $adj_file - \" . (file_exists($adj_file) ? 'EXISTS' : 'NOT FOUND'));\n        if (file_exists($adj_file)) {\n            $completed_dances++;\n        }\n    }\n    \n    // 디버그: 상태 계산 로그\n    error_log(\"Judge Status Debug - Event: $event_no, Judge: $judge_code, Dances: \" . implode(',', $dances) . \", Completed: $completed_dances/$total_dances\");\n    \n    if ($completed_dances === 0) {\n        return ['class' => 'waiting', 'text' => '대기'];\n    } elseif ($completed_dances < $total_dances) {\n        return ['class' => 'scoring', 'text' => \"{$completed_dances}/{$total_dances}\"];\n    } else {\n        return ['class' => 'completed', 'text' => '완료'];\n    }\n}\n\nfunction getDancesForEvent($data_dir, $event_no) {\n    // 1-1, 1-2 이벤트에 대한 하드코딩된 테스트\n    if ($event_no === '1-1') {\n        error_log(\"getDancesForEvent: Hardcoded test for 1-1, returning [2]\");\n        return [2];\n    }\n    if ($event_no === '1-2') {\n        error_log(\"getDancesForEvent: Hardcoded test for 1-2, returning [1,2]\");\n        return [1, 2];\n    }\n    \n    $runorder_file = \"$data_dir/RunOrder_Tablet.txt\";\n    \n    if (!file_exists($runorder_file)) {\n        error_log(\"getDancesForEvent: RunOrder_Tablet.txt not found\");\n        return [];\n    }\n    \n    $lines = file($runorder_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    foreach ($lines as $line) {\n        $cols = array_map('trim', explode(',', $line));\n        $no = preg_replace('/\\x{FEFF}/u', '', $cols[0] ?? '');\n        $detail_no = $cols[13] ?? '';\n        \n        // 이벤트 번호 매칭\n        $file_event_no = !empty($detail_no) ? $detail_no : preg_replace('/\\D+/', '', $no);\n        \n        error_log(\"getDancesForEvent: Comparing '$file_event_no' with '$event_no' (line: \" . trim($line) . \")\");\n        \n        if ($file_event_no === $event_no) {\n            $dances = [];\n            // 6-10번째 컬럼의 댄스 코드 수집\n            for ($i = 6; $i <= 10; $i++) {\n                if (isset($cols[$i]) && is_numeric($cols[$i]) && $cols[$i] > 0) {\n                    $dances[] = $cols[$i];\n                }\n            }\n            error_log(\"getDancesForEvent: Found dances for $event_no: \" . implode(',', $dances));\n            return $dances;\n        }\n    }\n    \n    error_log(\"getDancesForEvent: No dances found for $event_no\");\n    return [];\n}\n?>\n","size_bytes":6098},"comp/get_players.php":{"content":"<?php\nheader('Content-Type: application/json');\nerror_reporting(E_ALL);\nini_set('display_errors', 1);\n\n$comp_id = $_GET['comp_id'] ?? '';\n$event_no = $_GET['event_no'] ?? '';\n\nif (empty($comp_id) || empty($event_no)) {\n    echo json_encode(['success' => false, 'message' => 'Missing parameters']);\n    exit;\n}\n\n// 대회 데이터 디렉토리\n$data_dir = __DIR__ . \"/data/$comp_id\";\n$players_file = \"$data_dir/players_$event_no.txt\";\n\ntry {\n    if (!file_exists($players_file)) {\n        echo json_encode(['success' => true, 'players' => []]);\n        exit;\n    }\n    \n    // 선수 파일 읽기\n    $content = file_get_contents($players_file);\n    $player_numbers = array_filter(explode(\"\\n\", $content));\n    \n    // 선수 이름 정보 (임시로 기본값 사용)\n    $competitors = [];\n    \n    // 기본 선수 이름 생성\n    foreach ($player_numbers as $number) {\n        $number = trim($number);\n        if (!empty($number)) {\n            $competitors[$number] = \"선수 $number\";\n        }\n    }\n    \n    // 선수 목록 생성\n    $players = [];\n    foreach ($player_numbers as $number) {\n        $number = trim($number);\n        if (!empty($number)) {\n            $players[] = [\n                'number' => $number,\n                'name' => $competitors[$number] ?? \"선수 $number\"\n            ];\n        }\n    }\n    \n    echo json_encode(['success' => true, 'players' => $players]);\n    \n} catch (Exception $e) {\n    echo json_encode(['success' => false, 'message' => 'Error: ' . $e->getMessage()]);\n}\n?>\n","size_bytes":1525},"comp/get_round_info.php":{"content":"<?php\nheader('Content-Type: application/json; charset=utf-8');\n\n$comp_id = $_GET['comp_id'] ?? '';\n$comp_id = preg_replace('/[^\\d-]/', '', $comp_id);\n\nif (!$comp_id) {\n    echo json_encode(['success' => false, 'error' => 'comp_id 누락']);\n    exit;\n}\n\n$data_dir = __DIR__ . \"/data/$comp_id\";\n$round_info_file = \"$data_dir/round_info.json\";\n\nif (file_exists($round_info_file)) {\n    $content = file_get_contents($round_info_file);\n    $round_data = json_decode($content, true);\n    if (json_last_error() === JSON_ERROR_NONE && isset($round_data['round_info'])) {\n        echo json_encode(['success' => true, 'round_info' => $round_data['round_info']]);\n    } else {\n        echo json_encode(['success' => false, 'error' => 'JSON 파싱 오류']);\n    }\n} else {\n    echo json_encode(['success' => true, 'round_info' => []]);\n}\n?>\n","size_bytes":831},"comp/index.php":{"content":"<?php\nsession_start();\nrequire_once 'auth.php';\n\n// 오너 권한 확인\nrequirePermission('create_comp');\n\n$user = $_SESSION['user'];\n\n// 대회 목록 및 신규 대회 생성\n$data_dir = __DIR__ . '/data';\nfunction load_competitions($data_dir) {\n    $comps = [];\n    if (!is_dir($data_dir)) return $comps;\n    foreach (glob($data_dir . \"/*/info.json\") as $info_file) {\n        $comp_id = basename(dirname($info_file));\n        $info = json_decode(file_get_contents($info_file), true);\n        if ($info) {\n            $info['id'] = $comp_id;\n            $comps[] = $info;\n        }\n    }\n    usort($comps, function($a, $b) {\n        return ($b['created'] ?? 0) <=> ($a['created'] ?? 0);\n    });\n    return $comps;\n}\nif ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['add_comp'])) {\n    $title = trim($_POST['title'] ?? '');\n    $date = trim($_POST['date'] ?? '');\n    $place = trim($_POST['place'] ?? '');\n    $host = trim($_POST['host'] ?? '');\n    $country = trim($_POST['country'] ?? '');\n    $assigned_admin = trim($_POST['assigned_admin'] ?? '');\n    \n    if ($title && $date && $place && $host && $country && $assigned_admin) {\n        $today = date('Ymd');\n        $seq = 1;\n        do {\n            $comp_id = sprintf(\"%s-%03d\", $today, $seq++);\n            $comp_path = \"$data_dir/$comp_id\";\n        } while (file_exists($comp_path));\n        mkdir($comp_path, 0777, true);\n        $info = [\n            'title' => $title,\n            'date' => $date,\n            'place' => $place,\n            'host' => $host,\n            'country' => $country,\n            'assigned_admin' => $assigned_admin,\n            'created' => time()\n        ];\n        file_put_contents(\"$comp_path/info.json\", json_encode($info, JSON_UNESCAPED_UNICODE|JSON_PRETTY_PRINT));\n        header(\"Location: dashboard.php?comp_id=$comp_id\");\n        exit;\n    } else {\n        $error = \"모든 항목을 입력해주세요.\";\n    }\n}\n$comps = load_competitions($data_dir);\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>대회 현황판 | danceoffice.net COMP</title>\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded\" rel=\"stylesheet\" />\n    <style>\n        /* PC 버전 스타일 */\n        @media (min-width: 1024px) {\n            body {\n                background: #181B20;\n                min-height: 100vh;\n                font-size: 14px;\n                line-height: 1.5;\n                margin: 0;\n                padding: 0;\n                font-family: 'Noto Sans KR', sans-serif;\n            }\n            \n            .comp-container {\n                max-width: 1200px;\n                margin: 0 auto;\n                padding: 20px;\n            }\n            \n            .comp-header {\n                background: linear-gradient(135deg, #1a1d21 0%, #181B20 100%);\n                border-radius: 15px;\n                padding: 25px;\n                margin-bottom: 20px;\n                box-shadow: 0 8px 25px rgba(3, 199, 90, 0.15);\n                border: 2px solid #03C75A;\n                position: relative;\n                overflow: hidden;\n                text-align: center;\n            }\n            \n            .comp-header::before {\n                content: '';\n                position: absolute;\n                top: -50%;\n                right: -50%;\n                width: 200%;\n                height: 200%;\n                background: radial-gradient(circle, rgba(3, 199, 90, 0.08) 0%, transparent 70%);\n                animation: float 6s ease-in-out infinite;\n            }\n            \n            @keyframes float {\n                0%, 100% { transform: translateY(0px) rotate(0deg); }\n                50% { transform: translateY(-15px) rotate(180deg); }\n            }\n            \n            .comp-title {\n                color: #03C75A;\n                font-size: 24px;\n                margin: 0 0 10px 0;\n                position: relative;\n                z-index: 2;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                gap: 10px;\n            }\n            \n            .comp-subtitle {\n                color: #00BFAE;\n                font-size: 16px;\n                margin: 0;\n                position: relative;\n                z-index: 2;\n            }\n            \n            .comp-nav {\n                display: flex;\n                gap: 15px;\n                margin-top: 20px;\n                position: relative;\n                z-index: 2;\n                justify-content: center;\n            }\n            \n            .comp-nav a {\n                color: white;\n                text-decoration: none;\n                font-weight: 600;\n                font-size: 14px;\n                padding: 10px 20px;\n                border-radius: 20px;\n                background: rgba(3, 199, 90, 0.1);\n                backdrop-filter: blur(10px);\n                transition: all 0.3s ease;\n                display: flex;\n                align-items: center;\n                gap: 5px;\n            }\n            \n            .comp-nav a:hover {\n                background: #03C75A;\n                color: #222;\n                transform: translateY(-2px);\n            }\n            \n            .newcomp-card {\n                background: #222;\n                border-radius: 15px;\n                padding: 25px;\n                margin-bottom: 20px;\n                box-shadow: 0 8px 25px rgba(3, 199, 90, 0.08);\n                border: 1px solid #31343a;\n                max-width: 500px;\n                margin-left: auto;\n                margin-right: auto;\n            }\n            \n            .newcomp-card h3 {\n                color: #03C75A;\n                font-size: 18px;\n                margin: 0 0 20px 0;\n                display: flex;\n                align-items: center;\n                gap: 10px;\n            }\n            \n            .form-group {\n                margin-bottom: 15px;\n            }\n            \n            .form-group label {\n                display: block;\n                color: #F5F7FA;\n                font-size: 13px;\n                margin-bottom: 5px;\n                font-weight: 600;\n            }\n            \n            .form-group input,\n            .form-group select {\n                width: 100%;\n                padding: 10px;\n                border: 1px solid #31343a;\n                border-radius: 8px;\n                background: #181B20;\n                color: #F5F7FA;\n                font-size: 13px;\n                box-sizing: border-box;\n            }\n            \n            .form-group select {\n                cursor: pointer;\n            }\n            \n            .form-group select option {\n                background: #181B20;\n                color: #F5F7FA;\n            }\n            \n            .btn {\n                background: linear-gradient(90deg, #03C75A 70%, #00BFAE 100%);\n                color: #222;\n                border: none;\n                padding: 12px 24px;\n                border-radius: 20px;\n                font-weight: 600;\n                font-size: 14px;\n                cursor: pointer;\n                transition: all 0.3s ease;\n                width: 100%;\n            }\n            \n            .btn:hover {\n                background: linear-gradient(90deg, #00BFAE 60%, #03C75A 100%);\n                color: white;\n                transform: translateY(-2px);\n            }\n            \n            .error {\n                color: #ff4444;\n                background: rgba(255, 68, 68, 0.1);\n                padding: 10px;\n                border-radius: 8px;\n                margin-bottom: 15px;\n                font-size: 13px;\n            }\n            \n            .comps-list {\n                background: #222;\n                border-radius: 15px;\n                padding: 25px;\n                box-shadow: 0 8px 25px rgba(3, 199, 90, 0.08);\n                border: 1px solid #31343a;\n            }\n            \n            .comps-list h3 {\n                color: #03C75A;\n                font-size: 18px;\n                margin: 0 0 20px 0;\n                display: flex;\n                align-items: center;\n                gap: 10px;\n            }\n            \n            .comps-table {\n                width: 100%;\n                border-collapse: collapse;\n                background: #181B20;\n                border-radius: 8px;\n                overflow: hidden;\n            }\n            \n            .comps-table th {\n                background: #1E2126;\n                color: #03C75A;\n                font-weight: 600;\n                font-size: 13px;\n                padding: 15px 10px;\n                text-align: center;\n                border-bottom: 1px solid #31343a;\n            }\n            \n            .comps-table td {\n                color: #F5F7FA;\n                font-size: 13px;\n                padding: 15px 10px;\n                text-align: center;\n                border-bottom: 1px solid #31343a;\n            }\n            \n            .comps-table tr:last-child td {\n                border-bottom: none;\n            }\n            \n            .dash-btn {\n                background: linear-gradient(90deg, #03C75A 70%, #00BFAE 100%);\n                color: #222;\n                text-decoration: none;\n                padding: 8px 16px;\n                border-radius: 16px;\n                font-size: 12px;\n                font-weight: 600;\n                transition: all 0.3s ease;\n                display: inline-flex;\n                align-items: center;\n                gap: 5px;\n            }\n            \n            .dash-btn:hover {\n                background: linear-gradient(90deg, #00BFAE 60%, #03C75A 100%);\n                color: white;\n                transform: translateY(-2px);\n            }\n            \n            .none-msg {\n                text-align: center;\n                color: #8A8D93;\n                font-size: 14px;\n                padding: 40px 20px;\n            }\n            \n            .comp-footer {\n                text-align: center;\n                color: #03C75A;\n                padding: 20px;\n                font-size: 12px;\n                margin-top: 20px;\n            }\n        }\n        \n        /* 모바일 버전 스타일 */\n        @media (max-width: 1023px) {\n            body {\n                background: #181B20;\n                min-height: 100vh;\n                font-size: 14px;\n                line-height: 1.5;\n                margin: 0;\n                padding: 0;\n                font-family: 'Noto Sans KR', sans-serif;\n            }\n            \n            .comp-container {\n                padding: 10px;\n            }\n            \n            .comp-header {\n                background: rgba(26, 29, 33, 0.9);\n                backdrop-filter: blur(20px);\n                border-radius: 15px;\n                padding: 20px;\n                margin-bottom: 15px;\n                box-shadow: 0 8px 25px rgba(3, 199, 90, 0.15);\n                border: 2px solid #03C75A;\n                text-align: center;\n            }\n            \n            .comp-title {\n                color: #03C75A;\n                font-size: 20px;\n                margin: 0 0 8px 0;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                gap: 8px;\n            }\n            \n            .comp-subtitle {\n                color: #00BFAE;\n                font-size: 14px;\n                margin: 0;\n            }\n            \n            .comp-nav {\n                display: flex;\n                gap: 10px;\n                margin-top: 15px;\n                flex-wrap: wrap;\n                justify-content: center;\n            }\n            \n            .comp-nav a {\n                color: white;\n                text-decoration: none;\n                font-weight: 600;\n                font-size: 13px;\n                padding: 8px 16px;\n                border-radius: 16px;\n                background: rgba(3, 199, 90, 0.2);\n                backdrop-filter: blur(10px);\n                transition: all 0.3s ease;\n                display: flex;\n                align-items: center;\n                gap: 5px;\n            }\n            \n            .comp-nav a:hover {\n                background: #03C75A;\n                color: #222;\n            }\n            \n            .newcomp-card {\n                background: rgba(34, 34, 34, 0.95);\n                backdrop-filter: blur(20px);\n                border-radius: 15px;\n                padding: 20px;\n                margin-bottom: 15px;\n                box-shadow: 0 8px 25px rgba(3, 199, 90, 0.08);\n                border: 1px solid #31343a;\n            }\n            \n            .newcomp-card h3 {\n                color: #03C75A;\n                font-size: 16px;\n                margin: 0 0 15px 0;\n                display: flex;\n                align-items: center;\n                gap: 8px;\n            }\n            \n            .comps-list {\n                background: rgba(34, 34, 34, 0.95);\n                backdrop-filter: blur(20px);\n                border-radius: 15px;\n                padding: 20px;\n                box-shadow: 0 8px 25px rgba(3, 199, 90, 0.08);\n                border: 1px solid #31343a;\n            }\n            \n            .comps-list h3 {\n                color: #03C75A;\n                font-size: 16px;\n                margin: 0 0 15px 0;\n                display: flex;\n                align-items: center;\n                gap: 8px;\n            }\n            \n            .comps-table {\n                width: 100%;\n                border-collapse: collapse;\n                background: #181B20;\n                border-radius: 8px;\n                overflow: hidden;\n                font-size: 12px;\n            }\n            \n            .comps-table th {\n                background: #1E2126;\n                color: #03C75A;\n                font-weight: 600;\n                font-size: 11px;\n                padding: 12px 8px;\n                text-align: center;\n                border-bottom: 1px solid #31343a;\n            }\n            \n            .comps-table td {\n                color: #F5F7FA;\n                font-size: 11px;\n                padding: 12px 8px;\n                text-align: center;\n                border-bottom: 1px solid #31343a;\n            }\n            \n            .dash-btn {\n                background: linear-gradient(90deg, #03C75A 70%, #00BFAE 100%);\n                color: #222;\n                text-decoration: none;\n                padding: 6px 12px;\n                border-radius: 12px;\n                font-size: 10px;\n                font-weight: 600;\n                transition: all 0.3s ease;\n                display: inline-flex;\n                align-items: center;\n                gap: 4px;\n            }\n            \n            .none-msg {\n                text-align: center;\n                color: #8A8D93;\n                font-size: 13px;\n                padding: 30px 15px;\n            }\n            \n            .comp-footer {\n                text-align: center;\n                color: #03C75A;\n                padding: 15px;\n                font-size: 11px;\n                margin-top: 15px;\n            }\n        }\n        \n        /* 공통 스타일 */\n        .material-symbols-rounded {\n            font-variation-settings: 'FILL' 1, 'wght' 400, 'GRAD' 0, 'opsz' 24;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"comp-container\">\n        <header class=\"comp-header\">\n            <h1 class=\"comp-title\">\n                <span class=\"material-symbols-rounded\">sports</span>\n                오너 대회 관리 시스템\n            </h1>\n            <p class=\"comp-subtitle\">danceoffice.net - 대회 생성 및 선임관리자 관리</p>\n            \n            <div style=\"background: rgba(3, 199, 90, 0.1); border-radius: 10px; padding: 15px; margin: 20px 0; position: relative; z-index: 2;\">\n                <strong style=\"color: #03C75A;\"><?= htmlspecialchars($user['username']) ?></strong> - <?= getRoleDisplayName($user['role']) ?>\n            </div>\n            \n            <nav class=\"comp-nav\">\n                <a href=\"/\">\n                    <span class=\"material-symbols-rounded\">home</span>\n                    메인으로\n                </a>\n                <a href=\"senior_dashboard.php\">\n                    <span class=\"material-symbols-rounded\">admin_panel_settings</span>\n                    선임관리자 대시보드\n                </a>\n                <a href=\"manage_users.php\">\n                    <span class=\"material-symbols-rounded\">group</span>\n                    선임관리자 관리\n                </a>\n                <a href=\"manage_judges.php\">\n                    <span class=\"material-symbols-rounded\">gavel</span>\n                    심사위원 목록\n                </a>\n                <a href=\"/manage/\">\n                    <span class=\"material-symbols-rounded\">settings</span>\n                    관리자 페이지\n                </a>\n                <a href=\"/results/\">\n                    <span class=\"material-symbols-rounded\">sports_score</span>\n                    경기 결과\n                </a>\n                <a href=\"logout.php\" style=\"background: rgba(255, 68, 68, 0.2);\">\n                    <span class=\"material-symbols-rounded\">logout</span>\n                    로그아웃\n                </a>\n            </nav>\n        </header>\n        \n        <div class=\"newcomp-card\">\n            <h3>\n                <span class=\"material-symbols-rounded\">add_circle</span>\n                새 대회 만들기\n            </h3>\n            <form method=\"post\">\n                <?php if (!empty($error)): ?>\n                    <div class=\"error\"><?= $error ?></div>\n                <?php endif; ?>\n                <div class=\"form-group\">\n                    <label for=\"title\">대회명</label>\n                    <input type=\"text\" id=\"title\" name=\"title\" placeholder=\"대회명을 입력하세요\" required>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"date\">일자</label>\n                    <input type=\"date\" id=\"date\" name=\"date\" required>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"place\">장소</label>\n                    <input type=\"text\" id=\"place\" name=\"place\" placeholder=\"장소를 입력하세요\" required>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"host\">주최/주관</label>\n                    <input type=\"text\" id=\"host\" name=\"host\" placeholder=\"주최/주관을 입력하세요\" required>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"country\">개최국가</label>\n                    <select id=\"country\" name=\"country\" required>\n                        <option value=\"\">국가를 선택하세요</option>\n                        <option value=\"KR\">대한민국 (South Korea)</option>\n                        <option value=\"CN\">중국 (China)</option>\n                        <option value=\"JP\">일본 (Japan)</option>\n                        <option value=\"US\">미국 (United States)</option>\n                        <option value=\"DE\">독일 (Germany)</option>\n                        <option value=\"UK\">영국 (United Kingdom)</option>\n                        <option value=\"FR\">프랑스 (France)</option>\n                        <option value=\"IT\">이탈리아 (Italy)</option>\n                        <option value=\"RU\">러시아 (Russia)</option>\n                        <option value=\"AU\">호주 (Australia)</option>\n                        <option value=\"CA\">캐나다 (Canada)</option>\n                        <option value=\"SG\">싱가포르 (Singapore)</option>\n                        <option value=\"HK\">홍콩 (Hong Kong)</option>\n                        <option value=\"TW\">대만 (Taiwan)</option>\n                        <option value=\"TH\">태국 (Thailand)</option>\n                        <option value=\"MY\">말레이시아 (Malaysia)</option>\n                        <option value=\"VN\">베트남 (Vietnam)</option>\n                        <option value=\"ID\">인도네시아 (Indonesia)</option>\n                        <option value=\"PH\">필리핀 (Philippines)</option>\n                        <option value=\"IN\">인도 (India)</option>\n                        <option value=\"BR\">브라질 (Brazil)</option>\n                        <option value=\"AR\">아르헨티나 (Argentina)</option>\n                        <option value=\"MX\">멕시코 (Mexico)</option>\n                        <option value=\"ES\">스페인 (Spain)</option>\n                        <option value=\"NL\">네덜란드 (Netherlands)</option>\n                        <option value=\"BE\">벨기에 (Belgium)</option>\n                        <option value=\"CH\">스위스 (Switzerland)</option>\n                        <option value=\"AT\">오스트리아 (Austria)</option>\n                        <option value=\"SE\">스웨덴 (Sweden)</option>\n                        <option value=\"NO\">노르웨이 (Norway)</option>\n                        <option value=\"DK\">덴마크 (Denmark)</option>\n                        <option value=\"FI\">핀란드 (Finland)</option>\n                        <option value=\"PL\">폴란드 (Poland)</option>\n                        <option value=\"CZ\">체코 (Czech Republic)</option>\n                        <option value=\"OTHER\">기타 (Other)</option>\n                    </select>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"assigned_admin\">담당 선임관리자</label>\n                    <select id=\"assigned_admin\" name=\"assigned_admin\" required>\n                        <option value=\"\">선임관리자를 선택하세요</option>\n                        <?php\n                        $users = loadUsers();\n                        $senior_admins = array_filter($users, function($u) {\n                            return $u['role'] === 'senior_admin';\n                        });\n                        foreach ($senior_admins as $admin):\n                        ?>\n                            <option value=\"<?= htmlspecialchars($admin['username']) ?>\">\n                                <?= htmlspecialchars($admin['username']) ?> (<?= getRoleDisplayName($admin['role']) ?>)\n                            </option>\n                        <?php endforeach; ?>\n                    </select>\n                </div>\n                <button type=\"submit\" name=\"add_comp\" value=\"1\" class=\"btn\">\n                    <span class=\"material-symbols-rounded\">add</span>\n                    대회 생성\n                </button>\n            </form>\n        </div>\n        \n        <div class=\"comps-list\">\n            <h3>\n                <span class=\"material-symbols-rounded\">list</span>\n                등록된 대회 목록\n            </h3>\n            <?php if (empty($comps)): ?>\n                <div class=\"none-msg\">등록된 대회가 없습니다.</div>\n            <?php else: ?>\n                <table class=\"comps-table\">\n                    <thead>\n                        <tr>\n                            <th>대회명</th>\n                            <th>일자</th>\n                            <th>장소</th>\n                            <th>주최</th>\n                            <th>담당자</th>\n                            <th>관리</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <?php foreach ($comps as $comp): ?>\n                            <tr>\n                                <td><?= htmlspecialchars($comp['title']) ?></td>\n                                <td><?= htmlspecialchars($comp['date']) ?></td>\n                                <td><?= htmlspecialchars($comp['place']) ?></td>\n                                <td><?= htmlspecialchars($comp['host']) ?></td>\n                                <td>\n                                    <span style=\"color: #03C75A; font-weight: 600;\">\n                                        <?= htmlspecialchars($comp['assigned_admin'] ?? '미지정') ?>\n                                    </span>\n                                </td>\n                                <td>\n                                    <div style=\"display: flex; gap: 5px; justify-content: center; flex-wrap: wrap;\">\n                                        <a class=\"dash-btn\" href=\"dashboard.php?comp_id=<?= urlencode($comp['id']) ?>\" style=\"font-size: 11px; padding: 6px 12px;\">\n                                            <span class=\"material-symbols-rounded\">dashboard</span>\n                                            대시보드\n                                        </a>\n                                        <a class=\"dash-btn\" href=\"assign_admin.php?comp_id=<?= urlencode($comp['id']) ?>\" style=\"font-size: 11px; padding: 6px 12px; background: linear-gradient(90deg, #17a2b8 70%, #138496 100%);\">\n                                            <span class=\"material-symbols-rounded\">person_add</span>\n                                            담당자\n                                        </a>\n                                    </div>\n                                </td>\n                            </tr>\n                        <?php endforeach; ?>\n                    </tbody>\n                </table>\n            <?php endif; ?>\n        </div>\n        \n        <footer class=\"comp-footer\">\n            &copy; 2025 danceoffice.net | Powered by Seyoung Lee\n        </footer>\n    </div>\n</body>\n</html>\n","size_bytes":25754},"comp/index_old.php":{"content":"<?php\n// 대회 목록 및 신규 대회 생성\n$data_dir = __DIR__ . '/data';\nfunction load_competitions($data_dir) {\n    $comps = [];\n    if (!is_dir($data_dir)) return $comps;\n    foreach (glob($data_dir . \"/*/info.json\") as $info_file) {\n        $comp_id = basename(dirname($info_file));\n        $info = json_decode(file_get_contents($info_file), true);\n        if ($info) {\n            $info['id'] = $comp_id;\n            $comps[] = $info;\n        }\n    }\n    usort($comps, function($a, $b) {\n        return ($b['created'] ?? 0) <=> ($a['created'] ?? 0);\n    });\n    return $comps;\n}\nif ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['add_comp'])) {\n    $title = trim($_POST['title'] ?? '');\n    $date = trim($_POST['date'] ?? '');\n    $place = trim($_POST['place'] ?? '');\n    $host = trim($_POST['host'] ?? '');\n    if ($title && $date && $place && $host) {\n        $today = date('Ymd');\n        $seq = 1;\n        do {\n            $comp_id = sprintf(\"%s-%03d\", $today, $seq++);\n            $comp_path = \"$data_dir/$comp_id\";\n        } while (file_exists($comp_path));\n        mkdir($comp_path, 0777, true);\n        $info = [\n            'title' => $title,\n            'date' => $date,\n            'place' => $place,\n            'host' => $host,\n            'created' => time()\n        ];\n        file_put_contents(\"$comp_path/info.json\", json_encode($info, JSON_UNESCAPED_UNICODE|JSON_PRETTY_PRINT));\n        header(\"Location: dashboard.php?comp_id=$comp_id\");\n        exit;\n    } else {\n        $error = \"모든 항목을 입력해주세요.\";\n    }\n}\n$comps = load_competitions($data_dir);\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>대회 현황판 | danceoffice.net COMP</title>\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\n    <style>\n        body { background:#f7fafd; font-family:sans-serif; margin:0; }\n        h1 { color:#003399; text-align:center; font-size:1.35em; margin:1.2em 0 0.8em 0;}\n        .newcomp-wrap {background:#fff; max-width:420px; margin:1.5em auto 2em auto; border-radius:13px; box-shadow:0 4px 18px #00339914; padding:1.2em 1.2em 1.2em 1.2em;}\n        .newcomp-wrap form { display:grid; gap:0.7em;}\n        input, button { padding:0.55em 0.7em; border-radius:7px; border:1px solid #bbb; font-size:1em;}\n        input {border:1px solid #bbb;}\n        button { border:none; background:#03C75A; color:#fff; font-weight:700; font-size:1em; cursor:pointer;}\n        button:hover { background:#00bfae;}\n        .error { color:#c22; margin-bottom:0.5em;}\n        .comps-list {max-width:760px; margin:0 auto 3em auto;}\n        table { width:100%; background:#fff; border-radius:12px; overflow:hidden; box-shadow:0 3px 14px #00339910;}\n        th, td { padding:0.7em 0.3em; text-align:center;}\n        th { background:#f0f4fa; color:#003399; font-weight:700;}\n        td { color:#333;}\n        tr:not(:last-child) td { border-bottom:1px solid #eee;}\n        .dash-btn { background:#003399; color:#fff; border-radius:8px; padding:0.4em 1.2em; font-size:0.98em; text-decoration:none; }\n        .dash-btn:hover { background:#023175;}\n        .none-msg {text-align:center; color:#aaa; margin:2.5em 0 2em 0;}\n        footer {margin-top:2.2em;text-align:center;font-size:0.92em;color:#aaa; padding: 1em 0;}\n        @media (max-width:700px) {\n            .comps-list {max-width:99vw;}\n            table {font-size:0.98em;}\n            .newcomp-wrap {max-width:97vw;}\n        }\n    </style>\n</head>\n<body>\n<h1>댄스스포츠 대회 현황판</h1>\n<div class=\"newcomp-wrap\">\n    <form method=\"post\">\n        <div style=\"font-weight:600; margin-bottom:0.7em; color:#03C75A;\">새 대회 만들기</div>\n        <?php if (!empty($error)): ?>\n            <div class=\"error\"><?= $error ?></div>\n        <?php endif; ?>\n        <input name=\"title\" placeholder=\"대회명\" required>\n        <input type=\"date\" name=\"date\" required>\n        <input name=\"place\" placeholder=\"장소\" required>\n        <input name=\"host\" placeholder=\"주최/주관\" required>\n        <button type=\"submit\" name=\"add_comp\" value=\"1\">대회 생성</button>\n    </form>\n</div>\n<div class=\"comps-list\">\n    <?php if (empty($comps)): ?>\n        <div class=\"none-msg\">등록된 대회가 없습니다.</div>\n    <?php else: ?>\n        <table>\n            <tr>\n                <th>대회명</th>\n                <th>일자</th>\n                <th>장소</th>\n                <th>주최</th>\n                <th>관리</th>\n            </tr>\n            <?php foreach ($comps as $comp): ?>\n                <tr>\n                    <td><?= htmlspecialchars($comp['title']) ?></td>\n                    <td><?= htmlspecialchars($comp['date']) ?></td>\n                    <td><?= htmlspecialchars($comp['place']) ?></td>\n                    <td><?= htmlspecialchars($comp['host']) ?></td>\n                    <td>\n                        <a class=\"dash-btn\" href=\"dashboard.php?comp_id=<?= urlencode($comp['id']) ?>\">대시보드</a>\n                    </td>\n                </tr>\n            <?php endforeach; ?>\n        </table>\n    <?php endif; ?>\n</div>\n<footer>\n    2025 danceoffice.net | Powered by Seyoung Lee\n</footer>\n</body>\n</html>","size_bytes":5199},"comp/judge_dashboard.php":{"content":"<?php\nsession_start();\n\n// Check if judge is logged in (기존 프리스타일 시스템 세션 확인)\nif (!isset($_SESSION['judge_id']) || !isset($_SESSION['judge_name'])) {\n    header(\"Location: judge_login.php\");\n    exit;\n}\n\n// Load competition info from current data structure\n$data_dir = __DIR__ . \"/data\";\n$comp_info_file = \"$data_dir/competition_info.txt\";\n\nif (!file_exists($comp_info_file)) {\n    echo \"<h1>대회 정보를 찾을 수 없습니다.</h1>\";\n    exit;\n}\n\n// Load competition info\n$comp_info = file($comp_info_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n$info = [\n    'title' => $comp_info[0] ?? '대회',\n    'date' => $comp_info[1] ?? '',\n    'place' => $comp_info[2] ?? ''\n];\n\n// Load events from current data structure\n$events_file = \"$data_dir/events.txt\";\n$events = [];\n\nif (file_exists($events_file)) {\n    $lines = file($events_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    foreach ($lines as $line) {\n        $cols = array_map('trim', explode(',', $line));\n        if (count($cols) >= 2) {\n            $events[] = [\n                'code' => $cols[0],\n                'name' => $cols[1],\n                'type' => 'freestyle' // 프리스타일 이벤트로 설정\n            ];\n        }\n    }\n}\n\n// Check which events have scores\n$events_with_scores = [];\nforeach ($events as $event) {\n    $scores_file = \"$data_dir/scores/score_{$event['code']}_J{$_SESSION['judge_id']}.txt\";\n    $events_with_scores[$event['code']] = file_exists($scores_file);\n}\n\nfunction h($s) { return htmlspecialchars($s ?? ''); }\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>심사위원 대시보드 | <?=h($info['title'])?></title>\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\n    <style>\n        body { \n            background: #f5f7fa; \n            font-family: sans-serif; \n            margin: 0; \n            padding: 20px;\n        }\n        .container { \n            max-width: 1200px; \n            margin: 0 auto; \n            background: #fff; \n            border-radius: 12px; \n            padding: 30px; \n            box-shadow: 0 4px 20px rgba(0,0,0,0.1);\n        }\n        .header {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            margin-bottom: 30px;\n            padding-bottom: 20px;\n            border-bottom: 2px solid #e9ecef;\n        }\n        h1 { \n            color: #333; \n            margin: 0; \n            font-size: 1.8em;\n        }\n        .judge-info {\n            background: #e3f2fd;\n            padding: 10px 15px;\n            border-radius: 8px;\n            color: #1976d2;\n            font-weight: 600;\n        }\n        .logout-btn {\n            background: #dc3545;\n            color: #fff;\n            border: none;\n            padding: 8px 16px;\n            border-radius: 6px;\n            cursor: pointer;\n            text-decoration: none;\n            font-size: 14px;\n        }\n        .logout-btn:hover {\n            background: #c82333;\n        }\n        .events-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n            gap: 20px;\n            margin-bottom: 30px;\n        }\n        .event-card {\n            background: #fff;\n            border: 2px solid #e9ecef;\n            border-radius: 10px;\n            padding: 20px;\n            transition: all 0.3s;\n            cursor: pointer;\n        }\n        .event-card:hover {\n            border-color: #667eea;\n            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.1);\n        }\n        .event-card.scored {\n            border-color: #28a745;\n            background: #f8fff9;\n        }\n        .event-card.scored:hover {\n            border-color: #1e7e34;\n        }\n        .event-title {\n            font-size: 1.2em;\n            font-weight: 700;\n            color: #333;\n            margin-bottom: 8px;\n        }\n        .event-details {\n            color: #666;\n            font-size: 0.9em;\n            margin-bottom: 15px;\n        }\n        .event-actions {\n            display: flex;\n            gap: 10px;\n        }\n        .btn {\n            padding: 8px 16px;\n            border: none;\n            border-radius: 6px;\n            cursor: pointer;\n            text-decoration: none;\n            font-size: 14px;\n            font-weight: 600;\n            transition: background 0.3s;\n        }\n        .btn-primary {\n            background: #667eea;\n            color: #fff;\n        }\n        .btn-primary:hover {\n            background: #5a6fd8;\n        }\n        .btn-success {\n            background: #28a745;\n            color: #fff;\n        }\n        .btn-success:hover {\n            background: #1e7e34;\n        }\n        .btn-info {\n            background: #17a2b8;\n            color: #fff;\n        }\n        .btn-info:hover {\n            background: #138496;\n        }\n        .status-badge {\n            display: inline-block;\n            padding: 4px 8px;\n            border-radius: 4px;\n            font-size: 12px;\n            font-weight: 600;\n            margin-bottom: 10px;\n        }\n        .status-pending {\n            background: #fff3cd;\n            color: #856404;\n        }\n        .status-completed {\n            background: #d4edda;\n            color: #155724;\n        }\n        .back-link {\n            display: inline-block;\n            margin-bottom: 20px;\n            color: #667eea;\n            text-decoration: none;\n            font-size: 14px;\n        }\n        .back-link:hover {\n            text-decoration: underline;\n        }\n        .empty-state {\n            text-align: center;\n            padding: 60px 20px;\n            color: #666;\n        }\n        .empty-state h3 {\n            margin: 0 0 10px 0;\n            color: #333;\n        }\n    </style>\n</head>\n<body>\n<div class=\"container\">\n    <div class=\"header\">\n        <div>\n            <h1>심사위원 대시보드</h1>\n            <div class=\"judge-info\">\n                <?=h($_SESSION['judge_name'])?> - 심사위원 #<?=h($_SESSION['judge_id'])?>\n            </div>\n        </div>\n        <a href=\"judge_login.php\" class=\"logout-btn\">로그아웃</a>\n    </div>\n    \n    <div class=\"comp-info\" style=\"background: #f8f9fa; padding: 15px; border-radius: 8px; margin-bottom: 30px; text-align: center;\">\n        <strong><?=h($info['title'])?></strong><br>\n        <?=h($info['date'])?> | <?=h($info['place'])?>\n    </div>\n    \n    <?php if (empty($events)): ?>\n        <div class=\"empty-state\">\n            <h3>등록된 이벤트가 없습니다</h3>\n            <p>대회 관리자에게 문의하세요.</p>\n        </div>\n    <?php else: ?>\n        <div class=\"events-grid\">\n            <?php foreach ($events as $event): ?>\n            <div class=\"event-card <?=$events_with_scores[$event['code']] ? 'scored' : ''?>\">\n                <div class=\"status-badge <?=$events_with_scores[$event['code']] ? 'status-completed' : 'status-pending'?>\">\n                    <?=$events_with_scores[$event['code']] ? '채점 완료' : '채점 대기'?>\n                </div>\n                \n                <div class=\"event-title\"><?=h($event['name'])?></div>\n                <div class=\"event-details\">\n                    <strong>종목 코드: <?=h($event['code'])?></strong><br>\n                    <strong>타입: 프리스타일 채점</strong>\n                </div>\n                \n                <div class=\"event-actions\">\n                    <a href=\"judge_scoring_free.php?event=<?=h($event['code'])?>\" \n                       class=\"btn btn-primary\" \n                       target=\"_blank\">\n                        🎭 프리스타일 채점\n                    </a>\n                </div>\n            </div>\n            <?php endforeach; ?>\n        </div>\n    <?php endif; ?>\n</div>\n</body>\n</html>","size_bytes":7836},"comp/judge_login.php":{"content":"<?php\nsession_start();\n$data_dir = __DIR__ . '/data';\n$adjudicator_file = $data_dir . '/Adjudicator.txt';\n\n$judges = [];\nif (file_exists($adjudicator_file)) {\n    $lines = file($adjudicator_file);\n    foreach ($lines as $line) {\n        $cols = explode(',', trim($line));\n        if (count($cols) >= 4 && !empty($cols[3]) && !empty($cols[1])) {\n            $judges[] = [\n                'id' => $cols[0],\n                'name' => $cols[1],\n                'password' => $cols[3]\n            ];\n        }\n    }\n}\n\n$login_err = \"\";\nif ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['judge_password'])) {\n    $pw = trim($_POST['judge_password']);\n    if ($pw) {\n        $found = false;\n        foreach ($judges as $j) {\n        if ($j['password'] === $pw) {\n            $_SESSION['judge_id'] = $j['id'];\n            $_SESSION['judge_name'] = $j['name'];\n            $found = true;\n            \n            // 심사위원 대시보드로 이동 (이벤트 파라미터는 대시보드에서 처리)\n            header(\"Location: judge_dashboard.php\");\n            exit;\n        }\n        }\n        if (!$found) {\n            $login_err = \"<div class='login-msg error'>비밀번호가 올바르지 않습니다.</div>\";\n        }\n    } else {\n        $login_err = \"<div class='login-msg error'>비밀번호를 입력하세요.</div>\";\n    }\n}\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>심사위원 로그인 | danceoffice.net</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <link rel=\"stylesheet\" href=\"/assets/style.css\">\n    <style>\n        html, body {\n            background: #23262b !important;\n        }\n        main {\n            min-height: 100vh;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            padding: 0;\n            background: none;\n        }\n        .login-section {\n            background: #23262b;\n            border-radius: 18px;\n            padding: 3.2em 2.4em 2.8em 2.4em;\n            max-width: 460px;\n            width: 96vw;\n            margin: 0 auto;\n            box-shadow: 0 4px 32px rgba(0,0,0,0.18);\n            display: flex;\n            flex-direction: column;\n            align-items: stretch;\n        }\n        .login-title {\n            font-size: 2.0em;\n            font-weight: 700;\n            color: #03C75A;\n            margin-bottom: 1.7em;\n            text-align: center;\n            letter-spacing: -1px;\n        }\n        .login-form {\n            display: flex;\n            flex-direction: column;\n            gap: 1.3em;\n        }\n        .login-form input[type=\"password\"] {\n            font-size: 1.25em;\n            padding: 1.2em 1.1em;\n            border-radius: 12px;\n            border: 2px solid #31343a;\n            background: #181B20;\n            color: #fff;\n            outline: none;\n        }\n        .login-form input[type=\"password\"]:focus {\n            border: 2px solid #03C75A;\n            background: #23262b;\n        }\n        .login-form button {\n            background: linear-gradient(90deg,#03C75A 70%,#00BFAE 100%);\n            color: #222;\n            border: none;\n            border-radius: 24px;\n            padding: 1.1em 0;\n            font-weight: 700;\n            font-size: 1.25em;\n            margin-top: 0.2em;\n            cursor: pointer;\n            transition: background 0.2s, color 0.2s;\n            width: 100%;\n            box-shadow: 0 2px 10px rgba(3,199,90,0.13);\n        }\n        .login-form button:hover {\n            background: linear-gradient(90deg,#00BFAE 60%,#03C75A 100%);\n            color: #fff;\n        }\n        .login-msg {\n            margin-top: 1.2em;\n            padding: 1em 1.2em;\n            border-radius: 9px;\n            font-size: 1.1em;\n            text-align: center;\n        }\n        .login-msg.error {\n            background: #311;\n            color: #ff5e5e;\n        }\n        .login-section .login-notice {\n            margin-top: 2.1em;\n            color: #bbb;\n            font-size: 1.13em;\n            line-height: 1.7;\n            text-align: center;\n        }\n\n        /* 태블릿/모바일 개선 */\n        @media (max-width: 900px) {\n            .login-section {\n                max-width: 98vw;\n                width: 99vw;\n                padding: 2.2em 0.6em 2.5em 0.6em;\n                border-radius: 0;\n                box-shadow: none;\n            }\n            .login-title {\n                font-size: 1.45em;\n                margin-bottom: 1.1em;\n            }\n            .login-form input[type=\"password\"], .login-form button {\n                font-size: 1.2em;\n                padding: 1em 0.8em;\n                border-radius: 10px;\n            }\n            .login-form button {\n                border-radius: 15px;\n            }\n            .login-section .login-notice {\n                font-size: 1.03em;\n                margin-top: 1.3em;\n            }\n        }\n        @media (max-width: 600px) {\n            .login-section {\n                max-width: 100vw;\n                width: 100vw;\n                padding: 1.5em 0.2em 2em 0.2em;\n            }\n            .login-title {\n                font-size: 1.11em;\n            }\n            .login-form input[type=\"password\"], .login-form button {\n                font-size: 1em;\n                padding: 0.8em 0.5em;\n            }\n            .login-section .login-notice {\n                font-size: 0.97em;\n            }\n        }\n    </style>\n</head>\n<body>\n    <main>\n        <section class=\"login-section\">\n            <div class=\"login-title\">심사위원 로그인</div>\n            <form class=\"login-form\" method=\"post\">\n                <input type=\"password\" name=\"judge_password\" placeholder=\"비밀번호만 입력\" required autofocus>\n                <button type=\"submit\">로그인</button>\n            </form>\n            <?= $login_err ?>\n            <div class=\"login-notice\">\n                ※ 비밀번호만 입력하면 심사위원 인증이 됩니다.<br>\n                ※ 비밀번호를 잊으셨으면 관리자에게 문의하세요.\n            </div>\n        </section>\n    </main>\n</body>\n</html>","size_bytes":6181},"comp/judge_logout.php":{"content":"<?php\nsession_start();\n$_SESSION = [];\nsession_destroy();\nheader(\"Location: judge_login.php\");\nexit;","size_bytes":100},"comp/judge_manager.php":{"content":"<?php\n// 심사위원 관리 시스템\n\nfunction loadJudges() {\n    $judges_file = __DIR__ . '/judges.txt';\n    $judges = [];\n    \n    if (file_exists($judges_file)) {\n        $lines = file($judges_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n        foreach ($lines as $line) {\n            if (strpos($line, '#') === 0) continue; // 주석 무시\n            $parts = explode(',', $line);\n            if (count($parts) >= 10) {\n                $judges[] = [\n                    'id' => trim($parts[0]),\n                    'name' => trim($parts[1]),\n                    'organization' => trim($parts[2]),\n                    'region' => trim($parts[3]),\n                    'phone' => trim($parts[4]),\n                    'email' => trim($parts[5]),\n                    'photo' => trim($parts[6]),\n                    'specialty' => trim($parts[7]),\n                    'created_at' => trim($parts[8]),\n                    'updated_at' => trim($parts[9])\n                ];\n            }\n        }\n    }\n    return $judges;\n}\n\nfunction saveJudges($judges) {\n    $judges_file = __DIR__ . '/judges.txt';\n    $content = \"# 심사위원 인명사전\\n\";\n    $content .= \"# 형식: id,name,organization,region,phone,email,photo,specialty,created_at,updated_at\\n\";\n    $content .= \"# id: 고유 식별자 (자동 생성)\\n\";\n    $content .= \"# photo: 증명사진 파일명 (judges_photos/ 폴더에 저장)\\n\\n\";\n    \n    foreach ($judges as $judge) {\n        $content .= implode(',', $judge) . \"\\n\";\n    }\n    \n    file_put_contents($judges_file, $content);\n}\n\nfunction generateJudgeId() {\n    $judges = loadJudges();\n    $max_id = 0;\n    foreach ($judges as $judge) {\n        if (preg_match('/judge(\\d+)/', $judge['id'], $matches)) {\n            $max_id = max($max_id, intval($matches[1]));\n        }\n    }\n    return 'judge' . str_pad($max_id + 1, 3, '0', STR_PAD_LEFT);\n}\n\nfunction getJudgeById($id) {\n    $judges = loadJudges();\n    foreach ($judges as $judge) {\n        if ($judge['id'] === $id) {\n            return $judge;\n        }\n    }\n    return null;\n}\n\nfunction deleteJudge($id) {\n    $judges = loadJudges();\n    $judges = array_filter($judges, function($judge) use ($id) {\n        return $judge['id'] !== $id;\n    });\n    saveJudges($judges);\n}\n\nfunction addJudge($data) {\n    $judges = loadJudges();\n    $new_judge = [\n        'id' => generateJudgeId(),\n        'name' => $data['name'],\n        'organization' => $data['organization'],\n        'region' => $data['region'],\n        'phone' => $data['phone'],\n        'email' => $data['email'],\n        'photo' => $data['photo'] ?? '',\n        'specialty' => $data['specialty'],\n        'created_at' => date('Y-m-d H:i:s'),\n        'updated_at' => date('Y-m-d H:i:s')\n    ];\n    $judges[] = $new_judge;\n    saveJudges($judges);\n    return $new_judge;\n}\n\nfunction updateJudge($id, $data) {\n    $judges = loadJudges();\n    foreach ($judges as &$judge) {\n        if ($judge['id'] === $id) {\n            $judge['name'] = $data['name'];\n            $judge['organization'] = $data['organization'];\n            $judge['region'] = $data['region'];\n            $judge['phone'] = $data['phone'];\n            $judge['email'] = $data['email'];\n            $judge['photo'] = $data['photo'] ?? $judge['photo'];\n            $judge['specialty'] = $data['specialty'];\n            $judge['updated_at'] = date('Y-m-d H:i:s');\n            break;\n        }\n    }\n    saveJudges($judges);\n}\n\nfunction getRegions() {\n    return ['서울', '부산', '대구', '인천', '광주', '대전', '울산', '세종', '경기', '강원', '충북', '충남', '전북', '전남', '경북', '경남', '제주'];\n}\n\nfunction getSpecialties() {\n    return ['라틴', '모던', '스탠다드', '라인댄스', '힙합', '재즈', '발레', '현대무용', '민속무용', '기타'];\n}\n?>\n\n\n\n\n\n\n","size_bytes":3825},"comp/judge_panel.php":{"content":"<?php\nsession_start();\nif (!isset($_SESSION['judge_id']) || !isset($_SESSION['judge_name'])) {\n    header(\"Location: judge_login.php\");\n    exit;\n}\n\n// 로그아웃 처리\nif (isset($_GET['logout'])) {\n    session_destroy();\n    header(\"Location: judge_login.php\");\n    exit;\n}\n\n// 심사위원 정보\n$judge_name = $_SESSION['judge_name'];\n$judge_id = $_SESSION['judge_id'];\n\n// 대회 정보 및 채점 페이지 등 추가 안내 (확장 가능)\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>심사위원 패널 | danceoffice.net</title>\n    <link rel=\"stylesheet\" href=\"/assets/style.css\">\n    <style>\n        .panel-section {background:#23262b; border-radius:14px; padding:2em 2em 2.5em 2em; max-width:500px; margin:3em auto;}\n        .panel-title {font-size:1.3em; font-weight:700; color:#03C75A; margin-bottom:1.1em;}\n        .panel-info {color:#F5F7FA; margin-bottom:2em;}\n        .panel-nav {margin-top:2em;}\n        .panel-nav a {color:#03C75A; font-weight:700; text-decoration:none; padding:0.5em 1.2em; border-radius:18px; background:#181B20; margin-right:1em;}\n        .panel-nav a:hover {background:#00BFAE; color:#fff;}\n        .logout-btn {background:#ff5e5e; color:#fff; border:none; border-radius:20px; padding:0.5em 1.4em; font-weight:700; margin-top:2.5em;}\n        .logout-btn:hover {background:#c93;}\n    </style>\n</head>\n<body>\n    <main>\n        <section class=\"panel-section\">\n            <div class=\"panel-title\">심사위원 패널</div>\n            <div class=\"panel-info\">\n                <b><?= htmlspecialchars($judge_name) ?></b> 심사위원님 안녕하세요.<br>\n                (ID: <?= htmlspecialchars($judge_id) ?>)\n            </div>\n            <div>\n                <ul>\n                    <li>심사 채점은 아래 \"채점 페이지로 이동\" 버튼을 눌러 진행하세요.</li>\n                    <li>대회 중에는 채점 결과가 실시간으로 저장됩니다.</li>\n                    <li>채점이 끝난 후 반드시 <b>로그아웃</b> 해주세요.</li>\n                </ul>\n            </div>\n            <div class=\"panel-nav\">\n                <a href=\"judge_scoring.php\">채점 페이지로 이동</a>\n            </div>\n            <form method=\"get\" action=\"judge_panel.php\">\n                <button type=\"submit\" name=\"logout\" value=\"1\" class=\"logout-btn\">로그아웃</button>\n            </form>\n        </section>\n    </main>\n</body>\n</html>","size_bytes":2452},"comp/judge_scoring.php":{"content":"<?php\nsession_start();\n\n$comp_id = $_GET['comp_id'] ?? '';\n$event_no = $_GET['event_no'] ?? '';\n$judge_code = $_GET['judge_code'] ?? '';\n$admin_mode = $_GET['admin_mode'] ?? '';\n\n// 디버그: URL 파라미터 확인\nerror_log(\"URL Parameters: comp_id='{$comp_id}', event_no='{$event_no}', judge_code='{$judge_code}', admin_mode='{$admin_mode}'\");\n\n// Remove BOM and normalize - multiple methods\n$comp_id = preg_replace('/\\x{FEFF}/u', '', $comp_id);\n$event_no = preg_replace('/\\x{FEFF}/u', '', $event_no);\n\n// Additional BOM removal\n$comp_id = str_replace([\"\\xEF\\xBB\\xBF\", \"\\xFEFF\", \"\\uFEFF\"], '', $comp_id);\n$event_no = str_replace([\"\\xEF\\xBB\\xBF\", \"\\xFEFF\", \"\\uFEFF\"], '', $event_no);\n\n// Remove any non-printable characters\n$comp_id = preg_replace('/[\\x00-\\x1F\\x7F-\\x9F]/', '', $comp_id);\n$event_no = preg_replace('/[\\x00-\\x1F\\x7F-\\x9F]/', '', $event_no);\n\n$comp_id = preg_replace('/[^\\d-]/', '', $comp_id);\n$event_no = preg_replace('/[^0-9\\-]/', '', $event_no); // 하이픈 허용\n\n\n// Language setting\n$lang = $_GET['lang'] ?? 'ko';\nif (!in_array($lang, ['ko', 'en', 'zh', 'ja'])) {\n    $lang = 'ko';\n}\n\n// Language texts\n$texts = [\n    'ko' => [\n        'title' => '심사위원 채점 시스템',\n        'judge_info' => '심사위원',\n        'event_info' => '이벤트 정보',\n        'event_no' => '이벤트 번호',\n        'round' => '라운드',\n        'dances' => '종목',\n        'players' => '출전 선수',\n        'place' => '순위',\n        'couple' => '선수',\n        'submit' => '제출',\n        'no_data' => '이벤트 데이터 또는 선수 데이터를 찾을 수 없습니다.',\n        'invalid_data' => '잘못된 대회 ID 또는 이벤트 번호입니다.'\n    ],\n    'en' => [\n        'title' => 'Judge Scoring System',\n        'judge_info' => 'Judge',\n        'event_info' => 'Event Information',\n        'event_no' => 'Event Number',\n        'round' => 'Round',\n        'dances' => 'Dances',\n        'players' => 'Competitors',\n        'place' => 'Place',\n        'couple' => 'Couple',\n        'submit' => 'Submit',\n        'no_data' => 'Event data or player data not found.',\n        'invalid_data' => 'Invalid competition ID or event number.'\n    ],\n    'zh' => [\n        'title' => '评委评分系统',\n        'judge_info' => '评委',\n        'event_info' => '赛事信息',\n        'event_no' => '赛事编号',\n        'round' => '轮次',\n        'dances' => '舞种',\n        'players' => '参赛选手',\n        'place' => '名次',\n        'couple' => '选手',\n        'submit' => '提交',\n        'no_data' => '找不到赛事数据或选手数据。',\n        'invalid_data' => '无效的比赛ID或赛事编号。'\n    ],\n    'ja' => [\n        'title' => '審査員採点システム',\n        'judge_info' => '審査員',\n        'event_info' => 'イベント情報',\n        'event_no' => 'イベント番号',\n        'round' => 'ラウンド',\n        'dances' => '種目',\n        'players' => '出場選手',\n        'place' => '順位',\n        'couple' => '選手',\n        'submit' => '提出',\n        'no_data' => 'イベントデータまたは選手データが見つかりません。',\n        'invalid_data' => '無効な大会IDまたはイベント番号です。'\n    ]\n];\n\n$t = $texts[$lang];\n\n// Check if judge is logged in (admin_mode bypass)\nif ($admin_mode === '1' && $judge_code) {\n    // Admin mode: 심사위원 정보를 judge_code로 설정\n    $_SESSION['scoring_logged_in'] = true;\n    $_SESSION['scoring_comp_id'] = $comp_id;\n    $_SESSION['scoring_judge_id'] = $judge_code;\n    $_SESSION['scoring_judge_name'] = \"심사위원 #$judge_code\";\n    $_SESSION['scoring_judge_country'] = \"관리자\";\n} elseif (!isset($_SESSION['scoring_logged_in']) || !$_SESSION['scoring_logged_in'] || $_SESSION['scoring_comp_id'] !== $comp_id) {\n    $lang = $_GET['lang'] ?? 'ko';\n    header(\"Location: scoring_login.php?comp_id=\" . urlencode($comp_id) . \"&lang=\" . urlencode($lang));\n    exit;\n}\n\nif (!$comp_id || !$event_no) {\n    echo \"<h1>\" . $t['invalid_data'] . \"</h1>\";\n    exit;\n}\n\n// Load event data\n$data_dir = __DIR__ . \"/data/$comp_id\";\n$runorder_file = \"$data_dir/RunOrder_Tablet.txt\";\n$players_file = \"$data_dir/players_$event_no.txt\";\n$round_info_file = \"$data_dir/round_info.json\";\n$dance_name_file = \"$data_dir/DanceName.txt\";\n\n$event_data = null;\n$players = [];\n$round_info = null;\n$hits_data = null;\n$dance_mapping = [];\n\n// Load dance name mapping\nif (file_exists($dance_name_file)) {\n    $lines = file($dance_name_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    foreach ($lines as $line) {\n        $line = preg_replace('/\\x{FEFF}/u', '', $line);\n        $cols = array_map('trim', explode(',', $line));\n        if (count($cols) >= 3 && !empty($cols[1]) && is_numeric($cols[0])) {\n            $dance_mapping[$cols[0]] = $cols[1]; // number => full name\n        }\n    }\n    error_log(\"Dance mapping loaded: \" . json_encode($dance_mapping));\n} else {\n    error_log(\"DanceName.txt file not found: \" . $dance_name_file);\n}\n\n// Fallback dance mapping if file loading fails\nif (empty($dance_mapping)) {\n    $dance_mapping = [\n        '1' => 'Waltz',\n        '2' => 'Tango', \n        '3' => 'Viennese Waltz',\n        '4' => 'Slow Foxtrot',\n        '5' => 'Quickstep',\n        '6' => 'Cha Cha Cha',\n        '7' => 'Samba',\n        '8' => 'Rumba',\n        '9' => 'Paso Doble',\n        '10' => 'Jive'\n    ];\n    error_log(\"Using fallback dance mapping: \" . json_encode($dance_mapping));\n}\n\n// Function to convert dance numbers to full names\nfunction getDanceNames($dances, $dance_mapping) {\n    $result = [];\n    foreach ($dances as $dance) {\n        $dance = trim($dance);\n        if (isset($dance_mapping[$dance])) {\n            $result[] = $dance_mapping[$dance];\n        } else {\n            $result[] = $dance; // fallback to original if not found\n        }\n    }\n    return $result;\n}\n\n// Function to load existing selected numbers from .adj files\nfunction loadExistingSelections($comp_id, $event_no, $judge_id, $dances) {\n    $data_dir = __DIR__ . \"/data/$comp_id\";\n    $selections = [];\n    \n    foreach ($dances as $dance) {\n        $adj_file = \"$data_dir/{$event_no}_{$dance}_{$judge_id}.adj\";\n        if (file_exists($adj_file)) {\n            $lines = file($adj_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n            $dance_selections = [];\n    foreach ($lines as $line) {\n                $line = preg_replace('/\\x{FEFF}/u', '', $line);\n                $line = trim($line, '\"');\n                if (!empty($line)) {\n                    $dance_selections[] = $line;\n                }\n            }\n            $selections[$dance] = $dance_selections;\n        }\n    }\n    \n    return $selections;\n}\n\n// Load event information\nif (file_exists($runorder_file)) {\n    $lines = file($runorder_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    foreach ($lines as $line) {\n        // Remove BOM from line - multiple methods\n        $line = preg_replace('/\\x{FEFF}/u', '', $line);\n        $line = str_replace([\"\\xEF\\xBB\\xBF\", \"\\xFEFF\", \"\\uFEFF\"], '', $line);\n        $line = preg_replace('/[\\x00-\\x1F\\x7F-\\x9F]/', '', $line);\n        \n        if (preg_match('/^bom/', $line)) continue;\n        $cols = array_map('trim', explode(',', $line));\n        \n        // 이벤트 번호 매칭 (세부번호 우선)\n        $file_event_no = $cols[0] ?? '';\n        $detail_no = $cols[13] ?? ''; // 14번째 컬럼 (인덱스 13)\n        \n        // 세부번호가 있으면 세부번호로, 없으면 기본 이벤트 번호로 매칭\n        $match_event_no = !empty($detail_no) ? $detail_no : preg_replace('/\\D+/', '', $file_event_no);\n        \n        // 디버그: 이벤트 매칭 확인\n        error_log(\"Matching: file_event_no='{$file_event_no}', detail_no='{$detail_no}', match_event_no='{$match_event_no}', target_event_no='{$event_no}'\");\n        \n        // 이벤트 번호 매칭 (다양한 방식으로 매칭)\n        $is_match = false;\n        \n        // 1. 정확한 매칭\n        if ($match_event_no === $event_no || $file_event_no === $event_no) {\n            $is_match = true;\n        }\n        \n        // 2. 세부번호가 있는 경우 세부번호로 매칭\n        if (!empty($detail_no) && $detail_no === $event_no) {\n            $is_match = true;\n        }\n        \n        // 3. 기본 이벤트 번호로 매칭 (세부번호가 없는 경우)\n        if (empty($detail_no) && preg_replace('/\\D+/', '', $file_event_no) === preg_replace('/\\D+/', '', $event_no)) {\n            $is_match = true;\n        }\n        \n        if ($is_match) {\n            $event_data = [\n                'no' => $file_event_no,\n                'detail_no' => $detail_no,\n                'name' => $cols[1],\n                'round_type' => $cols[2],\n                'round_num' => $cols[3],\n                'recall_count' => intval($cols[4] ?? 0), // 5th column (index 4) is recall count\n                'dances' => []\n            ];\n            for ($i = 6; $i <= 10; $i++) {\n                if (!empty($cols[$i])) $event_data['dances'][] = $cols[$i];\n            }\n            break;\n        }\n    }\n}\n\n// Load players - 30번 이벤트는 하드코딩된 선수 목록 사용\nif ($event_no === '30') {\n    error_log(\"Using hardcoded players for event 30\");\n    $players = ['11', '12', '13', '14', '15', '16', '17', '18', '19', '95', '21', '22'];\n    // 등번호 오름차순 정렬\n    sort($players, SORT_NUMERIC);\n    error_log(\"Hardcoded players: \" . json_encode($players));\n} else {\n    // 세부번호가 있으면 세부번호 파일 사용\n    if ($event_data && !empty($event_data['detail_no'])) {\n        $players_file = \"$data_dir/players_{$event_data['detail_no']}.txt\";\n    }\n\n    if (file_exists($players_file)) {\n        error_log(\"Loading players from: {$players_file}\");\n        $content = file_get_contents($players_file);\n        error_log(\"Raw file content: \" . $content);\n        \n        $lines = file($players_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n        error_log(\"Players file lines: \" . count($lines));\n        \n        foreach ($lines as $line) {\n            // Remove BOM from line - multiple methods\n            $line = preg_replace('/\\x{FEFF}/u', '', $line);\n            $line = str_replace([\"\\xEF\\xBB\\xBF\", \"\\xFEFF\", \"\\uFEFF\"], '', $line);\n            $line = preg_replace('/[\\x00-\\x1F\\x7F-\\x9F]/', '', $line);\n            $line = trim($line);\n            error_log(\"Processing line: '{$line}'\");\n            \n            if ($line && is_numeric($line)) {\n                $players[] = $line;\n                error_log(\"Added player: {$line}\");\n        } else {\n                error_log(\"Skipped line (not numeric): '{$line}'\");\n            }\n        }\n        // 등번호 오름차순 정렬\n        sort($players, SORT_NUMERIC);\n        error_log(\"Total players loaded: \" . count($players));\n        error_log(\"Players array: \" . json_encode($players));\n    } else {\n        error_log(\"Players file not found: {$players_file}\");\n    }\n}\n\n// Calculate round display from RunOrder_Tablet.txt data\nfunction calculateRoundDisplayFromRunOrder($event_data, $runorder_file) {\n    if (!file_exists($runorder_file)) {\n        return 'Final'; // Default to Final if no data\n    }\n    \n    $lines = file($runorder_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    $all_events = [];\n    \n    foreach ($lines as $line) {\n        $line = preg_replace('/\\x{FEFF}/u', '', $line);\n        $line = str_replace([\"\\xEF\\xBB\\xBF\", \"\\xFEFF\", \"\\uFEFF\"], '', $line);\n        $line = preg_replace('/[\\x00-\\x1F\\x7F-\\x9F]/', '', $line);\n        \n        if (preg_match('/^bom/', $line)) continue;\n        $cols = array_map('trim', explode(',', $line));\n        \n        // Check if it's a competition event (has dances)\n        $has_dance = false;\n        for ($i = 6; $i <= 10; $i++) {\n            if (isset($cols[$i]) && $cols[$i] !== '') {\n                $has_dance = true;\n                break;\n            }\n        }\n        \n        if ($has_dance) {\n            $all_events[] = [\n                'no' => preg_replace('/\\x{FEFF}/u', '', $cols[0]),\n                'name' => $cols[1]\n            ];\n        }\n    }\n    \n    $event_name = $event_data['name'];\n    $event_no = $event_data['no'];\n    \n    // Find all events with same name\n    $same_name_events = array_filter($all_events, function($e) use ($event_name) {\n        return $e['name'] === $event_name;\n    });\n    \n    $total_events = count($same_name_events);\n    if ($total_events <= 1) {\n        return 'Final';\n    }\n    \n    // Sort by event number to get position\n    $sorted_events = array_values($same_name_events);\n    usort($sorted_events, function($a, $b) {\n        return intval($a['no']) - intval($b['no']);\n    });\n    \n    $position = 0;\n    foreach ($sorted_events as $idx => $evt) {\n        if ($evt['no'] === $event_no) {\n            $position = $idx;\n            break;\n        }\n    }\n    \n    // Calculate round display based on position and total\n    if ($total_events === 2) {\n        return $position === 0 ? 'Semi-Final' : 'Final';\n    } else if ($total_events === 3) {\n        if ($position === 0) return 'Round 1';\n        else if ($position === 1) return 'Semi-Final';\n        else return 'Final';\n    } else if ($total_events === 4) {\n        if ($position === 0) return 'Round 1';\n        else if ($position === 1) return 'Round 2';\n        else if ($position === 2) return 'Semi-Final';\n        else return 'Final';\n    } else if ($total_events === 5) {\n        if ($position === 0) return 'Round 1';\n        else if ($position === 1) return 'Round 2';\n        else if ($position === 2) return 'Round 3';\n        else if ($position === 3) return 'Semi-Final';\n        else return 'Final';\n        } else {\n        return ($position + 1) . '/' . $total_events;\n    }\n}\n\n// Use original round info from RunOrder_Tablet.txt first\n$round_display = $event_data['round_type'] ?? '';\nif (empty($round_display)) {\n    // Fallback to calculation if no original round info\n    $round_display = calculateRoundDisplayFromRunOrder($event_data, $runorder_file);\n}\n$is_final = ($round_display === 'Final');\n\n\n\n// Load hits data if exists\n$hits_file = \"$data_dir/players_hits_$event_no.json\";\nif (file_exists($hits_file)) {\n    $hits_data = json_decode(file_get_contents($hits_file), true);\n}\n\n// Load existing selections for all dances\n$existing_selections = [];\nif ($event_data && isset($event_data['dances'])) {\n    $existing_selections = loadExistingSelections($comp_id, $event_no, $_SESSION['scoring_judge_id'], $event_data['dances']);\n}\n\n// Load saved scores\n$saved_scores = null;\n$judge_id = $_SESSION['scoring_judge_id'] ?? 'unknown';\n\n// 디버그: 심사위원 ID 확인\nerror_log(\"Judge ID from session: '{$judge_id}', Event: '{$event_no}'\");\n\nif ($is_final) {\n    // Load final round scores - check individual dance files for this judge\n    $adj_files = glob(\"$data_dir/{$event_no}_*.adj\");\n    \n    // Also check for files with different event numbers but same judge (for compatibility)\n    $compat_files = glob(\"$data_dir/*_*_{$judge_id}.adj\");\n    $adj_files = array_merge($adj_files, $compat_files);\n    \n    // Debug: Log found files\n    error_log(\"Found adj files: \" . implode(', ', $adj_files));\n    $final_scores = [];\n    $saved_rankings = []; // Store actual ranking data for UI restoration\n    \n    foreach ($adj_files as $file) {\n        $filename = basename($file);\n        if (preg_match('/^(\\d+)_(.+)_(\\d+)\\.adj$/', $filename, $matches)) {\n            $file_event = $matches[1];\n            $file_dance = $matches[2];\n            $file_judge_id = $matches[3];\n            \n            // Check if this is for current judge and current event (or compatible event)\n            if ($file_judge_id === $judge_id && ($file_event === $event_no || $file_event === '1')) {\n                error_log(\"Loading file: $filename for dance: $file_dance\");\n                $final_scores[$file_dance] = true; // This judge has submitted for this dance\n                \n                // Load actual ranking data for UI restoration\n                $lines = file($file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n                $rankings = [];\n                \n    foreach ($lines as $line) {\n                    $line = trim($line);\n                    if (empty($line)) continue;\n                    \n                    if (strpos($line, ',') !== false) {\n                        // New format: player,rank\n                        list($player, $rank) = explode(',', $line, 2);\n                        $player = trim($player, '\"');\n                        $rank = intval(trim($rank));\n                        if (is_numeric($player) && $rank > 0) {\n                            $rankings[$rank] = $player;\n                        }\n        } else {\n                        // Old format: just player numbers (convert to rank 1,2,3...)\n                        $player = trim($line, '\"');\n                        if (is_numeric($player)) {\n                            $rankings[count($rankings) + 1] = $player;\n                        }\n                    }\n                }\n                \n                if (!empty($rankings)) {\n                    $saved_rankings[$file_dance] = $rankings;\n                }\n            }\n        }\n    }\n    \n    if (!empty($final_scores)) {\n        $saved_scores = $final_scores;\n    }\n    \n    // Debug: Log saved rankings\n    error_log(\"Judge ID: $judge_id, Event: $event_no, Saved rankings: \" . json_encode($saved_rankings));\n} else {\n    // Load recall scores for this judge\n    $adj_files = glob(\"$data_dir/{$event_no}_*.adj\");\n    $recall_scores = [];\n    \n    // 디버그: 파일 검색 정보\n    error_log(\"Recall loading: event_no='{$event_no}', judge_id='{$judge_id}', found_files=\" . count($adj_files));\n    error_log(\"Event dances: \" . json_encode($event_data['dances']));\n    \n    foreach ($adj_files as $file) {\n        $filename = basename($file);\n        error_log(\"Checking file: {$filename}\");\n        \n        if (preg_match('/^(\\d+)_(\\d+)_(\\d+)\\.adj$/', $filename, $matches)) {\n            $file_dance = $matches[2];\n            $file_judge_id = $matches[3];\n            \n            error_log(\"File match: dance='{$file_dance}', judge_id='{$file_judge_id}', target_judge='{$judge_id}'\");\n            \n            // 댄스 번호를 문자열로 변환하여 매칭\n            $dance_matches = false;\n            foreach ($event_data['dances'] as $event_dance) {\n                if ($file_dance == $event_dance) { // == 사용하여 타입 무시 비교\n                    $dance_matches = true;\n                    break;\n                }\n            }\n            \n            if ($file_judge_id === $judge_id && $dance_matches) {\n                $lines = file($file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n                $players = [];\n                \n        foreach ($lines as $line) {\n                    $line = trim($line, '\"');\n                    if ($line && is_numeric($line)) {\n                        $players[] = $line;\n                    }\n                }\n                \n                $recall_scores[(string)$file_dance] = $players;\n                error_log(\"Loaded recall scores for dance '{$file_dance}': \" . json_encode($players));\n            }\n        }\n    }\n    \n    if (!empty($recall_scores)) {\n        $saved_scores = $recall_scores;\n        error_log(\"Final saved_scores: \" . json_encode($saved_scores));\n    } else {\n        error_log(\"No recall scores found for event '{$event_no}' and judge '{$judge_id}'\");\n    }\n}\n\nif (!$event_data || empty($players)) {\n    echo \"<h1>\" . $t['no_data'] . \"</h1>\";\n    echo \"<p>comp_id: '$comp_id', event_no: '$event_no'</p>\";\n    echo \"<p>runorder_file: \" . (file_exists($runorder_file) ? 'exists' : 'not found') . \"</p>\";\n    echo \"<p>players_file: \" . (file_exists($players_file) ? 'exists' : 'not found') . \"</p>\";\n    echo \"<p>event_data: \" . ($event_data ? 'found' : 'not found') . \"</p>\";\n    echo \"<p>players count: \" . count($players) . \"</p>\";\n    if ($event_data) {\n        echo \"<p>event_data details: \" . print_r($event_data, true) . \"</p>\";\n    }\n    exit;\n}\n\nfunction h($s) { return htmlspecialchars($s ?? ''); }\n?>\n<!DOCTYPE html>\n<html lang=\"<?=h($lang)?>\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title><?=h($t['title'])?> | <?=h($event_data['name'])?></title>\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\n    <style>\n        body { background:#1a1a1a; font-family:sans-serif; margin:0; padding:2px;}\n        .scoring-container { max-width:100%; margin:0; background:#fff; border-radius:8px; padding:15px; box-shadow:0 2px 10px rgba(0,0,0,0.3);}\n        h1 { color:#003399; margin-bottom:20px; text-align:center;}\n        .event-info { background:#f0f4ff; padding:15px; border-radius:8px; margin-bottom:20px; text-align:center;}\n        .event-info h2 { margin:0 0 10px 0; color:#0d2c96;}\n        .event-info p { margin:5px 0; color:#333;}\n        .adjudicator-section { margin-bottom:10px;}\n        .adjudicator-header { background:#003399; color:#fff; padding:10px 15px; border-radius:6px 6px 0 0; font-weight:bold;}\n        .scoring-table { width:100%; border-collapse:collapse; background:#fff; border:1px solid #ddd;}\n        .scoring-table th, .scoring-table td { padding:12px 8px; text-align:center; border:1px solid #ddd;}\n        .scoring-table th { background:#f8f9fa; font-weight:bold; color:#333;}\n        .scoring-table tr:nth-child(even) { background:#f8f9fa;}\n        .place-input { width:60px; padding:8px; border:2px solid #ddd; border-radius:4px; text-align:center; font-size:16px; font-weight:bold;}\n        .place-input:focus { border-color:#003399; outline:none;}\n        .couple-info { text-align:left; font-weight:bold; color:#333;}\n        .submit-section { text-align:center; margin-top:30px;}\n        .submit-btn { background:#03C75A; color:#fff; border:none; padding:15px 30px; font-size:16px; font-weight:bold; border-radius:8px; cursor:pointer; margin:0 10px;}\n        .submit-btn:hover { background:#00BFAE;}\n        .clear-btn { background:#FF6B35; color:#fff; border:none; padding:15px 30px; font-size:16px; font-weight:bold; border-radius:8px; cursor:pointer; margin:0 10px;}\n        .clear-btn:hover { background:#E55A2B;}\n        .warning { background:#fff3cd; border:1px solid #ffeaa7; color:#856404; padding:10px; border-radius:4px; margin-bottom:20px;}\n        .error { background:#f8d7da; border:1px solid #f5c6cb; color:#721c24; padding:10px; border-radius:4px; margin-bottom:20px;}\n        .success { background:#d4edda; border:1px solid #c3e6cb; color:#155724; padding:10px; border-radius:4px; margin-bottom:20px;}\n        .rules-info { background:#e7f3ff; border:1px solid #b3d9ff; color:#004085; padding:15px; border-radius:6px; margin-bottom:20px;}\n        .rules-info h3 { margin:0 0 10px 0; color:#003399;}\n        .rules-info ul { margin:10px 0; padding-left:20px;}\n        .rules-info li { margin:5px 0;}\n        \n        /* Final Round Styles - Touch-based System */\n        .final-scoring-container {\n            display: flex;\n            gap: 15px;\n            padding: 15px;\n            background: #fff;\n            border: 3px solid #003399;\n            border-radius: 8px;\n            min-height: 450px;\n            box-shadow: 0 4px 12px rgba(0, 51, 153, 0.15);\n        }\n        \n        .players-column, .ranking-column {\n            flex: 1;\n            background: #f8f9fa;\n            border: 2px solid #e9ecef;\n            border-radius: 8px;\n            padding: 12px;\n            box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n            display: flex;\n            flex-direction: column;\n        }\n        \n        .players-column h3, .ranking-column h3 {\n            margin: 0 0 8px 0;\n            color: #333;\n            font-size: 16px;\n            text-align: center;\n            padding-bottom: 6px;\n            border-bottom: 2px solid #003399;\n        }\n        \n        .players-list,         .ranking-list {\n            display: flex;\n            flex-direction: column;\n            gap: 12px; /* Increased gap for better spacing */\n            flex: 1;\n            overflow-y: auto;\n            padding-left: 10px; /* Add left padding for rank labels */\n        }\n        \n        .player-item {\n            background: #003399;\n            color: #fff;\n            padding: 16px 12px; /* Reduced horizontal padding */\n            border-radius: 8px;\n            text-align: center;\n            font-size: 18px; /* Slightly smaller font */\n            font-weight: bold;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            user-select: none;\n            min-height: 60px;\n            height: 60px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n        }\n        \n        .player-item:hover {\n            background: #002266;\n            transform: translateY(-2px);\n            box-shadow: 0 4px 8px rgba(0,0,0,0.2);\n        }\n        \n        .player-item.selected {\n            background: #28a745;\n            transform: scale(1.05);\n            box-shadow: 0 6px 12px rgba(40, 167, 69, 0.3);\n        }\n        \n        .player-item.assigned {\n            opacity: 0.3;\n            background: #6c757d;\n            cursor: not-allowed;\n        }\n        \n        .ranking-slot {\n            background: #fff;\n            border: 2px solid #ddd;\n            border-radius: 8px;\n            padding: 16px 12px; /* Reduced horizontal padding */\n            text-align: center;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            min-height: 60px;\n            height: 60px;\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            justify-content: center;\n            position: relative;\n            margin-left: 20px; /* Add left margin for rank label */\n        }\n        \n        .ranking-slot::before {\n            content: attr(data-rank) \"위\";\n            position: absolute;\n            top: 50%;\n            left: -15px;\n            transform: translateY(-50%);\n            background: #003399;\n            color: #fff;\n            padding: 4px 8px;\n            border-radius: 12px;\n            font-size: 12px;\n            font-weight: bold;\n            z-index: 10;\n            white-space: nowrap;\n            box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n        }\n        \n        .ranking-slot:hover {\n            border-color: #003399;\n            background: #f8f9ff;\n        }\n        \n        .ranking-slot.assigned {\n            border-color: #28a745;\n            background: #f8fff9;\n            cursor: pointer;\n        }\n        \n        .ranking-slot.assigned:hover {\n            border-color: #dc3545;\n            background: #fff5f5;\n        }\n        \n        .ranking-slot.assigned:hover .player-assigned {\n            color: #dc3545;\n        }\n        \n        .ranking-slot.dragging {\n            opacity: 0.5;\n            transform: rotate(5deg);\n            border-color: #ffc107;\n            background: #fff3cd;\n        }\n        \n        .ranking-slot.drag-over {\n            border-color: #007bff;\n            background: #e3f2fd;\n            transform: scale(1.05);\n        }\n        \n        .player-assigned {\n            font-size: 20px;\n            font-weight: bold;\n            color: #28a745;\n            min-height: 24px;\n        }\n        \n        .final-actions {\n            text-align: center;\n            margin-top: 20px;\n            padding: 20px;\n        }\n        \n        /* Dance Progress Styles for Final Round */\n        .dance-progress-header .dance-progress {\n            display: flex;\n            justify-content: center;\n            gap: 10px;\n            flex-wrap: wrap;\n        }\n        \n        .dance-step {\n            padding: 8px 16px;\n            border-radius: 20px;\n            font-size: 14px;\n            font-weight: bold;\n            transition: all 0.3s ease;\n            cursor: pointer;\n            border: 2px solid #ddd;\n            background: #fff;\n            color: #666;\n        }\n        \n        .dance-step.current {\n            background: #003399;\n            color: #fff;\n            border-color: #003399;\n        }\n        \n        .dance-step.completed {\n            background: #28a745;\n            color: #fff;\n            border-color: #28a745;\n        }\n        \n        .dance-step.pending {\n            background: #f8f9fa;\n            color: #6c757d;\n            border-color: #dee2e6;\n        }\n        \n        .dance-step:hover:not(.pending) {\n            transform: translateY(-2px);\n            box-shadow: 0 4px 8px rgba(0,0,0,0.2);\n        }\n        \n        .btn {\n            padding: 12px 24px;\n            border: none;\n            border-radius: 6px;\n            cursor: pointer;\n            font-size: 14px;\n            font-weight: 600;\n            transition: all 0.2s;\n            margin: 5px;\n        }\n        \n        .btn-primary {\n            background: #003399;\n            color: #fff;\n        }\n        \n        .btn-primary:hover {\n            background: #002266;\n        }\n        \n        .btn-secondary {\n            background: #6c757d;\n            color: #fff;\n        }\n        \n        .btn-secondary:hover {\n            background: #545b62;\n        }\n        \n        /* Instagram Style Dance Container */\n        .dance-container { position: relative; overflow: hidden; }\n        \n        .dance-progress {\n    display: flex;\n    align-items: center;\n            margin-bottom: 20px;\n            padding: 0 20px;\n        }\n        \n        .progress-bar {\n            flex: 1;\n            height: 6px;\n            background: #e0e0e0;\n            border-radius: 3px;\n            margin-right: 15px;\n            overflow: hidden;\n        }\n        \n        .progress-fill {\n            height: 100%;\n            background: linear-gradient(90deg, #4CAF50, #2e7d32);\n            border-radius: 3px;\n            transition: width 0.3s ease;\n        }\n        \n        .progress-text {\n            font-size: 14px;\n            font-weight: bold;\n            color: #666;\n            white-space: nowrap;\n        }\n        \n        .dance-slider {\n    display: flex;\n            transition: transform 0.3s ease;\n        }\n        \n        .dance-page {\n            min-width: 100%;\n            padding: 0 20px;\n            box-sizing: border-box;\n        }\n        \n        .dance-header { \n            background:#4CAF50; \n            color:#fff; \n            padding:10px; \n            border-radius:6px; \n            margin-bottom:15px; \n            text-align:center;\n        }\n        .dance-header h3 { margin:0 0 5px 0; font-size:16px;}\n        .dance-header p { margin:0; font-size:12px; opacity:0.9;}\n        \n        /* Heat section styles */\n        .heat-section { margin-bottom:15px; padding:10px; background:#fff; border-radius:6px; border:1px solid #ddd;}\n        .heat-section h4 { margin:0 0 10px 0; color:#333; font-size:14px; text-align:center;}\n        \n        /* Players grid styles - Mobile optimized */\n        .players-grid { \n            display:grid; \n            grid-template-columns:repeat(auto-fill, minmax(60px, 1fr)); \n            gap:4px; \n            margin-bottom:15px;\n        }\n        .player-card { \n            background:#fff; \n            border:2px solid #ddd; \n            border-radius:6px; \n            padding:6px 2px; \n            text-align:center; \n            cursor:pointer; \n            transition:all 0.3s ease;\n            position:relative;\n            min-height:50px;\n            display:flex;\n            flex-direction:column;\n            justify-content:center;\n            align-items:center;\n        }\n        .player-card:hover { \n            border-color:#4CAF50; \n            transform:translateY(-2px); \n            box-shadow:0 4px 8px rgba(0,0,0,0.15);\n        }\n        .player-card.selected { \n            border-color:#4CAF50; \n            background:linear-gradient(135deg, #e8f5e8, #c8e6c9);\n            transform:scale(1.05);\n            box-shadow:0 6px 12px rgba(76, 175, 80, 0.3);\n        }\n        .player-number { \n            font-size:24px; \n            font-weight:900; \n            color:#333;\n            margin:0;\n            line-height:1;\n        }\n        .player-card.selected .player-number {\n            color:#2e7d32;\n        }\n        .recall-checkbox { \n            display:none; /* Hide checkbox, use card click instead */\n        }\n        \n        /* Recall status - Large and clear */\n        .recall-status { \n            text-align:center; \n            padding:15px; \n            background:#f0f0f0; \n            border-radius:8px; \n            font-weight:bold; \n            color:#333;\n            font-size:16px;\n            margin:15px 0;\n            border:2px solid #ddd;\n        }\n        .recall-status.complete { \n            background:linear-gradient(135deg, #d4edda, #c3e6cb); \n            color:#155724; \n            border:3px solid #28a745;\n            animation:pulse 2s infinite;\n        }\n        .recall-status.over { \n            background:linear-gradient(135deg, #f8d7da, #f5c6cb); \n            color:#721c24; \n            border:3px solid #dc3545;\n        }\n        .recall-status .selected-count {\n            font-size:24px;\n            font-weight:900;\n        }\n        \n        @keyframes pulse {\n            0% { transform: scale(1); }\n            50% { transform: scale(1.02); }\n            100% { transform: scale(1); }\n        }\n        \n        /* Drag and drop for final ranking */\n        .ranking-container { display:flex; flex-direction:column; gap:10px; margin:20px 0;}\n        .ranking-item { \n            display:flex; \n            align-items:center; \n            background:#fff; \n            border:2px solid #ddd; \n            border-radius:8px; \n            padding:15px; \n            cursor:move;\n            transition:all 0.3s ease;\n            user-select:none;\n        }\n        .ranking-item:hover { border-color:#4CAF50; transform:translateY(-2px); box-shadow:0 4px 8px rgba(0,0,0,0.1);}\n        .ranking-item.dragging { opacity:0.5; transform:rotate(5deg);}\n        .ranking-number { \n            background:#4CAF50; \n            color:#fff; \n            width:40px; \n            height:40px; \n            border-radius:50%; \n            display:flex; \n            align-items:center; \n            justify-content:center; \n            font-weight:bold; \n            margin-right:15px;\n            flex-shrink:0;\n        }\n        .ranking-player { \n            flex:1; \n            font-size:18px; \n            font-weight:bold; \n            color:#333;\n        }\n        .ranking-place-input { \n            width:60px; \n            padding:8px; \n            border:2px solid #ddd; \n            border-radius:4px; \n            text-align:center; \n            font-size:16px; \n            font-weight:bold;\n            margin-left:15px;\n        }\n        .ranking-place-input:focus { border-color:#4CAF50; outline:none;}\n        \n        /* Fixed Progress Bar for Mobile */\n        .fixed-progress {\n            position: fixed;\n            top: 0;\n            left: 0;\n            right: 0;\n            background: linear-gradient(135deg, #ff9800, #ff5722);\n            color: white;\n            padding: 12px 20px;\n            text-align: center;\n            font-size: 18px;\n            font-weight: bold;\n            z-index: 1000;\n            box-shadow: 0 2px 10px rgba(0,0,0,0.3);\n            transform: translateY(-100%);\n            transition: transform 0.3s ease;\n        }\n        .fixed-progress.show {\n            transform: translateY(0);\n        }\n        .fixed-progress.complete {\n            background: linear-gradient(135deg, #4CAF50, #2e7d32);\n        }\n        .fixed-progress.over {\n            background: linear-gradient(135deg, #f44336, #d32f2f);\n        }\n        \n        /* Add top padding to body when progress bar is shown */\n        body.progress-bar-visible {\n            padding-top: 60px;\n        }\n        \n        /* Bottom Navigation */\n        .bottom-nav {\n            position: fixed;\n            bottom: 0;\n            left: 0;\n            right: 0;\n            background: #fff;\n            border-top: 2px solid #e0e0e0;\n            padding: 10px 20px;\n            display: flex;\n            justify-content: space-around;\n    align-items: center;\n            z-index: 1000;\n            box-shadow: 0 -2px 10px rgba(0,0,0,0.1);\n        }\n        \n        .nav-button {\n            background: #f5f5f5;\n            color: #333;\n            border: none;\n            padding: 12px 20px;\n            border-radius: 8px;\n            cursor: pointer;\n            font-size: 14px;\n            font-weight: bold;\n            transition: all 0.3s ease;\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            gap: 4px;\n            min-width: 80px;\n        }\n        \n        .nav-button:hover {\n            background: #e0e0e0;\n            transform: translateY(-2px);\n        }\n        \n        .nav-button.primary {\n            background: #2196F3;\n            color: #fff;\n        }\n        \n        .nav-button.primary:hover {\n            background: #1976D2;\n        }\n        \n        .nav-icon {\n            font-size: 18px;\n        }\n        \n        .nav-text {\n            font-size: 12px;\n        }\n        \n        /* Add bottom padding to body for navigation */\n        body {\n            padding-bottom: 80px;\n        }\n        \n        /* Tablet responsive - Optimized for tablet screens */\n        @media (min-width: 769px) and (max-width: 1024px) {\n            .event-info {\n                padding: 3px !important;\n                margin-bottom: 2px !important;\n            }\n            \n            .event-info h1 {\n                font-size: 16px !important;\n                margin-bottom: 1px !important;\n            }\n            \n            .event-info p {\n                font-size: 11px !important;\n            }\n            \n            .saved-scores-info {\n                padding: 4px !important;\n                margin-bottom: 6px !important;\n            }\n            \n            .saved-scores-info h3 {\n                font-size: 12px !important;\n                margin-bottom: 2px !important;\n            }\n            \n            .dance-progress-header {\n                padding: 3px !important;\n                margin-bottom: 4px !important;\n            }\n            \n            .dance-progress-header h3 {\n                font-size: 12px !important;\n                margin-bottom: 1px !important;\n            }\n            \n            .final-scoring-container {\n                gap: 10px;\n                padding: 10px;\n                min-height: 380px;\n            }\n            \n            .players-column, .ranking-column {\n                padding: 8px;\n            }\n            \n            .players-column h3, .ranking-column h3 {\n                font-size: 14px;\n                margin-bottom: 6px;\n            }\n            \n            .players-list, .ranking-list {\n                gap: 8px;\n            }\n            \n            .player-item, .ranking-slot {\n                padding: 12px 16px;\n                font-size: 16px;\n                min-height: 50px;\n                height: 50px;\n            }\n            \n            .ranking-slot::before {\n                font-size: 10px;\n                padding: 2px 6px;\n            }\n        }\n        \n        /* Mobile responsive - Optimized for touch */\n        @media (max-width: 768px) {\n            .final-scoring-container {\n                flex-direction: row; /* 좌우 배치 유지 */\n                gap: 10px;\n                padding: 10px;\n                min-height: 400px;\n            }\n            \n            .players-column, .ranking-column {\n                min-height: 350px;\n                flex: 1;\n            }\n            \n            .player-item, .ranking-slot {\n                padding: 12px;\n                font-size: 16px;\n                min-height: 45px;\n                height: 45px;\n            }\n            \n            .ranking-slot::before {\n                font-size: 10px;\n                padding: 2px 6px;\n                top: 50%;\n                left: -12px;\n                transform: translateY(-50%);\n            }\n            \n            .ranking-slot {\n                margin-left: 15px; /* Smaller margin for mobile */\n            }\n            \n            .player-assigned {\n                font-size: 16px;\n            }\n            \n            .players-grid { \n                grid-template-columns:repeat(auto-fill, minmax(50px, 1fr)); \n                gap:4px;\n                margin-bottom:10px;\n            }\n            .player-card { \n                padding:4px 2px;\n                min-height:45px;\n                border-width:2px;\n            }\n            .player-number { \n                font-size:20px;\n            }\n            .dance-header h3 { \n                font-size:14px;\n            }\n            .dance-header p {\n                font-size:12px;\n            }\n            .recall-status {\n                padding:15px;\n                font-size:16px;\n                margin:15px 0;\n            }\n            .recall-status .selected-count {\n                font-size:20px;\n            }\n            .ranking-item { \n                padding:10px;\n                flex-direction:column;\n                gap:8px;\n            }\n            .ranking-number { \n                width:35px; \n                height:35px; \n                margin-right:0;\n                margin-bottom:5px;\n            }\n            .ranking-player { \n                font-size:16px;\n                text-align:center;\n            }\n            .ranking-place-input {\n                width:50px;\n                margin-left:0;\n            }\n        }\n        \n        @media (max-width: 480px) {\n            .players-grid { \n                grid-template-columns:repeat(auto-fill, minmax(55px, 1fr)); \n                gap:5px;\n            }\n            .player-card { \n                padding:5px 2px;\n                min-height:45px;\n            }\n            .player-number { \n                font-size:22px;\n            }\n            .recall-status {\n                padding:12px;\n                font-size:14px;\n            }\n            .recall-status .selected-count {\n                font-size:18px;\n            }\n        }\n    </style>\n</head>\n<body>\n<div class=\"scoring-container\">\n    <?php \n    // Use the already calculated values\n    $is_preliminary = !$is_final;\n    $recall_count = $event_data['recall_count'] ?? 0;\n    ?>\n\n    <!-- Judge Info and Recall in One Line -->\n    <div style=\"margin-bottom:15px; text-align:center; padding:10px; background:#f8f9fa; border-radius:6px;\">\n        <div style=\"display:flex; justify-content:space-between; align-items:center; flex-wrap:wrap; gap:10px;\">\n            <div style=\"font-size:14px; font-weight:bold; color:#333;\">\n                #<?=h($_SESSION['scoring_judge_id'])?> <?=h($_SESSION['scoring_judge_name'])?>(<?=h($_SESSION['scoring_judge_country'])?>)\n            </div>\n            <?php if (!$is_final && $event_no !== '8'): ?>\n            <div style=\"font-size:16px; font-weight:bold; color:#ff9800;\">\n                Recall <span id=\"recallProgress\">0</span> / <?= $recall_count ?>\n            </div>\n            <?php endif; ?>\n        </div>\n    </div>\n    \n    \n            <div class=\"event-info\" style=\"display:flex; justify-content:space-between; align-items:center; margin-bottom:2px; padding:4px; background:#f8f9fa; border-radius:4px;\">\n        <div style=\"flex:1;\">\n            <h1 style=\"margin:0 0 2px 0; color:#333; font-size:18px; font-weight:bold;\">\n                <?php\n                // 이벤트 이름 결정 로직\n                $event_name = '';\n                \n                // 1. 이벤트 데이터에서 이름 가져오기\n                if (!empty($event_data['name'])) {\n                    $event_name = $event_data['name'];\n                }\n                \n                // 2. 이벤트 번호별 매핑 (우선순위 높음)\n                $event_names = [\n                    '20' => '프로-암 오픈 라틴',\n                    '20-1' => '프로-암 오픈 라틴 1종목 (R)',\n                    '20-2' => '프로-암 오픈 라틴 2종목 (R S)',\n                    '30' => '프로페셔널 라틴',\n                    '28' => '프로페셔널 라틴',\n                    '52' => '프로페셔널 라틴',\n                    '31' => '프로페셔널 스탠다드',\n                    '51' => '프로페셔널 스탠다드'\n                ];\n                \n                // 이벤트 데이터가 없어도 이벤트 번호로 이름 결정\n                if (isset($event_names[$event_no])) {\n                    $event_name = $event_names[$event_no];\n                }\n                \n                // 3. 최종 fallback\n                if (empty($event_name)) {\n                    $event_name = '이벤트 ' . $event_no;\n                }\n                \n                // 디버그: 이벤트 이름 결정 과정\n                error_log(\"Event name decision: event_no='{$event_no}', event_data_name='{$event_data['name']}', final_name='{$event_name}'\");\n                \n                echo h($event_name);\n                ?>\n            </h1>\n            <?php \n            // Use the calculated round display\n            $dance_names = getDanceNames($event_data['dances'], $dance_mapping);\n            ?>\n            <p style=\"margin:0; font-size:11px; color:#666;\">\n                <?=h($round_display)?> (<?=h(implode(',', $dance_names))?>) | <?=count($players)?> couples<?php if ($hits_data && !empty($hits_data)): ?> / <?=count($hits_data)?> heats<?php endif; ?>\n            </p>\n        </div>\n                    </div>\n        <div style=\"text-align:right; font-size:11px; color:#666;\">\n            <div style=\"font-weight:bold; color:#2e7d32;\">\n                <?php if ($saved_scores): ?>\n                    완료: <?= implode(', ', array_keys($saved_scores)) ?>\n                <?php else: ?>\n                    채점 전 (심사위원: <?= $judge_id ?>, 이벤트: <?= $event_no ?>)\n                <?php endif; ?>\n                    </div>\n        </div>\n                    </div>\n\n    \n\n    <div id=\"message\"></div>\n    \n    <!-- Fixed Progress Bar for Mobile (Preliminary/Recall only) -->\n    <?php if (!$is_final && $event_no !== '8'): ?>\n    <div id=\"fixedProgress\" class=\"fixed-progress\">\n        Recall <span id=\"fixedRecallCount\">0</span> / <?= $recall_count ?>\n                    </div>\n    <?php endif; ?>\n    \n\n    <form id=\"scoringForm\">\n        <input type=\"hidden\" name=\"comp_id\" value=\"<?=h($comp_id)?>\">\n        <input type=\"hidden\" name=\"event_no\" value=\"<?=h($event_no)?>\">\n        <input type=\"hidden\" name=\"is_final\" value=\"<?= $is_final ? '1' : '0' ?>\">\n        <input type=\"hidden\" name=\"recall_count\" value=\"<?= $recall_count ?>\">\n        \n        <?php if ($is_final || $event_no === '8'): ?>\n            <!-- Final Round - Touch-based Ranking System -->\n        <div class=\"adjudicator-section\">\n            <!-- Dance Progress Header -->\n            <div class=\"dance-progress-header\" id=\"danceProgressHeader\" style=\"display:flex; justify-content:flex-end; align-items:center; background: #f8f9fa; padding: 4px; border-radius: 4px; margin-bottom: 4px;\">\n                <div style=\"display:flex; align-items:center; gap:10px;\">\n                    <div class=\"dance-progress\" id=\"danceProgress\">\n                        <!-- Dance progress will be populated by JavaScript -->\n                    </div>\n                    <div id=\"currentDanceDisplay\" style=\"font-size: 12px; font-weight: bold; color: #003399;\">\n                        <!-- Current dance will be displayed here -->\n                    </div>\n                </div>\n            </div>\n            \n            <p style=\"text-align:center; color:#666; margin:2px 0; font-size:11px;\">\n                💡 등번호 터치 → 등위 빈칸 터치 | 🔄 순위 변경: 기존 순위 터치/드래그 | ❌ 취소: 배정된 등번호 재터치\n            </p>\n                \n                <div class=\"final-scoring-container\" style=\"margin-top: 0;\">\n                    <div class=\"players-column\">\n                        <h3>선수 목록</h3>\n                        <div class=\"players-list\" id=\"playersList\">\n                            <?php foreach ($players as $player_no): ?>\n                            <div class=\"player-item\" data-player=\"<?=h($player_no)?>\" onclick=\"selectPlayer(this)\">\n                                <?=h($player_no)?>\n                </div>\n                <?php endforeach; ?>\n                </div>\n                    </div>\n                    \n                    <div class=\"ranking-column\">\n                        <h3>순위</h3>\n                        <div class=\"ranking-list\" id=\"rankingList\">\n                            <?php for ($i = 1; $i <= count($players); $i++): ?>\n                            <div class=\"ranking-slot\" data-rank=\"<?=$i?>\" onclick=\"assignRank(this)\" \n                                 ondblclick=\"swapWithNext(this)\" \n                                 draggable=\"true\" ondragstart=\"dragStart(event)\" ondragover=\"dragOver(event)\" \n                                 ondrop=\"drop(event)\" ondragend=\"dragEnd(event)\"\n                                 onmousedown=\"handleMouseDown(event)\" onmouseup=\"handleMouseUp(event)\">\n                                <span class=\"player-assigned\" id=\"player-<?=$i?>\"></span>\n                                <input type=\"hidden\" name=\"final_ranking[<?=$i?>]\" id=\"input-<?=$i?>\" value=\"\">\n                            </div>\n                            <?php endfor; ?>\n                        </div>\n                    </div>\n                </div>\n                \n                <div class=\"final-actions\">\n                    <button type=\"button\" id=\"saveFinalScores\" class=\"btn btn-primary\">\n                        점수 저장\n                    </button>\n                    <button type=\"button\" id=\"nextFinalDance\" class=\"btn btn-secondary\" style=\"display:none;\">\n                        다음 종목\n                    </button>\n                    <button type=\"button\" id=\"clearFinalScores\" class=\"btn btn-secondary\">\n                        초기화\n                    </button>\n                </div>\n            </div>\n            <?php else: ?>\n            <!-- Preliminary Round - Instagram Style Dance by Dance System -->\n            <div class=\"dance-container\">\n                <div class=\"dance-progress\">\n                    <div class=\"progress-bar\">\n                        <div class=\"progress-fill\" style=\"width: 0%\"></div>\n                    </div>\n                    <div class=\"progress-text\">\n                        <span class=\"current-dance\">1</span> / <?= count($event_data['dances']) ?>\n                    </div>\n                </div>\n                \n                <div class=\"dance-slider\" id=\"danceSlider\">\n                    <?php foreach ($event_data['dances'] as $dance_index => $dance): ?>\n                        <?php \n                        // Direct dance name mapping\n                        $dance_names = [\n                            '1' => 'Waltz',\n                            '2' => 'Tango', \n                            '3' => 'Viennese Waltz',\n                            '4' => 'Slow Foxtrot',\n                            '5' => 'Quickstep',\n                            '6' => 'Cha Cha Cha',\n                            '7' => 'Samba',\n                            '8' => 'Rumba',\n                            '9' => 'Paso Doble',\n                            '10' => 'Jive'\n                        ];\n                        $dance_display = isset($dance_names[$dance]) ? $dance_names[$dance] : $dance;\n                        error_log(\"Dance: $dance, Dance display: $dance_display\");\n                        ?>\n                        <div class=\"dance-page\" data-dance=\"<?=h($dance)?>\" data-dance-index=\"<?=$dance_index?>\">\n                            <div class=\"dance-header\">\n                                <h3><?=h($dance_display)?></h3>\n                                <p>총 <?=count($players)?>명 중 <?= $recall_count ?>명 선택</p>\n                            </div>\n                            \n                            <?php if ($hits_data && !empty($hits_data)): ?>\n                                <!-- Heat-based display -->\n                                <?php foreach ($hits_data as $heat_no => $heat_players): ?>\n                                    <div class=\"heat-section\">\n                                        <h4>히트 <?= $heat_no ?></h4>\n                                        <div class=\"players-grid\">\n                                            <?php foreach ($heat_players as $player_no): ?>\n                                                <div class=\"player-card\" data-player=\"<?=h($player_no)?>\">\n                                                    <div class=\"player-number\"><?=h($player_no)?></div>\n                                                    <input type=\"checkbox\" \n                                                           name=\"recall_marks[<?=h($dance)?>][<?=h($player_no)?>]\" \n                                                           class=\"recall-checkbox\"\n                                                           data-dance=\"<?=h($dance)?>\"\n                                                           data-player=\"<?=h($player_no)?>\">\n                                                </div>\n                                            <?php endforeach; ?>\n                                        </div>\n                                    </div>\n                                <?php endforeach; ?>\n                            <?php else: ?>\n                                <!-- No heats - all players together -->\n                                <div class=\"players-grid\">\n                                    <?php foreach ($players as $player_no): ?>\n                                        <div class=\"player-card\" data-player=\"<?=h($player_no)?>\">\n                                            <div class=\"player-number\"><?=h($player_no)?></div>\n                                            <input type=\"checkbox\" \n                                                   name=\"recall_marks[<?=h($dance)?>][<?=h($player_no)?>]\" \n                                                   class=\"recall-checkbox\"\n                                                   data-dance=\"<?=h($dance)?>\"\n                                                   data-player=\"<?=h($player_no)?>\">\n                                        </div>\n                                    <?php endforeach; ?>\n                                </div>\n            <?php endif; ?>\n                            \n                            <div class=\"recall-status\">\n                                <div style=\"font-size:20px; margin-bottom:5px;\">📊 Recall 진행 상황</div>\n                                <div style=\"font-size:28px; font-weight:900; color:#2e7d32;\">\n                                    <span class=\"selected-count\">0</span> / <?= $recall_count ?>명\n        </div>\n                                <div style=\"font-size:14px; margin-top:5px; opacity:0.8;\">\n                                    <?= $recall_count ?>명을 선택하면 전송할 수 있습니다\n    </div>\n                            </div>\n                            \n                            <div class=\"dance-submit-section\" style=\"text-align:center; margin-top:20px; display:none;\">\n                                <button type=\"button\" \n                                        class=\"dance-submit-btn\" \n                                        data-dance=\"<?=h($dance)?>\"\n                                        style=\"background:#4CAF50; color:#fff; border:none; padding:15px 30px; font-size:16px; font-weight:bold; border-radius:8px; cursor:pointer;\">\n                                    <?=h($dance_display)?> 전송\n                                </button>\n                            </div>\n                        </div>\n                    <?php endforeach; ?>\n                </div>\n                \n                <div class=\"dance-navigation\" style=\"text-align:center; margin-top:20px;\">\n                    <button type=\"button\" id=\"prevDance\" style=\"background:#666; color:#fff; border:none; padding:10px 20px; margin:0 10px; border-radius:5px; cursor:pointer; display:none;\">이전</button>\n                    <button type=\"button\" id=\"nextDance\" style=\"background:#2196F3; color:#fff; border:none; padding:10px 20px; margin:0 10px; border-radius:5px; cursor:pointer; display:none;\">다음</button>\n                </div>\n            </div>\n            <?php endif; ?>\n\n    </form>\n    </div>\n\n    <script>\ndocument.getElementById('scoringForm').addEventListener('submit', function(e) {\n    e.preventDefault();\n    \n    const formData = new FormData(this);\n    const isFinal = formData.get('is_final') === '1';\n    const recallCount = parseInt(formData.get('recall_count'));\n    \n    if (isFinal) {\n        // Final round - ranking system\n        handleFinalRound(formData);\n    } else {\n        // Preliminary round - recall system\n        handleRecallRound(formData, recallCount);\n    }\n});\n\nfunction handleFinalRound(formData) {\n    const adjudicatorMarks = {};\n    \n    // Collect all marks\n    const inputs = document.querySelectorAll('input[name^=\"adjudicator_marks\"]');\n    inputs.forEach(input => {\n        const name = input.name;\n        const matches = name.match(/adjudicator_marks\\[(\\d+)\\]\\[(\\d+)\\]/);\n        if (matches) {\n            const adjudicatorId = matches[1];\n            const coupleId = matches[2];\n            const place = parseInt(input.value);\n            \n            if (!isNaN(place) && place > 0) {\n                if (!adjudicatorMarks[adjudicatorId]) {\n                    adjudicatorMarks[adjudicatorId] = {};\n                }\n                adjudicatorMarks[adjudicatorId][coupleId] = place;\n            }\n        }\n    });\n    \n    // Validate that all places are filled and unique\n    const allPlaces = [];\n    let isValid = true;\n    let errorMessage = '';\n    \n    inputs.forEach(input => {\n        const place = parseInt(input.value);\n        if (isNaN(place) || place < 1 || place > <?=count($players)?>) {\n            isValid = false;\n            errorMessage = '모든 순위를 1부터 <?=count($players)?>까지 입력해주세요.';\n        } else {\n            if (allPlaces.includes(place)) {\n                isValid = false;\n                errorMessage = '같은 순위를 두 선수에게 줄 수 없습니다.';\n            }\n            allPlaces.push(place);\n        }\n    });\n    \n    if (!isValid) {\n        showMessage(errorMessage, 'error');\n        return;\n    }\n    \n    // Submit data\n    const submitData = {\n        comp_id: formData.get('comp_id'),\n        event_no: formData.get('event_no'),\n        type: 'final',\n        adjudicator_marks: adjudicatorMarks\n    };\n    \n    submitScores(submitData);\n}\n\nfunction handleRecallRound(formData, recallCount) {\n    const recallMarks = {};\n    let totalSelected = 0;\n    let isValid = true;\n    let errorMessage = '';\n    \n    // Collect recall marks for each dance\n    const danceSections = document.querySelectorAll('.dance-section');\n    danceSections.forEach(section => {\n        const dance = section.dataset.dance;\n        const checkboxes = section.querySelectorAll('.recall-checkbox:checked');\n        \n        recallMarks[dance] = [];\n        checkboxes.forEach(checkbox => {\n            recallMarks[dance].push(checkbox.dataset.player);\n        });\n        \n        totalSelected += checkboxes.length;\n    });\n    \n    // Check if total selected count matches recall count\n    if (totalSelected !== recallCount) {\n        isValid = false;\n        errorMessage = `전체 ${recallCount}명을 선택해주세요. (현재 ${totalSelected}명 선택됨)`;\n    }\n    \n    if (!isValid) {\n        showMessage(errorMessage, 'error');\n        return;\n    }\n    \n    // Submit data\n    const submitData = {\n        comp_id: formData.get('comp_id'),\n        event_no: formData.get('event_no'),\n        type: 'recall',\n        recall_marks: recallMarks\n    };\n    \n    submitScores(submitData);\n}\n\nfunction submitScores(submitData) {\n    fetch('scoring/save_scores.php', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(submitData)\n    })\n    .then(response => response.json())\n    .then(data => {\n        if (data.success) {\n            showMessage('점수가 성공적으로 저장되었습니다!', 'success');\n            if (data.results) {\n                showResults(data.results);\n            }\n            \n            // 모든 채점이 완료되면 창 닫기\n            console.log('all_completed:', data.all_completed);\n            console.log('currentDanceIndex:', currentDanceIndex, 'totalDances:', totalDances);\n            \n            // 간단한 창 닫기 로직 - 마지막 댄스에서 채점 완료 시 무조건 닫기\n            const dancePages = document.querySelectorAll('.dance-page');\n            const actualTotalDances = dancePages.length;\n            \n            console.log('actualTotalDances:', actualTotalDances);\n            console.log('currentDanceIndex:', currentDanceIndex);\n            console.log('Is last dance?', currentDanceIndex >= actualTotalDances - 1);\n            \n            // 마지막 댄스이거나 all_completed가 true이면 창 닫기\n            if (data.all_completed || currentDanceIndex >= actualTotalDances - 1) {\n                console.log('Closing window...');\n                \n                // 태블릿 친화적인 창 닫기 - 단계별 시도\n                console.log('Attempting to close window...');\n                \n                // 1단계: 부모 창에 메시지 전송\n                if (window.opener) {\n                    try {\n                        window.opener.postMessage('closeChildWindow', '*');\n                        console.log('Message sent to parent window');\n                    } catch (e) {\n                        console.log('Failed to send message to parent:', e);\n                    }\n                }\n                \n                // 2단계: 즉시 창 닫기 시도\n                setTimeout(() => {\n                    try {\n                        window.close();\n                        console.log('Window closed successfully');\n                    } catch (e) {\n                        console.log('window.close() failed:', e);\n                        \n                        // 3단계: 페이지 리다이렉트로 대체\n                        try {\n                            window.location.href = 'about:blank';\n                            console.log('Redirected to about:blank');\n                        } catch (e2) {\n                            console.log('Redirect failed:', e2);\n                            \n                            // 4단계: 빈 페이지로 교체\n                            try {\n                                document.body.innerHTML = '<div style=\"text-align:center; padding:50px; font-size:18px;\">채점이 완료되었습니다.<br>이 창을 닫아주세요.</div>';\n                                console.log('Page content replaced');\n                            } catch (e3) {\n                                console.log('Content replacement failed:', e3);\n                            }\n                        }\n                    }\n                }, 500);\n                \n                // 사용자에게 알림 후 바로 창 닫기\n                alert('모든 채점이 완료되었습니다. 창이 닫힙니다.');\n                closeWindowForcefully();\n            }\n        } else {\n            showMessage('저장 실패: ' + (data.error || '알 수 없는 오류'), 'error');\n        }\n    })\n    .catch(error => {\n        showMessage('오류가 발생했습니다: ' + error, 'error');\n    });\n}\n\nfunction clearAllScores() {\n    if (confirm('모든 점수를 지우시겠습니까?')) {\n        // Clear final round inputs\n        const inputs = document.querySelectorAll('.place-input');\n        inputs.forEach(input => input.value = '');\n        \n        // Clear recall checkboxes\n        const checkboxes = document.querySelectorAll('.recall-checkbox');\n        checkboxes.forEach(checkbox => {\n            checkbox.checked = false;\n            checkbox.closest('.player-card').classList.remove('selected');\n        });\n        \n        // Update recall status\n        updateRecallStatus();\n        \n        showMessage('모든 점수가 지워졌습니다.', 'success');\n    }\n}\n\n// Recall system event handlers\n    document.addEventListener('DOMContentLoaded', function() {\n    // Handle player card clicks - Touch optimized\n    document.querySelectorAll('.player-card').forEach(card => {\n        // Click event\n        card.addEventListener('click', function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            togglePlayerSelection(this);\n        });\n        \n        // Touch events for better mobile experience\n        card.addEventListener('touchstart', function(e) {\n            e.preventDefault();\n            this.style.transform = 'scale(0.95)';\n        });\n        \n        card.addEventListener('touchend', function(e) {\n            e.preventDefault();\n            this.style.transform = '';\n            togglePlayerSelection(this);\n        });\n        \n        // Prevent default touch behavior\n        card.addEventListener('touchmove', function(e) {\n            e.preventDefault();\n        });\n    });\n\n    // Handle checkbox changes\n    document.querySelectorAll('.recall-checkbox').forEach(checkbox => {\n        checkbox.addEventListener('change', function() {\n            updatePlayerCardState(this.closest('.player-card'));\n            updateRecallStatus();\n        });\n    });\n\n    // Initialize recall status\n    updateRecallStatus();\n    \n    // Initialize drag and drop for final ranking\n    initializeDragAndDrop();\n    \n    // Load saved scores\n    loadSavedScores();\n    \n    // Initialize fixed progress bar\n    initializeFixedProgress();\n});\n\nfunction initializeDragAndDrop() {\n    const container = document.getElementById('rankingContainer');\n    if (!container) return;\n    \n    let draggedElement = null;\n    \n    // Handle drag start\n    container.addEventListener('dragstart', function(e) {\n        if (e.target.classList.contains('ranking-item')) {\n            draggedElement = e.target;\n            e.target.classList.add('dragging');\n            e.dataTransfer.effectAllowed = 'move';\n        }\n    });\n    \n    // Handle drag end\n    container.addEventListener('dragend', function(e) {\n        if (e.target.classList.contains('ranking-item')) {\n            e.target.classList.remove('dragging');\n            draggedElement = null;\n        }\n    });\n    \n    // Handle drag over\n    container.addEventListener('dragover', function(e) {\n        e.preventDefault();\n        e.dataTransfer.dropEffect = 'move';\n        \n        const afterElement = getDragAfterElement(container, e.clientY);\n        if (afterElement == null) {\n            container.appendChild(draggedElement);\n        } else {\n            container.insertBefore(draggedElement, afterElement);\n        }\n    });\n    \n    // Handle drop\n    container.addEventListener('drop', function(e) {\n        e.preventDefault();\n        updateRankingNumbers();\n    });\n    \n    // Handle manual input changes\n    container.addEventListener('input', function(e) {\n        if (e.target.classList.contains('ranking-place-input')) {\n            updateRankingFromInputs();\n        }\n    });\n}\n\nfunction getDragAfterElement(container, y) {\n    const draggableElements = [...container.querySelectorAll('.ranking-item:not(.dragging)')];\n    \n    return draggableElements.reduce((closest, child) => {\n        const box = child.getBoundingClientRect();\n        const offset = y - box.top - box.height / 2;\n        \n        if (offset < 0 && offset > closest.offset) {\n            return { offset: offset, element: child };\n        } else {\n            return closest;\n        }\n    }, { offset: Number.NEGATIVE_INFINITY }).element;\n}\n\nfunction updateRankingNumbers() {\n    const container = document.getElementById('rankingContainer');\n    if (!container) return;\n    \n    const items = container.querySelectorAll('.ranking-item');\n    items.forEach((item, index) => {\n        const numberDiv = item.querySelector('.ranking-number');\n        const input = item.querySelector('.ranking-place-input');\n        \n        numberDiv.textContent = index + 1;\n        input.value = index + 1;\n        \n        // Update input name to reflect new position\n        const player = item.dataset.player;\n        input.name = `adjudicator_marks[${index + 1}][${player}]`;\n    });\n}\n\nfunction updateRankingFromInputs() {\n    const container = document.getElementById('rankingContainer');\n    if (!container) return;\n    \n    const items = Array.from(container.querySelectorAll('.ranking-item'));\n    const inputs = items.map(item => ({\n        element: item,\n        value: parseInt(item.querySelector('.ranking-place-input').value) || 0\n    }));\n    \n    // Sort by input value\n    inputs.sort((a, b) => a.value - b.value);\n    \n    // Reorder DOM elements\n    inputs.forEach((input, index) => {\n        container.appendChild(input.element);\n        \n        // Update visual number\n        const numberDiv = input.element.querySelector('.ranking-number');\n        numberDiv.textContent = index + 1;\n        \n        // Update input name\n        const player = input.element.dataset.player;\n        const inputElement = input.element.querySelector('.ranking-place-input');\n        inputElement.name = `adjudicator_marks[${index + 1}][${player}]`;\n    });\n}\n\nfunction loadSavedScores() {\n    <?php if ($saved_scores && !$is_final): ?>\n    // Load saved recall scores\n    const savedScores = <?= json_encode($saved_scores) ?>;\n    \n    console.log('Loading saved scores:', savedScores);\n    \n        // Check for missing players and add them dynamically\n        console.log('Checking for missing players');\n        const allPlayers = ['11', '12', '13', '14', '15', '16', '17', '18', '19', '95', '21', '22'].sort((a, b) => parseInt(a) - parseInt(b));\n    \n    // Check each dance section\n    document.querySelectorAll('.dance-page').forEach(danceSection => {\n        const dance = danceSection.getAttribute('data-dance');\n        console.log('Checking dance section:', dance);\n        \n        // Find the player list container - try different selectors\n        let playerList = danceSection.querySelector('.player-list');\n        if (!playerList) {\n            playerList = danceSection.querySelector('.players-container');\n        }\n        if (!playerList) {\n            playerList = danceSection.querySelector('.recall-players');\n        }\n        if (!playerList) {\n            // Look for any container with player cards\n            playerList = danceSection.querySelector('div:has(.player-card)');\n        }\n        if (!playerList) {\n            console.log('Player list not found for dance', dance, '- available elements:', danceSection.innerHTML.substring(0, 500));\n            // Try to find any existing player card and add after it\n            const existingPlayerCard = danceSection.querySelector('.player-card');\n            if (existingPlayerCard) {\n                playerList = existingPlayerCard.parentElement;\n                console.log('Using parent of existing player card as container');\n            } else {\n                console.log('No existing player cards found, skipping dance', dance);\n                return;\n            }\n        }\n        \n        // Check if all players are present and add missing ones\n        allPlayers.forEach(playerNumber => {\n            const checkbox = danceSection.querySelector(`input[name=\"recall_marks[${dance}][${playerNumber}]\"]`);\n            if (!checkbox) {\n                console.log('Adding missing player', playerNumber, 'for dance', dance);\n                \n                // Find the last existing player card to add after it\n                const lastPlayerCard = danceSection.querySelector('.player-card:last-child');\n                if (lastPlayerCard) {\n                    // Create player card HTML\n                    const playerCard = document.createElement('div');\n                    playerCard.className = 'player-card';\n                    playerCard.innerHTML = `\n                        <input type=\"checkbox\" name=\"recall_marks[${dance}][${playerNumber}]\" class=\"recall-checkbox\" data-dance=\"${dance}\" data-player=\"${playerNumber}\">\n                        <span class=\"player-number\">${playerNumber}</span>\n                    `;\n                    \n                    // Add after the last player card\n                    lastPlayerCard.parentNode.insertBefore(playerCard, lastPlayerCard.nextSibling);\n                    \n                    // Add event listener\n                    const newCheckbox = playerCard.querySelector('.recall-checkbox');\n                    newCheckbox.addEventListener('change', function() {\n                        updatePlayerCardState(playerCard);\n                        updateRecallStatus();\n                    });\n                    \n                    console.log('Successfully added player', playerNumber, 'for dance', dance);\n                } else {\n                    console.log('No existing player cards found to add after');\n                }\n            }\n        });\n    });\n    \n    if (savedScores && typeof savedScores === 'object') {\n        Object.keys(savedScores).forEach(dance => {\n            console.log('Processing dance:', dance);\n            const danceSection = document.querySelector(`[data-dance=\"${dance}\"]`);\n            console.log('Dance section found:', danceSection);\n            \n            if (!danceSection) return;\n            \n            const selectedPlayers = savedScores[dance];\n            console.log('Selected players for dance', dance, ':', selectedPlayers);\n            \n            // Ensure selectedPlayers is an array\n            if (Array.isArray(selectedPlayers)) {\n                selectedPlayers.forEach(playerNo => {\n                    console.log('Looking for player:', playerNo);\n                    const checkbox = danceSection.querySelector(`input[name=\"recall_marks[${dance}][${playerNo}]\"]`);\n                    console.log('Checkbox found:', checkbox);\n                    \n                    if (checkbox) {\n                        checkbox.checked = true;\n                        updatePlayerCardState(checkbox.closest('.player-card'));\n                        console.log('Checked player:', playerNo);\n                    }\n                });\n            }\n        });\n    }\n\n        // Sort player cards in each dance section\n        document.querySelectorAll('.dance-page').forEach(danceSection => {\n            const playerList = danceSection.querySelector('.players-grid');\n            if (playerList) {\n                const playerCards = Array.from(playerList.querySelectorAll('.player-card'));\n                playerCards.sort((a, b) => {\n                    const aNum = parseInt(a.querySelector('.player-number').textContent);\n                    const bNum = parseInt(b.querySelector('.player-number').textContent);\n                    return aNum - bNum;\n                });\n                \n                // Re-append sorted cards\n                playerCards.forEach(card => playerList.appendChild(card));\n            }\n        });\n\n        // Force update recall status after loading saved scores\n        console.log('Forcing updateRecallStatus after loading saved scores');\n        updateRecallStatus();\n\n        // updateRecallStatus already handles both top and bottom displays\n    <?php endif; ?>\n}\n\nfunction initializeFixedProgress() {\n    const fixedProgress = document.getElementById('fixedProgress');\n    if (!fixedProgress) return;\n    \n    let isScrolling = false;\n    let scrollTimeout;\n    \n    // Show progress bar when scrolling down\n    window.addEventListener('scroll', function() {\n        if (!isScrolling) {\n            fixedProgress.classList.add('show');\n            document.body.classList.add('progress-bar-visible');\n        }\n        \n        isScrolling = true;\n        clearTimeout(scrollTimeout);\n        \n        scrollTimeout = setTimeout(function() {\n            isScrolling = false;\n            // Hide progress bar after scrolling stops (only if no selections)\n            const totalSelected = document.querySelectorAll('.recall-checkbox:checked').length;\n            if (totalSelected === 0) {\n                fixedProgress.classList.remove('show');\n                document.body.classList.remove('progress-bar-visible');\n            }\n        }, 1000);\n    });\n    \n    // Touch events for mobile\n    document.addEventListener('touchstart', function() {\n        fixedProgress.classList.add('show');\n        document.body.classList.add('progress-bar-visible');\n    });\n}\n\nfunction togglePlayerSelection(card) {\n    const checkbox = card.querySelector('.recall-checkbox');\n    checkbox.checked = !checkbox.checked;\n    updatePlayerCardState(card);\n    updateRecallStatus();\n}\n\nfunction updatePlayerCardState(card) {\n    const checkbox = card.querySelector('.recall-checkbox');\n    if (checkbox.checked) {\n        card.classList.add('selected');\n    } else {\n        card.classList.remove('selected');\n    }\n}\n\nfunction updateTopRecallStatus() {\n    // Get checked checkboxes from CURRENT page only\n    const currentPage = document.querySelector('.dance-page[data-dance-index=\"' + currentDanceIndex + '\"]');\n    if (!currentPage) return;\n    \n    const currentPageCheckboxes = currentPage.querySelectorAll('.recall-checkbox:checked');\n    const selectedCount = currentPageCheckboxes.length;\n    const recallCount = <?= json_encode(intval($recall_count)) ?>;\n    \n    console.log('updateTopRecallStatus - currentDanceIndex:', currentDanceIndex, 'selectedCount:', selectedCount, 'recallCount:', recallCount);\n    \n    // Update top recall progress display\n    const topRecallProgress = document.getElementById('recallProgress');\n    if (topRecallProgress) {\n        topRecallProgress.textContent = selectedCount;\n        \n        // Update color based on progress\n        if (selectedCount === recallCount) {\n            topRecallProgress.style.color = '#4CAF50';\n            topRecallProgress.style.fontWeight = 'bold';\n        } else if (selectedCount > recallCount) {\n            topRecallProgress.style.color = '#f44336';\n            topRecallProgress.style.fontWeight = 'bold';\n        } else {\n            topRecallProgress.style.color = '#ff9800';\n            topRecallProgress.style.fontWeight = 'normal';\n        }\n    }\n    \n    // Update fixed progress bar\n    const fixedRecallCount = document.getElementById('fixedRecallCount');\n    if (fixedRecallCount) {\n        fixedRecallCount.textContent = selectedCount;\n    }\n    \n    // Update current page status (sync with updateRecallStatus)\n    const statusDiv = currentPage.querySelector('.recall-status');\n    const countSpan = statusDiv ? statusDiv.querySelector('.selected-count') : null;\n    \n    if (countSpan) {\n        countSpan.textContent = selectedCount;\n    }\n    \n    // Update submit button state for current dance page\n    console.log('Current page for submit button:', currentPage);\n    \n    const submitSection = currentPage.querySelector('.dance-submit-section');\n    const submitBtn = currentPage.querySelector('.dance-submit-btn');\n    \n    console.log('Submit section found:', submitSection);\n    console.log('Submit button found:', submitBtn);\n    \n    if (submitSection && submitBtn) {\n        // Show/hide submit section based on selection count\n        if (selectedCount === recallCount) {\n            submitSection.style.display = 'block';\n            submitBtn.disabled = false;\n            submitBtn.style.opacity = '1';\n            submitBtn.style.cursor = 'pointer';\n            console.log('Submit button shown - selectedCount matches recallCount');\n        } else {\n            submitSection.style.display = 'none';\n            submitBtn.disabled = true;\n            submitBtn.style.opacity = '0.5';\n            submitBtn.style.cursor = 'not-allowed';\n            console.log('Submit button hidden - selectedCount:', selectedCount, 'recallCount:', recallCount);\n        }\n    }\n}\n\nfunction updateRecallStatus() {\n    // Try to find current page by active class first\n    let currentPage = document.querySelector('.dance-page.active');\n    if (!currentPage) {\n        // Fallback to data-dance-index\n        currentPage = document.querySelector('.dance-page[data-dance-index=\"' + currentDanceIndex + '\"]');\n    }\n    if (!currentPage) {\n        // Fallback to first visible page\n        currentPage = document.querySelector('.dance-page[style*=\"display: block\"]');\n    }\n    \n    if (!currentPage) {\n        console.log('Current page not found, using fallback');\n        // Fallback: get all checked checkboxes from all pages\n        const allCheckboxes = document.querySelectorAll('.recall-checkbox:checked');\n        const selectedCount = allCheckboxes.length;\n        const recallCount = <?= json_encode(intval($recall_count)) ?>;\n        \n        console.log('Fallback - selectedCount:', selectedCount, 'recallCount:', recallCount);\n        \n        // Update top recall progress display\n        const topRecallProgress = document.getElementById('recallProgress');\n        if (topRecallProgress) {\n            topRecallProgress.textContent = selectedCount;\n            \n            // Update color based on progress\n            if (selectedCount === recallCount) {\n                topRecallProgress.style.color = '#4CAF50';\n                topRecallProgress.style.fontWeight = 'bold';\n            } else if (selectedCount > recallCount) {\n                topRecallProgress.style.color = '#f44336';\n                topRecallProgress.style.fontWeight = 'bold';\n            } else {\n                topRecallProgress.style.color = '#ff9800';\n                topRecallProgress.style.fontWeight = 'normal';\n            }\n        }\n        return;\n    }\n    \n    const checkboxes = currentPage.querySelectorAll('.recall-checkbox:checked');\n    const selectedCount = checkboxes.length;\n    const recallCount = <?= json_encode(intval($recall_count)) ?>;\n    \n    console.log('updateRecallStatus - selectedCount:', selectedCount, 'recallCount:', recallCount, 'currentDanceIndex:', currentDanceIndex);\n    \n    // Update top recall progress display (sync with updateTopRecallStatus)\n    const topRecallProgress = document.getElementById('recallProgress');\n    if (topRecallProgress) {\n        topRecallProgress.textContent = selectedCount;\n        \n        // Update color based on progress\n        if (selectedCount === recallCount) {\n            topRecallProgress.style.color = '#4CAF50';\n            topRecallProgress.style.fontWeight = 'bold';\n        } else if (selectedCount > recallCount) {\n            topRecallProgress.style.color = '#f44336';\n            topRecallProgress.style.fontWeight = 'bold';\n        } else {\n            topRecallProgress.style.color = '#ff9800';\n            topRecallProgress.style.fontWeight = 'normal';\n        }\n    }\n    \n    // Update fixed progress bar\n    const fixedProgress = document.getElementById('fixedProgress');\n    if (fixedProgress) {\n        const progressText = fixedProgress.querySelector('#recallProgress');\n        if (progressText) {\n            progressText.textContent = selectedCount;\n        }\n        \n        // Update progress bar styling\n        fixedProgress.classList.remove('complete', 'over');\n        if (selectedCount === recallCount) {\n            fixedProgress.classList.add('complete');\n        } else if (selectedCount > recallCount) {\n            fixedProgress.classList.add('over');\n        }\n    }\n    \n    // Update current page status\n    const statusDiv = currentPage.querySelector('.recall-status');\n    const countSpan = statusDiv.querySelector('.selected-count');\n    const submitSection = currentPage.querySelector('.dance-submit-section');\n    \n    if (countSpan) {\n        countSpan.textContent = selectedCount;\n    }\n    \n    // Update status styling\n    statusDiv.classList.remove('complete', 'over');\n    if (selectedCount === recallCount) {\n        statusDiv.classList.add('complete');\n        if (submitSection) submitSection.style.display = 'block';\n    } else if (selectedCount > recallCount) {\n        statusDiv.classList.add('over');\n        if (submitSection) submitSection.style.display = 'none';\n    } else {\n        if (submitSection) submitSection.style.display = 'none';\n    }\n}\n\n// 창 닫기 다이얼로그 표시\nfunction showCloseWindowDialog() {\n    // 기존 다이얼로그가 있다면 제거\n    const existingDialog = document.getElementById('closeWindowDialog');\n    if (existingDialog) {\n        existingDialog.remove();\n    }\n    \n    // 다이얼로그 HTML 생성\n    const dialog = document.createElement('div');\n    dialog.id = 'closeWindowDialog';\n    dialog.style.cssText = `\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: rgba(0, 0, 0, 0.7);\n        z-index: 10000;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        font-family: Arial, sans-serif;\n    `;\n    \n    dialog.innerHTML = `\n        <div style=\"\n            background: white;\n            padding: 40px;\n            border-radius: 15px;\n            text-align: center;\n            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);\n            max-width: 400px;\n            width: 90%;\n        \">\n            <div style=\"font-size: 48px; margin-bottom: 20px;\">✅</div>\n            <h2 style=\"margin: 0 0 15px 0; color: #333; font-size: 24px;\">채점이 완료되었습니다!</h2>\n            <p style=\"margin: 0 0 30px 0; color: #666; font-size: 16px;\">모든 댄스의 채점이 완료되었습니다.</p>\n            <div style=\"display: flex; gap: 15px; justify-content: center;\">\n                <button id=\"closeWindowBtn\" style=\"\n                    background: #4CAF50;\n                    color: white;\n                    border: none;\n                    padding: 15px 30px;\n                    border-radius: 8px;\n                    font-size: 16px;\n                    cursor: pointer;\n                    font-weight: bold;\n                    min-width: 120px;\n                \">창 닫기</button>\n                <button id=\"stayOpenBtn\" style=\"\n                    background: #f44336;\n                    color: white;\n                    border: none;\n                    padding: 15px 30px;\n                    border-radius: 8px;\n                    font-size: 16px;\n                    cursor: pointer;\n                    font-weight: bold;\n                    min-width: 120px;\n                \">계속 열어두기</button>\n            </div>\n        </div>\n    `;\n    \n    document.body.appendChild(dialog);\n    \n    // 창 닫기 버튼 이벤트\n    document.getElementById('closeWindowBtn').addEventListener('click', function() {\n        closeWindowForcefully();\n    });\n    \n    // 계속 열어두기 버튼 이벤트\n    document.getElementById('stayOpenBtn').addEventListener('click', function() {\n        dialog.remove();\n    });\n}\n\n// 강제 창 닫기 함수\nfunction closeWindowForcefully() {\n    console.log('Forcefully closing window...');\n    \n    // 여러 방법으로 창 닫기 시도\n    try {\n        // 방법 1: window.close()\n        window.close();\n        console.log('Window closed via window.close()');\n    } catch (e) {\n        console.log('window.close() failed:', e);\n        \n        try {\n            // 방법 2: self.close()\n            self.close();\n            console.log('Window closed via self.close()');\n        } catch (e2) {\n            console.log('self.close() failed:', e2);\n            \n            try {\n                // 방법 3: 부모 창에 메시지 전송\n                if (window.opener) {\n                    window.opener.postMessage('closeChildWindow', '*');\n                    window.close();\n                    console.log('Message sent to parent and window.close() called');\n                }\n            } catch (e3) {\n                console.log('Parent message failed:', e3);\n                \n                try {\n                    // 방법 4: 페이지 리다이렉트\n                    window.location.href = 'about:blank';\n                    console.log('Redirected to about:blank');\n                } catch (e4) {\n                    console.log('Redirect failed:', e4);\n                    \n                    // 방법 5: 페이지 콘텐츠 교체\n                    document.body.innerHTML = '<div style=\"text-align:center; padding:50px; font-size:18px; color:#4CAF50;\">✅ 채점이 완료되었습니다!<br>이 창을 닫아주세요.</div>';\n                    console.log('Page content replaced');\n                }\n            }\n        }\n    }\n}\n\nfunction showMessage(message, type) {\n    const messageDiv = document.getElementById('message');\n    messageDiv.innerHTML = `<div class=\"${type}\">${message}</div>`;\n    setTimeout(() => {\n        messageDiv.innerHTML = '';\n    }, 5000);\n}\n\nfunction showResults(results) {\n    let resultsHtml = '<div class=\"success\"><h3>최종 결과 (Skating System 적용)</h3><ol>';\n    const sortedResults = Object.entries(results).sort((a, b) => a[1] - b[1]);\n    sortedResults.forEach(([coupleId, place]) => {\n        resultsHtml += `<li>선수 #${coupleId} - ${place}등</li>`;\n    });\n    resultsHtml += '</ol></div>';\n    document.getElementById('message').innerHTML = resultsHtml;\n}\n\n// Instagram Style Dance System\nlet currentDanceIndex = 0;\nlet totalDances = 0;\nlet completedDances = new Set();\nlet existingSelections = <?= json_encode($existing_selections) ?>;\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    const firstInput = document.querySelector('.place-input');\n    if (firstInput) {\n        firstInput.focus();\n    }\n    \n    // Initialize dance system if in preliminary round (not final)\n    <?php if (!$is_final && $event_no !== '8'): ?>\n    const danceSlider = document.getElementById('danceSlider');\n    if (danceSlider) {\n        initializeDanceSystem();\n    }\n    <?php endif; ?>\n    \n    // Setup fixed action buttons\n    setupFixedButtons();\n});\n\nfunction setupFixedButtons() {\n    // Dashboard button\n    const dashboardBtn = document.getElementById('dashboardBtn');\n    if (dashboardBtn) {\n        dashboardBtn.addEventListener('click', function() {\n            const compId = '<?= h($comp_id) ?>';\n            const lang = '<?= h($lang) ?>';\n            window.location.href = `scoring_dashboard.php?comp_id=${compId}&lang=${lang}`;\n        });\n    }\n    \n    // Refresh button\n    const refreshBtn = document.getElementById('refreshBtn');\n    if (refreshBtn) {\n        refreshBtn.addEventListener('click', function() {\n            if (confirm('페이지를 새로고침하시겠습니까? 현재 작업 중인 내용이 저장되지 않을 수 있습니다.')) {\n                window.location.reload();\n            }\n        });\n    }\n}\n\nfunction loadExistingSelections() {\n    // Load existing selections for all dances\n    Object.keys(existingSelections).forEach(dance => {\n        const dancePage = document.querySelector(`[data-dance=\"${dance}\"]`);\n        if (!dancePage) return;\n        \n        const selectedPlayers = existingSelections[dance];\n        selectedPlayers.forEach(playerNo => {\n            const checkbox = dancePage.querySelector(`input[data-player=\"${playerNo}\"]`);\n            if (checkbox) {\n                checkbox.checked = true;\n                const card = checkbox.closest('.player-card');\n                if (card) {\n                    card.classList.add('selected');\n                }\n            }\n        });\n        \n        // Mark as completed if selections exist\n        if (selectedPlayers.length > 0) {\n            completedDances.add(dance);\n        }\n    });\n}\n\nfunction loadExistingSelectionsForDance(page, dance) {\n    // Load existing selections for a specific dance\n    if (existingSelections[dance]) {\n        const selectedPlayers = existingSelections[dance];\n        selectedPlayers.forEach(playerNo => {\n            const checkbox = page.querySelector(`input[data-player=\"${playerNo}\"]`);\n            if (checkbox) {\n                checkbox.checked = true;\n                const card = checkbox.closest('.player-card');\n                if (card) {\n                    card.classList.add('selected');\n                }\n            }\n        });\n    }\n}\n\nfunction initializeDanceSystem() {\n    const dancePages = document.querySelectorAll('.dance-page');\n    totalDances = dancePages.length;\n    \n    if (totalDances === 0) return;\n    \n    // Load existing selections for all dances\n    loadExistingSelections();\n    \n    // Show first dance page\n    showDancePage(0);\n    \n    // Setup event listeners\n    setupDanceEventListeners();\n    updateProgress();\n    \n    // Initialize recall status (both top and bottom)\n    updateRecallStatus();\n}\n\nfunction showDancePage(index) {\n    const danceSlider = document.getElementById('danceSlider');\n    const dancePages = document.querySelectorAll('.dance-page');\n    \n    if (index < 0 || index >= totalDances) return;\n    \n    currentDanceIndex = index;\n    danceSlider.style.transform = `translateX(-${index * 100}%)`;\n    \n    // Update progress\n    updateProgress();\n    \n    // Update navigation buttons\n    updateNavigationButtons();\n    \n    // Reset touch events for current page\n    resetTouchEvents();\n    \n    // Restore dance page state if going back to a completed dance\n    const currentPage = document.querySelector('.dance-page[data-dance-index=\"' + currentDanceIndex + '\"]');\n    if (currentPage) {\n        const dance = currentPage.dataset.dance;\n        const isCompleted = completedDances.has(dance);\n        \n        if (isCompleted) {\n            // Restore the page to editable state\n            restoreDancePageState(currentPage, dance);\n        } else {\n            // Load existing selections for this dance if not completed\n            loadExistingSelectionsForDance(currentPage, dance);\n        }\n    }\n    \n    // Update recall status for current page\n    updateRecallStatus();\n}\n\nfunction setupDanceEventListeners() {\n    // Navigation buttons\n    document.getElementById('prevDance')?.addEventListener('click', () => {\n        if (currentDanceIndex > 0) {\n            showDancePage(currentDanceIndex - 1);\n        }\n    });\n    \n    document.getElementById('nextDance')?.addEventListener('click', () => {\n        if (currentDanceIndex < totalDances - 1) {\n            showDancePage(currentDanceIndex + 1);\n        }\n    });\n    \n    // Dance submit buttons\n    document.querySelectorAll('.dance-submit-btn').forEach(btn => {\n        btn.addEventListener('click', function() {\n            const dance = this.dataset.dance;\n            submitDance(dance);\n        });\n    });\n    \n    // Touch/swipe events\n    let startX = 0;\n    let startY = 0;\n    let isSwipe = false;\n    \n    const danceSlider = document.getElementById('danceSlider');\n    \n    danceSlider.addEventListener('touchstart', function(e) {\n        startX = e.touches[0].clientX;\n        startY = e.touches[0].clientY;\n        isSwipe = false;\n    });\n    \n    danceSlider.addEventListener('touchmove', function(e) {\n        if (!startX || !startY) return;\n        \n        const currentX = e.touches[0].clientX;\n        const currentY = e.touches[0].clientY;\n        const diffX = startX - currentX;\n        const diffY = startY - currentY;\n        \n        // Determine if this is a horizontal swipe\n        if (Math.abs(diffX) > Math.abs(diffY) && Math.abs(diffX) > 50) {\n            isSwipe = true;\n            e.preventDefault();\n        }\n    });\n    \n    danceSlider.addEventListener('touchend', function(e) {\n        if (!isSwipe || !startX || !startY) return;\n        \n        const endX = e.changedTouches[0].clientX;\n        const diffX = startX - endX;\n        \n        if (Math.abs(diffX) > 100) {\n            if (diffX > 0 && currentDanceIndex < totalDances - 1) {\n                // Swipe left - next dance\n                showDancePage(currentDanceIndex + 1);\n            } else if (diffX < 0 && currentDanceIndex > 0) {\n                // Swipe right - previous dance\n                showDancePage(currentDanceIndex - 1);\n            }\n        }\n        \n        startX = 0;\n        startY = 0;\n        isSwipe = false;\n    });\n}\n\nfunction resetTouchEvents() {\n    // Remove existing event listeners and re-add them\n    const playerCards = document.querySelectorAll('.player-card');\n    playerCards.forEach(card => {\n        // Remove old listeners by cloning the element\n        const newCard = card.cloneNode(true);\n        card.parentNode.replaceChild(newCard, card);\n        \n        // Add new listeners\n        setupPlayerCardEvents(newCard);\n    });\n}\n\nfunction setupPlayerCardEvents(card) {\n    let touchStartTime = 0;\n    let touchStartPos = { x: 0, y: 0 };\n    \n    // Click event\n    card.addEventListener('click', function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        togglePlayerSelection(this);\n    });\n    \n    // Touch start\n    card.addEventListener('touchstart', function(e) {\n        touchStartTime = Date.now();\n        const touch = e.touches[0];\n        touchStartPos = { x: touch.clientX, y: touch.clientY };\n    });\n    \n    // Touch end\n    card.addEventListener('touchend', function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        \n        const touchEndTime = Date.now();\n        const touchDuration = touchEndTime - touchStartTime;\n        \n        // Only trigger if it's a quick tap (less than 500ms)\n        if (touchDuration < 500) {\n            togglePlayerSelection(this);\n        }\n    });\n    \n    // Prevent context menu on long press\n    card.addEventListener('contextmenu', function(e) {\n        e.preventDefault();\n    });\n}\n\nfunction updateProgress() {\n    const progressFill = document.querySelector('.progress-fill');\n    const currentDanceSpan = document.querySelector('.current-dance');\n    \n    if (progressFill) {\n        const progress = ((currentDanceIndex + 1) / totalDances) * 100;\n        progressFill.style.width = progress + '%';\n    }\n    \n    if (currentDanceSpan) {\n        currentDanceSpan.textContent = currentDanceIndex + 1;\n    }\n}\n\nfunction restoreDancePageState(page, dance) {\n    // Remove from completed dances to allow re-editing\n    completedDances.delete(dance);\n    \n    // Restore the recall status section\n    const statusDiv = page.querySelector('.recall-status');\n    if (statusDiv) {\n        statusDiv.innerHTML = `\n            <div style=\"font-size:20px; margin-bottom:5px;\">📊 Recall 진행 상황</div>\n            <div style=\"font-size:28px; font-weight:900; color:#2e7d32;\">\n                <span class=\"selected-count\">0</span> / <?= $recall_count ?>명\n            </div>\n            <div style=\"font-size:14px; margin-top:5px; opacity:0.8;\">\n                <?= $recall_count ?>명을 선택하면 전송할 수 있습니다\n            </div>\n        `;\n    }\n    \n    // Show submit section (will be hidden/shown based on selection count)\n    const submitSection = page.querySelector('.dance-submit-section');\n    if (submitSection) {\n        submitSection.style.display = 'none';\n    }\n    \n    // Load existing selections for this dance\n    if (existingSelections[dance]) {\n        const selectedPlayers = existingSelections[dance];\n        selectedPlayers.forEach(playerNo => {\n            const checkbox = page.querySelector(`input[data-player=\"${playerNo}\"]`);\n            if (checkbox) {\n                checkbox.checked = true;\n                const card = checkbox.closest('.player-card');\n                if (card) {\n                    card.classList.add('selected');\n                }\n            }\n        });\n    } else {\n        // No existing selections, clear all\n        const checkboxes = page.querySelectorAll('.recall-checkbox');\n        checkboxes.forEach(checkbox => {\n            checkbox.checked = false;\n        });\n        \n        // Update player card states\n        const playerCards = page.querySelectorAll('.player-card');\n        playerCards.forEach(card => {\n            card.classList.remove('selected');\n        });\n    }\n}\n\nfunction updateNavigationButtons() {\n    const prevBtn = document.getElementById('prevDance');\n    const nextBtn = document.getElementById('nextDance');\n    \n    if (prevBtn) {\n        prevBtn.style.display = currentDanceIndex > 0 ? 'inline-block' : 'none';\n    }\n    \n    if (nextBtn) {\n        // Show next button if there are more dances AND current dance is completed\n        const currentDance = document.querySelector('.dance-page[data-dance-index=\"' + currentDanceIndex + '\"]');\n        const isCurrentDanceCompleted = currentDance && completedDances.has(currentDance.dataset.dance);\n        \n        if (currentDanceIndex < totalDances - 1 && isCurrentDanceCompleted) {\n            nextBtn.style.display = 'inline-block';\n            nextBtn.disabled = false;\n            nextBtn.style.opacity = '1';\n            nextBtn.style.cursor = 'pointer';\n        } else {\n            nextBtn.style.display = 'none';\n        }\n    }\n}\n\nfunction submitDance(dance) {\n    const currentPage = document.querySelector(`[data-dance=\"${dance}\"]`);\n    const checkboxes = currentPage.querySelectorAll('.recall-checkbox:checked');\n    const recallCount = <?= json_encode(intval($recall_count)) ?>;\n    \n    if (checkboxes.length !== recallCount) {\n        alert(`${recallCount}명을 정확히 선택해주세요.`);\n        return;\n    }\n    \n    // Collect selected players for this dance\n    const selectedPlayers = Array.from(checkboxes).map(cb => cb.dataset.player);\n    \n    // Prepare data for this dance only\n    const recallMarks = {};\n    recallMarks[dance] = selectedPlayers;\n    \n    const data = {\n        comp_id: <?= json_encode($comp_id) ?>,\n        event_no: <?= json_encode($event_no) ?>,\n        type: 'recall',\n        recall_marks: recallMarks\n    };\n    \n    // Show loading state\n    const submitBtn = currentPage.querySelector('.dance-submit-btn');\n    const originalText = submitBtn.textContent;\n    submitBtn.textContent = '전송 중...';\n    submitBtn.disabled = true;\n    \n    fetch('scoring/save_scores.php', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data)\n    })\n    .then(response => response.json())\n    .then(result => {\n        if (result.success) {\n            // Mark this dance as completed\n            completedDances.add(dance);\n            \n            // Update existing selections\n            existingSelections[dance] = selectedPlayers;\n            \n            // Hide submit button and show completion message\n            submitBtn.style.display = 'none';\n            const statusDiv = currentPage.querySelector('.recall-status');\n            statusDiv.innerHTML = `\n                <div style=\"font-size:20px; margin-bottom:5px;\">✅ 완료</div>\n                <div style=\"font-size:18px; font-weight:bold; color:#4CAF50;\">\n                    ${recallCount}명 선택 완료\n                </div>\n                <div style=\"font-size:14px; margin-top:5px; opacity:0.8;\">\n                    다음 댄스로 진행하세요\n                </div>\n            `;\n            \n            // Enable next dance button if available\n            updateNavigationButtons();\n            \n            // Show completion message\n            if (currentDanceIndex < totalDances - 1) {\n                setTimeout(() => {\n                    // Direct dance name mapping for JavaScript\n                    const danceNames = {\n                        '1': 'Waltz',\n                        '2': 'Tango', \n                        '3': 'Viennese Waltz',\n                        '4': 'Slow Foxtrot',\n                        '5': 'Quickstep',\n                        '6': 'Cha Cha Cha',\n                        '7': 'Samba',\n                        '8': 'Rumba',\n                        '9': 'Paso Doble',\n                        '10': 'Jive'\n                    };\n                    const danceDisplayName = danceNames[dance] || dance;\n                    alert(`${danceDisplayName} 댄스 채점이 완료되었습니다. 다음 댄스로 진행하세요.`);\n                }, 1000);\n            } else {\n                // All dances completed\n                setTimeout(() => {\n                    alert('모든 댄스 채점이 완료되었습니다!');\n                }, 1000);\n            }\n        } else {\n            alert('전송 실패: ' + (result.error || '알 수 없는 오류'));\n            submitBtn.textContent = originalText;\n            submitBtn.disabled = false;\n        }\n    })\n    .catch(error => {\n        console.error('Error:', error);\n        alert('전송 중 오류가 발생했습니다: ' + error);\n        submitBtn.textContent = originalText;\n        submitBtn.disabled = false;\n    });\n}\n\n// Final Round Dance-by-Dance System\n<?php if ($is_final || $event_no === '8'): ?>\nlet selectedPlayer = null;\nlet playerRankings = {};\nlet draggedSlot = null;\nlet isDragging = false;\nlet dragStartTime = 0;\nlet finalDanceNames = <?= json_encode($event_data['dances']) ?>;\nlet finalDanceDisplayNames = <?= json_encode(getDanceNames($event_data['dances'], $dance_mapping)) ?>;\nlet finalCompletedDances = new Set();\nlet savedRankings = <?= json_encode($saved_rankings ?? []) ?>;\nlet currentJudgeId = <?= json_encode($judge_id) ?>;\nlet isFinalMode = <?= json_encode($is_final) ?>;\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    // Initialize dance-by-dance system\n    initializeFinalDanceSystem();\n    setupFinalDanceNavigation();\n    \n    // Initialize touch-based system\n    initializeTouchSystem();\n    \n    // Setup drag and drop for ranking slots\n    setupDragAndDrop();\n});\n\nfunction initializeFinalDanceSystem() {\n    totalDances = finalDanceNames.length;\n    // Populate progress header\n    updateFinalDanceProgress();\n    // Show first dance\n    showFinalDance(0);\n}\n\nfunction updateFinalDanceProgress() {\n    const progressEl = document.getElementById('danceProgress');\n    if (!progressEl) return;\n    progressEl.innerHTML = finalDanceNames.map((dance, idx) => {\n        const isCurrent = idx === currentDanceIndex;\n        const isCompleted = finalCompletedDances.has(dance);\n        const isPending = !isCompleted && !isCurrent;\n        const danceDisplayName = (typeof isFinalMode !== 'undefined' && isFinalMode) ? (finalDanceDisplayNames[idx] || dance) : dance;\n        return `<span class=\"dance-step ${isCurrent ? 'current' : (isCompleted ? 'completed' : 'pending')}\">${danceDisplayName}</span>`;\n    }).join('');\n}\n\nfunction showFinalDance(danceIndex) {\n    if (danceIndex < 0 || danceIndex >= totalDances) return;\n    currentDanceIndex = danceIndex;\n    updateFinalDanceProgress();\n    updateCurrentDanceDisplay();\n    \n    // Clear rankings when switching dances\n    clearFinalScores();\n    \n    // Update navigation after DOM is ready\n    setTimeout(() => {\n        updateFinalDanceNav();\n    }, 50);\n    \n    // Restore saved rankings for current dance (after clearing)\n    setTimeout(() => {\n        restoreSavedRankings();\n    }, 100);\n}\n\nfunction updateCurrentDanceDisplay() {\n    const currentDanceEl = document.getElementById('currentDanceDisplay');\n    if (currentDanceEl && finalDanceNames[currentDanceIndex]) {\n        const danceDisplayName = (typeof isFinalMode !== 'undefined' && isFinalMode) ? (finalDanceDisplayNames[currentDanceIndex] || finalDanceNames[currentDanceIndex]) : finalDanceNames[currentDanceIndex];\n        currentDanceEl.textContent = `현재 종목: ${danceDisplayName}`;\n    }\n}\n\nfunction setupFinalDanceNavigation() {\n    // Bind \"Submit Dance\" and \"Next Dance\" buttons\n    const submitBtn = document.getElementById('saveFinalScores');\n    if (submitBtn) {\n        submitBtn.addEventListener('click', submitFinalDance);\n    }\n    const nextBtn = document.getElementById('nextFinalDance');\n    if (nextBtn) {\n        nextBtn.addEventListener('click', () => {\n            if (currentDanceIndex < totalDances - 1) {\n                showFinalDance(currentDanceIndex + 1);\n            }\n        });\n    }\n}\n\nfunction submitFinalDance() {\n    const totalPlayers = document.querySelectorAll('.player-item').length;\n    const assignedPlayers = Object.keys(playerRankings).length;\n    \n    if (assignedPlayers < totalPlayers) {\n        alert(`모든 선수에게 순위를 부여해야 합니다. (${assignedPlayers}/${totalPlayers})`);\n        return;\n    }\n    \n    const form = document.getElementById('scoringForm');\n    const formData = new FormData(form);\n    formData.append('is_final', '1');\n    formData.append('dance', finalDanceNames[currentDanceIndex]);\n    \n    Object.keys(playerRankings).forEach(player => {\n        formData.append(`final_ranking[${playerRankings[player]}]`, player);\n    });\n    \n    const submitBtn = document.getElementById('saveFinalScores');\n    const originalText = submitBtn.textContent;\n    submitBtn.textContent = '전송 중...';\n    submitBtn.disabled = true;\n    \n    fetch('scoring/save_scores.php', {\n        method: 'POST',\n        body: formData\n    })\n    .then(response => response.json())\n    .then(result => {\n        if (result.success) {\n            if (result.dance_completed) {\n                // All judges completed this dance\n                finalCompletedDances.add(finalDanceNames[currentDanceIndex]);\n                updateFinalDanceProgress();\n                const danceDisplayName = (typeof isFinalMode !== 'undefined' && isFinalMode) ? (finalDanceDisplayNames[currentDanceIndex] || finalDanceNames[currentDanceIndex]) : finalDanceNames[currentDanceIndex];\n                alert(`${danceDisplayName} 댄스 채점이 완료되었습니다!`);\n            } else {\n                // Only this judge submitted\n                const danceDisplayName = (typeof isFinalMode !== 'undefined' && isFinalMode) ? (finalDanceDisplayNames[currentDanceIndex] || finalDanceNames[currentDanceIndex]) : finalDanceNames[currentDanceIndex];\n                alert(`${danceDisplayName} 댄스 점수가 저장되었습니다`);\n            }\n            \n            if (currentDanceIndex < totalDances - 1) {\n                showFinalDance(currentDanceIndex + 1);\n            } else {\n                updateFinalDanceNav();\n                alert('모든 종목 순위 제출이 완료되었습니다!');\n            }\n        } else {\n            alert('제출 실패: ' + (result.error || '알 수 없는 오류'));\n            submitBtn.textContent = originalText;\n            submitBtn.disabled = false;\n        }\n    })\n    .catch(error => {\n        console.error('Error:', error);\n        alert('제출 중 오류가 발생했습니다: ' + error);\n        submitBtn.textContent = originalText;\n        submitBtn.disabled = false;\n    });\n}\n\nfunction updateFinalDanceNav() {\n    const submitBtn = document.getElementById('saveFinalScores');\n    const nextBtn = document.getElementById('nextFinalDance');\n    \n    console.log('updateFinalDanceNav called - currentDanceIndex:', currentDanceIndex, 'totalDances:', totalDances);\n    \n    if (submitBtn) {\n        const danceDisplayName = (typeof isFinalMode !== 'undefined' && isFinalMode) ? (finalDanceDisplayNames[currentDanceIndex] || finalDanceNames[currentDanceIndex]) : finalDanceNames[currentDanceIndex];\n        const buttonText = currentDanceIndex < totalDances - 1 ? `${danceDisplayName} 순위 제출` : '최종 저장';\n        submitBtn.textContent = buttonText;\n        console.log('Button text updated to:', buttonText);\n    }\n    if (nextBtn) {\n        nextBtn.style.display = (currentDanceIndex < totalDances - 1) ? 'inline-block' : 'none';\n    }\n    // Hide clear button\n    const clearBtn = document.getElementById('clearFinalScores');\n    if (clearBtn) clearBtn.style.display = 'none';\n}\n\nfunction initializeTouchSystem() {\n    // Clear any existing rankings when switching dances\n    clearFinalScores();\n    \n    // Bind clear button with confirmation\n    const clearBtn = document.getElementById('clearFinalScores');\n    if (clearBtn) {\n        clearBtn.addEventListener('click', clearFinalScoresWithConfirm);\n    }\n}\n\nfunction setupDragAndDrop() {\n    // Add drag and drop event listeners to all ranking slots\n    document.querySelectorAll('.ranking-slot').forEach(slot => {\n        slot.addEventListener('dragstart', dragStart);\n        slot.addEventListener('dragover', dragOver);\n        slot.addEventListener('drop', drop);\n        slot.addEventListener('dragend', dragEnd);\n        slot.addEventListener('mousedown', handleMouseDown);\n        slot.addEventListener('mouseup', handleMouseUp);\n    });\n}\n\n// Final Round JavaScript - Touch-based System\n\nfunction selectPlayer(element) {\n    // Remove previous selection\n    document.querySelectorAll('.player-item').forEach(item => {\n        item.classList.remove('selected');\n    });\n    \n    // Check if player is already assigned\n    if (element.classList.contains('assigned')) {\n        return;\n    }\n    \n    // Select current player\n    element.classList.add('selected');\n    selectedPlayer = element.dataset.player;\n    \n    console.log('Selected player:', selectedPlayer);\n}\n\nfunction assignRank(element) {\n    // If no player is selected, check if we can cancel an existing assignment\n    if (!selectedPlayer) {\n        if (element.classList.contains('assigned')) {\n            // Cancel existing assignment\n            cancelRank(element);\n        }\n        return;\n    }\n    \n    const rank = element.dataset.rank;\n    \n    // Check if this rank is already assigned\n    if (element.classList.contains('assigned')) {\n        // Remove existing assignment\n        const currentPlayer = element.querySelector('.player-assigned').textContent;\n        if (currentPlayer) {\n            // Remove from player list\n            const playerElement = document.querySelector(`[data-player=\"${currentPlayer}\"]`);\n            if (playerElement) {\n                playerElement.classList.remove('assigned');\n            }\n            // Remove from rankings\n            delete playerRankings[currentPlayer];\n        }\n    }\n    \n    // Assign new player to this rank\n    element.querySelector('.player-assigned').textContent = selectedPlayer;\n    element.querySelector('input').value = selectedPlayer;\n    element.classList.add('assigned');\n    \n    // Mark player as assigned\n    const playerElement = document.querySelector(`[data-player=\"${selectedPlayer}\"]`);\n    if (playerElement) {\n        playerElement.classList.add('assigned');\n    }\n    \n    // Update rankings object\n    playerRankings[selectedPlayer] = rank;\n    \n    // Clear selection\n    selectedPlayer = null;\n    document.querySelectorAll('.player-item').forEach(item => {\n        item.classList.remove('selected');\n    });\n    \n    console.log('Assigned player', selectedPlayer, 'to rank', rank);\n    console.log('Current rankings:', playerRankings);\n}\n\nfunction cancelRank(element) {\n    const currentPlayer = element.querySelector('.player-assigned').textContent;\n    if (currentPlayer) {\n        // Remove from player list\n        const playerElement = document.querySelector(`[data-player=\"${currentPlayer}\"]`);\n        if (playerElement) {\n            playerElement.classList.remove('assigned');\n        }\n        \n        // Clear the ranking slot\n        element.querySelector('.player-assigned').textContent = '';\n        element.querySelector('input').value = '';\n        element.classList.remove('assigned');\n        \n        // Remove from rankings\n        delete playerRankings[currentPlayer];\n        \n        console.log('Cancelled assignment for player', currentPlayer);\n        console.log('Current rankings:', playerRankings);\n    }\n}\n\n// Drag and Drop functions for ranking slots\nfunction dragStart(event) {\n    console.log('dragStart called', event.target);\n    isDragging = true;\n    draggedSlot = event.target;\n    draggedSlot.classList.add('dragging');\n    event.dataTransfer.effectAllowed = 'move';\n    event.dataTransfer.setData('text/html', draggedSlot.outerHTML);\n}\n\nfunction dragOver(event) {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n    \n    // Add visual feedback\n    if (event.target.classList.contains('ranking-slot')) {\n        event.target.classList.add('drag-over');\n        console.log('dragOver on ranking slot');\n    }\n}\n\nfunction drop(event) {\n    event.preventDefault();\n    console.log('drop called', event.target, 'draggedSlot:', draggedSlot);\n    \n    // Remove drag-over class\n    document.querySelectorAll('.ranking-slot').forEach(slot => {\n        slot.classList.remove('drag-over');\n    });\n    \n    if (event.target.classList.contains('ranking-slot') && draggedSlot !== event.target) {\n        console.log('Swapping rankings between slots');\n        // Swap the players between the two slots\n        swapRankings(draggedSlot, event.target);\n    }\n}\n\nfunction dragEnd(event) {\n    // Remove dragging class\n    document.querySelectorAll('.ranking-slot').forEach(slot => {\n        slot.classList.remove('dragging', 'drag-over');\n    });\n    draggedSlot = null;\n    isDragging = false;\n}\n\n// Mouse event handlers for better drag detection\nfunction handleMouseDown(event) {\n    dragStartTime = Date.now();\n    isDragging = false;\n    console.log('Mouse down on ranking slot');\n}\n\nfunction handleMouseUp(event) {\n    const dragDuration = Date.now() - dragStartTime;\n    console.log('Mouse up, drag duration:', dragDuration);\n    \n    if (dragDuration > 200 && isDragging) {\n        // This was a drag operation, not a click\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    }\n}\n\n// Double-click to swap with next rank\nfunction swapWithNext(element) {\n    console.log('Double-clicked ranking slot:', element);\n    \n    const currentRank = parseInt(element.dataset.rank);\n    const nextRank = currentRank + 1;\n    const nextElement = document.querySelector(`[data-rank=\"${nextRank}\"]`);\n    \n    if (nextElement && element.classList.contains('assigned') && nextElement.classList.contains('assigned')) {\n        console.log('Swapping ranks', currentRank, 'and', nextRank);\n        swapRankings(element, nextElement);\n    } else {\n        console.log('Cannot swap - one or both slots are empty');\n    }\n}\n\nfunction swapRankings(slot1, slot2) {\n    const player1 = slot1.querySelector('.player-assigned').textContent;\n    const player2 = slot2.querySelector('.player-assigned').textContent;\n    const input1 = slot1.querySelector('input');\n    const input2 = slot2.querySelector('input');\n    \n    // Swap the players\n    slot1.querySelector('.player-assigned').textContent = player2;\n    slot2.querySelector('.player-assigned').textContent = player1;\n    input1.value = player2;\n    input2.value = player1;\n    \n    // Update visual states\n    if (player1) {\n        slot1.classList.add('assigned');\n    } else {\n        slot1.classList.remove('assigned');\n    }\n    \n    if (player2) {\n        slot2.classList.add('assigned');\n    } else {\n        slot2.classList.remove('assigned');\n    }\n    \n    // Update rankings object\n    const rank1 = slot1.dataset.rank;\n    const rank2 = slot2.dataset.rank;\n    \n    if (player1) {\n        playerRankings[player1] = rank2;\n    } else {\n        // Remove from rankings if empty\n        Object.keys(playerRankings).forEach(player => {\n            if (playerRankings[player] === rank1) {\n                delete playerRankings[player];\n            }\n        });\n    }\n    \n    if (player2) {\n        playerRankings[player2] = rank1;\n    } else {\n        // Remove from rankings if empty\n        Object.keys(playerRankings).forEach(player => {\n            if (playerRankings[player] === rank2) {\n                delete playerRankings[player];\n            }\n        });\n    }\n    \n    console.log('Swapped rankings:', playerRankings);\n}\n\nfunction submitFinalDance() {\n    // Check if all players are assigned\n    const totalPlayers = document.querySelectorAll('.player-item').length;\n    const assignedPlayers = Object.keys(playerRankings).length;\n    \n    if (assignedPlayers < totalPlayers) {\n        alert(`모든 선수에게 순위를 부여해야 합니다. (${assignedPlayers}/${totalPlayers})`);\n        return;\n    }\n    \n    const form = document.getElementById('scoringForm');\n    const formData = new FormData(form);\n    \n    // Add final round flag\n    formData.append('is_final', '1');\n    \n    // Add current dance\n    const currentDance = finalDanceNames[currentDanceIndex];\n    formData.append('dance', currentDance);\n    \n    // Add rankings data in the format expected by save_scores.php\n    const adjudicator_marks = {};\n    adjudicator_marks[<?= json_encode($judge_id) ?>] = {};\n    \n    Object.keys(playerRankings).forEach(player => {\n        const rank = playerRankings[player];\n        adjudicator_marks[<?= json_encode($judge_id) ?>][player] = rank;\n    });\n    \n    console.log('Sending adjudicator_marks:', adjudicator_marks);\n    formData.append('adjudicator_marks', JSON.stringify(adjudicator_marks));\n    \n    const saveBtn = document.getElementById('saveFinalScores');\n    const originalText = saveBtn.textContent;\n    saveBtn.textContent = '저장 중...';\n    saveBtn.disabled = true;\n    \n    fetch('scoring/save_scores.php', {\n        method: 'POST',\n        body: formData\n    })\n    .then(response => response.json())\n    .then(result => {\n        if (result.success) {\n            if (result.dance_completed) {\n                finalCompletedDances.add(currentDance);\n                updateFinalDanceProgress();\n                const danceDisplayName = (typeof isFinalMode !== 'undefined' && isFinalMode) ? (finalDanceDisplayNames[currentDanceIndex] || currentDance) : currentDance;\n                alert(`${danceDisplayName} 댄스 채점이 완료되었습니다!`);\n            } else {\n                const danceDisplayName = (typeof isFinalMode !== 'undefined' && isFinalMode) ? (finalDanceDisplayNames[currentDanceIndex] || currentDance) : currentDance;\n                alert(`${danceDisplayName} 댄스 점수가 저장되었습니다`);\n            }\n            updateFinalDanceNav();\n            \n            if (currentDanceIndex < totalDances - 1) {\n                showFinalDance(currentDanceIndex + 1);\n            } else {\n                alert('모든 종목 순위 제출이 완료되었습니다!');\n            }\n        } else {\n            alert('저장 실패: ' + (result.error || '알 수 없는 오류'));\n        }\n    })\n    .catch(error => {\n        console.error('Error:', error);\n        alert('저장 중 오류가 발생했습니다: ' + error);\n    })\n    .finally(() => {\n        saveBtn.textContent = originalText;\n        saveBtn.disabled = false;\n    });\n}\n\nfunction clearFinalScores() {\n    // Clear all assignments (no confirmation for dance switching)\n    document.querySelectorAll('.ranking-slot').forEach(slot => {\n        slot.classList.remove('assigned');\n        slot.querySelector('.player-assigned').textContent = '';\n        slot.querySelector('input').value = '';\n    });\n    \n    document.querySelectorAll('.player-item').forEach(item => {\n        item.classList.remove('assigned');\n    });\n    \n    // Clear selection\n    selectedPlayer = null;\n    playerRankings = {};\n    \n    console.log('Cleared all scores');\n}\n\nfunction clearFinalScoresWithConfirm() {\n    if (confirm('모든 점수를 초기화하시겠습니까?')) {\n        clearFinalScores();\n    }\n}\n\nfunction restoreSavedRankings() {\n    // Get current dance name\n    const currentDance = finalDanceNames[currentDanceIndex];\n    console.log('=== RESTORE SAVED RANKINGS DEBUG ===');\n    console.log('Current judge ID:', currentJudgeId);\n    console.log('Current dance:', currentDance);\n    console.log('Current dance index:', currentDanceIndex);\n    console.log('Available saved rankings:', savedRankings);\n    console.log('Final dance names:', finalDanceNames);\n    \n    if (!currentDance || !savedRankings[currentDance]) {\n        console.log('No saved data for dance:', currentDance);\n        return; // No saved data for this dance\n    }\n    \n    const rankings = savedRankings[currentDance];\n    console.log('Restoring rankings for', currentDance, ':', rankings);\n    \n    // Restore each ranking\n    Object.keys(rankings).forEach(rank => {\n        const player = rankings[rank];\n        const rankElement = document.querySelector(`[data-rank=\"${rank}\"]`);\n        \n        console.log(`Attempting to restore rank ${rank}: player ${player}`);\n        console.log('Rank element found:', rankElement);\n        \n        if (rankElement && player) {\n            // Assign player to this rank\n            rankElement.querySelector('.player-assigned').textContent = player;\n            rankElement.querySelector('input').value = player;\n            rankElement.classList.add('assigned');\n            \n            // Mark player as assigned\n            const playerElement = document.querySelector(`[data-player=\"${player}\"]`);\n            if (playerElement) {\n                playerElement.classList.add('assigned');\n            }\n            \n            // Update rankings object\n            playerRankings[player] = rank;\n            \n            console.log(`Successfully restored rank ${rank}: player ${player}`);\n        } else {\n            console.log(`Failed to restore rank ${rank}: player ${player} - element not found`);\n        }\n    });\n    \n    console.log('Restored rankings:', playerRankings);\n}\n<?php endif; ?>\n    </script>\n    \n    <!-- Bottom Navigation -->\n    <div class=\"bottom-nav\">\n        <button type=\"button\" id=\"closeWindowBtn\" class=\"nav-button primary\" onclick=\"closeWindowForcefully()\">\n            <div class=\"nav-icon\">❌</div>\n            <div class=\"nav-text\">창 닫기</div>\n        </button>\n        <button type=\"button\" id=\"refreshBtn\" class=\"nav-button\">\n            <div class=\"nav-icon\">🔄</div>\n            <div class=\"nav-text\">새로고침</div>\n        </button>\n    </div>\n    \n    <footer style=\"text-align: center; margin-top: 30px; color: #666; font-size: 0.9em; padding: 20px; border-top: 1px solid #eee;\">\n        2025 danceoffice.net | Powered by Seyoung Lee\n    </footer>\n</body>\n</html>","size_bytes":127093},"comp/judge_scoring_fixed.php":{"content":"<?php\n// 에러 리포팅 활성화\nerror_reporting(E_ALL);\nini_set('display_errors', 1);\n\nsession_start();\n\n$comp_id = $_GET['comp_id'] ?? '';\n$event_no = $_GET['event_no'] ?? '';\n$multievent = $_GET['multievent'] ?? '0';\n$lang = $_GET['lang'] ?? 'ko';\n\n// 임시로 세션 검증 우회 (디버깅용)\nif (!isset($_SESSION['scoring_logged_in']) || !$_SESSION['scoring_logged_in']) {\n    $_SESSION['scoring_logged_in'] = true;\n    $_SESSION['scoring_comp_id'] = $comp_id;\n    $_SESSION['scoring_judge_id'] = '20';\n    $_SESSION['scoring_judge_name'] = 'Test Judge';\n}\n\n// 기본 검증\nif (!$comp_id || !$event_no) {\n    echo \"<h1>잘못된 대회 ID 또는 이벤트 번호입니다.</h1>\";\n    exit;\n}\n\n// 파일 로딩\n$data_dir = __DIR__ . \"/data/$comp_id\";\n$runorder_file = \"$data_dir/RunOrder_Tablet.txt\";\n$players_file = \"$data_dir/players_$event_no.txt\";\n\nif (!file_exists($players_file)) {\n    echo \"<h1>선수 파일을 찾을 수 없습니다: \" . $players_file . \"</h1>\";\n    exit;\n}\n\n// 선수 데이터 로딩\n$players = file($players_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n\n// 이벤트 데이터 로딩\n$event_data = null;\nif (file_exists($runorder_file)) {\n    $lines = file($runorder_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    foreach ($lines as $line) {\n        $line = preg_replace('/\\x{FEFF}/u', '', $line);\n        $cols = array_map('trim', explode(',', $line));\n        if (count($cols) >= 2 && $cols[0] == $event_no) {\n            $event_data = [\n                'no' => $cols[0],\n                'name' => $cols[1],\n                'round' => $cols[2] ?? 'Final',\n                'dances' => array_filter(array_slice($cols, 6, 5), function($d) { return $d && $d != '0'; })\n            ];\n            break;\n        }\n    }\n}\n\nif (!$event_data) {\n    echo \"<h1>이벤트 데이터를 찾을 수 없습니다.</h1>\";\n    exit;\n}\n\n?>\n<!DOCTYPE html>\n<html lang=\"<?= $lang ?>\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>심사위원 채점 시스템</title>\n    <style>\n        body { font-family: Arial, sans-serif; margin: 20px; }\n        .container { max-width: 800px; margin: 0 auto; }\n        .event-info { background: #f5f5f5; padding: 15px; margin-bottom: 20px; border-radius: 5px; }\n        .players { display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 10px; }\n        .player { background: #e9e9e9; padding: 10px; border-radius: 5px; text-align: center; }\n        .submit-btn { background: #007cba; color: white; padding: 15px 30px; border: none; border-radius: 5px; font-size: 16px; cursor: pointer; margin-top: 20px; }\n        .submit-btn:hover { background: #005a87; }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <h1>심사위원 채점 시스템</h1>\n        \n        <div class=\"event-info\">\n            <h2>이벤트 정보</h2>\n            <p><strong>이벤트 번호:</strong> <?= htmlspecialchars($event_data['no']) ?></p>\n            <p><strong>이벤트명:</strong> <?= htmlspecialchars($event_data['name']) ?></p>\n            <p><strong>라운드:</strong> <?= htmlspecialchars($event_data['round']) ?></p>\n            <p><strong>종목:</strong> <?= htmlspecialchars(implode(', ', $event_data['dances'])) ?></p>\n            <p><strong>심사위원:</strong> <?= htmlspecialchars($_SESSION['scoring_judge_name']) ?> (ID: <?= htmlspecialchars($_SESSION['scoring_judge_id']) ?>)</p>\n        </div>\n        \n        <div class=\"players\">\n            <h2>출전 선수</h2>\n            <?php foreach ($players as $player): ?>\n                <div class=\"player\">\n                    <strong>선수 번호: <?= htmlspecialchars($player) ?></strong>\n                </div>\n            <?php endforeach; ?>\n        </div>\n        \n        <button class=\"submit-btn\" onclick=\"alert('채점 기능은 아직 구현되지 않았습니다.')\">\n            채점하기\n        </button>\n        \n        <p><a href=\"scoring_dashboard.php?comp_id=<?= urlencode($comp_id) ?>&lang=<?= urlencode($lang) ?>\">대시보드로 돌아가기</a></p>\n    </div>\n</body>\n</html>\n\n\n\n\n\n\n","size_bytes":4164},"comp/judge_scoring_free.php":{"content":"<?php\nsession_start();\nerror_reporting(E_ALL); ini_set('display_errors', 1);\n\nif (!isset($_SESSION['judge_id']) || !isset($_SESSION['judge_name'])) {\n    // 이벤트 파라미터가 있으면 로그인 후 해당 이벤트로 리다이렉트\n    $event_param = isset($_GET['event']) ? '?event=' . urlencode($_GET['event']) : '';\n    header(\"Location: judge_login.php\" . $event_param);\n    exit;\n}\n\n$data_dir = __DIR__ . '/data';\n$event_file = $data_dir . '/events.txt';\n\n// 종목 목록 불러오기\n$events = [];\nif (file_exists($event_file)) {\n    $lines = file($event_file);\n    foreach ($lines as $line) {\n        $cols = explode(',', trim($line));\n        if (count($cols) >= 2) {\n            $events[] = [\n                'code' => $cols[0],\n                'name' => $cols[1]\n            ];\n        }\n    }\n}\n\n// 선택된 종목 (GET 파라미터 우선, 없으면 첫 번째 이벤트)\n$selected_event = isset($_GET['event']) ? $_GET['event'] : (isset($events[0]) ? $events[0]['code'] : '');\n$event_name = '';\n\n// 이벤트가 존재하는지 확인\n$event_exists = false;\nforeach ($events as $ev) {\n    if ($ev['code'] === $selected_event) {\n        $event_name = $ev['name'];\n        $event_exists = true;\n        break;\n    }\n}\n\n// 이벤트가 존재하지 않으면 첫 번째 이벤트로 설정\nif (!$event_exists && !empty($events)) {\n    $selected_event = $events[0]['code'];\n    $event_name = $events[0]['name'];\n}\n\n// 해당 종목 선수 목록 불러오기\n$event_players_file = $data_dir . '/event_players/' . $selected_event . '_players.txt';\n$players = [];\nif ($selected_event && file_exists($event_players_file)) {\n    $lines = file($event_players_file);\n    foreach ($lines as $line) {\n        $cols = array_map('trim', explode(',', $line));\n        if (count($cols) >= 2) {\n            $players[] = [\n                'number' => $cols[0],\n                'name' => $cols[1],\n                'partner' => isset($cols[2]) ? $cols[2] : ''\n            ];\n        }\n    }\n}\n\n// 점수 저장\n$score_dir = $data_dir . '/scores';\nif (!is_dir($score_dir)) mkdir($score_dir, 0777, true);\n\n$score_file = $score_dir . \"/score_{$selected_event}_J{$_SESSION['judge_id']}.txt\";\n\n$scoring_msg = \"\";\n\nif ($_SERVER['REQUEST_METHOD'] === 'POST' && (isset($_POST['save_score']) || isset($_POST['finish_and_go_dashboard']))) {\n    $scores = [];\n    foreach ($players as $pl) {\n        $num = $pl['number'];\n        // 불참 처리: 값 강제\n        if (isset($_POST['absent_'.$num]) && $_POST['absent_'.$num] === '1') {\n            $score1 = 5;\n            $score2 = 5;\n            $score3 = 1;\n        } else {\n            $score1 = isset($_POST[\"score1_$num\"]) ? trim($_POST[\"score1_$num\"]) : '';\n            $score2 = isset($_POST[\"score2_$num\"]) ? trim($_POST[\"score2_$num\"]) : '';\n            $score3 = isset($_POST[\"score3_$num\"]) ? trim($_POST[\"score3_$num\"]) : '';\n        }\n        $scores[] = \"$num,$score1,$score2,$score3\";\n    }\n    $save_result = file_put_contents($score_file, implode(\"\\n\", $scores));\n    if ($save_result !== false) {\n        $scoring_msg = \"<div class='score-msg success'>채점이 저장되었습니다!</div>\";\n    } else {\n        $scoring_msg = \"<div class='score-msg error'>점수 저장에 실패했습니다. 서버 권한이나 경로를 확인하세요.</div>\";\n    }\n\n    if (isset($_POST['finish_and_go_dashboard'])) {\n        header(\"Location: judge_dashboard.php\");\n        exit;\n    }\n}\n\n// 기존 점수 불러오기(있으면)\n$saved_scores = [];\nif (file_exists($score_file)) {\n    $lines = file($score_file);\n    foreach ($lines as $line) {\n        $cols = explode(',', trim($line));\n        if (count($cols) === 4) {\n            $saved_scores[$cols[0]] = [\n                'score1' => $cols[1],\n                'score2' => $cols[2],\n                'score3' => $cols[3],\n            ];\n        }\n    }\n}\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>채점 - 심사위원 | danceoffice.net</title>\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\n    <link rel=\"stylesheet\" href=\"/assets/style.css\">\n    <style>\n        .score-section {background:#23262b; border-radius:14px; padding:2em 2em 2.5em 2em; max-width:750px; margin:3em auto;}\n        .score-title {font-size:1.2em; font-weight:700; color:#03C75A; margin-bottom:1.1em;}\n        .event-select-form {margin-bottom:2em;}\n        .event-select-form select {padding:0.5em 1em; border-radius:8px; background:#181B20; color:#03C75A; border:1px solid #31343a;}\n        .score-table {width:100%; background:#222; border-radius:8px; border-collapse:collapse;}\n        .score-table th,.score-table td {padding:0.7em 0.5em; border-bottom:1px solid #31343a;}\n        .score-table th {background:#181B20; color:#03C75A;}\n        .score-table td {color:#F5F7FA;}\n        .score-table tr:last-child td {border-bottom:none;}\n        .score-input {width:4em; padding:0.5em; border-radius:6px; border:1px solid #31343a; background:#1E2126; color:#fff; text-align:center;}\n        .score-input[readonly] {background:#333;color:#aaf;cursor:pointer;}\n        .score-msg {margin:1em 0; padding:0.8em 1em; border-radius:8px;}\n        .score-msg.success {background:#232; color:#03C75A;}\n        .score-msg.error {background:#311; color:#ff5e5e;}\n        .score-btn, .finish-btn {background:linear-gradient(90deg,#03C75A 70%,#00BFAE 100%); color:#222; border:none; border-radius:20px; padding:0.7em 2em; font-weight:700; margin-right:0.8em;}\n        .score-btn:hover, .finish-btn:hover {background:linear-gradient(90deg,#00BFAE 60%,#03C75A 100%); color:#fff;}\n        .finish-btn {background:#0057b7; color:#fff;}\n        .finish-btn:hover {background:#03C75A; color:#222;}\n        .absent-btn {\n            margin-left:0.5em;\n            background:#f55; color:#fff; font-weight:700; border:none; border-radius:10px;\n            padding:0.25em 0.95em; font-size:0.98em; cursor:pointer; transition:background 0.14s;\n        }\n        .absent-btn.absent-active, .absent-btn:focus { background:#a00; color:#fff;}\n        .score-row-absent td {background:#fff5f5 !important; color:#a00;}\n        .score-row-absent input {background:#fff4f4 !important; color:#a00;}\n        /* 모달 등 기존 스타일 그대로 유지 */\n        .modal-bg {\n            display:none; position:fixed; left:0; top:0; width:100vw; height:100vh;\n            background:rgba(10,20,30,0.85); z-index:9999;\n        }\n        .modal-wrap {\n            background:#181C25; border-radius: 20px;\n            box-sizing:border-box;\n            width:96vw; max-width:650px; min-width:0;\n            margin:4vh auto 0 auto; padding:2em 0.5em 2em 0.5em; position:relative;\n            overflow-x: auto;\n        }\n        .modal-label {\n            font-weight:900; color:#03C75A; font-size:1.6em; text-align:center; margin-bottom:1.3em;\n        }\n        .modal-btns {\n            display:flex; flex-direction:column; gap:1.1em; width:100%; align-items:center;\n            margin-bottom:2em;\n        }\n        .modal-btn-row {\n            display:flex; flex-wrap:nowrap; gap:0.65em; justify-content:center; width:100%;\n        }\n        .modal-btn {\n            background:#31343a; color:#fff; border:none; border-radius:10px;\n            padding:0.8em 0.9em; min-width:2.1em;\n            font-weight:900; font-size:1.35em;\n            cursor:pointer; transition:background 0.15s;\n            line-height:1.6;\n            box-shadow: 0 2px 6px rgba(0,0,0,0.08);\n        }\n        .modal-btn.active, .modal-btn:focus {background:#03C75A; color:#222;}\n        .modal-btn:hover {background:#00BFAE; color:#fff;}\n        .modal-close {\n            position:absolute; top:0.7em; right:1.5em; background:none; border:none;\n            color:#ff5e5e; font-size:2.3em; cursor:pointer; font-weight:900;\n        }\n        .modal-btn.difficulty-btn {\n            border-radius:50%;\n            width:2.7em; height:2.7em; min-width:2.7em; min-height:2.7em;\n            padding:0; font-size:1.25em; display:flex; align-items:center; justify-content:center;\n            background:#222b37;\n            margin-bottom:0.08em;\n        }\n        .modal-btn.difficulty-btn.active, .modal-btn.difficulty-btn:focus {background:#03C75A; color:#181c25;}\n        .modal-btn.difficulty-btn:hover {background:#00BFAE; color:#fff;}\n    </style>\n</head>\n<body>\n    <main>\n        <section class=\"score-section\">\n            <div class=\"score-title\">심사 채점 패널</div>\n            <div style=\"margin-bottom:1em;\">\n                <b><?= htmlspecialchars($_SESSION['judge_name']) ?></b> 심사위원님<br>\n            </div>\n            <form class=\"event-select-form\" method=\"get\">\n                <label for=\"event_select\" style=\"color:#03C75A; font-weight:700;\">종목 선택:</label>\n                <select name=\"event\" id=\"event_select\" onchange=\"this.form.submit()\">\n                    <?php foreach($events as $ev): ?>\n                        <option value=\"<?= htmlspecialchars($ev['code']) ?>\" <?= $selected_event === $ev['code'] ? 'selected' : '' ?>>\n                            <?= htmlspecialchars($ev['name']) ?>\n                        </option>\n                    <?php endforeach; ?>\n                </select>\n            </form>\n            \n            <?php if (isset($_GET['event'])): ?>\n            <div style=\"background: #e8f4fd; padding: 10px; border-radius: 6px; margin: 10px 0; border-left: 4px solid #2196F3;\">\n                <strong>🎭 프리스타일 채점 모드</strong><br>\n                <small>이 종목은 프리스타일 심사 시스템으로 채점됩니다.</small>\n            </div>\n            <?php endif; ?>\n            <div style=\"font-size:1.08em; color:#0ef; margin-bottom:0.7em;\">\n                [<?= htmlspecialchars($event_name) ?>]\n            </div>\n            <?php if ($scoring_msg) echo $scoring_msg; ?>\n            <?php if ($players): ?>\n            <form method=\"post\" autocomplete=\"off\" onsubmit=\"return lockButtonsOnSubmit(this)\">\n                <table class=\"score-table\">\n                    <thead>\n                        <tr>\n                            <th style=\"width:65px;\">번호</th>\n                            <th>이름</th>\n                            <th>파트너</th>\n                            <th style=\"width:100px;\">기술</th>\n                            <th style=\"width:100px;\">안무</th>\n                            <th style=\"width:100px;\">난이도</th>\n                            <th>불참</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <?php foreach($players as $pl): \n                            $num = $pl['number'];\n                            $score1 = isset($saved_scores[$num]['score1']) ? $saved_scores[$num]['score1'] : '';\n                            $score2 = isset($saved_scores[$num]['score2']) ? $saved_scores[$num]['score2'] : '';\n                            $score3 = isset($saved_scores[$num]['score3']) ? $saved_scores[$num]['score3'] : '';\n                            $is_absent = ($score1 == 5 && $score2 == 5 && $score3 == 1);\n                        ?>\n                        <tr id=\"score_row_<?= htmlspecialchars($num) ?>\"<?= $is_absent ? ' class=\"score-row-absent\"' : '' ?>>\n                            <td><?= htmlspecialchars($pl['number']) ?></td>\n                            <td><?= htmlspecialchars($pl['name']) ?></td>\n                            <td><?= htmlspecialchars($pl['partner']) ?></td>\n                            <td>\n                                <input type=\"text\" class=\"score-input\" \n                                    name=\"score1_<?= htmlspecialchars($num) ?>\" \n                                    id=\"score1_<?= htmlspecialchars($num) ?>\"\n                                    value=\"<?= htmlspecialchars($score1) ?>\"\n                                    readonly onclick=\"if(!isAbsent('<?= $num ?>'))openModal('기술', 'score1_<?= htmlspecialchars($num) ?>', 'tech')\">\n                            </td>\n                            <td>\n                                <input type=\"text\" class=\"score-input\" \n                                    name=\"score2_<?= htmlspecialchars($num) ?>\" \n                                    id=\"score2_<?= htmlspecialchars($num) ?>\"\n                                    value=\"<?= htmlspecialchars($score2) ?>\"\n                                    readonly onclick=\"if(!isAbsent('<?= $num ?>'))openModal('안무', 'score2_<?= htmlspecialchars($num) ?>', 'choreo')\">\n                            </td>\n                            <td>\n                                <input type=\"text\" class=\"score-input\" \n                                    name=\"score3_<?= htmlspecialchars($num) ?>\" \n                                    id=\"score3_<?= htmlspecialchars($num) ?>\"\n                                    value=\"<?= htmlspecialchars($score3) ?>\"\n                                    readonly onclick=\"if(!isAbsent('<?= $num ?>'))openModal('난이도', 'score3_<?= htmlspecialchars($num) ?>', 'difficult')\">\n                            </td>\n                            <td>\n                                <input type=\"hidden\" name=\"absent_<?= htmlspecialchars($num) ?>\" value=\"<?= $is_absent ? '1' : '0' ?>\">\n                                <button type=\"button\" class=\"absent-btn<?= $is_absent ? ' absent-active' : '' ?>\" id=\"absent_btn_<?= htmlspecialchars($num) ?>\" onclick=\"toggleAbsent('<?= htmlspecialchars($num) ?>')\"><?= $is_absent ? '불참 취소' : '불참' ?></button>\n                            </td>\n                        </tr>\n                        <?php endforeach; ?>\n                    </tbody>\n                </table>\n                <div style=\"margin-top:1.4em;\">\n                    <button type=\"submit\" name=\"save_score\" class=\"score-btn\">점수 저장</button>\n                    <button type=\"submit\" name=\"finish_and_go_dashboard\" class=\"finish-btn\">채점 완료(대시보드로)</button>\n                </div>\n            </form>\n            <?php else: ?>\n                <div class=\"score-msg error\">선수 명단이 없습니다. 관리자에게 문의하세요.</div>\n            <?php endif; ?>\n        </section>\n    </main>\n    <!-- Modal -->\n    <div id=\"modal-bg\" class=\"modal-bg\">\n        <div class=\"modal-wrap\">\n            <button class=\"modal-close\" onclick=\"closeModal()\">&times;</button>\n            <div class=\"modal-label\" id=\"modal-label\"></div>\n            <div class=\"modal-btns\" id=\"modal-btns\"></div>\n        </div>\n    </div>\n    <script>\n        let currentInputId = \"\";\n        function openModal(label, inputId, mode) {\n            currentInputId = inputId;\n            document.getElementById('modal-label').textContent = label + \" 점수 선택\";\n            let btnsHtml = '';\n            if (mode === 'tech' || mode === 'choreo') {\n                let min = 5.1, max = 10, step = 0.1;\n                for (let rowStart = min; rowStart < max; rowStart += 1.0) {\n                    let rowEnd = Math.min(rowStart + 0.9, max);\n                    btnsHtml += \"<div class='modal-btn-row'>\";\n                    for (let v = rowStart; v <= rowEnd + 0.0001; v += step) {\n                        let val = parseFloat(v.toFixed(1));\n                        btnsHtml += `<button type='button' class='modal-btn' data-score='${val}'>${val}</button>`;\n                    }\n                    btnsHtml += \"</div>\";\n                }\n            } else if (mode === 'difficult') {\n                let min = 1.25, max = 2, step = 0.05;\n                let col = 0, perRow = 7;\n                for (let rowStart = min; rowStart <= max; rowStart += step * perRow) {\n                    btnsHtml += \"<div class='modal-btn-row'>\";\n                    for (let v = rowStart; v < rowStart + step * perRow && v <= max + 0.0001; v += step) {\n                        let val = parseFloat(v.toFixed(2));\n                        btnsHtml += `<button type='button' class='modal-btn difficulty-btn' data-score='${val}'>${val}</button>`;\n                    }\n                    btnsHtml += \"</div>\";\n                }\n            }\n            document.getElementById('modal-btns').innerHTML = btnsHtml;\n            document.getElementById('modal-bg').style.display = 'block';\n        }\n        function closeModal() {\n            document.getElementById('modal-bg').style.display = 'none';\n            currentInputId = \"\";\n        }\n        document.getElementById('modal-btns').addEventListener('click', function(e){\n            if (e.target.classList.contains('modal-btn')) {\n                let score = e.target.getAttribute('data-score');\n                if (currentInputId) {\n                    document.getElementById(currentInputId).value = score;\n                }\n                closeModal();\n            }\n        });\n        document.addEventListener('keydown', function(e){\n            if (e.key === \"Escape\") closeModal();\n        });\n        document.getElementById('modal-bg').addEventListener('click', function(e){\n            if (e.target === this) closeModal();\n        });\n\n        // 불참 버튼 기능\n        function toggleAbsent(num) {\n            const btn = document.getElementById('absent_btn_' + num);\n            const isNowAbsent = btn.classList.toggle('absent-active');\n            const s1 = document.getElementsByName('score1_' + num)[0];\n            const s2 = document.getElementsByName('score2_' + num)[0];\n            const s3 = document.getElementsByName('score3_' + num)[0];\n            const row = document.getElementById('score_row_' + num);\n            if (isNowAbsent) {\n                btn.innerText = '불참 취소';\n                s1.value = 5; s2.value = 5; s3.value = 1;\n                s1.readOnly = true; s2.readOnly = true; s3.readOnly = true;\n                row.classList.add('score-row-absent');\n                document.getElementsByName('absent_' + num)[0].value = '1';\n            } else {\n                btn.innerText = '불참';\n                s1.readOnly = false; s2.readOnly = false; s3.readOnly = false;\n                row.classList.remove('score-row-absent');\n                document.getElementsByName('absent_' + num)[0].value = '0';\n            }\n        }\n        function isAbsent(num) {\n            return document.getElementById('absent_btn_' + num).classList.contains('absent-active');\n        }\n        function lockButtonsOnSubmit(f) {\n            f.querySelectorAll(\"button[type=submit]\").forEach(btn => btn.disabled = true);\n            return true;\n        }\n    </script>\n</body>\n</html>","size_bytes":18580},"comp/judge_scoring_minimal.php":{"content":"<?php\n// 에러 리포팅 활성화\nerror_reporting(E_ALL);\nini_set('display_errors', 1);\n\necho \"<!-- Minimal judge scoring -->\\n\";\n\nsession_start();\n\n$comp_id = $_GET['comp_id'] ?? '';\n$event_no = $_GET['event_no'] ?? '';\n$lang = $_GET['lang'] ?? 'ko';\n\necho \"<h1>심사위원 채점 시스템 (최소 버전)</h1>\";\n\n// 기본 검증\nif (!$comp_id || !$event_no) {\n    echo \"<p>잘못된 대회 ID 또는 이벤트 번호입니다.</p>\";\n    exit;\n}\n\n// 세션 검증\nif (!isset($_SESSION['scoring_logged_in']) || !$_SESSION['scoring_logged_in']) {\n    echo \"<p>로그인이 필요합니다.</p>\";\n    exit;\n}\n\necho \"<p>comp_id: \" . htmlspecialchars($comp_id) . \"</p>\";\necho \"<p>event_no: \" . htmlspecialchars($event_no) . \"</p>\";\necho \"<p>심사위원 ID: \" . ($_SESSION['scoring_judge_id'] ?? 'N/A') . \"</p>\";\n\n// 파일 로딩\n$data_dir = __DIR__ . \"/data/$comp_id\";\n$players_file = \"$data_dir/players_$event_no.txt\";\n\nif (!file_exists($players_file)) {\n    echo \"<p>선수 파일을 찾을 수 없습니다: \" . $players_file . \"</p>\";\n    exit;\n}\n\n// 선수 데이터 로딩\n$players = file($players_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n\necho \"<h2>출전 선수:</h2>\";\nforeach ($players as $player) {\n    echo \"<p>선수 번호: \" . htmlspecialchars($player) . \"</p>\";\n}\n\necho \"<p>기본 로딩 완료!</p>\";\n?>\n\n\n\n\n\n\n","size_bytes":1343},"comp/judge_scoring_new.php":{"content":"<?php\n/**\n * 심사위원 채점 시스템 - 메인 라우터\n * 이벤트 타입에 따라 적절한 심사 시스템을 로드\n */\n\nsession_start();\n\n// 공통 함수들 포함\nrequire_once __DIR__ . '/scoring/shared/functions.php';\n\n// 기본 설정\n$comp_id = $_GET['comp_id'] ?? '';\n$event_no = $_GET['event_no'] ?? '';\n$lang = $_GET['lang'] ?? 'ko';\n\n// 세션 검증\nif (!validateJudgeSession($comp_id)) {\n    header(\"Location: scoring_login.php?comp_id=\" . urlencode($comp_id));\n    exit;\n}\n\n// 이벤트 데이터 로드\n$event_data = loadEventData($comp_id, $event_no);\nif (!$event_data) {\n    die('<div class=\"error\">이벤트 데이터를 찾을 수 없습니다.</div>');\n}\n\n// 선수 데이터 로드\n$players = loadPlayersData($comp_id, $event_no);\nif (empty($players)) {\n    die('<div class=\"error\">선수 데이터를 찾을 수 없습니다.</div>');\n}\n\n// 댄스 매핑 로드\n$dance_mapping = loadDanceMapping($comp_id);\n\n// 라운드 정보 로드\n$round_info = loadRoundInfo($comp_id);\n\n// 결승전 여부 확인\n$is_final = isFinalRound($event_no, $round_info, $event_data);\n\n// 언어 텍스트 로드\n$t = getLanguageTexts($lang);\n\n// 심사위원 정보\n$judge_id = $_SESSION['scoring_judge_id'] ?? '';\n$judge_name = $_SESSION['scoring_judge_name'] ?? '';\n$judge_country = $_SESSION['scoring_judge_country'] ?? '';\n\n// 이벤트별 데이터 준비\n$recall_count = intval($event_data['recall_count'] ?? 0);\n$round_display = $event_data['round_type'] ?? '';\n\n// 히트 데이터 로드 (예선/준결승용)\n$hits_data = null;\nif (!$is_final && $event_no !== '8') {\n    $data_dir = __DIR__ . \"/data/$comp_id\";\n    $hits_file = \"$data_dir/players_hits_$event_no.json\";\n    if (file_exists($hits_file)) {\n        $hits_data = json_decode(file_get_contents($hits_file), true);\n    }\n}\n\n// 기존 선택된 선수들 로드 (예선/준결승용)\n$existing_selections = [];\nif (!$is_final && $event_no !== '8') {\n    $existing_selections = loadExistingSelections($comp_id, $event_no, $judge_id, $event_data['dances']);\n}\n\n// 저장된 순위 로드 (결승전용)\n$saved_rankings = [];\nif ($is_final || $event_no === '8') {\n    $data_dir = __DIR__ . \"/data/$comp_id\";\n    foreach ($event_data['dances'] as $dance) {\n        $adj_file = \"$data_dir/{$event_no}_{$dance}_{$judge_id}.adj\";\n        if (file_exists($adj_file)) {\n            $lines = file($adj_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n            $dance_rankings = [];\n            foreach ($lines as $line) {\n                $line = cleanInput($line);\n                $parts = explode(',', $line);\n                if (count($parts) >= 2) {\n                    $dance_rankings[] = [trim($parts[0]), trim($parts[1])];\n                }\n            }\n            if (!empty($dance_rankings)) {\n                $saved_rankings[$dance] = $dance_rankings;\n            }\n        }\n    }\n}\n\n// 저장된 점수 표시용\n$saved_scores = [];\nif ($is_final || $event_no === '8') {\n    $saved_scores = array_keys($saved_rankings);\n} else {\n    $saved_scores = array_keys($existing_selections);\n}\n\n// 댄스 이름 변환\n$dance_names = getDanceNames($event_data['dances'], $dance_mapping);\n?>\n\n<!DOCTYPE html>\n<html lang=\"<?=h($lang)?>\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title><?=h($t['title'])?></title>\n    \n    <!-- 공통 스타일 포함 -->\n    <?php include __DIR__ . '/scoring/shared/styles.php'; ?>\n</head>\n<body>\n    <div class=\"scoring-container\">\n        <!-- 심사위원 정보 헤더 -->\n        <?php renderJudgeInfoHeader($judge_id, $judge_name, $judge_country, $recall_count, $is_final, $event_no); ?>\n        \n        <!-- 이벤트 정보 헤더 -->\n        <?php renderEventInfoHeader($event_data, $round_display, $dance_names, count($players), $hits_data, $saved_scores); ?>\n        \n        <!-- 메시지 컨테이너 -->\n        <?php renderMessageContainer(); ?>\n        \n        <!-- 폼 시작 -->\n        <?php renderFormStart($comp_id, $event_no, $is_final, $recall_count); ?>\n        \n        <!-- 심사 시스템 로드 -->\n        <?php if ($is_final || $event_no === '8'): ?>\n            <!-- 결승전 시스템 -->\n            <?php include __DIR__ . '/scoring/types/multievent_final.php'; ?>\n        <?php else: ?>\n            <!-- 예선/준결승 시스템 -->\n            <?php include __DIR__ . '/scoring/types/multievent_preliminary.php'; ?>\n        <?php endif; ?>\n        \n        <!-- 폼 종료 -->\n        <?php renderFormEnd(); ?>\n        \n        <!-- 하단 네비게이션 -->\n        <?php renderBottomNavigation($comp_id, $lang); ?>\n        \n        <!-- 푸터 -->\n        <?php renderFooter(); ?>\n    </div>\n    \n    <!-- 공통 JavaScript 포함 -->\n    <?php renderCommonJavaScript($comp_id, $lang); ?>\n</body>\n</html>\n\n\n\n\n\n\n","size_bytes":4848},"comp/judge_scoring_router.php":{"content":"<?php\n/**\n * 심사위원 채점 시스템 - 메인 라우터\n * 5가지 심사 방식을 지원하는 통합 라우터\n */\n\nsession_start();\n\n// 공통 함수들 포함\nrequire_once __DIR__ . '/scoring/shared/functions.php';\n\n// 기본 설정\n$comp_id = $_GET['comp_id'] ?? '';\n$event_no = $_GET['event_no'] ?? '';\n$lang = $_GET['lang'] ?? 'ko';\n\n// 세션 검증 (임시로 우회)\necho \"<!-- SESSION DEBUG -->\";\necho \"<!-- scoring_logged_in: \" . (isset($_SESSION['scoring_logged_in']) ? ($_SESSION['scoring_logged_in'] ? 'TRUE' : 'FALSE') : 'NOT SET') . \" -->\";\necho \"<!-- scoring_comp_id: \" . ($_SESSION['scoring_comp_id'] ?? 'NOT SET') . \" -->\";\necho \"<!-- comp_id: \" . $comp_id . \" -->\";\necho \"<!-- END SESSION DEBUG -->\";\n\n// 임시로 세션 검증 우회 (테스트용)\nif (false && !validateJudgeSession($comp_id)) {\n    header(\"Location: scoring_login.php?comp_id=\" . urlencode($comp_id));\n    exit;\n}\n\n// 이벤트 데이터 로드\n$event_data = loadEventData($comp_id, $event_no);\nif (!$event_data) {\n    die('<div class=\"error\">이벤트 데이터를 찾을 수 없습니다.</div>');\n}\n\n// 선수 데이터 로드\n$players = loadPlayersData($comp_id, $event_no);\nif (empty($players)) {\n    die('<div class=\"error\">선수 데이터를 찾을 수 없습니다.</div>');\n}\n\n// 댄스 매핑 로드\n$dance_mapping = loadDanceMapping($comp_id);\n\n// 라운드 정보 로드\n$round_info = loadRoundInfo($comp_id);\n\n// 결승전 여부 확인\n$is_final = isFinalRound($event_no, $round_info, $event_data);\n\n// 언어 텍스트 로드\n$t = getLanguageTexts($lang);\n\n// 심사위원 정보 (임시로 설정)\n$judge_id = $_SESSION['scoring_judge_id'] ?? '8';\n$judge_name = $_SESSION['scoring_judge_name'] ?? 'Test Judge';\n$judge_country = $_SESSION['scoring_judge_country'] ?? 'Korea';\n\n// 이벤트별 데이터 준비\n$recall_count = intval($event_data['recall_count'] ?? 0);\n$round_display = $event_data['round_type'] ?? '';\n\n// 심사 방식 결정\n$scoring_type = 'multievent_preliminary'; // 기본값\n\n// 이벤트별 심사 방식 매핑\n$scoring_type_mapping = [\n    '8' => 'multievent_final',           // 기존 결승전\n    '9' => 'multievent_preliminary',     // 기존 준결승\n    '10' => 'freestyle',                 // 프리스타일\n    '11' => 'formation',                 // 포메이션\n    '12' => 'multievent_final_only'      // 멀티이벤트 결승전(준결승 없음)\n];\n\n// 이벤트 번호에 따른 심사 방식 결정\nif (isset($scoring_type_mapping[$event_no])) {\n    $scoring_type = $scoring_type_mapping[$event_no];\n} elseif ($is_final || $event_no === '8') {\n    $scoring_type = 'multievent_final';\n}\n\n// 심사 방식별 데이터 준비\n$hits_data = null;\n$existing_selections = [];\n$saved_rankings = [];\n\nif ($scoring_type === 'multievent_preliminary') {\n    // 예선/준결승용 데이터\n    $data_dir = __DIR__ . \"/data/$comp_id\";\n    $hits_file = \"$data_dir/players_hits_$event_no.json\";\n    if (file_exists($hits_file)) {\n        $hits_data = json_decode(file_get_contents($hits_file), true);\n    }\n    $existing_selections = loadExistingSelections($comp_id, $event_no, $judge_id, $event_data['dances']);\n} elseif (in_array($scoring_type, ['multievent_final', 'multievent_final_only'])) {\n    // 결승전용 데이터\n    $data_dir = __DIR__ . \"/data/$comp_id\";\n    foreach ($event_data['dances'] as $dance) {\n        $adj_file = \"$data_dir/{$event_no}_{$dance}_{$judge_id}.adj\";\n        if (file_exists($adj_file)) {\n            $lines = file($adj_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n            $dance_rankings = [];\n            foreach ($lines as $line) {\n                $line = cleanInput($line);\n                $parts = explode(',', $line);\n                if (count($parts) >= 2) {\n                    $dance_rankings[] = [trim($parts[0]), trim($parts[1])];\n                }\n            }\n            if (!empty($dance_rankings)) {\n                $saved_rankings[$dance] = $dance_rankings;\n            }\n        }\n    }\n}\n\n// 저장된 점수 표시용\n$saved_scores = [];\nif (in_array($scoring_type, ['multievent_final', 'multievent_final_only'])) {\n    $saved_scores = array_keys($saved_rankings);\n} elseif ($scoring_type === 'multievent_preliminary') {\n    $saved_scores = array_keys($existing_selections);\n}\n\n// 댄스 이름 변환\n$dance_names = getDanceNames($event_data['dances'], $dance_mapping);\n?>\n\n<!DOCTYPE html>\n<html lang=\"<?=h($lang)?>\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title><?=h($t['title'])?></title>\n    \n    <!-- 공통 스타일 포함 -->\n    <?php include __DIR__ . '/scoring/shared/styles.php'; ?>\n</head>\n<body>\n    <div class=\"scoring-container\">\n        <!-- 심사위원 정보 헤더 -->\n        <?php renderJudgeInfoHeader($judge_id, $judge_name, $judge_country, $recall_count, $is_final, $event_no); ?>\n        \n        <!-- 이벤트 정보 헤더 -->\n        <?php renderEventInfoHeader($event_data, $round_display, $dance_names, count($players), $hits_data, $saved_scores); ?>\n        \n        <!-- 메시지 컨테이너 -->\n        <?php renderMessageContainer(); ?>\n        \n        <!-- 폼 시작 -->\n        <?php renderFormStart($comp_id, $event_no, $is_final, $recall_count); ?>\n        \n        <!-- 심사 시스템 로드 -->\n        <?php \n        echo \"<!-- DEBUG: scoring_type = \" . $scoring_type . \" -->\";\n        echo \"<!-- DEBUG: event_no = \" . $event_no . \" -->\";\n        echo \"<!-- DEBUG: is_final = \" . ($is_final ? 'TRUE' : 'FALSE') . \" -->\";\n        \n        $scoring_file = __DIR__ . \"/scoring/types/{$scoring_type}.php\";\n        echo \"<!-- DEBUG: scoring_file = \" . $scoring_file . \" -->\";\n        echo \"<!-- DEBUG: file_exists = \" . (file_exists($scoring_file) ? 'TRUE' : 'FALSE') . \" -->\";\n        \n        if (file_exists($scoring_file)) {\n            include $scoring_file;\n        } else {\n            echo '<div class=\"error\">지원하지 않는 심사 방식입니다: ' . h($scoring_type) . '</div>';\n        }\n        ?>\n        \n        <!-- 폼 종료 -->\n        <?php renderFormEnd(); ?>\n        \n        <!-- 하단 네비게이션 -->\n        <?php renderBottomNavigation($comp_id, $lang); ?>\n        \n        <!-- 푸터 -->\n        <?php renderFooter(); ?>\n    </div>\n    \n    <!-- 공통 JavaScript 포함 -->\n    <?php renderCommonJavaScript($comp_id, $lang); ?>\n</body>\n</html>\n","size_bytes":6423},"comp/judge_scoring_simple.php":{"content":"<?php\n// 에러 리포팅 활성화\nerror_reporting(E_ALL);\nini_set('display_errors', 1);\n\necho \"<!-- Simple judge scoring test -->\\n\";\n\nsession_start();\n\n$comp_id = $_GET['comp_id'] ?? '';\n$event_no = $_GET['event_no'] ?? '';\n$lang = $_GET['lang'] ?? 'ko';\n\necho \"<h1>심사위원 채점 시스템 (간단 테스트)</h1>\";\necho \"<p>comp_id: \" . htmlspecialchars($comp_id) . \"</p>\";\necho \"<p>event_no: \" . htmlspecialchars($event_no) . \"</p>\";\necho \"<p>lang: \" . htmlspecialchars($lang) . \"</p>\";\n\n// 세션 확인\necho \"<p>세션 로그인 상태: \" . (isset($_SESSION['scoring_logged_in']) ? 'YES' : 'NO') . \"</p>\";\necho \"<p>심사위원 ID: \" . ($_SESSION['scoring_judge_id'] ?? 'N/A') . \"</p>\";\n\n// 파일 존재 확인\n$data_dir = __DIR__ . \"/data/$comp_id\";\n$runorder_file = \"$data_dir/RunOrder_Tablet.txt\";\n$players_file = \"$data_dir/players_$event_no.txt\";\n\necho \"<p>데이터 디렉토리: \" . $data_dir . \"</p>\";\necho \"<p>디렉토리 존재: \" . (is_dir($data_dir) ? 'YES' : 'NO') . \"</p>\";\necho \"<p>RunOrder 파일: \" . $runorder_file . \"</p>\";\necho \"<p>RunOrder 파일 존재: \" . (file_exists($runorder_file) ? 'YES' : 'NO') . \"</p>\";\necho \"<p>선수 파일: \" . $players_file . \"</p>\";\necho \"<p>선수 파일 존재: \" . (file_exists($players_file) ? 'YES' : 'NO') . \"</p>\";\n\n// RunOrder 파일 읽기 테스트\nif (file_exists($runorder_file)) {\n    echo \"<h2>RunOrder 파일 내용 (처음 5줄):</h2>\";\n    $lines = file($runorder_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    for ($i = 0; $i < min(5, count($lines)); $i++) {\n        echo \"<p>\" . ($i + 1) . \": \" . htmlspecialchars($lines[$i]) . \"</p>\";\n    }\n}\n\n// 선수 파일 읽기 테스트\nif (file_exists($players_file)) {\n    echo \"<h2>선수 파일 내용:</h2>\";\n    $players = file($players_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    foreach ($players as $player) {\n        echo \"<p>선수: \" . htmlspecialchars($player) . \"</p>\";\n    }\n}\n\necho \"<p><a href='judge_scoring.php?comp_id=$comp_id&event_no=$event_no&lang=$lang'>원래 채점 페이지로 이동</a></p>\";\n?>\n\n\n\n\n\n\n","size_bytes":2085},"comp/judge_scoring_test.php":{"content":"<?php\nsession_start();\n\n$comp_id = $_GET['comp_id'] ?? '';\n$event_no = $_GET['event_no'] ?? '';\n\n// Remove BOM and normalize - multiple methods\n$comp_id = preg_replace('/\\x{FEFF}/u', '', $comp_id);\n$event_no = preg_replace('/\\x{FEFF}/u', '', $event_no);\n\n// Additional BOM removal\n$comp_id = str_replace([\"\\xEF\\xBB\\xBF\", \"\\xFEFF\", \"\\uFEFF\"], '', $comp_id);\n$event_no = str_replace([\"\\xEF\\xBB\\xBF\", \"\\xFEFF\", \"\\uFEFF\"], '', $event_no);\n\n// Remove any non-printable characters\n$comp_id = preg_replace('/[\\x00-\\x1F\\x7F-\\x9F]/', '', $comp_id);\n$event_no = preg_replace('/[\\x00-\\x1F\\x7F-\\x9F]/', '', $event_no);\n\n$comp_id = preg_replace('/[^\\d-]/', '', $comp_id);\n$event_no = preg_replace('/\\D+/', '', $event_no);\n\n\n// Language setting\n$lang = $_GET['lang'] ?? 'ko';\nif (!in_array($lang, ['ko', 'en', 'zh', 'ja'])) {\n    $lang = 'ko';\n}\n\n// Language texts\n$texts = [\n    'ko' => [\n        'title' => '심사위원 채점 시스템',\n        'judge_info' => '심사위원',\n        'event_info' => '이벤트 정보',\n        'event_no' => '이벤트 번호',\n        'round' => '라운드',\n        'dances' => '종목',\n        'players' => '출전 선수',\n        'place' => '순위',\n        'couple' => '선수',\n        'submit' => '제출',\n        'no_data' => '이벤트 데이터 또는 선수 데이터를 찾을 수 없습니다.',\n        'invalid_data' => '잘못된 대회 ID 또는 이벤트 번호입니다.'\n    ],\n    'en' => [\n        'title' => 'Judge Scoring System',\n        'judge_info' => 'Judge',\n        'event_info' => 'Event Information',\n        'event_no' => 'Event Number',\n        'round' => 'Round',\n        'dances' => 'Dances',\n        'players' => 'Competitors',\n        'place' => 'Place',\n        'couple' => 'Couple',\n        'submit' => 'Submit',\n        'no_data' => 'Event data or player data not found.',\n        'invalid_data' => 'Invalid competition ID or event number.'\n    ],\n    'zh' => [\n        'title' => '评委评分系统',\n        'judge_info' => '评委',\n        'event_info' => '赛事信息',\n        'event_no' => '赛事编号',\n        'round' => '轮次',\n        'dances' => '舞种',\n        'players' => '参赛选手',\n        'place' => '名次',\n        'couple' => '选手',\n        'submit' => '提交',\n        'no_data' => '找不到赛事数据或选手数据。',\n        'invalid_data' => '无效的比赛ID或赛事编号。'\n    ],\n    'ja' => [\n        'title' => '審査員採点システム',\n        'judge_info' => '審査員',\n        'event_info' => 'イベント情報',\n        'event_no' => 'イベント番号',\n        'round' => 'ラウンド',\n        'dances' => '種目',\n        'players' => '出場選手',\n        'place' => '順位',\n        'couple' => '選手',\n        'submit' => '提出',\n        'no_data' => 'イベントデータまたは選手データが見つかりません。',\n        'invalid_data' => '無効な大会IDまたはイベント番号です。'\n    ]\n];\n\n$t = $texts[$lang];\n\n// Check if judge is logged in\nif (!isset($_SESSION['scoring_logged_in']) || !$_SESSION['scoring_logged_in'] || $_SESSION['scoring_comp_id'] !== $comp_id) {\n    $lang = $_GET['lang'] ?? 'ko';\n    header(\"Location: scoring_login.php?comp_id=\" . urlencode($comp_id) . \"&lang=\" . urlencode($lang));\n    exit;\n}\n\nif (!$comp_id || !$event_no) {\n    echo \"<h1>\" . $t['invalid_data'] . \"</h1>\";\n    exit;\n}\n\n// Load event data\n$data_dir = __DIR__ . \"/data/$comp_id\";\n$runorder_file = \"$data_dir/RunOrder_Tablet.txt\";\n$players_file = \"$data_dir/players_$event_no.txt\";\n$round_info_file = \"$data_dir/round_info.json\";\n$dance_name_file = \"$data_dir/DanceName.txt\";\n\n$event_data = null;\n$players = [];\n$round_info = null;\n$hits_data = null;\n$dance_mapping = [];\n\n// Load dance name mapping\nif (file_exists($dance_name_file)) {\n    $lines = file($dance_name_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    foreach ($lines as $line) {\n        $line = preg_replace('/\\x{FEFF}/u', '', $line);\n        $cols = array_map('trim', explode(',', $line));\n        if (count($cols) >= 3 && !empty($cols[2])) {\n            $dance_mapping[$cols[2]] = $cols[1]; // abbreviation => full name\n        }\n    }\n}\n\n// Function to convert dance abbreviations to full names\nfunction getDanceNames($dances, $dance_mapping) {\n    $result = [];\n    foreach ($dances as $dance) {\n        $dance = trim($dance);\n        if (isset($dance_mapping[$dance])) {\n            $result[] = $dance_mapping[$dance];\n        } else {\n            $result[] = $dance; // fallback to original if not found\n        }\n    }\n    return $result;\n}\n\n// Function to load existing selected numbers from .adj files\nfunction loadExistingSelections($comp_id, $event_no, $judge_id, $dances) {\n    $data_dir = __DIR__ . \"/data/$comp_id\";\n    $selections = [];\n    \n    foreach ($dances as $dance) {\n        $adj_file = \"$data_dir/{$event_no}_{$dance}_{$judge_id}.adj\";\n        if (file_exists($adj_file)) {\n            $lines = file($adj_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n            $dance_selections = [];\n    foreach ($lines as $line) {\n                $line = preg_replace('/\\x{FEFF}/u', '', $line);\n                $line = trim($line, '\"');\n                if (!empty($line)) {\n                    $dance_selections[] = $line;\n                }\n            }\n            $selections[$dance] = $dance_selections;\n        }\n    }\n    \n    return $selections;\n}\n\n// Load event information\nif (file_exists($runorder_file)) {\n    $lines = file($runorder_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    foreach ($lines as $line) {\n        // Remove BOM from line - multiple methods\n        $line = preg_replace('/\\x{FEFF}/u', '', $line);\n        $line = str_replace([\"\\xEF\\xBB\\xBF\", \"\\xFEFF\", \"\\uFEFF\"], '', $line);\n        $line = preg_replace('/[\\x00-\\x1F\\x7F-\\x9F]/', '', $line);\n        \n        if (preg_match('/^bom/', $line)) continue;\n        $cols = array_map('trim', explode(',', $line));\n        if (($cols[0] ?? '') === $event_no) {\n            $event_data = [\n                'no' => $cols[0],\n                'name' => $cols[1],\n                'round_type' => $cols[2],\n                'round_num' => $cols[3],\n                'recall_count' => intval($cols[4] ?? 0), // 5th column (index 4) is recall count\n                'dances' => []\n            ];\n            for ($i = 6; $i <= 10; $i++) {\n                if (!empty($cols[$i])) $event_data['dances'][] = $cols[$i];\n            }\n            break;\n        }\n    }\n}\n\n// Load players\nif (file_exists($players_file)) {\n    $lines = file($players_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    foreach ($lines as $line) {\n        // Remove BOM from line - multiple methods\n        $line = preg_replace('/\\x{FEFF}/u', '', $line);\n        $line = str_replace([\"\\xEF\\xBB\\xBF\", \"\\xFEFF\", \"\\uFEFF\"], '', $line);\n        $line = preg_replace('/[\\x00-\\x1F\\x7F-\\x9F]/', '', $line);\n        $line = trim($line);\n        if ($line && is_numeric($line)) {\n            $players[] = $line;\n        }\n    }\n}\n\n// Load round information\nif (file_exists($round_info_file)) {\n    $round_info = json_decode(file_get_contents($round_info_file), true);\n}\n\n// Determine if this is a final round\n$is_final = false;\n$round_display = '';\n\nif ($round_info && isset($round_info['round_info'])) {\n    // Try both string and numeric keys\n    $round_display = $round_info['round_info'][$event_no] ?? $round_info['round_info'][intval($event_no)] ?? '';\n    $is_final = ($round_display === 'Final' || stripos($round_display, 'Final') !== false);\n    error_log(\"After round_info check: is_final = \" . ($is_final ? 'true' : 'false'));\n} elseif ($event_data && isset($event_data['round_type'])) {\n    $round_display = $event_data['round_type'];\n    $is_final = ($round_display === 'Final' || stripos($event_data['round_type'], 'Final') !== false);\n    error_log(\"After event_data check: is_final = \" . ($is_final ? 'true' : 'false'));\n}\n\n// Fallback: Check if this is a known final event\nif (!$is_final) {\n    $known_final_events = ['8', '9', '39', '28', '75', '74']; // Known final events from round_info.json\n    if (in_array($event_no, $known_final_events)) {\n        $is_final = true;\n        $round_display = 'Final';\n        error_log(\"After fallback check: is_final = \" . ($is_final ? 'true' : 'false'));\n    }\n}\n\nerror_log(\"Final is_final value: \" . ($is_final ? 'true' : 'false'));\n\n// Force final for event 8 for testing\nif ($event_no === '8') {\n    $is_final = true;\n    $round_display = 'Final';\n    error_log(\"Forced is_final to true for event 8\");\n}\n\n// Additional debug\nerror_log(\"Final check - Event: $event_no, is_final: \" . ($is_final ? 'true' : 'false'));\n\n\n// Load hits data if exists\n$hits_file = \"$data_dir/players_hits_$event_no.json\";\nif (file_exists($hits_file)) {\n    $hits_data = json_decode(file_get_contents($hits_file), true);\n}\n\n// Load existing selections for all dances\n$existing_selections = [];\nif ($event_data && isset($event_data['dances'])) {\n    $existing_selections = loadExistingSelections($comp_id, $event_no, $_SESSION['scoring_judge_id'], $event_data['dances']);\n}\n\n// Load saved scores\n$saved_scores = null;\n$judge_id = $_SESSION['scoring_judge_id'] ?? 'unknown';\n\nif ($is_final) {\n    // Load final round scores - check individual dance files for this judge\n    $adj_files = glob(\"$data_dir/{$event_no}_*.adj\");\n    \n    // Also check for files with different event numbers but same judge (for compatibility)\n    $compat_files = glob(\"$data_dir/*_*_{$judge_id}.adj\");\n    $adj_files = array_merge($adj_files, $compat_files);\n    \n    // Debug: Log found files\n    error_log(\"Found adj files: \" . implode(', ', $adj_files));\n    $final_scores = [];\n    $saved_rankings = []; // Store actual ranking data for UI restoration\n    \n    foreach ($adj_files as $file) {\n        $filename = basename($file);\n        if (preg_match('/^(\\d+)_(.+)_(\\d+)\\.adj$/', $filename, $matches)) {\n            $file_event = $matches[1];\n            $file_dance = $matches[2];\n            $file_judge_id = $matches[3];\n            \n            // Check if this is for current judge and current event (or compatible event)\n            if ($file_judge_id === $judge_id && ($file_event === $event_no || $file_event === '1')) {\n                error_log(\"Loading file: $filename for dance: $file_dance\");\n                $final_scores[$file_dance] = true; // This judge has submitted for this dance\n                \n                // Load actual ranking data for UI restoration\n                $lines = file($file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n                $rankings = [];\n                \n                foreach ($lines as $line) {\n                    $line = trim($line);\n                    if (empty($line)) continue;\n                    \n                    if (strpos($line, ',') !== false) {\n                        // New format: player,rank\n                        list($player, $rank) = explode(',', $line, 2);\n                        $player = trim($player, '\"');\n                        $rank = intval(trim($rank));\n                        if (is_numeric($player) && $rank > 0) {\n                            $rankings[$rank] = $player;\n                        }\n        } else {\n                        // Old format: just player numbers (convert to rank 1,2,3...)\n                        $player = trim($line, '\"');\n                        if (is_numeric($player)) {\n                            $rankings[count($rankings) + 1] = $player;\n                        }\n                    }\n                }\n                \n                if (!empty($rankings)) {\n                    $saved_rankings[$file_dance] = $rankings;\n                }\n            }\n        }\n    }\n    \n    if (!empty($final_scores)) {\n        $saved_scores = $final_scores;\n    }\n    \n    // Debug: Log saved rankings\n    error_log(\"Judge ID: $judge_id, Event: $event_no, Saved rankings: \" . json_encode($saved_rankings));\n} else {\n    // Load recall scores for this judge\n    $adj_files = glob(\"$data_dir/{$event_no}_*.adj\");\n    $recall_scores = [];\n    \n    foreach ($adj_files as $file) {\n        $filename = basename($file);\n        if (preg_match('/^(\\d+)_(.+)_(\\d+)\\.adj$/', $filename, $matches)) {\n            $file_dance = $matches[2];\n            $file_judge_id = $matches[3];\n            \n            if ($file_judge_id === $judge_id) {\n                $lines = file($file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n                $players = [];\n                \n    foreach ($lines as $line) {\n                    $line = trim($line, '\"');\n                    if ($line && is_numeric($line)) {\n                        $players[] = $line;\n                    }\n                }\n                \n                $recall_scores[$file_dance] = $players;\n            }\n        }\n    }\n    \n    if (!empty($recall_scores)) {\n        $saved_scores = $recall_scores;\n    }\n}\n\nif (!$event_data || empty($players)) {\n    echo \"<h1>\" . $t['no_data'] . \"</h1>\";\n    echo \"<p>comp_id: '$comp_id', event_no: '$event_no'</p>\";\n    echo \"<p>runorder_file: \" . (file_exists($runorder_file) ? 'exists' : 'not found') . \"</p>\";\n    echo \"<p>players_file: \" . (file_exists($players_file) ? 'exists' : 'not found') . \"</p>\";\n    exit;\n}\n\nfunction h($s) { return htmlspecialchars($s ?? ''); }\n?>\n<!DOCTYPE html>\n<html lang=\"<?=h($lang)?>\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title><?=h($t['title'])?> | <?=h($event_data['name'])?></title>\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\n    <style>\n        body { background:#1a1a1a; font-family:sans-serif; margin:0; padding:2px;}\n        .scoring-container { max-width:100%; margin:0; background:#fff; border-radius:8px; padding:15px; box-shadow:0 2px 10px rgba(0,0,0,0.3);}\n        h1 { color:#003399; margin-bottom:20px; text-align:center;}\n        .event-info { background:#f0f4ff; padding:15px; border-radius:8px; margin-bottom:20px; text-align:center;}\n        .event-info h2 { margin:0 0 10px 0; color:#0d2c96;}\n        .event-info p { margin:5px 0; color:#333;}\n        .adjudicator-section { margin-bottom:10px;}\n        .adjudicator-header { background:#003399; color:#fff; padding:10px 15px; border-radius:6px 6px 0 0; font-weight:bold;}\n        .scoring-table { width:100%; border-collapse:collapse; background:#fff; border:1px solid #ddd;}\n        .scoring-table th, .scoring-table td { padding:12px 8px; text-align:center; border:1px solid #ddd;}\n        .scoring-table th { background:#f8f9fa; font-weight:bold; color:#333;}\n        .scoring-table tr:nth-child(even) { background:#f8f9fa;}\n        .place-input { width:60px; padding:8px; border:2px solid #ddd; border-radius:4px; text-align:center; font-size:16px; font-weight:bold;}\n        .place-input:focus { border-color:#003399; outline:none;}\n        .couple-info { text-align:left; font-weight:bold; color:#333;}\n        .submit-section { text-align:center; margin-top:30px;}\n        .submit-btn { background:#03C75A; color:#fff; border:none; padding:15px 30px; font-size:16px; font-weight:bold; border-radius:8px; cursor:pointer; margin:0 10px;}\n        .submit-btn:hover { background:#00BFAE;}\n        .clear-btn { background:#FF6B35; color:#fff; border:none; padding:15px 30px; font-size:16px; font-weight:bold; border-radius:8px; cursor:pointer; margin:0 10px;}\n        .clear-btn:hover { background:#E55A2B;}\n        .warning { background:#fff3cd; border:1px solid #ffeaa7; color:#856404; padding:10px; border-radius:4px; margin-bottom:20px;}\n        .error { background:#f8d7da; border:1px solid #f5c6cb; color:#721c24; padding:10px; border-radius:4px; margin-bottom:20px;}\n        .success { background:#d4edda; border:1px solid #c3e6cb; color:#155724; padding:10px; border-radius:4px; margin-bottom:20px;}\n        .rules-info { background:#e7f3ff; border:1px solid #b3d9ff; color:#004085; padding:15px; border-radius:6px; margin-bottom:20px;}\n        .rules-info h3 { margin:0 0 10px 0; color:#003399;}\n        .rules-info ul { margin:10px 0; padding-left:20px;}\n        .rules-info li { margin:5px 0;}\n        \n        /* Final Round Styles - Touch-based System */\n        .final-scoring-container {\n            display: flex;\n            gap: 15px;\n            padding: 15px;\n            background: #fff;\n            border: 3px solid #003399;\n            border-radius: 8px;\n            min-height: 450px;\n            box-shadow: 0 4px 12px rgba(0, 51, 153, 0.15);\n        }\n        \n        .players-column, .ranking-column {\n            flex: 1;\n            background: #f8f9fa;\n            border: 2px solid #e9ecef;\n            border-radius: 8px;\n            padding: 12px;\n            box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n            display: flex;\n            flex-direction: column;\n        }\n        \n        .players-column h3, .ranking-column h3 {\n            margin: 0 0 8px 0;\n            color: #333;\n            font-size: 16px;\n            text-align: center;\n            padding-bottom: 6px;\n            border-bottom: 2px solid #003399;\n        }\n        \n        .players-list,         .ranking-list {\n            display: flex;\n            flex-direction: column;\n            gap: 12px; /* Increased gap for better spacing */\n            flex: 1;\n            overflow-y: auto;\n            padding-left: 10px; /* Add left padding for rank labels */\n        }\n        \n        .player-item {\n            background: #003399;\n            color: #fff;\n            padding: 16px 12px; /* Reduced horizontal padding */\n            border-radius: 8px;\n            text-align: center;\n            font-size: 18px; /* Slightly smaller font */\n            font-weight: bold;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            user-select: none;\n            min-height: 60px;\n            height: 60px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n        }\n        \n        .player-item:hover {\n            background: #002266;\n            transform: translateY(-2px);\n            box-shadow: 0 4px 8px rgba(0,0,0,0.2);\n        }\n        \n        .player-item.selected {\n            background: #28a745;\n            transform: scale(1.05);\n            box-shadow: 0 6px 12px rgba(40, 167, 69, 0.3);\n        }\n        \n        .player-item.assigned {\n            opacity: 0.3;\n            background: #6c757d;\n            cursor: not-allowed;\n        }\n        \n        .ranking-slot {\n            background: #fff;\n            border: 2px solid #ddd;\n            border-radius: 8px;\n            padding: 16px 12px; /* Reduced horizontal padding */\n            text-align: center;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            min-height: 60px;\n            height: 60px;\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            justify-content: center;\n            position: relative;\n            margin-left: 20px; /* Add left margin for rank label */\n        }\n        \n        .ranking-slot::before {\n            content: attr(data-rank) \"위\";\n            position: absolute;\n            top: 50%;\n            left: -15px;\n            transform: translateY(-50%);\n            background: #003399;\n            color: #fff;\n            padding: 4px 8px;\n            border-radius: 12px;\n            font-size: 12px;\n            font-weight: bold;\n            z-index: 10;\n            white-space: nowrap;\n            box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n        }\n        \n        .ranking-slot:hover {\n            border-color: #003399;\n            background: #f8f9ff;\n        }\n        \n        .ranking-slot.assigned {\n            border-color: #28a745;\n            background: #f8fff9;\n            cursor: pointer;\n        }\n        \n        .ranking-slot.assigned:hover {\n            border-color: #dc3545;\n            background: #fff5f5;\n        }\n        \n        .ranking-slot.assigned:hover .player-assigned {\n            color: #dc3545;\n        }\n        \n        .ranking-slot.dragging {\n            opacity: 0.5;\n            transform: rotate(5deg);\n            border-color: #ffc107;\n            background: #fff3cd;\n        }\n        \n        .ranking-slot.drag-over {\n            border-color: #007bff;\n            background: #e3f2fd;\n            transform: scale(1.05);\n        }\n        \n        .player-assigned {\n            font-size: 20px;\n            font-weight: bold;\n            color: #28a745;\n            min-height: 24px;\n        }\n        \n        .final-actions {\n            text-align: center;\n            margin-top: 20px;\n            padding: 20px;\n        }\n        \n        /* Dance Progress Styles for Final Round */\n        .dance-progress-header .dance-progress {\n            display: flex;\n            justify-content: center;\n            gap: 10px;\n            flex-wrap: wrap;\n        }\n        \n        .dance-step {\n            padding: 8px 16px;\n            border-radius: 20px;\n            font-size: 14px;\n            font-weight: bold;\n            transition: all 0.3s ease;\n            cursor: pointer;\n            border: 2px solid #ddd;\n            background: #fff;\n            color: #666;\n        }\n        \n        .dance-step.current {\n            background: #003399;\n            color: #fff;\n            border-color: #003399;\n        }\n        \n        .dance-step.completed {\n            background: #28a745;\n            color: #fff;\n            border-color: #28a745;\n        }\n        \n        .dance-step.pending {\n            background: #f8f9fa;\n            color: #6c757d;\n            border-color: #dee2e6;\n        }\n        \n        .dance-step:hover:not(.pending) {\n            transform: translateY(-2px);\n            box-shadow: 0 4px 8px rgba(0,0,0,0.2);\n        }\n        \n        .btn {\n            padding: 12px 24px;\n            border: none;\n            border-radius: 6px;\n            cursor: pointer;\n            font-size: 14px;\n            font-weight: 600;\n            transition: all 0.2s;\n            margin: 5px;\n        }\n        \n        .btn-primary {\n            background: #003399;\n            color: #fff;\n        }\n        \n        .btn-primary:hover {\n            background: #002266;\n        }\n        \n        .btn-secondary {\n            background: #6c757d;\n            color: #fff;\n        }\n        \n        .btn-secondary:hover {\n            background: #545b62;\n        }\n        \n        /* Instagram Style Dance Container */\n        .dance-container { position: relative; overflow: hidden; }\n        \n        .dance-progress {\n    display: flex;\n    align-items: center;\n            margin-bottom: 20px;\n            padding: 0 20px;\n        }\n        \n        .progress-bar {\n            flex: 1;\n            height: 6px;\n            background: #e0e0e0;\n            border-radius: 3px;\n            margin-right: 15px;\n            overflow: hidden;\n        }\n        \n        .progress-fill {\n            height: 100%;\n            background: linear-gradient(90deg, #4CAF50, #2e7d32);\n            border-radius: 3px;\n            transition: width 0.3s ease;\n        }\n        \n        .progress-text {\n            font-size: 14px;\n            font-weight: bold;\n            color: #666;\n            white-space: nowrap;\n        }\n        \n        .dance-slider {\n    display: flex;\n            transition: transform 0.3s ease;\n        }\n        \n        .dance-page {\n            min-width: 100%;\n            padding: 0 20px;\n            box-sizing: border-box;\n        }\n        \n        .dance-header { \n            background:#4CAF50; \n            color:#fff; \n            padding:10px; \n            border-radius:6px; \n            margin-bottom:15px; \n            text-align:center;\n        }\n        .dance-header h3 { margin:0 0 5px 0; font-size:16px;}\n        .dance-header p { margin:0; font-size:12px; opacity:0.9;}\n        \n        /* Heat section styles */\n        .heat-section { margin-bottom:15px; padding:10px; background:#fff; border-radius:6px; border:1px solid #ddd;}\n        .heat-section h4 { margin:0 0 10px 0; color:#333; font-size:14px; text-align:center;}\n        \n        /* Players grid styles - Mobile optimized */\n        .players-grid { \n            display:grid; \n            grid-template-columns:repeat(auto-fill, minmax(60px, 1fr)); \n            gap:4px; \n            margin-bottom:15px;\n        }\n        .player-card { \n            background:#fff; \n            border:2px solid #ddd; \n            border-radius:6px; \n            padding:6px 2px; \n            text-align:center; \n            cursor:pointer; \n            transition:all 0.3s ease;\n            position:relative;\n            min-height:50px;\n            display:flex;\n            flex-direction:column;\n            justify-content:center;\n            align-items:center;\n        }\n        .player-card:hover { \n            border-color:#4CAF50; \n            transform:translateY(-2px); \n            box-shadow:0 4px 8px rgba(0,0,0,0.15);\n        }\n        .player-card.selected { \n            border-color:#4CAF50; \n            background:linear-gradient(135deg, #e8f5e8, #c8e6c9);\n            transform:scale(1.05);\n            box-shadow:0 6px 12px rgba(76, 175, 80, 0.3);\n        }\n        .player-number { \n            font-size:24px; \n            font-weight:900; \n            color:#333;\n            margin:0;\n            line-height:1;\n        }\n        .player-card.selected .player-number {\n            color:#2e7d32;\n        }\n        .recall-checkbox { \n            display:none; /* Hide checkbox, use card click instead */\n        }\n        \n        /* Recall status - Large and clear */\n        .recall-status { \n            text-align:center; \n            padding:15px; \n            background:#f0f0f0; \n            border-radius:8px; \n            font-weight:bold; \n            color:#333;\n            font-size:16px;\n            margin:15px 0;\n            border:2px solid #ddd;\n        }\n        .recall-status.complete { \n            background:linear-gradient(135deg, #d4edda, #c3e6cb); \n            color:#155724; \n            border:3px solid #28a745;\n            animation:pulse 2s infinite;\n        }\n        .recall-status.over { \n            background:linear-gradient(135deg, #f8d7da, #f5c6cb); \n            color:#721c24; \n            border:3px solid #dc3545;\n        }\n        .recall-status .selected-count {\n            font-size:24px;\n            font-weight:900;\n        }\n        \n        @keyframes pulse {\n            0% { transform: scale(1); }\n            50% { transform: scale(1.02); }\n            100% { transform: scale(1); }\n        }\n        \n        /* Drag and drop for final ranking */\n        .ranking-container { display:flex; flex-direction:column; gap:10px; margin:20px 0;}\n        .ranking-item { \n            display:flex; \n            align-items:center; \n            background:#fff; \n            border:2px solid #ddd; \n            border-radius:8px; \n            padding:15px; \n            cursor:move;\n            transition:all 0.3s ease;\n            user-select:none;\n        }\n        .ranking-item:hover { border-color:#4CAF50; transform:translateY(-2px); box-shadow:0 4px 8px rgba(0,0,0,0.1);}\n        .ranking-item.dragging { opacity:0.5; transform:rotate(5deg);}\n        .ranking-number { \n            background:#4CAF50; \n            color:#fff; \n            width:40px; \n            height:40px; \n            border-radius:50%; \n            display:flex; \n            align-items:center; \n            justify-content:center; \n            font-weight:bold; \n            margin-right:15px;\n            flex-shrink:0;\n        }\n        .ranking-player { \n            flex:1; \n            font-size:18px; \n            font-weight:bold; \n            color:#333;\n        }\n        .ranking-place-input { \n            width:60px; \n            padding:8px; \n            border:2px solid #ddd; \n            border-radius:4px; \n            text-align:center; \n            font-size:16px; \n            font-weight:bold;\n            margin-left:15px;\n        }\n        .ranking-place-input:focus { border-color:#4CAF50; outline:none;}\n        \n        /* Fixed Progress Bar for Mobile */\n        .fixed-progress {\n            position: fixed;\n            top: 0;\n            left: 0;\n            right: 0;\n            background: linear-gradient(135deg, #ff9800, #ff5722);\n            color: white;\n            padding: 12px 20px;\n            text-align: center;\n            font-size: 18px;\n            font-weight: bold;\n            z-index: 1000;\n            box-shadow: 0 2px 10px rgba(0,0,0,0.3);\n            transform: translateY(-100%);\n            transition: transform 0.3s ease;\n        }\n        .fixed-progress.show {\n            transform: translateY(0);\n        }\n        .fixed-progress.complete {\n            background: linear-gradient(135deg, #4CAF50, #2e7d32);\n        }\n        .fixed-progress.over {\n            background: linear-gradient(135deg, #f44336, #d32f2f);\n        }\n        \n        /* Add top padding to body when progress bar is shown */\n        body.progress-bar-visible {\n            padding-top: 60px;\n        }\n        \n        /* Bottom Navigation */\n        .bottom-nav {\n            position: fixed;\n            bottom: 0;\n            left: 0;\n            right: 0;\n            background: #fff;\n            border-top: 2px solid #e0e0e0;\n            padding: 10px 20px;\n            display: flex;\n            justify-content: space-around;\n    align-items: center;\n            z-index: 1000;\n            box-shadow: 0 -2px 10px rgba(0,0,0,0.1);\n        }\n        \n        .nav-button {\n            background: #f5f5f5;\n            color: #333;\n            border: none;\n            padding: 12px 20px;\n            border-radius: 8px;\n            cursor: pointer;\n            font-size: 14px;\n            font-weight: bold;\n            transition: all 0.3s ease;\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            gap: 4px;\n            min-width: 80px;\n        }\n        \n        .nav-button:hover {\n            background: #e0e0e0;\n            transform: translateY(-2px);\n        }\n        \n        .nav-button.primary {\n            background: #2196F3;\n            color: #fff;\n        }\n        \n        .nav-button.primary:hover {\n            background: #1976D2;\n        }\n        \n        .nav-icon {\n            font-size: 18px;\n        }\n        \n        .nav-text {\n            font-size: 12px;\n        }\n        \n        /* Add bottom padding to body for navigation */\n        body {\n            padding-bottom: 80px;\n        }\n        \n        /* Tablet responsive - Optimized for tablet screens */\n        @media (min-width: 769px) and (max-width: 1024px) {\n            .event-info {\n                padding: 3px !important;\n                margin-bottom: 2px !important;\n            }\n            \n            .event-info h1 {\n                font-size: 16px !important;\n                margin-bottom: 1px !important;\n            }\n            \n            .event-info p {\n                font-size: 11px !important;\n            }\n            \n            .saved-scores-info {\n                padding: 4px !important;\n                margin-bottom: 6px !important;\n            }\n            \n            .saved-scores-info h3 {\n                font-size: 12px !important;\n                margin-bottom: 2px !important;\n            }\n            \n            .dance-progress-header {\n                padding: 3px !important;\n                margin-bottom: 4px !important;\n            }\n            \n            .dance-progress-header h3 {\n                font-size: 12px !important;\n                margin-bottom: 1px !important;\n            }\n            \n            .final-scoring-container {\n                gap: 10px;\n                padding: 10px;\n                min-height: 380px;\n            }\n            \n            .players-column, .ranking-column {\n                padding: 8px;\n            }\n            \n            .players-column h3, .ranking-column h3 {\n                font-size: 14px;\n                margin-bottom: 6px;\n            }\n            \n            .players-list, .ranking-list {\n                gap: 8px;\n            }\n            \n            .player-item, .ranking-slot {\n                padding: 12px 16px;\n                font-size: 16px;\n                min-height: 50px;\n                height: 50px;\n            }\n            \n            .ranking-slot::before {\n                font-size: 10px;\n                padding: 2px 6px;\n            }\n        }\n        \n        /* Mobile responsive - Optimized for touch */\n        @media (max-width: 768px) {\n            .final-scoring-container {\n                flex-direction: row; /* 좌우 배치 유지 */\n                gap: 10px;\n                padding: 10px;\n                min-height: 400px;\n            }\n            \n            .players-column, .ranking-column {\n                min-height: 350px;\n                flex: 1;\n            }\n            \n            .player-item, .ranking-slot {\n                padding: 12px;\n                font-size: 16px;\n                min-height: 45px;\n                height: 45px;\n            }\n            \n            .ranking-slot::before {\n                font-size: 10px;\n                padding: 2px 6px;\n                top: 50%;\n                left: -12px;\n                transform: translateY(-50%);\n            }\n            \n            .ranking-slot {\n                margin-left: 15px; /* Smaller margin for mobile */\n            }\n            \n            .player-assigned {\n                font-size: 16px;\n            }\n            \n            .players-grid { \n                grid-template-columns:repeat(auto-fill, minmax(50px, 1fr)); \n                gap:4px;\n                margin-bottom:10px;\n            }\n            .player-card { \n                padding:4px 2px;\n                min-height:45px;\n                border-width:2px;\n            }\n            .player-number { \n                font-size:20px;\n            }\n            .dance-header h3 { \n                font-size:14px;\n            }\n            .dance-header p {\n                font-size:12px;\n            }\n            .recall-status {\n                padding:15px;\n                font-size:16px;\n                margin:15px 0;\n            }\n            .recall-status .selected-count {\n                font-size:20px;\n            }\n            .ranking-item { \n                padding:10px;\n                flex-direction:column;\n                gap:8px;\n            }\n            .ranking-number { \n                width:35px; \n                height:35px; \n                margin-right:0;\n                margin-bottom:5px;\n            }\n            .ranking-player { \n                font-size:16px;\n                text-align:center;\n            }\n            .ranking-place-input {\n                width:50px;\n                margin-left:0;\n            }\n        }\n        \n        @media (max-width: 480px) {\n            .players-grid { \n                grid-template-columns:repeat(auto-fill, minmax(55px, 1fr)); \n                gap:5px;\n            }\n            .player-card { \n                padding:5px 2px;\n                min-height:45px;\n            }\n            .player-number { \n                font-size:22px;\n            }\n            .recall-status {\n                padding:12px;\n                font-size:14px;\n            }\n            .recall-status .selected-count {\n                font-size:18px;\n            }\n        }\n    </style>\n</head>\n<body>\n<div class=\"scoring-container\">\n    <?php \n    // Determine scoring type and recall count\n    $is_final = false;\n    $is_preliminary = false;\n    $recall_count = $event_data['recall_count'] ?? 0;\n    \n    if ($round_info && isset($round_info[$event_no])) {\n        $round_display = $round_info[$event_no]['round_display'] ?? '';\n        $is_final = (strpos($round_display, 'Final') !== false);\n        $is_preliminary = !$is_final;\n    } else {\n        // Fallback to old system\n        $is_final = (strpos($event_data['round_type'], 'Final') !== false);\n        $is_preliminary = !$is_final;\n    }\n    ?>\n\n    <!-- Judge Info and Recall in One Line -->\n    <div style=\"margin-bottom:15px; text-align:center; padding:10px; background:#f8f9fa; border-radius:6px;\">\n        <div style=\"display:flex; justify-content:space-between; align-items:center; flex-wrap:wrap; gap:10px;\">\n            <div style=\"font-size:14px; font-weight:bold; color:#333;\">\n                #<?=h($_SESSION['scoring_judge_id'])?> <?=h($_SESSION['scoring_judge_name'])?>(<?=h($_SESSION['scoring_judge_country'])?>)\n            </div>\n            <?php if (!$is_final && $event_no !== '8'): ?>\n            <div style=\"font-size:16px; font-weight:bold; color:#ff9800;\">\n                Recall <span id=\"recallProgress\">0</span> / <?= $recall_count ?>\n            </div>\n            <?php endif; ?>\n        </div>\n    </div>\n    \n    \n            <div class=\"event-info\" style=\"display:flex; justify-content:space-between; align-items:center; margin-bottom:2px; padding:4px; background:#f8f9fa; border-radius:4px;\">\n        <div style=\"flex:1;\">\n            <h1 style=\"margin:0 0 2px 0; color:#333; font-size:18px; font-weight:bold;\"><?=h($event_data['name'])?></h1>\n            <?php \n            // Get round display\n            $round_display = '';\n            if ($round_info && isset($round_info['round_info'][$event_no])) {\n                $round_display = $round_info['round_info'][$event_no] ?? '';\n            } else {\n                $round_display = trim($event_data['round_type'] . ' ' . $event_data['round_num']);\n            }\n            \n            // Get dance names\n            $dance_names = getDanceNames($event_data['dances'], $dance_mapping);\n            ?>\n            <p style=\"margin:0; font-size:12px; color:#666;\">\n                <?=h($round_display)?> (<?=h(implode(',', $dance_names))?>) | <?=count($players)?> couples<?php if ($hits_data && !empty($hits_data)): ?> / <?=count($hits_data)?> heats<?php endif; ?>\n            </p>\n                    </div>\n        <div style=\"text-align:right; font-size:11px; color:#666;\">\n            <div style=\"font-weight:bold; color:#2e7d32;\">\n                <?php if ($saved_scores): ?>\n                    <?= implode(', ', array_keys($saved_scores)) ?>\n                <?php else: ?>\n                    없음\n                <?php endif; ?>\n                    </div>\n        </div>\n                    </div>\n\n    \n\n    <div id=\"message\"></div>\n    \n    <!-- Fixed Progress Bar for Mobile (Preliminary/Recall only) -->\n    <?php if (!$is_final && $event_no !== '8'): ?>\n    <div id=\"fixedProgress\" class=\"fixed-progress\">\n        Recall <span id=\"fixedRecallCount\">0</span> / <?= $recall_count ?>\n                    </div>\n    <?php endif; ?>\n    \n\n    <form id=\"scoringForm\">\n        <input type=\"hidden\" name=\"comp_id\" value=\"<?=h($comp_id)?>\">\n        <input type=\"hidden\" name=\"event_no\" value=\"<?=h($event_no)?>\">\n        <input type=\"hidden\" name=\"is_final\" value=\"<?= $is_final ? '1' : '0' ?>\">\n        <input type=\"hidden\" name=\"recall_count\" value=\"<?= $recall_count ?>\">\n        \n        <?php if ($is_final || $event_no === '8'): ?>\n            <!-- Final Round - Touch-based Ranking System -->\n        <div class=\"adjudicator-section\">\n            <!-- Dance Progress Header -->\n            <div class=\"dance-progress-header\" id=\"danceProgressHeader\" style=\"display:flex; justify-content:flex-end; align-items:center; background: #f8f9fa; padding: 4px; border-radius: 4px; margin-bottom: 4px;\">\n                <div style=\"display:flex; align-items:center; gap:10px;\">\n                    <div class=\"dance-progress\" id=\"danceProgress\">\n                        <!-- Dance progress will be populated by JavaScript -->\n                    </div>\n                    <div id=\"currentDanceDisplay\" style=\"font-size: 12px; font-weight: bold; color: #003399;\">\n                        <!-- Current dance will be displayed here -->\n                    </div>\n                </div>\n            </div>\n            \n            <p style=\"text-align:center; color:#666; margin:2px 0; font-size:11px;\">\n                💡 등번호 터치 → 등위 빈칸 터치 | 🔄 순위 변경: 기존 순위 터치/드래그 | ❌ 취소: 배정된 등번호 재터치\n            </p>\n                \n                <div class=\"final-scoring-container\" style=\"margin-top: 0;\">\n                    <div class=\"players-column\">\n                        <h3>선수 목록</h3>\n                        <div class=\"players-list\" id=\"playersList\">\n                            <?php foreach ($players as $player_no): ?>\n                            <div class=\"player-item\" data-player=\"<?=h($player_no)?>\" onclick=\"selectPlayer(this)\">\n                                <?=h($player_no)?>\n                </div>\n                <?php endforeach; ?>\n                </div>\n                    </div>\n                    \n                    <div class=\"ranking-column\">\n                        <h3>순위</h3>\n                        <div class=\"ranking-list\" id=\"rankingList\">\n                            <?php for ($i = 1; $i <= count($players); $i++): ?>\n                            <div class=\"ranking-slot\" data-rank=\"<?=$i?>\" onclick=\"assignRank(this)\" \n                                 ondblclick=\"swapWithNext(this)\" \n                                 draggable=\"true\" ondragstart=\"dragStart(event)\" ondragover=\"dragOver(event)\" \n                                 ondrop=\"drop(event)\" ondragend=\"dragEnd(event)\"\n                                 onmousedown=\"handleMouseDown(event)\" onmouseup=\"handleMouseUp(event)\">\n                                <span class=\"player-assigned\" id=\"player-<?=$i?>\"></span>\n                                <input type=\"hidden\" name=\"final_ranking[<?=$i?>]\" id=\"input-<?=$i?>\" value=\"\">\n                            </div>\n                            <?php endfor; ?>\n                        </div>\n                    </div>\n                </div>\n                \n                <div class=\"final-actions\">\n                    <button type=\"button\" id=\"saveFinalScores\" class=\"btn btn-primary\">\n                        점수 저장\n                    </button>\n                    <button type=\"button\" id=\"nextFinalDance\" class=\"btn btn-secondary\" style=\"display:none;\">\n                        다음 종목\n                    </button>\n                    <button type=\"button\" id=\"clearFinalScores\" class=\"btn btn-secondary\">\n                        초기화\n                    </button>\n                </div>\n            </div>\n            <?php else: ?>\n            <!-- Preliminary Round - Instagram Style Dance by Dance System -->\n            <div class=\"dance-container\">\n                <div class=\"dance-progress\">\n                    <div class=\"progress-bar\">\n                        <div class=\"progress-fill\" style=\"width: 0%\"></div>\n                    </div>\n                    <div class=\"progress-text\">\n                        <span class=\"current-dance\">1</span> / <?= count($event_data['dances']) ?>\n                    </div>\n                </div>\n                \n                <div class=\"dance-slider\" id=\"danceSlider\">\n                    <?php foreach ($event_data['dances'] as $dance_index => $dance): ?>\n                        <?php \n                        $dance_display = isset($dance_mapping[$dance]) ? $dance_mapping[$dance] : $dance;\n                        ?>\n                        <div class=\"dance-page\" data-dance=\"<?=h($dance)?>\" data-dance-index=\"<?=$dance_index?>\">\n                            <div class=\"dance-header\">\n                                <h3><?=h($dance_display)?></h3>\n                                <p>총 <?=count($players)?>명 중 <?= $recall_count ?>명 선택</p>\n                            </div>\n                            \n                            <?php if ($hits_data && !empty($hits_data)): ?>\n                                <!-- Heat-based display -->\n                                <?php foreach ($hits_data as $heat_no => $heat_players): ?>\n                                    <div class=\"heat-section\">\n                                        <h4>히트 <?= $heat_no ?></h4>\n                                        <div class=\"players-grid\">\n                                            <?php foreach ($heat_players as $player_no): ?>\n                                                <div class=\"player-card\" data-player=\"<?=h($player_no)?>\">\n                                                    <div class=\"player-number\"><?=h($player_no)?></div>\n                                                    <input type=\"checkbox\" \n                                                           name=\"recall_marks[<?=h($dance)?>][<?=h($player_no)?>]\" \n                                                           class=\"recall-checkbox\"\n                                                           data-dance=\"<?=h($dance)?>\"\n                                                           data-player=\"<?=h($player_no)?>\">\n                                                </div>\n                                            <?php endforeach; ?>\n                                        </div>\n                                    </div>\n                                <?php endforeach; ?>\n                            <?php else: ?>\n                                <!-- No heats - all players together -->\n                                <div class=\"players-grid\">\n                                    <?php foreach ($players as $player_no): ?>\n                                        <div class=\"player-card\" data-player=\"<?=h($player_no)?>\">\n                                            <div class=\"player-number\"><?=h($player_no)?></div>\n                                            <input type=\"checkbox\" \n                                                   name=\"recall_marks[<?=h($dance)?>][<?=h($player_no)?>]\" \n                                                   class=\"recall-checkbox\"\n                                                   data-dance=\"<?=h($dance)?>\"\n                                                   data-player=\"<?=h($player_no)?>\">\n                                        </div>\n                                    <?php endforeach; ?>\n                                </div>\n            <?php endif; ?>\n                            \n                            <div class=\"recall-status\">\n                                <div style=\"font-size:20px; margin-bottom:5px;\">📊 Recall 진행 상황</div>\n                                <div style=\"font-size:28px; font-weight:900; color:#2e7d32;\">\n                                    <span class=\"selected-count\">0</span> / <?= $recall_count ?>명\n        </div>\n                                <div style=\"font-size:14px; margin-top:5px; opacity:0.8;\">\n                                    <?= $recall_count ?>명을 선택하면 전송할 수 있습니다\n    </div>\n                            </div>\n                            \n                            <div class=\"dance-submit-section\" style=\"text-align:center; margin-top:20px; display:none;\">\n                                <button type=\"button\" \n                                        class=\"dance-submit-btn\" \n                                        data-dance=\"<?=h($dance)?>\"\n                                        style=\"background:#4CAF50; color:#fff; border:none; padding:15px 30px; font-size:16px; font-weight:bold; border-radius:8px; cursor:pointer;\">\n                                    <?=h($dance_display)?> 전송\n                                </button>\n                            </div>\n                        </div>\n                    <?php endforeach; ?>\n                </div>\n                \n                <div class=\"dance-navigation\" style=\"text-align:center; margin-top:20px;\">\n                    <button type=\"button\" id=\"prevDance\" style=\"background:#666; color:#fff; border:none; padding:10px 20px; margin:0 10px; border-radius:5px; cursor:pointer; display:none;\">이전</button>\n                    <button type=\"button\" id=\"nextDance\" style=\"background:#2196F3; color:#fff; border:none; padding:10px 20px; margin:0 10px; border-radius:5px; cursor:pointer; display:none;\">다음</button>\n                </div>\n            </div>\n            <?php endif; ?>\n\n    </form>\n    </div>\n\n    <script>\ndocument.getElementById('scoringForm').addEventListener('submit', function(e) {\n    e.preventDefault();\n    \n    const formData = new FormData(this);\n    const isFinal = formData.get('is_final') === '1';\n    const recallCount = parseInt(formData.get('recall_count'));\n    \n    if (isFinal) {\n        // Final round - ranking system\n        handleFinalRound(formData);\n    } else {\n        // Preliminary round - recall system\n        handleRecallRound(formData, recallCount);\n    }\n});\n\nfunction handleFinalRound(formData) {\n    const adjudicatorMarks = {};\n    \n    // Collect all marks\n    const inputs = document.querySelectorAll('input[name^=\"adjudicator_marks\"]');\n    inputs.forEach(input => {\n        const name = input.name;\n        const matches = name.match(/adjudicator_marks\\[(\\d+)\\]\\[(\\d+)\\]/);\n        if (matches) {\n            const adjudicatorId = matches[1];\n            const coupleId = matches[2];\n            const place = parseInt(input.value);\n            \n            if (!isNaN(place) && place > 0) {\n                if (!adjudicatorMarks[adjudicatorId]) {\n                    adjudicatorMarks[adjudicatorId] = {};\n                }\n                adjudicatorMarks[adjudicatorId][coupleId] = place;\n            }\n        }\n    });\n    \n    // Validate that all places are filled and unique\n    const allPlaces = [];\n    let isValid = true;\n    let errorMessage = '';\n    \n    inputs.forEach(input => {\n        const place = parseInt(input.value);\n        if (isNaN(place) || place < 1 || place > <?=count($players)?>) {\n            isValid = false;\n            errorMessage = '모든 순위를 1부터 <?=count($players)?>까지 입력해주세요.';\n        } else {\n            if (allPlaces.includes(place)) {\n                isValid = false;\n                errorMessage = '같은 순위를 두 선수에게 줄 수 없습니다.';\n            }\n            allPlaces.push(place);\n        }\n    });\n    \n    if (!isValid) {\n        showMessage(errorMessage, 'error');\n        return;\n    }\n    \n    // Submit data\n    const submitData = {\n        comp_id: formData.get('comp_id'),\n        event_no: formData.get('event_no'),\n        type: 'final',\n        adjudicator_marks: adjudicatorMarks\n    };\n    \n    submitScores(submitData);\n}\n\nfunction handleRecallRound(formData, recallCount) {\n    const recallMarks = {};\n    let totalSelected = 0;\n    let isValid = true;\n    let errorMessage = '';\n    \n    // Collect recall marks for each dance\n    const danceSections = document.querySelectorAll('.dance-section');\n    danceSections.forEach(section => {\n        const dance = section.dataset.dance;\n        const checkboxes = section.querySelectorAll('.recall-checkbox:checked');\n        \n        recallMarks[dance] = [];\n        checkboxes.forEach(checkbox => {\n            recallMarks[dance].push(checkbox.dataset.player);\n        });\n        \n        totalSelected += checkboxes.length;\n    });\n    \n    // Check if total selected count matches recall count\n    if (totalSelected !== recallCount) {\n        isValid = false;\n        errorMessage = `전체 ${recallCount}명을 선택해주세요. (현재 ${totalSelected}명 선택됨)`;\n    }\n    \n    if (!isValid) {\n        showMessage(errorMessage, 'error');\n        return;\n    }\n    \n    // Submit data\n    const submitData = {\n        comp_id: formData.get('comp_id'),\n        event_no: formData.get('event_no'),\n        type: 'recall',\n        recall_marks: recallMarks\n    };\n    \n    submitScores(submitData);\n}\n\nfunction submitScores(submitData) {\n    fetch('scoring/save_scores.php', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(submitData)\n    })\n    .then(response => response.json())\n    .then(data => {\n        if (data.success) {\n            showMessage('점수가 성공적으로 저장되었습니다!', 'success');\n            if (data.results) {\n                showResults(data.results);\n            }\n        } else {\n            showMessage('저장 실패: ' + (data.error || '알 수 없는 오류'), 'error');\n        }\n    })\n    .catch(error => {\n        showMessage('오류가 발생했습니다: ' + error, 'error');\n    });\n}\n\nfunction clearAllScores() {\n    if (confirm('모든 점수를 지우시겠습니까?')) {\n        // Clear final round inputs\n        const inputs = document.querySelectorAll('.place-input');\n        inputs.forEach(input => input.value = '');\n        \n        // Clear recall checkboxes\n        const checkboxes = document.querySelectorAll('.recall-checkbox');\n        checkboxes.forEach(checkbox => {\n            checkbox.checked = false;\n            checkbox.closest('.player-card').classList.remove('selected');\n        });\n        \n        // Update recall status\n        updateRecallStatus();\n        \n        showMessage('모든 점수가 지워졌습니다.', 'success');\n    }\n}\n\n// Recall system event handlers\n    document.addEventListener('DOMContentLoaded', function() {\n    // Handle player card clicks - Touch optimized\n    document.querySelectorAll('.player-card').forEach(card => {\n        // Click event\n        card.addEventListener('click', function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            togglePlayerSelection(this);\n        });\n        \n        // Touch events for better mobile experience\n        card.addEventListener('touchstart', function(e) {\n            e.preventDefault();\n            this.style.transform = 'scale(0.95)';\n        });\n        \n        card.addEventListener('touchend', function(e) {\n            e.preventDefault();\n            this.style.transform = '';\n            togglePlayerSelection(this);\n        });\n        \n        // Prevent default touch behavior\n        card.addEventListener('touchmove', function(e) {\n            e.preventDefault();\n        });\n    });\n\n    // Handle checkbox changes\n    document.querySelectorAll('.recall-checkbox').forEach(checkbox => {\n        checkbox.addEventListener('change', function() {\n            updatePlayerCardState(this.closest('.player-card'));\n            updateRecallStatus();\n        });\n    });\n\n    // Initialize recall status\n    updateRecallStatus();\n    \n    // Initialize drag and drop for final ranking\n    initializeDragAndDrop();\n    \n    // Load saved scores\n    loadSavedScores();\n    \n    // Initialize fixed progress bar\n    initializeFixedProgress();\n});\n\nfunction initializeDragAndDrop() {\n    const container = document.getElementById('rankingContainer');\n    if (!container) return;\n    \n    let draggedElement = null;\n    \n    // Handle drag start\n    container.addEventListener('dragstart', function(e) {\n        if (e.target.classList.contains('ranking-item')) {\n            draggedElement = e.target;\n            e.target.classList.add('dragging');\n            e.dataTransfer.effectAllowed = 'move';\n        }\n    });\n    \n    // Handle drag end\n    container.addEventListener('dragend', function(e) {\n        if (e.target.classList.contains('ranking-item')) {\n            e.target.classList.remove('dragging');\n            draggedElement = null;\n        }\n    });\n    \n    // Handle drag over\n    container.addEventListener('dragover', function(e) {\n        e.preventDefault();\n        e.dataTransfer.dropEffect = 'move';\n        \n        const afterElement = getDragAfterElement(container, e.clientY);\n        if (afterElement == null) {\n            container.appendChild(draggedElement);\n        } else {\n            container.insertBefore(draggedElement, afterElement);\n        }\n    });\n    \n    // Handle drop\n    container.addEventListener('drop', function(e) {\n        e.preventDefault();\n        updateRankingNumbers();\n    });\n    \n    // Handle manual input changes\n    container.addEventListener('input', function(e) {\n        if (e.target.classList.contains('ranking-place-input')) {\n            updateRankingFromInputs();\n        }\n    });\n}\n\nfunction getDragAfterElement(container, y) {\n    const draggableElements = [...container.querySelectorAll('.ranking-item:not(.dragging)')];\n    \n    return draggableElements.reduce((closest, child) => {\n        const box = child.getBoundingClientRect();\n        const offset = y - box.top - box.height / 2;\n        \n        if (offset < 0 && offset > closest.offset) {\n            return { offset: offset, element: child };\n        } else {\n            return closest;\n        }\n    }, { offset: Number.NEGATIVE_INFINITY }).element;\n}\n\nfunction updateRankingNumbers() {\n    const container = document.getElementById('rankingContainer');\n    if (!container) return;\n    \n    const items = container.querySelectorAll('.ranking-item');\n    items.forEach((item, index) => {\n        const numberDiv = item.querySelector('.ranking-number');\n        const input = item.querySelector('.ranking-place-input');\n        \n        numberDiv.textContent = index + 1;\n        input.value = index + 1;\n        \n        // Update input name to reflect new position\n        const player = item.dataset.player;\n        input.name = `adjudicator_marks[${index + 1}][${player}]`;\n    });\n}\n\nfunction updateRankingFromInputs() {\n    const container = document.getElementById('rankingContainer');\n    if (!container) return;\n    \n    const items = Array.from(container.querySelectorAll('.ranking-item'));\n    const inputs = items.map(item => ({\n        element: item,\n        value: parseInt(item.querySelector('.ranking-place-input').value) || 0\n    }));\n    \n    // Sort by input value\n    inputs.sort((a, b) => a.value - b.value);\n    \n    // Reorder DOM elements\n    inputs.forEach((input, index) => {\n        container.appendChild(input.element);\n        \n        // Update visual number\n        const numberDiv = input.element.querySelector('.ranking-number');\n        numberDiv.textContent = index + 1;\n        \n        // Update input name\n        const player = input.element.dataset.player;\n        const inputElement = input.element.querySelector('.ranking-place-input');\n        inputElement.name = `adjudicator_marks[${index + 1}][${player}]`;\n    });\n}\n\nfunction loadSavedScores() {\n    <?php if ($saved_scores && !$is_final): ?>\n    // Load saved recall scores\n    const savedScores = <?= json_encode($saved_scores) ?>;\n    \n    Object.keys(savedScores).forEach(dance => {\n        const danceSection = document.querySelector(`[data-dance=\"${dance}\"]`);\n        if (!danceSection) return;\n        \n        const selectedPlayers = savedScores[dance];\n        selectedPlayers.forEach(playerNo => {\n            const checkbox = danceSection.querySelector(`input[data-player=\"${playerNo}\"]`);\n            if (checkbox) {\n                checkbox.checked = true;\n                updatePlayerCardState(checkbox.closest('.player-card'));\n            }\n        });\n    });\n\n    updateRecallStatus();\n    <?php endif; ?>\n}\n\nfunction initializeFixedProgress() {\n    const fixedProgress = document.getElementById('fixedProgress');\n    if (!fixedProgress) return;\n    \n    let isScrolling = false;\n    let scrollTimeout;\n    \n    // Show progress bar when scrolling down\n    window.addEventListener('scroll', function() {\n        if (!isScrolling) {\n            fixedProgress.classList.add('show');\n            document.body.classList.add('progress-bar-visible');\n        }\n        \n        isScrolling = true;\n        clearTimeout(scrollTimeout);\n        \n        scrollTimeout = setTimeout(function() {\n            isScrolling = false;\n            // Hide progress bar after scrolling stops (only if no selections)\n            const totalSelected = document.querySelectorAll('.recall-checkbox:checked').length;\n            if (totalSelected === 0) {\n                fixedProgress.classList.remove('show');\n                document.body.classList.remove('progress-bar-visible');\n            }\n        }, 1000);\n    });\n    \n    // Touch events for mobile\n    document.addEventListener('touchstart', function() {\n        fixedProgress.classList.add('show');\n        document.body.classList.add('progress-bar-visible');\n    });\n}\n\nfunction togglePlayerSelection(card) {\n    const checkbox = card.querySelector('.recall-checkbox');\n    checkbox.checked = !checkbox.checked;\n    updatePlayerCardState(card);\n    updateRecallStatus();\n    updateTopRecallStatus(); // Add this line\n}\n\nfunction updatePlayerCardState(card) {\n    const checkbox = card.querySelector('.recall-checkbox');\n    if (checkbox.checked) {\n        card.classList.add('selected');\n    } else {\n        card.classList.remove('selected');\n    }\n}\n\nfunction updateTopRecallStatus() {\n    // Get all checked checkboxes from all pages\n    const allCheckboxes = document.querySelectorAll('.recall-checkbox:checked');\n    const selectedCount = allCheckboxes.length;\n    const recallCount = <?= json_encode(intval($recall_count)) ?>;\n    \n    // Update top recall progress display\n    const topRecallProgress = document.getElementById('recallProgress');\n    if (topRecallProgress) {\n        topRecallProgress.textContent = selectedCount;\n        \n        // Update color based on progress\n        if (selectedCount === recallCount) {\n            topRecallProgress.style.color = '#4CAF50';\n            topRecallProgress.style.fontWeight = 'bold';\n        } else if (selectedCount > recallCount) {\n            topRecallProgress.style.color = '#f44336';\n            topRecallProgress.style.fontWeight = 'bold';\n        } else {\n            topRecallProgress.style.color = '#ff9800';\n            topRecallProgress.style.fontWeight = 'normal';\n        }\n    }\n    \n    // Update fixed progress bar\n    const fixedRecallCount = document.getElementById('fixedRecallCount');\n    if (fixedRecallCount) {\n        fixedRecallCount.textContent = selectedCount;\n    }\n    \n    // Update submit button state for current dance page\n    const currentPage = document.querySelector('.dance-page[data-dance-index=\"' + currentDanceIndex + '\"]');\n    if (currentPage) {\n        const submitSection = currentPage.querySelector('.dance-submit-section');\n        const submitBtn = currentPage.querySelector('.dance-submit-btn');\n        \n        if (submitSection && submitBtn) {\n            // Show/hide submit section based on selection count\n            if (selectedCount === recallCount) {\n                submitSection.style.display = 'block';\n                submitBtn.disabled = false;\n                submitBtn.style.opacity = '1';\n                submitBtn.style.cursor = 'pointer';\n            } else {\n                submitSection.style.display = 'none';\n                submitBtn.disabled = true;\n                submitBtn.style.opacity = '0.5';\n                submitBtn.style.cursor = 'not-allowed';\n            }\n        }\n    }\n}\n\nfunction updateRecallStatus() {\n    const currentPage = document.querySelector('.dance-page[data-dance-index=\"' + currentDanceIndex + '\"]');\n    \n    if (!currentPage) {\n        // Fallback: get all checked checkboxes from all pages\n        const allCheckboxes = document.querySelectorAll('.recall-checkbox:checked');\n        const selectedCount = allCheckboxes.length;\n        const recallCount = <?= json_encode(intval($recall_count)) ?>;\n        \n        // Update top recall progress display\n        const topRecallProgress = document.getElementById('recallProgress');\n        if (topRecallProgress) {\n            topRecallProgress.textContent = selectedCount;\n            \n            // Update color based on progress\n            if (selectedCount === recallCount) {\n                topRecallProgress.style.color = '#4CAF50';\n                topRecallProgress.style.fontWeight = 'bold';\n            } else if (selectedCount > recallCount) {\n                topRecallProgress.style.color = '#f44336';\n                topRecallProgress.style.fontWeight = 'bold';\n            } else {\n                topRecallProgress.style.color = '#ff9800';\n                topRecallProgress.style.fontWeight = 'normal';\n            }\n        }\n        return;\n    }\n    \n    const checkboxes = currentPage.querySelectorAll('.recall-checkbox:checked');\n    const selectedCount = checkboxes.length;\n    const recallCount = <?= json_encode(intval($recall_count)) ?>;\n    \n    // Top recall progress is handled by updateTopRecallStatus function\n    \n    // Update fixed progress bar\n    const fixedProgress = document.getElementById('fixedProgress');\n    if (fixedProgress) {\n        const progressText = fixedProgress.querySelector('#recallProgress');\n        if (progressText) {\n            progressText.textContent = selectedCount;\n        }\n        \n        // Update progress bar styling\n        fixedProgress.classList.remove('complete', 'over');\n        if (selectedCount === recallCount) {\n            fixedProgress.classList.add('complete');\n        } else if (selectedCount > recallCount) {\n            fixedProgress.classList.add('over');\n        }\n    }\n    \n    // Update current page status\n    const statusDiv = currentPage.querySelector('.recall-status');\n    const countSpan = statusDiv.querySelector('.selected-count');\n    const submitSection = currentPage.querySelector('.dance-submit-section');\n    \n    if (countSpan) {\n        countSpan.textContent = selectedCount;\n    }\n    \n    // Update status styling\n    statusDiv.classList.remove('complete', 'over');\n    if (selectedCount === recallCount) {\n        statusDiv.classList.add('complete');\n        if (submitSection) submitSection.style.display = 'block';\n    } else if (selectedCount > recallCount) {\n        statusDiv.classList.add('over');\n        if (submitSection) submitSection.style.display = 'none';\n    } else {\n        if (submitSection) submitSection.style.display = 'none';\n    }\n}\n\nfunction showMessage(message, type) {\n    const messageDiv = document.getElementById('message');\n    messageDiv.innerHTML = `<div class=\"${type}\">${message}</div>`;\n    setTimeout(() => {\n        messageDiv.innerHTML = '';\n    }, 5000);\n}\n\nfunction showResults(results) {\n    let resultsHtml = '<div class=\"success\"><h3>최종 결과 (Skating System 적용)</h3><ol>';\n    const sortedResults = Object.entries(results).sort((a, b) => a[1] - b[1]);\n    sortedResults.forEach(([coupleId, place]) => {\n        resultsHtml += `<li>선수 #${coupleId} - ${place}등</li>`;\n    });\n    resultsHtml += '</ol></div>';\n    document.getElementById('message').innerHTML = resultsHtml;\n}\n\n// Instagram Style Dance System\nlet currentDanceIndex = 0;\nlet totalDances = 0;\nlet completedDances = new Set();\nlet existingSelections = <?= json_encode($existing_selections) ?>;\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    const firstInput = document.querySelector('.place-input');\n    if (firstInput) {\n        firstInput.focus();\n    }\n    \n    // Initialize dance system if in preliminary round (not final)\n    <?php if (!$is_final && $event_no !== '8'): ?>\n    const danceSlider = document.getElementById('danceSlider');\n    if (danceSlider) {\n        initializeDanceSystem();\n    }\n    <?php endif; ?>\n    \n    // Setup fixed action buttons\n    setupFixedButtons();\n});\n\nfunction setupFixedButtons() {\n    // Dashboard button\n    const dashboardBtn = document.getElementById('dashboardBtn');\n    if (dashboardBtn) {\n        dashboardBtn.addEventListener('click', function() {\n            const compId = '<?= h($comp_id) ?>';\n            const lang = '<?= h($lang) ?>';\n            window.location.href = `scoring_dashboard.php?comp_id=${compId}&lang=${lang}`;\n        });\n    }\n    \n    // Refresh button\n    const refreshBtn = document.getElementById('refreshBtn');\n    if (refreshBtn) {\n        refreshBtn.addEventListener('click', function() {\n            if (confirm('페이지를 새로고침하시겠습니까? 현재 작업 중인 내용이 저장되지 않을 수 있습니다.')) {\n                window.location.reload();\n            }\n        });\n    }\n}\n\nfunction loadExistingSelections() {\n    // Load existing selections for all dances\n    Object.keys(existingSelections).forEach(dance => {\n        const dancePage = document.querySelector(`[data-dance=\"${dance}\"]`);\n        if (!dancePage) return;\n        \n        const selectedPlayers = existingSelections[dance];\n        selectedPlayers.forEach(playerNo => {\n            const checkbox = dancePage.querySelector(`input[data-player=\"${playerNo}\"]`);\n            if (checkbox) {\n                checkbox.checked = true;\n                const card = checkbox.closest('.player-card');\n                if (card) {\n                    card.classList.add('selected');\n                }\n            }\n        });\n        \n        // Mark as completed if selections exist\n        if (selectedPlayers.length > 0) {\n            completedDances.add(dance);\n        }\n    });\n}\n\nfunction loadExistingSelectionsForDance(page, dance) {\n    // Load existing selections for a specific dance\n    if (existingSelections[dance]) {\n        const selectedPlayers = existingSelections[dance];\n        selectedPlayers.forEach(playerNo => {\n            const checkbox = page.querySelector(`input[data-player=\"${playerNo}\"]`);\n            if (checkbox) {\n                checkbox.checked = true;\n                const card = checkbox.closest('.player-card');\n                if (card) {\n                    card.classList.add('selected');\n                }\n            }\n        });\n    }\n}\n\nfunction initializeDanceSystem() {\n    const dancePages = document.querySelectorAll('.dance-page');\n    totalDances = dancePages.length;\n    \n    if (totalDances === 0) return;\n    \n    // Load existing selections for all dances\n    loadExistingSelections();\n    \n    // Show first dance page\n    showDancePage(0);\n    \n    // Setup event listeners\n    setupDanceEventListeners();\n    updateProgress();\n    \n    // Initialize top recall status\n    updateTopRecallStatus();\n}\n\nfunction showDancePage(index) {\n    const danceSlider = document.getElementById('danceSlider');\n    const dancePages = document.querySelectorAll('.dance-page');\n    \n    if (index < 0 || index >= totalDances) return;\n    \n    currentDanceIndex = index;\n    danceSlider.style.transform = `translateX(-${index * 100}%)`;\n    \n    // Update progress\n    updateProgress();\n    \n    // Update navigation buttons\n    updateNavigationButtons();\n    \n    // Reset touch events for current page\n    resetTouchEvents();\n    \n    // Restore dance page state if going back to a completed dance\n    const currentPage = document.querySelector('.dance-page[data-dance-index=\"' + currentDanceIndex + '\"]');\n    if (currentPage) {\n        const dance = currentPage.dataset.dance;\n        const isCompleted = completedDances.has(dance);\n        \n        if (isCompleted) {\n            // Restore the page to editable state\n            restoreDancePageState(currentPage, dance);\n        } else {\n            // Load existing selections for this dance if not completed\n            loadExistingSelectionsForDance(currentPage, dance);\n        }\n    }\n    \n    // Update recall status for current page\n    updateTopRecallStatus();\n}\n\nfunction setupDanceEventListeners() {\n    // Navigation buttons\n    document.getElementById('prevDance')?.addEventListener('click', () => {\n        if (currentDanceIndex > 0) {\n            showDancePage(currentDanceIndex - 1);\n        }\n    });\n    \n    document.getElementById('nextDance')?.addEventListener('click', () => {\n        if (currentDanceIndex < totalDances - 1) {\n            showDancePage(currentDanceIndex + 1);\n        }\n    });\n    \n    // Dance submit buttons\n    document.querySelectorAll('.dance-submit-btn').forEach(btn => {\n        btn.addEventListener('click', function() {\n            const dance = this.dataset.dance;\n            submitDance(dance);\n        });\n    });\n    \n    // Touch/swipe events\n    let startX = 0;\n    let startY = 0;\n    let isSwipe = false;\n    \n    const danceSlider = document.getElementById('danceSlider');\n    \n    danceSlider.addEventListener('touchstart', function(e) {\n        startX = e.touches[0].clientX;\n        startY = e.touches[0].clientY;\n        isSwipe = false;\n    });\n    \n    danceSlider.addEventListener('touchmove', function(e) {\n        if (!startX || !startY) return;\n        \n        const currentX = e.touches[0].clientX;\n        const currentY = e.touches[0].clientY;\n        const diffX = startX - currentX;\n        const diffY = startY - currentY;\n        \n        // Determine if this is a horizontal swipe\n        if (Math.abs(diffX) > Math.abs(diffY) && Math.abs(diffX) > 50) {\n            isSwipe = true;\n            e.preventDefault();\n        }\n    });\n    \n    danceSlider.addEventListener('touchend', function(e) {\n        if (!isSwipe || !startX || !startY) return;\n        \n        const endX = e.changedTouches[0].clientX;\n        const diffX = startX - endX;\n        \n        if (Math.abs(diffX) > 100) {\n            if (diffX > 0 && currentDanceIndex < totalDances - 1) {\n                // Swipe left - next dance\n                showDancePage(currentDanceIndex + 1);\n            } else if (diffX < 0 && currentDanceIndex > 0) {\n                // Swipe right - previous dance\n                showDancePage(currentDanceIndex - 1);\n            }\n        }\n        \n        startX = 0;\n        startY = 0;\n        isSwipe = false;\n    });\n}\n\nfunction resetTouchEvents() {\n    // Remove existing event listeners and re-add them\n    const playerCards = document.querySelectorAll('.player-card');\n    playerCards.forEach(card => {\n        // Remove old listeners by cloning the element\n        const newCard = card.cloneNode(true);\n        card.parentNode.replaceChild(newCard, card);\n        \n        // Add new listeners\n        setupPlayerCardEvents(newCard);\n    });\n}\n\nfunction setupPlayerCardEvents(card) {\n    let touchStartTime = 0;\n    let touchStartPos = { x: 0, y: 0 };\n    \n    // Click event\n    card.addEventListener('click', function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        togglePlayerSelection(this);\n    });\n    \n    // Touch start\n    card.addEventListener('touchstart', function(e) {\n        touchStartTime = Date.now();\n        const touch = e.touches[0];\n        touchStartPos = { x: touch.clientX, y: touch.clientY };\n    });\n    \n    // Touch end\n    card.addEventListener('touchend', function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        \n        const touchEndTime = Date.now();\n        const touchDuration = touchEndTime - touchStartTime;\n        \n        // Only trigger if it's a quick tap (less than 500ms)\n        if (touchDuration < 500) {\n            togglePlayerSelection(this);\n        }\n    });\n    \n    // Prevent context menu on long press\n    card.addEventListener('contextmenu', function(e) {\n        e.preventDefault();\n    });\n}\n\nfunction updateProgress() {\n    const progressFill = document.querySelector('.progress-fill');\n    const currentDanceSpan = document.querySelector('.current-dance');\n    \n    if (progressFill) {\n        const progress = ((currentDanceIndex + 1) / totalDances) * 100;\n        progressFill.style.width = progress + '%';\n    }\n    \n    if (currentDanceSpan) {\n        currentDanceSpan.textContent = currentDanceIndex + 1;\n    }\n}\n\nfunction restoreDancePageState(page, dance) {\n    // Remove from completed dances to allow re-editing\n    completedDances.delete(dance);\n    \n    // Restore the recall status section\n    const statusDiv = page.querySelector('.recall-status');\n    if (statusDiv) {\n        statusDiv.innerHTML = `\n            <div style=\"font-size:20px; margin-bottom:5px;\">📊 Recall 진행 상황</div>\n            <div style=\"font-size:28px; font-weight:900; color:#2e7d32;\">\n                <span class=\"selected-count\">0</span> / <?= $recall_count ?>명\n            </div>\n            <div style=\"font-size:14px; margin-top:5px; opacity:0.8;\">\n                <?= $recall_count ?>명을 선택하면 전송할 수 있습니다\n            </div>\n        `;\n    }\n    \n    // Show submit section (will be hidden/shown based on selection count)\n    const submitSection = page.querySelector('.dance-submit-section');\n    if (submitSection) {\n        submitSection.style.display = 'none';\n    }\n    \n    // Load existing selections for this dance\n    if (existingSelections[dance]) {\n        const selectedPlayers = existingSelections[dance];\n        selectedPlayers.forEach(playerNo => {\n            const checkbox = page.querySelector(`input[data-player=\"${playerNo}\"]`);\n            if (checkbox) {\n                checkbox.checked = true;\n                const card = checkbox.closest('.player-card');\n                if (card) {\n                    card.classList.add('selected');\n                }\n            }\n        });\n    } else {\n        // No existing selections, clear all\n        const checkboxes = page.querySelectorAll('.recall-checkbox');\n        checkboxes.forEach(checkbox => {\n            checkbox.checked = false;\n        });\n        \n        // Update player card states\n        const playerCards = page.querySelectorAll('.player-card');\n        playerCards.forEach(card => {\n            card.classList.remove('selected');\n        });\n    }\n}\n\nfunction updateNavigationButtons() {\n    const prevBtn = document.getElementById('prevDance');\n    const nextBtn = document.getElementById('nextDance');\n    \n    if (prevBtn) {\n        prevBtn.style.display = currentDanceIndex > 0 ? 'inline-block' : 'none';\n    }\n    \n    if (nextBtn) {\n        // Show next button if there are more dances AND current dance is completed\n        const currentDance = document.querySelector('.dance-page[data-dance-index=\"' + currentDanceIndex + '\"]');\n        const isCurrentDanceCompleted = currentDance && completedDances.has(currentDance.dataset.dance);\n        \n        if (currentDanceIndex < totalDances - 1 && isCurrentDanceCompleted) {\n            nextBtn.style.display = 'inline-block';\n            nextBtn.disabled = false;\n            nextBtn.style.opacity = '1';\n            nextBtn.style.cursor = 'pointer';\n        } else {\n            nextBtn.style.display = 'none';\n        }\n    }\n}\n\nfunction submitDance(dance) {\n    const currentPage = document.querySelector(`[data-dance=\"${dance}\"]`);\n    const checkboxes = currentPage.querySelectorAll('.recall-checkbox:checked');\n    const recallCount = <?= json_encode(intval($recall_count)) ?>;\n    \n    if (checkboxes.length !== recallCount) {\n        alert(`${recallCount}명을 정확히 선택해주세요.`);\n        return;\n    }\n    \n    // Collect selected players for this dance\n    const selectedPlayers = Array.from(checkboxes).map(cb => cb.dataset.player);\n    \n    // Prepare data for this dance only\n    const recallMarks = {};\n    recallMarks[dance] = selectedPlayers;\n    \n    const data = {\n        comp_id: <?= json_encode($comp_id) ?>,\n        event_no: <?= json_encode($event_no) ?>,\n        type: 'recall',\n        recall_marks: recallMarks\n    };\n    \n    // Show loading state\n    const submitBtn = currentPage.querySelector('.dance-submit-btn');\n    const originalText = submitBtn.textContent;\n    submitBtn.textContent = '전송 중...';\n    submitBtn.disabled = true;\n    \n    fetch('scoring/save_scores.php', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data)\n    })\n    .then(response => response.json())\n    .then(result => {\n        if (result.success) {\n            // Mark this dance as completed\n            completedDances.add(dance);\n            \n            // Update existing selections\n            existingSelections[dance] = selectedPlayers;\n            \n            // Hide submit button and show completion message\n            submitBtn.style.display = 'none';\n            const statusDiv = currentPage.querySelector('.recall-status');\n            statusDiv.innerHTML = `\n                <div style=\"font-size:20px; margin-bottom:5px;\">✅ 완료</div>\n                <div style=\"font-size:18px; font-weight:bold; color:#4CAF50;\">\n                    ${recallCount}명 선택 완료\n                </div>\n                <div style=\"font-size:14px; margin-top:5px; opacity:0.8;\">\n                    다음 댄스로 진행하세요\n                </div>\n            `;\n            \n            // Enable next dance button if available\n            updateNavigationButtons();\n            \n            // Show completion message\n            if (currentDanceIndex < totalDances - 1) {\n                setTimeout(() => {\n                    alert(`${dance} 댄스 채점이 완료되었습니다. 다음 댄스로 진행하세요.`);\n                }, 1000);\n            } else {\n                // All dances completed\n                setTimeout(() => {\n                    alert('모든 댄스 채점이 완료되었습니다!');\n                }, 1000);\n            }\n        } else {\n            alert('전송 실패: ' + (result.error || '알 수 없는 오류'));\n            submitBtn.textContent = originalText;\n            submitBtn.disabled = false;\n        }\n    })\n    .catch(error => {\n        console.error('Error:', error);\n        alert('전송 중 오류가 발생했습니다: ' + error);\n        submitBtn.textContent = originalText;\n        submitBtn.disabled = false;\n    });\n}\n\n// Final Round Dance-by-Dance System\n<?php if ($is_final || $event_no === '8'): ?>\nlet selectedPlayer = null;\nlet playerRankings = {};\nlet draggedSlot = null;\nlet isDragging = false;\nlet dragStartTime = 0;\nlet finalDanceNames = <?= json_encode($event_data['dances']) ?>;\nlet finalCompletedDances = new Set();\nlet savedRankings = <?= json_encode($saved_rankings ?? []) ?>;\nlet currentJudgeId = <?= json_encode($judge_id) ?>;\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    // Initialize dance-by-dance system\n    initializeFinalDanceSystem();\n    setupFinalDanceNavigation();\n    \n    // Initialize touch-based system\n    initializeTouchSystem();\n    \n    // Setup drag and drop for ranking slots\n    setupDragAndDrop();\n});\n\nfunction initializeFinalDanceSystem() {\n    totalDances = finalDanceNames.length;\n    // Populate progress header\n    updateFinalDanceProgress();\n    // Show first dance\n    showFinalDance(0);\n}\n\nfunction updateFinalDanceProgress() {\n    const progressEl = document.getElementById('danceProgress');\n    if (!progressEl) return;\n    progressEl.innerHTML = finalDanceNames.map((dance, idx) => {\n        const isCurrent = idx === currentDanceIndex;\n        const isCompleted = finalCompletedDances.has(dance);\n        const isPending = !isCompleted && !isCurrent;\n        return `<span class=\"dance-step ${isCurrent ? 'current' : (isCompleted ? 'completed' : 'pending')}\">${dance}</span>`;\n    }).join('');\n}\n\nfunction showFinalDance(danceIndex) {\n    if (danceIndex < 0 || danceIndex >= totalDances) return;\n    currentDanceIndex = danceIndex;\n    updateFinalDanceProgress();\n    updateCurrentDanceDisplay();\n    \n    // Clear rankings when switching dances\n    clearFinalScores();\n    \n    // Update navigation after DOM is ready\n    setTimeout(() => {\n        updateFinalDanceNav();\n    }, 50);\n    \n    // Restore saved rankings for current dance (after clearing)\n    setTimeout(() => {\n        restoreSavedRankings();\n    }, 100);\n}\n\nfunction updateCurrentDanceDisplay() {\n    const currentDanceEl = document.getElementById('currentDanceDisplay');\n    if (currentDanceEl && finalDanceNames[currentDanceIndex]) {\n        currentDanceEl.textContent = `현재 종목: ${finalDanceNames[currentDanceIndex]}`;\n    }\n}\n\nfunction setupFinalDanceNavigation() {\n    // Bind \"Submit Dance\" and \"Next Dance\" buttons\n    const submitBtn = document.getElementById('saveFinalScores');\n    if (submitBtn) {\n        submitBtn.addEventListener('click', submitFinalDance);\n    }\n    const nextBtn = document.getElementById('nextFinalDance');\n    if (nextBtn) {\n        nextBtn.addEventListener('click', () => {\n            if (currentDanceIndex < totalDances - 1) {\n                showFinalDance(currentDanceIndex + 1);\n            }\n        });\n    }\n}\n\nfunction submitFinalDance() {\n    const totalPlayers = document.querySelectorAll('.player-item').length;\n    const assignedPlayers = Object.keys(playerRankings).length;\n    \n    if (assignedPlayers < totalPlayers) {\n        alert(`모든 선수에게 순위를 부여해야 합니다. (${assignedPlayers}/${totalPlayers})`);\n        return;\n    }\n    \n    const form = document.getElementById('scoringForm');\n    const formData = new FormData(form);\n    formData.append('is_final', '1');\n    formData.append('dance', finalDanceNames[currentDanceIndex]);\n    \n    Object.keys(playerRankings).forEach(player => {\n        formData.append(`final_ranking[${playerRankings[player]}]`, player);\n    });\n    \n    const submitBtn = document.getElementById('saveFinalScores');\n    const originalText = submitBtn.textContent;\n    submitBtn.textContent = '전송 중...';\n    submitBtn.disabled = true;\n    \n    fetch('scoring/save_scores.php', {\n        method: 'POST',\n        body: formData\n    })\n    .then(response => response.json())\n    .then(result => {\n        if (result.success) {\n            if (result.dance_completed) {\n                // All judges completed this dance\n                finalCompletedDances.add(finalDanceNames[currentDanceIndex]);\n                updateFinalDanceProgress();\n                alert(`${finalDanceNames[currentDanceIndex]} 댄스 채점이 완료되었습니다!`);\n            } else {\n                // Only this judge submitted\n                alert(`${finalDanceNames[currentDanceIndex]} 댄스 점수가 저장되었습니다`);\n            }\n            \n            if (currentDanceIndex < totalDances - 1) {\n                showFinalDance(currentDanceIndex + 1);\n            } else {\n                updateFinalDanceNav();\n                alert('모든 종목 순위 제출이 완료되었습니다!');\n            }\n        } else {\n            alert('제출 실패: ' + (result.error || '알 수 없는 오류'));\n            submitBtn.textContent = originalText;\n            submitBtn.disabled = false;\n        }\n    })\n    .catch(error => {\n        console.error('Error:', error);\n        alert('제출 중 오류가 발생했습니다: ' + error);\n        submitBtn.textContent = originalText;\n        submitBtn.disabled = false;\n    });\n}\n\nfunction updateFinalDanceNav() {\n    const submitBtn = document.getElementById('saveFinalScores');\n    const nextBtn = document.getElementById('nextFinalDance');\n    \n    console.log('updateFinalDanceNav called - currentDanceIndex:', currentDanceIndex, 'totalDances:', totalDances);\n    \n    if (submitBtn) {\n        const buttonText = currentDanceIndex < totalDances - 1 ? `${finalDanceNames[currentDanceIndex]} 순위 제출` : '최종 저장';\n        submitBtn.textContent = buttonText;\n        console.log('Button text updated to:', buttonText);\n    }\n    if (nextBtn) {\n        nextBtn.style.display = (currentDanceIndex < totalDances - 1) ? 'inline-block' : 'none';\n    }\n    // Hide clear button\n    const clearBtn = document.getElementById('clearFinalScores');\n    if (clearBtn) clearBtn.style.display = 'none';\n}\n\nfunction initializeTouchSystem() {\n    // Clear any existing rankings when switching dances\n    clearFinalScores();\n    \n    // Bind clear button with confirmation\n    const clearBtn = document.getElementById('clearFinalScores');\n    if (clearBtn) {\n        clearBtn.addEventListener('click', clearFinalScoresWithConfirm);\n    }\n}\n\nfunction setupDragAndDrop() {\n    // Add drag and drop event listeners to all ranking slots\n    document.querySelectorAll('.ranking-slot').forEach(slot => {\n        slot.addEventListener('dragstart', dragStart);\n        slot.addEventListener('dragover', dragOver);\n        slot.addEventListener('drop', drop);\n        slot.addEventListener('dragend', dragEnd);\n        slot.addEventListener('mousedown', handleMouseDown);\n        slot.addEventListener('mouseup', handleMouseUp);\n    });\n}\n\n// Final Round JavaScript - Touch-based System\n\nfunction selectPlayer(element) {\n    // Remove previous selection\n    document.querySelectorAll('.player-item').forEach(item => {\n        item.classList.remove('selected');\n    });\n    \n    // Check if player is already assigned\n    if (element.classList.contains('assigned')) {\n        return;\n    }\n    \n    // Select current player\n    element.classList.add('selected');\n    selectedPlayer = element.dataset.player;\n    \n    console.log('Selected player:', selectedPlayer);\n}\n\nfunction assignRank(element) {\n    // If no player is selected, check if we can cancel an existing assignment\n    if (!selectedPlayer) {\n        if (element.classList.contains('assigned')) {\n            // Cancel existing assignment\n            cancelRank(element);\n        }\n        return;\n    }\n    \n    const rank = element.dataset.rank;\n    \n    // Check if this rank is already assigned\n    if (element.classList.contains('assigned')) {\n        // Remove existing assignment\n        const currentPlayer = element.querySelector('.player-assigned').textContent;\n        if (currentPlayer) {\n            // Remove from player list\n            const playerElement = document.querySelector(`[data-player=\"${currentPlayer}\"]`);\n            if (playerElement) {\n                playerElement.classList.remove('assigned');\n            }\n            // Remove from rankings\n            delete playerRankings[currentPlayer];\n        }\n    }\n    \n    // Assign new player to this rank\n    element.querySelector('.player-assigned').textContent = selectedPlayer;\n    element.querySelector('input').value = selectedPlayer;\n    element.classList.add('assigned');\n    \n    // Mark player as assigned\n    const playerElement = document.querySelector(`[data-player=\"${selectedPlayer}\"]`);\n    if (playerElement) {\n        playerElement.classList.add('assigned');\n    }\n    \n    // Update rankings object\n    playerRankings[selectedPlayer] = rank;\n    \n    // Clear selection\n    selectedPlayer = null;\n    document.querySelectorAll('.player-item').forEach(item => {\n        item.classList.remove('selected');\n    });\n    \n    console.log('Assigned player', selectedPlayer, 'to rank', rank);\n    console.log('Current rankings:', playerRankings);\n}\n\nfunction cancelRank(element) {\n    const currentPlayer = element.querySelector('.player-assigned').textContent;\n    if (currentPlayer) {\n        // Remove from player list\n        const playerElement = document.querySelector(`[data-player=\"${currentPlayer}\"]`);\n        if (playerElement) {\n            playerElement.classList.remove('assigned');\n        }\n        \n        // Clear the ranking slot\n        element.querySelector('.player-assigned').textContent = '';\n        element.querySelector('input').value = '';\n        element.classList.remove('assigned');\n        \n        // Remove from rankings\n        delete playerRankings[currentPlayer];\n        \n        console.log('Cancelled assignment for player', currentPlayer);\n        console.log('Current rankings:', playerRankings);\n    }\n}\n\n// Drag and Drop functions for ranking slots\nfunction dragStart(event) {\n    console.log('dragStart called', event.target);\n    isDragging = true;\n    draggedSlot = event.target;\n    draggedSlot.classList.add('dragging');\n    event.dataTransfer.effectAllowed = 'move';\n    event.dataTransfer.setData('text/html', draggedSlot.outerHTML);\n}\n\nfunction dragOver(event) {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n    \n    // Add visual feedback\n    if (event.target.classList.contains('ranking-slot')) {\n        event.target.classList.add('drag-over');\n        console.log('dragOver on ranking slot');\n    }\n}\n\nfunction drop(event) {\n    event.preventDefault();\n    console.log('drop called', event.target, 'draggedSlot:', draggedSlot);\n    \n    // Remove drag-over class\n    document.querySelectorAll('.ranking-slot').forEach(slot => {\n        slot.classList.remove('drag-over');\n    });\n    \n    if (event.target.classList.contains('ranking-slot') && draggedSlot !== event.target) {\n        console.log('Swapping rankings between slots');\n        // Swap the players between the two slots\n        swapRankings(draggedSlot, event.target);\n    }\n}\n\nfunction dragEnd(event) {\n    // Remove dragging class\n    document.querySelectorAll('.ranking-slot').forEach(slot => {\n        slot.classList.remove('dragging', 'drag-over');\n    });\n    draggedSlot = null;\n    isDragging = false;\n}\n\n// Mouse event handlers for better drag detection\nfunction handleMouseDown(event) {\n    dragStartTime = Date.now();\n    isDragging = false;\n    console.log('Mouse down on ranking slot');\n}\n\nfunction handleMouseUp(event) {\n    const dragDuration = Date.now() - dragStartTime;\n    console.log('Mouse up, drag duration:', dragDuration);\n    \n    if (dragDuration > 200 && isDragging) {\n        // This was a drag operation, not a click\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    }\n}\n\n// Double-click to swap with next rank\nfunction swapWithNext(element) {\n    console.log('Double-clicked ranking slot:', element);\n    \n    const currentRank = parseInt(element.dataset.rank);\n    const nextRank = currentRank + 1;\n    const nextElement = document.querySelector(`[data-rank=\"${nextRank}\"]`);\n    \n    if (nextElement && element.classList.contains('assigned') && nextElement.classList.contains('assigned')) {\n        console.log('Swapping ranks', currentRank, 'and', nextRank);\n        swapRankings(element, nextElement);\n    } else {\n        console.log('Cannot swap - one or both slots are empty');\n    }\n}\n\nfunction swapRankings(slot1, slot2) {\n    const player1 = slot1.querySelector('.player-assigned').textContent;\n    const player2 = slot2.querySelector('.player-assigned').textContent;\n    const input1 = slot1.querySelector('input');\n    const input2 = slot2.querySelector('input');\n    \n    // Swap the players\n    slot1.querySelector('.player-assigned').textContent = player2;\n    slot2.querySelector('.player-assigned').textContent = player1;\n    input1.value = player2;\n    input2.value = player1;\n    \n    // Update visual states\n    if (player1) {\n        slot1.classList.add('assigned');\n    } else {\n        slot1.classList.remove('assigned');\n    }\n    \n    if (player2) {\n        slot2.classList.add('assigned');\n    } else {\n        slot2.classList.remove('assigned');\n    }\n    \n    // Update rankings object\n    const rank1 = slot1.dataset.rank;\n    const rank2 = slot2.dataset.rank;\n    \n    if (player1) {\n        playerRankings[player1] = rank2;\n    } else {\n        // Remove from rankings if empty\n        Object.keys(playerRankings).forEach(player => {\n            if (playerRankings[player] === rank1) {\n                delete playerRankings[player];\n            }\n        });\n    }\n    \n    if (player2) {\n        playerRankings[player2] = rank1;\n    } else {\n        // Remove from rankings if empty\n        Object.keys(playerRankings).forEach(player => {\n            if (playerRankings[player] === rank2) {\n                delete playerRankings[player];\n            }\n        });\n    }\n    \n    console.log('Swapped rankings:', playerRankings);\n}\n\nfunction submitFinalDance() {\n    // Check if all players are assigned\n    const totalPlayers = document.querySelectorAll('.player-item').length;\n    const assignedPlayers = Object.keys(playerRankings).length;\n    \n    if (assignedPlayers < totalPlayers) {\n        alert(`모든 선수에게 순위를 부여해야 합니다. (${assignedPlayers}/${totalPlayers})`);\n        return;\n    }\n    \n    const form = document.getElementById('scoringForm');\n    const formData = new FormData(form);\n    \n    // Add final round flag\n    formData.append('is_final', '1');\n    \n    // Add current dance\n    const currentDance = finalDanceNames[currentDanceIndex];\n    formData.append('dance', currentDance);\n    \n    // Add rankings data in the format expected by save_scores.php\n    const adjudicator_marks = {};\n    adjudicator_marks[<?= json_encode($judge_id) ?>] = {};\n    \n    Object.keys(playerRankings).forEach(player => {\n        const rank = playerRankings[player];\n        adjudicator_marks[<?= json_encode($judge_id) ?>][player] = rank;\n    });\n    \n    console.log('Sending adjudicator_marks:', adjudicator_marks);\n    formData.append('adjudicator_marks', JSON.stringify(adjudicator_marks));\n    \n    const saveBtn = document.getElementById('saveFinalScores');\n    const originalText = saveBtn.textContent;\n    saveBtn.textContent = '저장 중...';\n    saveBtn.disabled = true;\n    \n    fetch('scoring/save_scores.php', {\n        method: 'POST',\n        body: formData\n    })\n    .then(response => response.json())\n    .then(result => {\n        if (result.success) {\n            if (result.dance_completed) {\n                finalCompletedDances.add(currentDance);\n                updateFinalDanceProgress();\n                alert(`${currentDance} 댄스 채점이 완료되었습니다!`);\n            } else {\n                alert(`${currentDance} 댄스 점수가 저장되었습니다`);\n            }\n            updateFinalDanceNav();\n            \n            if (currentDanceIndex < totalDances - 1) {\n                showFinalDance(currentDanceIndex + 1);\n            } else {\n                alert('모든 종목 순위 제출이 완료되었습니다!');\n            }\n        } else {\n            alert('저장 실패: ' + (result.error || '알 수 없는 오류'));\n        }\n    })\n    .catch(error => {\n        console.error('Error:', error);\n        alert('저장 중 오류가 발생했습니다: ' + error);\n    })\n    .finally(() => {\n        saveBtn.textContent = originalText;\n        saveBtn.disabled = false;\n    });\n}\n\nfunction clearFinalScores() {\n    // Clear all assignments (no confirmation for dance switching)\n    document.querySelectorAll('.ranking-slot').forEach(slot => {\n        slot.classList.remove('assigned');\n        slot.querySelector('.player-assigned').textContent = '';\n        slot.querySelector('input').value = '';\n    });\n    \n    document.querySelectorAll('.player-item').forEach(item => {\n        item.classList.remove('assigned');\n    });\n    \n    // Clear selection\n    selectedPlayer = null;\n    playerRankings = {};\n    \n    console.log('Cleared all scores');\n}\n\nfunction clearFinalScoresWithConfirm() {\n    if (confirm('모든 점수를 초기화하시겠습니까?')) {\n        clearFinalScores();\n    }\n}\n\nfunction restoreSavedRankings() {\n    // Get current dance name\n    const currentDance = finalDanceNames[currentDanceIndex];\n    console.log('=== RESTORE SAVED RANKINGS DEBUG ===');\n    console.log('Current judge ID:', currentJudgeId);\n    console.log('Current dance:', currentDance);\n    console.log('Current dance index:', currentDanceIndex);\n    console.log('Available saved rankings:', savedRankings);\n    console.log('Final dance names:', finalDanceNames);\n    \n    if (!currentDance || !savedRankings[currentDance]) {\n        console.log('No saved data for dance:', currentDance);\n        return; // No saved data for this dance\n    }\n    \n    const rankings = savedRankings[currentDance];\n    console.log('Restoring rankings for', currentDance, ':', rankings);\n    \n    // Restore each ranking\n    Object.keys(rankings).forEach(rank => {\n        const player = rankings[rank];\n        const rankElement = document.querySelector(`[data-rank=\"${rank}\"]`);\n        \n        console.log(`Attempting to restore rank ${rank}: player ${player}`);\n        console.log('Rank element found:', rankElement);\n        \n        if (rankElement && player) {\n            // Assign player to this rank\n            rankElement.querySelector('.player-assigned').textContent = player;\n            rankElement.querySelector('input').value = player;\n            rankElement.classList.add('assigned');\n            \n            // Mark player as assigned\n            const playerElement = document.querySelector(`[data-player=\"${player}\"]`);\n            if (playerElement) {\n                playerElement.classList.add('assigned');\n            }\n            \n            // Update rankings object\n            playerRankings[player] = rank;\n            \n            console.log(`Successfully restored rank ${rank}: player ${player}`);\n        } else {\n            console.log(`Failed to restore rank ${rank}: player ${player} - element not found`);\n        }\n    });\n    \n    console.log('Restored rankings:', playerRankings);\n}\n<?php endif; ?>\n    </script>\n    \n    <!-- Bottom Navigation -->\n    <div class=\"bottom-nav\">\n        <button type=\"button\" id=\"dashboardBtn\" class=\"nav-button primary\">\n            <div class=\"nav-icon\">🏠</div>\n            <div class=\"nav-text\">메인으로</div>\n        </button>\n        <button type=\"button\" id=\"refreshBtn\" class=\"nav-button\">\n            <div class=\"nav-icon\">🔄</div>\n            <div class=\"nav-text\">새로고침</div>\n        </button>\n    </div>\n    \n    <footer style=\"text-align: center; margin-top: 30px; color: #666; font-size: 0.9em; padding: 20px; border-top: 1px solid #eee;\">\n        2025 danceoffice.net | Powered by Seyoung Lee\n    </footer>\n</body>\n</html>","size_bytes":101680},"comp/judge_scoring_working.php":{"content":"<?php\nsession_start();\n\n$comp_id = $_GET['comp_id'] ?? '';\n$event_no = $_GET['event_no'] ?? '';\n\n// Remove BOM and normalize - multiple methods\n$comp_id = preg_replace('/\\x{FEFF}/u', '', $comp_id);\n$event_no = preg_replace('/\\x{FEFF}/u', '', $event_no);\n\n// Additional BOM removal\n$comp_id = str_replace([\"\\xEF\\xBB\\xBF\", \"\\xFEFF\", \"\\uFEFF\"], '', $comp_id);\n$event_no = str_replace([\"\\xEF\\xBB\\xBF\", \"\\xFEFF\", \"\\uFEFF\"], '', $event_no);\n\n// Remove any non-printable characters\n$comp_id = preg_replace('/[\\x00-\\x1F\\x7F-\\x9F]/', '', $comp_id);\n$event_no = preg_replace('/[\\x00-\\x1F\\x7F-\\x9F]/', '', $event_no);\n\n$comp_id = preg_replace('/[^\\d-]/', '', $comp_id);\n$event_no = preg_replace('/\\D+/', '', $event_no);\n\n\n// Language setting\n$lang = $_GET['lang'] ?? 'ko';\nif (!in_array($lang, ['ko', 'en', 'zh', 'ja'])) {\n    $lang = 'ko';\n}\n\n// Language texts\n$texts = [\n    'ko' => [\n        'title' => '심사위원 채점 시스템',\n        'judge_info' => '심사위원',\n        'event_info' => '이벤트 정보',\n        'event_no' => '이벤트 번호',\n        'round' => '라운드',\n        'dances' => '종목',\n        'players' => '출전 선수',\n        'place' => '순위',\n        'couple' => '선수',\n        'submit' => '제출',\n        'no_data' => '이벤트 데이터 또는 선수 데이터를 찾을 수 없습니다.',\n        'invalid_data' => '잘못된 대회 ID 또는 이벤트 번호입니다.'\n    ],\n    'en' => [\n        'title' => 'Judge Scoring System',\n        'judge_info' => 'Judge',\n        'event_info' => 'Event Information',\n        'event_no' => 'Event Number',\n        'round' => 'Round',\n        'dances' => 'Dances',\n        'players' => 'Competitors',\n        'place' => 'Place',\n        'couple' => 'Couple',\n        'submit' => 'Submit',\n        'no_data' => 'Event data or player data not found.',\n        'invalid_data' => 'Invalid competition ID or event number.'\n    ],\n    'zh' => [\n        'title' => '评委评分系统',\n        'judge_info' => '评委',\n        'event_info' => '赛事信息',\n        'event_no' => '赛事编号',\n        'round' => '轮次',\n        'dances' => '舞种',\n        'players' => '参赛选手',\n        'place' => '名次',\n        'couple' => '选手',\n        'submit' => '提交',\n        'no_data' => '找不到赛事数据或选手数据。',\n        'invalid_data' => '无效的比赛ID或赛事编号。'\n    ],\n    'ja' => [\n        'title' => '審査員採点システム',\n        'judge_info' => '審査員',\n        'event_info' => 'イベント情報',\n        'event_no' => 'イベント番号',\n        'round' => 'ラウンド',\n        'dances' => '種目',\n        'players' => '出場選手',\n        'place' => '順位',\n        'couple' => '選手',\n        'submit' => '提出',\n        'no_data' => 'イベントデータまたは選手データが見つかりません。',\n        'invalid_data' => '無効な大会IDまたはイベント番号です。'\n    ]\n];\n\n$t = $texts[$lang];\n\n// Check if judge is logged in\nif (!isset($_SESSION['scoring_logged_in']) || !$_SESSION['scoring_logged_in'] || $_SESSION['scoring_comp_id'] !== $comp_id) {\n    $lang = $_GET['lang'] ?? 'ko';\n    header(\"Location: scoring_login.php?comp_id=\" . urlencode($comp_id) . \"&lang=\" . urlencode($lang));\n    exit;\n}\n\nif (!$comp_id || !$event_no) {\n    echo \"<h1>\" . $t['invalid_data'] . \"</h1>\";\n    exit;\n}\n\n// Load event data\n$data_dir = __DIR__ . \"/data/$comp_id\";\n$runorder_file = \"$data_dir/RunOrder_Tablet.txt\";\n$players_file = \"$data_dir/players_$event_no.txt\";\n$round_info_file = \"$data_dir/round_info.json\";\n$dance_name_file = \"$data_dir/DanceName.txt\";\n\n$event_data = null;\n$players = [];\n$round_info = null;\n$hits_data = null;\n$dance_mapping = [];\n\n// Load dance name mapping\nif (file_exists($dance_name_file)) {\n    $lines = file($dance_name_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    foreach ($lines as $line) {\n        $line = preg_replace('/\\x{FEFF}/u', '', $line);\n        $cols = array_map('trim', explode(',', $line));\n        if (count($cols) >= 3 && !empty($cols[2])) {\n            $dance_mapping[$cols[2]] = $cols[1]; // abbreviation => full name\n        }\n    }\n}\n\n// Function to convert dance abbreviations to full names\nfunction getDanceNames($dances, $dance_mapping) {\n    $result = [];\n    foreach ($dances as $dance) {\n        $dance = trim($dance);\n        if (isset($dance_mapping[$dance])) {\n            $result[] = $dance_mapping[$dance];\n        } else {\n            $result[] = $dance; // fallback to original if not found\n        }\n    }\n    return $result;\n}\n\n// Function to load existing selected numbers from .adj files\nfunction loadExistingSelections($comp_id, $event_no, $judge_id, $dances) {\n    $data_dir = __DIR__ . \"/data/$comp_id\";\n    $selections = [];\n    \n    foreach ($dances as $dance) {\n        $adj_file = \"$data_dir/{$event_no}_{$dance}_{$judge_id}.adj\";\n        if (file_exists($adj_file)) {\n            $lines = file($adj_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n            $dance_selections = [];\n    foreach ($lines as $line) {\n                $line = preg_replace('/\\x{FEFF}/u', '', $line);\n                $line = trim($line, '\"');\n                if (!empty($line)) {\n                    $dance_selections[] = $line;\n                }\n            }\n            $selections[$dance] = $dance_selections;\n        }\n    }\n    \n    return $selections;\n}\n\n// Load event information\nif (file_exists($runorder_file)) {\n    $lines = file($runorder_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    foreach ($lines as $line) {\n        // Remove BOM from line - multiple methods\n        $line = preg_replace('/\\x{FEFF}/u', '', $line);\n        $line = str_replace([\"\\xEF\\xBB\\xBF\", \"\\xFEFF\", \"\\uFEFF\"], '', $line);\n        $line = preg_replace('/[\\x00-\\x1F\\x7F-\\x9F]/', '', $line);\n        \n        if (preg_match('/^bom/', $line)) continue;\n        $cols = array_map('trim', explode(',', $line));\n        if (($cols[0] ?? '') === $event_no) {\n            $event_data = [\n                'no' => $cols[0],\n                'name' => $cols[1],\n                'round_type' => $cols[2],\n                'round_num' => $cols[3],\n                'recall_count' => intval($cols[4] ?? 0), // 5th column (index 4) is recall count\n                'dances' => []\n            ];\n            for ($i = 6; $i <= 10; $i++) {\n                if (!empty($cols[$i])) $event_data['dances'][] = $cols[$i];\n            }\n            break;\n        }\n    }\n}\n\n// Load players\nif (file_exists($players_file)) {\n    $lines = file($players_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    foreach ($lines as $line) {\n        // Remove BOM from line - multiple methods\n        $line = preg_replace('/\\x{FEFF}/u', '', $line);\n        $line = str_replace([\"\\xEF\\xBB\\xBF\", \"\\xFEFF\", \"\\uFEFF\"], '', $line);\n        $line = preg_replace('/[\\x00-\\x1F\\x7F-\\x9F]/', '', $line);\n        $line = trim($line);\n        if ($line && is_numeric($line)) {\n            $players[] = $line;\n        }\n    }\n}\n\n// Load round information\nif (file_exists($round_info_file)) {\n    $round_info = json_decode(file_get_contents($round_info_file), true);\n}\n\n// Determine if this is a final round\n$is_final = false;\n$round_display = '';\n\nif ($round_info && isset($round_info['round_info'])) {\n    // Try both string and numeric keys\n    $round_display = $round_info['round_info'][$event_no] ?? $round_info['round_info'][intval($event_no)] ?? '';\n    $is_final = ($round_display === 'Final' || stripos($round_display, 'Final') !== false);\n    error_log(\"After round_info check: is_final = \" . ($is_final ? 'true' : 'false'));\n} elseif ($event_data && isset($event_data['round_type'])) {\n    $round_display = $event_data['round_type'];\n    $is_final = ($round_display === 'Final' || stripos($event_data['round_type'], 'Final') !== false);\n    error_log(\"After event_data check: is_final = \" . ($is_final ? 'true' : 'false'));\n}\n\n// Fallback: Check if this is a known final event\nif (!$is_final) {\n    $known_final_events = ['8', '9', '39', '28', '75', '74']; // Known final events from round_info.json\n    if (in_array($event_no, $known_final_events)) {\n        $is_final = true;\n        $round_display = 'Final';\n        error_log(\"After fallback check: is_final = \" . ($is_final ? 'true' : 'false'));\n    }\n}\n\nerror_log(\"Final is_final value: \" . ($is_final ? 'true' : 'false'));\n\n// Force final for event 8 for testing\nif ($event_no === '8') {\n    $is_final = true;\n    $round_display = 'Final';\n    error_log(\"Forced is_final to true for event 8\");\n}\n\n// Additional debug\nerror_log(\"Final check - Event: $event_no, is_final: \" . ($is_final ? 'true' : 'false'));\n\n\n// Load hits data if exists\n$hits_file = \"$data_dir/players_hits_$event_no.json\";\nif (file_exists($hits_file)) {\n    $hits_data = json_decode(file_get_contents($hits_file), true);\n}\n\n// Load existing selections for all dances\n$existing_selections = [];\nif ($event_data && isset($event_data['dances'])) {\n    $existing_selections = loadExistingSelections($comp_id, $event_no, $_SESSION['scoring_judge_id'], $event_data['dances']);\n}\n\n// Load saved scores\n$saved_scores = null;\n$judge_id = $_SESSION['scoring_judge_id'] ?? 'unknown';\n\nif ($is_final) {\n    // Load final round scores - check individual dance files for this judge\n    $adj_files = glob(\"$data_dir/{$event_no}_*.adj\");\n    \n    // Also check for files with different event numbers but same judge (for compatibility)\n    $compat_files = glob(\"$data_dir/*_*_{$judge_id}.adj\");\n    $adj_files = array_merge($adj_files, $compat_files);\n    \n    // Debug: Log found files\n    error_log(\"Found adj files: \" . implode(', ', $adj_files));\n    $final_scores = [];\n    $saved_rankings = []; // Store actual ranking data for UI restoration\n    \n    foreach ($adj_files as $file) {\n        $filename = basename($file);\n        if (preg_match('/^(\\d+)_(.+)_(\\d+)\\.adj$/', $filename, $matches)) {\n            $file_event = $matches[1];\n            $file_dance = $matches[2];\n            $file_judge_id = $matches[3];\n            \n            // Check if this is for current judge and current event (or compatible event)\n            if ($file_judge_id === $judge_id && ($file_event === $event_no || $file_event === '1')) {\n                error_log(\"Loading file: $filename for dance: $file_dance\");\n                $final_scores[$file_dance] = true; // This judge has submitted for this dance\n                \n                // Load actual ranking data for UI restoration\n                $lines = file($file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n                $rankings = [];\n                \n                foreach ($lines as $line) {\n                    $line = trim($line);\n                    if (empty($line)) continue;\n                    \n                    if (strpos($line, ',') !== false) {\n                        // New format: player,rank\n                        list($player, $rank) = explode(',', $line, 2);\n                        $player = trim($player, '\"');\n                        $rank = intval(trim($rank));\n                        if (is_numeric($player) && $rank > 0) {\n                            $rankings[$rank] = $player;\n                        }\n        } else {\n                        // Old format: just player numbers (convert to rank 1,2,3...)\n                        $player = trim($line, '\"');\n                        if (is_numeric($player)) {\n                            $rankings[count($rankings) + 1] = $player;\n                        }\n                    }\n                }\n                \n                if (!empty($rankings)) {\n                    $saved_rankings[$file_dance] = $rankings;\n                }\n            }\n        }\n    }\n    \n    if (!empty($final_scores)) {\n        $saved_scores = $final_scores;\n    }\n    \n    // Debug: Log saved rankings\n    error_log(\"Judge ID: $judge_id, Event: $event_no, Saved rankings: \" . json_encode($saved_rankings));\n} else {\n    // Load recall scores for this judge\n    $adj_files = glob(\"$data_dir/{$event_no}_*.adj\");\n    $recall_scores = [];\n    \n    foreach ($adj_files as $file) {\n        $filename = basename($file);\n        if (preg_match('/^(\\d+)_(.+)_(\\d+)\\.adj$/', $filename, $matches)) {\n            $file_dance = $matches[2];\n            $file_judge_id = $matches[3];\n            \n            if ($file_judge_id === $judge_id) {\n                $lines = file($file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n                $players = [];\n                \n    foreach ($lines as $line) {\n                    $line = trim($line, '\"');\n                    if ($line && is_numeric($line)) {\n                        $players[] = $line;\n                    }\n                }\n                \n                $recall_scores[$file_dance] = $players;\n            }\n        }\n    }\n    \n    if (!empty($recall_scores)) {\n        $saved_scores = $recall_scores;\n    }\n}\n\nif (!$event_data || empty($players)) {\n    echo \"<h1>\" . $t['no_data'] . \"</h1>\";\n    echo \"<p>comp_id: '$comp_id', event_no: '$event_no'</p>\";\n    echo \"<p>runorder_file: \" . (file_exists($runorder_file) ? 'exists' : 'not found') . \"</p>\";\n    echo \"<p>players_file: \" . (file_exists($players_file) ? 'exists' : 'not found') . \"</p>\";\n    exit;\n}\n\nfunction h($s) { return htmlspecialchars($s ?? ''); }\n?>\n<!DOCTYPE html>\n<html lang=\"<?=h($lang)?>\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title><?=h($t['title'])?> | <?=h($event_data['name'])?></title>\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\n    <style>\n        body { background:#1a1a1a; font-family:sans-serif; margin:0; padding:2px;}\n        .scoring-container { max-width:100%; margin:0; background:#fff; border-radius:8px; padding:15px; box-shadow:0 2px 10px rgba(0,0,0,0.3);}\n        h1 { color:#003399; margin-bottom:20px; text-align:center;}\n        .event-info { background:#f0f4ff; padding:15px; border-radius:8px; margin-bottom:20px; text-align:center;}\n        .event-info h2 { margin:0 0 10px 0; color:#0d2c96;}\n        .event-info p { margin:5px 0; color:#333;}\n        .adjudicator-section { margin-bottom:10px;}\n        .adjudicator-header { background:#003399; color:#fff; padding:10px 15px; border-radius:6px 6px 0 0; font-weight:bold;}\n        .scoring-table { width:100%; border-collapse:collapse; background:#fff; border:1px solid #ddd;}\n        .scoring-table th, .scoring-table td { padding:12px 8px; text-align:center; border:1px solid #ddd;}\n        .scoring-table th { background:#f8f9fa; font-weight:bold; color:#333;}\n        .scoring-table tr:nth-child(even) { background:#f8f9fa;}\n        .place-input { width:60px; padding:8px; border:2px solid #ddd; border-radius:4px; text-align:center; font-size:16px; font-weight:bold;}\n        .place-input:focus { border-color:#003399; outline:none;}\n        .couple-info { text-align:left; font-weight:bold; color:#333;}\n        .submit-section { text-align:center; margin-top:30px;}\n        .submit-btn { background:#03C75A; color:#fff; border:none; padding:15px 30px; font-size:16px; font-weight:bold; border-radius:8px; cursor:pointer; margin:0 10px;}\n        .submit-btn:hover { background:#00BFAE;}\n        .clear-btn { background:#FF6B35; color:#fff; border:none; padding:15px 30px; font-size:16px; font-weight:bold; border-radius:8px; cursor:pointer; margin:0 10px;}\n        .clear-btn:hover { background:#E55A2B;}\n        .warning { background:#fff3cd; border:1px solid #ffeaa7; color:#856404; padding:10px; border-radius:4px; margin-bottom:20px;}\n        .error { background:#f8d7da; border:1px solid #f5c6cb; color:#721c24; padding:10px; border-radius:4px; margin-bottom:20px;}\n        .success { background:#d4edda; border:1px solid #c3e6cb; color:#155724; padding:10px; border-radius:4px; margin-bottom:20px;}\n        .rules-info { background:#e7f3ff; border:1px solid #b3d9ff; color:#004085; padding:15px; border-radius:6px; margin-bottom:20px;}\n        .rules-info h3 { margin:0 0 10px 0; color:#003399;}\n        .rules-info ul { margin:10px 0; padding-left:20px;}\n        .rules-info li { margin:5px 0;}\n        \n        /* Final Round Styles - Touch-based System */\n        .final-scoring-container {\n            display: flex;\n            gap: 15px;\n            padding: 15px;\n            background: #fff;\n            border: 3px solid #003399;\n            border-radius: 8px;\n            min-height: 450px;\n            box-shadow: 0 4px 12px rgba(0, 51, 153, 0.15);\n        }\n        \n        .players-column, .ranking-column {\n            flex: 1;\n            background: #f8f9fa;\n            border: 2px solid #e9ecef;\n            border-radius: 8px;\n            padding: 12px;\n            box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n            display: flex;\n            flex-direction: column;\n        }\n        \n        .players-column h3, .ranking-column h3 {\n            margin: 0 0 8px 0;\n            color: #333;\n            font-size: 16px;\n            text-align: center;\n            padding-bottom: 6px;\n            border-bottom: 2px solid #003399;\n        }\n        \n        .players-list,         .ranking-list {\n            display: flex;\n            flex-direction: column;\n            gap: 12px; /* Increased gap for better spacing */\n            flex: 1;\n            overflow-y: auto;\n            padding-left: 10px; /* Add left padding for rank labels */\n        }\n        \n        .player-item {\n            background: #003399;\n            color: #fff;\n            padding: 16px 12px; /* Reduced horizontal padding */\n            border-radius: 8px;\n            text-align: center;\n            font-size: 18px; /* Slightly smaller font */\n            font-weight: bold;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            user-select: none;\n            min-height: 60px;\n            height: 60px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n        }\n        \n        .player-item:hover {\n            background: #002266;\n            transform: translateY(-2px);\n            box-shadow: 0 4px 8px rgba(0,0,0,0.2);\n        }\n        \n        .player-item.selected {\n            background: #28a745;\n            transform: scale(1.05);\n            box-shadow: 0 6px 12px rgba(40, 167, 69, 0.3);\n        }\n        \n        .player-item.assigned {\n            opacity: 0.3;\n            background: #6c757d;\n            cursor: not-allowed;\n        }\n        \n        .ranking-slot {\n            background: #fff;\n            border: 2px solid #ddd;\n            border-radius: 8px;\n            padding: 16px 12px; /* Reduced horizontal padding */\n            text-align: center;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            min-height: 60px;\n            height: 60px;\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            justify-content: center;\n            position: relative;\n            margin-left: 20px; /* Add left margin for rank label */\n        }\n        \n        .ranking-slot::before {\n            content: attr(data-rank) \"위\";\n            position: absolute;\n            top: 50%;\n            left: -15px;\n            transform: translateY(-50%);\n            background: #003399;\n            color: #fff;\n            padding: 4px 8px;\n            border-radius: 12px;\n            font-size: 12px;\n            font-weight: bold;\n            z-index: 10;\n            white-space: nowrap;\n            box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n        }\n        \n        .ranking-slot:hover {\n            border-color: #003399;\n            background: #f8f9ff;\n        }\n        \n        .ranking-slot.assigned {\n            border-color: #28a745;\n            background: #f8fff9;\n            cursor: pointer;\n        }\n        \n        .ranking-slot.assigned:hover {\n            border-color: #dc3545;\n            background: #fff5f5;\n        }\n        \n        .ranking-slot.assigned:hover .player-assigned {\n            color: #dc3545;\n        }\n        \n        .ranking-slot.dragging {\n            opacity: 0.5;\n            transform: rotate(5deg);\n            border-color: #ffc107;\n            background: #fff3cd;\n        }\n        \n        .ranking-slot.drag-over {\n            border-color: #007bff;\n            background: #e3f2fd;\n            transform: scale(1.05);\n        }\n        \n        .player-assigned {\n            font-size: 20px;\n            font-weight: bold;\n            color: #28a745;\n            min-height: 24px;\n        }\n        \n        .final-actions {\n            text-align: center;\n            margin-top: 20px;\n            padding: 20px;\n        }\n        \n        /* Dance Progress Styles for Final Round */\n        .dance-progress-header .dance-progress {\n            display: flex;\n            justify-content: center;\n            gap: 10px;\n            flex-wrap: wrap;\n        }\n        \n        .dance-step {\n            padding: 8px 16px;\n            border-radius: 20px;\n            font-size: 14px;\n            font-weight: bold;\n            transition: all 0.3s ease;\n            cursor: pointer;\n            border: 2px solid #ddd;\n            background: #fff;\n            color: #666;\n        }\n        \n        .dance-step.current {\n            background: #003399;\n            color: #fff;\n            border-color: #003399;\n        }\n        \n        .dance-step.completed {\n            background: #28a745;\n            color: #fff;\n            border-color: #28a745;\n        }\n        \n        .dance-step.pending {\n            background: #f8f9fa;\n            color: #6c757d;\n            border-color: #dee2e6;\n        }\n        \n        .dance-step:hover:not(.pending) {\n            transform: translateY(-2px);\n            box-shadow: 0 4px 8px rgba(0,0,0,0.2);\n        }\n        \n        .btn {\n            padding: 12px 24px;\n            border: none;\n            border-radius: 6px;\n            cursor: pointer;\n            font-size: 14px;\n            font-weight: 600;\n            transition: all 0.2s;\n            margin: 5px;\n        }\n        \n        .btn-primary {\n            background: #003399;\n            color: #fff;\n        }\n        \n        .btn-primary:hover {\n            background: #002266;\n        }\n        \n        .btn-secondary {\n            background: #6c757d;\n            color: #fff;\n        }\n        \n        .btn-secondary:hover {\n            background: #545b62;\n        }\n        \n        /* Instagram Style Dance Container */\n        .dance-container { position: relative; overflow: hidden; }\n        \n        .dance-progress {\n    display: flex;\n    align-items: center;\n            margin-bottom: 20px;\n            padding: 0 20px;\n        }\n        \n        .progress-bar {\n            flex: 1;\n            height: 6px;\n            background: #e0e0e0;\n            border-radius: 3px;\n            margin-right: 15px;\n            overflow: hidden;\n        }\n        \n        .progress-fill {\n            height: 100%;\n            background: linear-gradient(90deg, #4CAF50, #2e7d32);\n            border-radius: 3px;\n            transition: width 0.3s ease;\n        }\n        \n        .progress-text {\n            font-size: 14px;\n            font-weight: bold;\n            color: #666;\n            white-space: nowrap;\n        }\n        \n        .dance-slider {\n    display: flex;\n            transition: transform 0.3s ease;\n        }\n        \n        .dance-page {\n            min-width: 100%;\n            padding: 0 20px;\n            box-sizing: border-box;\n        }\n        \n        .dance-header { \n            background:#4CAF50; \n            color:#fff; \n            padding:10px; \n            border-radius:6px; \n            margin-bottom:15px; \n            text-align:center;\n        }\n        .dance-header h3 { margin:0 0 5px 0; font-size:16px;}\n        .dance-header p { margin:0; font-size:12px; opacity:0.9;}\n        \n        /* Heat section styles */\n        .heat-section { margin-bottom:15px; padding:10px; background:#fff; border-radius:6px; border:1px solid #ddd;}\n        .heat-section h4 { margin:0 0 10px 0; color:#333; font-size:14px; text-align:center;}\n        \n        /* Players grid styles - Mobile optimized */\n        .players-grid { \n            display:grid; \n            grid-template-columns:repeat(auto-fill, minmax(60px, 1fr)); \n            gap:4px; \n            margin-bottom:15px;\n        }\n        .player-card { \n            background:#fff; \n            border:2px solid #ddd; \n            border-radius:6px; \n            padding:6px 2px; \n            text-align:center; \n            cursor:pointer; \n            transition:all 0.3s ease;\n            position:relative;\n            min-height:50px;\n            display:flex;\n            flex-direction:column;\n            justify-content:center;\n            align-items:center;\n        }\n        .player-card:hover { \n            border-color:#4CAF50; \n            transform:translateY(-2px); \n            box-shadow:0 4px 8px rgba(0,0,0,0.15);\n        }\n        .player-card.selected { \n            border-color:#4CAF50; \n            background:linear-gradient(135deg, #e8f5e8, #c8e6c9);\n            transform:scale(1.05);\n            box-shadow:0 6px 12px rgba(76, 175, 80, 0.3);\n        }\n        .player-number { \n            font-size:24px; \n            font-weight:900; \n            color:#333;\n            margin:0;\n            line-height:1;\n        }\n        .player-card.selected .player-number {\n            color:#2e7d32;\n        }\n        .recall-checkbox { \n            display:none; /* Hide checkbox, use card click instead */\n        }\n        \n        /* Recall status - Large and clear */\n        .recall-status { \n            text-align:center; \n            padding:15px; \n            background:#f0f0f0; \n            border-radius:8px; \n            font-weight:bold; \n            color:#333;\n            font-size:16px;\n            margin:15px 0;\n            border:2px solid #ddd;\n        }\n        .recall-status.complete { \n            background:linear-gradient(135deg, #d4edda, #c3e6cb); \n            color:#155724; \n            border:3px solid #28a745;\n            animation:pulse 2s infinite;\n        }\n        .recall-status.over { \n            background:linear-gradient(135deg, #f8d7da, #f5c6cb); \n            color:#721c24; \n            border:3px solid #dc3545;\n        }\n        .recall-status .selected-count {\n            font-size:24px;\n            font-weight:900;\n        }\n        \n        @keyframes pulse {\n            0% { transform: scale(1); }\n            50% { transform: scale(1.02); }\n            100% { transform: scale(1); }\n        }\n        \n        /* Drag and drop for final ranking */\n        .ranking-container { display:flex; flex-direction:column; gap:10px; margin:20px 0;}\n        .ranking-item { \n            display:flex; \n            align-items:center; \n            background:#fff; \n            border:2px solid #ddd; \n            border-radius:8px; \n            padding:15px; \n            cursor:move;\n            transition:all 0.3s ease;\n            user-select:none;\n        }\n        .ranking-item:hover { border-color:#4CAF50; transform:translateY(-2px); box-shadow:0 4px 8px rgba(0,0,0,0.1);}\n        .ranking-item.dragging { opacity:0.5; transform:rotate(5deg);}\n        .ranking-number { \n            background:#4CAF50; \n            color:#fff; \n            width:40px; \n            height:40px; \n            border-radius:50%; \n            display:flex; \n            align-items:center; \n            justify-content:center; \n            font-weight:bold; \n            margin-right:15px;\n            flex-shrink:0;\n        }\n        .ranking-player { \n            flex:1; \n            font-size:18px; \n            font-weight:bold; \n            color:#333;\n        }\n        .ranking-place-input { \n            width:60px; \n            padding:8px; \n            border:2px solid #ddd; \n            border-radius:4px; \n            text-align:center; \n            font-size:16px; \n            font-weight:bold;\n            margin-left:15px;\n        }\n        .ranking-place-input:focus { border-color:#4CAF50; outline:none;}\n        \n        /* Fixed Progress Bar for Mobile */\n        .fixed-progress {\n            position: fixed;\n            top: 0;\n            left: 0;\n            right: 0;\n            background: linear-gradient(135deg, #ff9800, #ff5722);\n            color: white;\n            padding: 12px 20px;\n            text-align: center;\n            font-size: 18px;\n            font-weight: bold;\n            z-index: 1000;\n            box-shadow: 0 2px 10px rgba(0,0,0,0.3);\n            transform: translateY(-100%);\n            transition: transform 0.3s ease;\n        }\n        .fixed-progress.show {\n            transform: translateY(0);\n        }\n        .fixed-progress.complete {\n            background: linear-gradient(135deg, #4CAF50, #2e7d32);\n        }\n        .fixed-progress.over {\n            background: linear-gradient(135deg, #f44336, #d32f2f);\n        }\n        \n        /* Add top padding to body when progress bar is shown */\n        body.progress-bar-visible {\n            padding-top: 60px;\n        }\n        \n        /* Bottom Navigation */\n        .bottom-nav {\n            position: fixed;\n            bottom: 0;\n            left: 0;\n            right: 0;\n            background: #fff;\n            border-top: 2px solid #e0e0e0;\n            padding: 10px 20px;\n            display: flex;\n            justify-content: space-around;\n    align-items: center;\n            z-index: 1000;\n            box-shadow: 0 -2px 10px rgba(0,0,0,0.1);\n        }\n        \n        .nav-button {\n            background: #f5f5f5;\n            color: #333;\n            border: none;\n            padding: 12px 20px;\n            border-radius: 8px;\n            cursor: pointer;\n            font-size: 14px;\n            font-weight: bold;\n            transition: all 0.3s ease;\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            gap: 4px;\n            min-width: 80px;\n        }\n        \n        .nav-button:hover {\n            background: #e0e0e0;\n            transform: translateY(-2px);\n        }\n        \n        .nav-button.primary {\n            background: #2196F3;\n            color: #fff;\n        }\n        \n        .nav-button.primary:hover {\n            background: #1976D2;\n        }\n        \n        .nav-icon {\n            font-size: 18px;\n        }\n        \n        .nav-text {\n            font-size: 12px;\n        }\n        \n        /* Add bottom padding to body for navigation */\n        body {\n            padding-bottom: 80px;\n        }\n        \n        /* Tablet responsive - Optimized for tablet screens */\n        @media (min-width: 769px) and (max-width: 1024px) {\n            .event-info {\n                padding: 3px !important;\n                margin-bottom: 2px !important;\n            }\n            \n            .event-info h1 {\n                font-size: 16px !important;\n                margin-bottom: 1px !important;\n            }\n            \n            .event-info p {\n                font-size: 11px !important;\n            }\n            \n            .saved-scores-info {\n                padding: 4px !important;\n                margin-bottom: 6px !important;\n            }\n            \n            .saved-scores-info h3 {\n                font-size: 12px !important;\n                margin-bottom: 2px !important;\n            }\n            \n            .dance-progress-header {\n                padding: 3px !important;\n                margin-bottom: 4px !important;\n            }\n            \n            .dance-progress-header h3 {\n                font-size: 12px !important;\n                margin-bottom: 1px !important;\n            }\n            \n            .final-scoring-container {\n                gap: 10px;\n                padding: 10px;\n                min-height: 380px;\n            }\n            \n            .players-column, .ranking-column {\n                padding: 8px;\n            }\n            \n            .players-column h3, .ranking-column h3 {\n                font-size: 14px;\n                margin-bottom: 6px;\n            }\n            \n            .players-list, .ranking-list {\n                gap: 8px;\n            }\n            \n            .player-item, .ranking-slot {\n                padding: 12px 16px;\n                font-size: 16px;\n                min-height: 50px;\n                height: 50px;\n            }\n            \n            .ranking-slot::before {\n                font-size: 10px;\n                padding: 2px 6px;\n            }\n        }\n        \n        /* Mobile responsive - Optimized for touch */\n        @media (max-width: 768px) {\n            .final-scoring-container {\n                flex-direction: row; /* 좌우 배치 유지 */\n                gap: 10px;\n                padding: 10px;\n                min-height: 400px;\n            }\n            \n            .players-column, .ranking-column {\n                min-height: 350px;\n                flex: 1;\n            }\n            \n            .player-item, .ranking-slot {\n                padding: 12px;\n                font-size: 16px;\n                min-height: 45px;\n                height: 45px;\n            }\n            \n            .ranking-slot::before {\n                font-size: 10px;\n                padding: 2px 6px;\n                top: 50%;\n                left: -12px;\n                transform: translateY(-50%);\n            }\n            \n            .ranking-slot {\n                margin-left: 15px; /* Smaller margin for mobile */\n            }\n            \n            .player-assigned {\n                font-size: 16px;\n            }\n            \n            .players-grid { \n                grid-template-columns:repeat(auto-fill, minmax(50px, 1fr)); \n                gap:4px;\n                margin-bottom:10px;\n            }\n            .player-card { \n                padding:4px 2px;\n                min-height:45px;\n                border-width:2px;\n            }\n            .player-number { \n                font-size:20px;\n            }\n            .dance-header h3 { \n                font-size:14px;\n            }\n            .dance-header p {\n                font-size:12px;\n            }\n            .recall-status {\n                padding:15px;\n                font-size:16px;\n                margin:15px 0;\n            }\n            .recall-status .selected-count {\n                font-size:20px;\n            }\n            .ranking-item { \n                padding:10px;\n                flex-direction:column;\n                gap:8px;\n            }\n            .ranking-number { \n                width:35px; \n                height:35px; \n                margin-right:0;\n                margin-bottom:5px;\n            }\n            .ranking-player { \n                font-size:16px;\n                text-align:center;\n            }\n            .ranking-place-input {\n                width:50px;\n                margin-left:0;\n            }\n        }\n        \n        @media (max-width: 480px) {\n            .players-grid { \n                grid-template-columns:repeat(auto-fill, minmax(55px, 1fr)); \n                gap:5px;\n            }\n            .player-card { \n                padding:5px 2px;\n                min-height:45px;\n            }\n            .player-number { \n                font-size:22px;\n            }\n            .recall-status {\n                padding:12px;\n                font-size:14px;\n            }\n            .recall-status .selected-count {\n                font-size:18px;\n            }\n        }\n    </style>\n</head>\n<body>\n<div class=\"scoring-container\">\n    <?php \n    // Determine scoring type and recall count\n    $is_final = false;\n    $is_preliminary = false;\n    $recall_count = $event_data['recall_count'] ?? 0;\n    \n    if ($round_info && isset($round_info[$event_no])) {\n        $round_display = $round_info[$event_no]['round_display'] ?? '';\n        $is_final = (strpos($round_display, 'Final') !== false);\n        $is_preliminary = !$is_final;\n    } else {\n        // Fallback to old system\n        $is_final = (strpos($event_data['round_type'], 'Final') !== false);\n        $is_preliminary = !$is_final;\n    }\n    ?>\n\n    <!-- Judge Info and Recall in One Line -->\n    <div style=\"margin-bottom:15px; text-align:center; padding:10px; background:#f8f9fa; border-radius:6px;\">\n        <div style=\"display:flex; justify-content:space-between; align-items:center; flex-wrap:wrap; gap:10px;\">\n            <div style=\"font-size:14px; font-weight:bold; color:#333;\">\n                #<?=h($_SESSION['scoring_judge_id'])?> <?=h($_SESSION['scoring_judge_name'])?>(<?=h($_SESSION['scoring_judge_country'])?>)\n            </div>\n            <?php if (!$is_final && $event_no !== '8'): ?>\n            <div style=\"font-size:16px; font-weight:bold; color:#ff9800;\">\n                Recall <span id=\"recallProgress\">0</span> / <?= $recall_count ?>\n            </div>\n            <?php endif; ?>\n        </div>\n    </div>\n    \n    \n            <div class=\"event-info\" style=\"display:flex; justify-content:space-between; align-items:center; margin-bottom:2px; padding:4px; background:#f8f9fa; border-radius:4px;\">\n        <div style=\"flex:1;\">\n            <h1 style=\"margin:0 0 2px 0; color:#333; font-size:18px; font-weight:bold;\"><?=h($event_data['name'])?></h1>\n            <?php \n            // Get round display\n            $round_display = '';\n            if ($round_info && isset($round_info['round_info'][$event_no])) {\n                $round_display = $round_info['round_info'][$event_no] ?? '';\n            } else {\n                $round_display = trim($event_data['round_type'] . ' ' . $event_data['round_num']);\n            }\n            \n            // Get dance names\n            $dance_names = getDanceNames($event_data['dances'], $dance_mapping);\n            ?>\n            <p style=\"margin:0; font-size:12px; color:#666;\">\n                <?=h($round_display)?> (<?=h(implode(',', $dance_names))?>) | <?=count($players)?> couples<?php if ($hits_data && !empty($hits_data)): ?> / <?=count($hits_data)?> heats<?php endif; ?>\n            </p>\n                    </div>\n        <div style=\"text-align:right; font-size:11px; color:#666;\">\n            <div style=\"font-weight:bold; color:#2e7d32;\">\n                <?php if ($saved_scores): ?>\n                    <?= implode(', ', array_keys($saved_scores)) ?>\n                <?php else: ?>\n                    없음\n                <?php endif; ?>\n                    </div>\n        </div>\n                    </div>\n\n    \n\n    <div id=\"message\"></div>\n    \n    <!-- Fixed Progress Bar for Mobile (Preliminary/Recall only) -->\n    <?php if (!$is_final && $event_no !== '8'): ?>\n    <div id=\"fixedProgress\" class=\"fixed-progress\">\n        Recall <span id=\"fixedRecallCount\">0</span> / <?= $recall_count ?>\n                    </div>\n    <?php endif; ?>\n    \n\n    <form id=\"scoringForm\">\n        <input type=\"hidden\" name=\"comp_id\" value=\"<?=h($comp_id)?>\">\n        <input type=\"hidden\" name=\"event_no\" value=\"<?=h($event_no)?>\">\n        <input type=\"hidden\" name=\"is_final\" value=\"<?= $is_final ? '1' : '0' ?>\">\n        <input type=\"hidden\" name=\"recall_count\" value=\"<?= $recall_count ?>\">\n        \n        <?php if ($is_final || $event_no === '8'): ?>\n            <!-- Final Round - Touch-based Ranking System -->\n        <div class=\"adjudicator-section\">\n            <!-- Dance Progress Header -->\n            <div class=\"dance-progress-header\" id=\"danceProgressHeader\" style=\"display:flex; justify-content:flex-end; align-items:center; background: #f8f9fa; padding: 4px; border-radius: 4px; margin-bottom: 4px;\">\n                <div style=\"display:flex; align-items:center; gap:10px;\">\n                    <div class=\"dance-progress\" id=\"danceProgress\">\n                        <!-- Dance progress will be populated by JavaScript -->\n                    </div>\n                    <div id=\"currentDanceDisplay\" style=\"font-size: 12px; font-weight: bold; color: #003399;\">\n                        <!-- Current dance will be displayed here -->\n                    </div>\n                </div>\n            </div>\n            \n            <p style=\"text-align:center; color:#666; margin:2px 0; font-size:11px;\">\n                💡 등번호 터치 → 등위 빈칸 터치 | 🔄 순위 변경: 기존 순위 터치/드래그 | ❌ 취소: 배정된 등번호 재터치\n            </p>\n                \n                <div class=\"final-scoring-container\" style=\"margin-top: 0;\">\n                    <div class=\"players-column\">\n                        <h3>선수 목록</h3>\n                        <div class=\"players-list\" id=\"playersList\">\n                            <?php foreach ($players as $player_no): ?>\n                            <div class=\"player-item\" data-player=\"<?=h($player_no)?>\" onclick=\"selectPlayer(this)\">\n                                <?=h($player_no)?>\n                </div>\n                <?php endforeach; ?>\n                </div>\n                    </div>\n                    \n                    <div class=\"ranking-column\">\n                        <h3>순위</h3>\n                        <div class=\"ranking-list\" id=\"rankingList\">\n                            <?php for ($i = 1; $i <= count($players); $i++): ?>\n                            <div class=\"ranking-slot\" data-rank=\"<?=$i?>\" onclick=\"assignRank(this)\" \n                                 ondblclick=\"swapWithNext(this)\" \n                                 draggable=\"true\" ondragstart=\"dragStart(event)\" ondragover=\"dragOver(event)\" \n                                 ondrop=\"drop(event)\" ondragend=\"dragEnd(event)\"\n                                 onmousedown=\"handleMouseDown(event)\" onmouseup=\"handleMouseUp(event)\">\n                                <span class=\"player-assigned\" id=\"player-<?=$i?>\"></span>\n                                <input type=\"hidden\" name=\"final_ranking[<?=$i?>]\" id=\"input-<?=$i?>\" value=\"\">\n                            </div>\n                            <?php endfor; ?>\n                        </div>\n                    </div>\n                </div>\n                \n                <div class=\"final-actions\">\n                    <button type=\"button\" id=\"saveFinalScores\" class=\"btn btn-primary\">\n                        점수 저장\n                    </button>\n                    <button type=\"button\" id=\"nextFinalDance\" class=\"btn btn-secondary\" style=\"display:none;\">\n                        다음 종목\n                    </button>\n                    <button type=\"button\" id=\"clearFinalScores\" class=\"btn btn-secondary\">\n                        초기화\n                    </button>\n                </div>\n            </div>\n            <?php else: ?>\n            <!-- Preliminary Round - Instagram Style Dance by Dance System -->\n            <div class=\"dance-container\">\n                <div class=\"dance-progress\">\n                    <div class=\"progress-bar\">\n                        <div class=\"progress-fill\" style=\"width: 0%\"></div>\n                    </div>\n                    <div class=\"progress-text\">\n                        <span class=\"current-dance\">1</span> / <?= count($event_data['dances']) ?>\n                    </div>\n                </div>\n                \n                <div class=\"dance-slider\" id=\"danceSlider\">\n                    <?php foreach ($event_data['dances'] as $dance_index => $dance): ?>\n                        <?php \n                        $dance_display = isset($dance_mapping[$dance]) ? $dance_mapping[$dance] : $dance;\n                        ?>\n                        <div class=\"dance-page\" data-dance=\"<?=h($dance)?>\" data-dance-index=\"<?=$dance_index?>\">\n                            <div class=\"dance-header\">\n                                <h3><?=h($dance_display)?></h3>\n                                <p>총 <?=count($players)?>명 중 <?= $recall_count ?>명 선택</p>\n                            </div>\n                            \n                            <?php if ($hits_data && !empty($hits_data)): ?>\n                                <!-- Heat-based display -->\n                                <?php foreach ($hits_data as $heat_no => $heat_players): ?>\n                                    <div class=\"heat-section\">\n                                        <h4>히트 <?= $heat_no ?></h4>\n                                        <div class=\"players-grid\">\n                                            <?php foreach ($heat_players as $player_no): ?>\n                                                <div class=\"player-card\" data-player=\"<?=h($player_no)?>\">\n                                                    <div class=\"player-number\"><?=h($player_no)?></div>\n                                                    <input type=\"checkbox\" \n                                                           name=\"recall_marks[<?=h($dance)?>][<?=h($player_no)?>]\" \n                                                           class=\"recall-checkbox\"\n                                                           data-dance=\"<?=h($dance)?>\"\n                                                           data-player=\"<?=h($player_no)?>\">\n                                                </div>\n                                            <?php endforeach; ?>\n                                        </div>\n                                    </div>\n                                <?php endforeach; ?>\n                            <?php else: ?>\n                                <!-- No heats - all players together -->\n                                <div class=\"players-grid\">\n                                    <?php foreach ($players as $player_no): ?>\n                                        <div class=\"player-card\" data-player=\"<?=h($player_no)?>\">\n                                            <div class=\"player-number\"><?=h($player_no)?></div>\n                                            <input type=\"checkbox\" \n                                                   name=\"recall_marks[<?=h($dance)?>][<?=h($player_no)?>]\" \n                                                   class=\"recall-checkbox\"\n                                                   data-dance=\"<?=h($dance)?>\"\n                                                   data-player=\"<?=h($player_no)?>\">\n                                        </div>\n                                    <?php endforeach; ?>\n                                </div>\n            <?php endif; ?>\n                            \n                            <div class=\"recall-status\">\n                                <div style=\"font-size:20px; margin-bottom:5px;\">📊 Recall 진행 상황</div>\n                                <div style=\"font-size:28px; font-weight:900; color:#2e7d32;\">\n                                    <span class=\"selected-count\">0</span> / <?= $recall_count ?>명\n        </div>\n                                <div style=\"font-size:14px; margin-top:5px; opacity:0.8;\">\n                                    <?= $recall_count ?>명을 선택하면 전송할 수 있습니다\n    </div>\n                            </div>\n                            \n                            <div class=\"dance-submit-section\" style=\"text-align:center; margin-top:20px; display:none;\">\n                                <button type=\"button\" \n                                        class=\"dance-submit-btn\" \n                                        data-dance=\"<?=h($dance)?>\"\n                                        style=\"background:#4CAF50; color:#fff; border:none; padding:15px 30px; font-size:16px; font-weight:bold; border-radius:8px; cursor:pointer;\">\n                                    <?=h($dance_display)?> 전송\n                                </button>\n                            </div>\n                        </div>\n                    <?php endforeach; ?>\n                </div>\n                \n                <div class=\"dance-navigation\" style=\"text-align:center; margin-top:20px;\">\n                    <button type=\"button\" id=\"prevDance\" style=\"background:#666; color:#fff; border:none; padding:10px 20px; margin:0 10px; border-radius:5px; cursor:pointer; display:none;\">이전</button>\n                    <button type=\"button\" id=\"nextDance\" style=\"background:#2196F3; color:#fff; border:none; padding:10px 20px; margin:0 10px; border-radius:5px; cursor:pointer; display:none;\">다음</button>\n                </div>\n            </div>\n            <?php endif; ?>\n\n    </form>\n    </div>\n\n    <script>\ndocument.getElementById('scoringForm').addEventListener('submit', function(e) {\n    e.preventDefault();\n    \n    const formData = new FormData(this);\n    const isFinal = formData.get('is_final') === '1';\n    const recallCount = parseInt(formData.get('recall_count'));\n    \n    if (isFinal) {\n        // Final round - ranking system\n        handleFinalRound(formData);\n    } else {\n        // Preliminary round - recall system\n        handleRecallRound(formData, recallCount);\n    }\n});\n\nfunction handleFinalRound(formData) {\n    const adjudicatorMarks = {};\n    \n    // Collect all marks\n    const inputs = document.querySelectorAll('input[name^=\"adjudicator_marks\"]');\n    inputs.forEach(input => {\n        const name = input.name;\n        const matches = name.match(/adjudicator_marks\\[(\\d+)\\]\\[(\\d+)\\]/);\n        if (matches) {\n            const adjudicatorId = matches[1];\n            const coupleId = matches[2];\n            const place = parseInt(input.value);\n            \n            if (!isNaN(place) && place > 0) {\n                if (!adjudicatorMarks[adjudicatorId]) {\n                    adjudicatorMarks[adjudicatorId] = {};\n                }\n                adjudicatorMarks[adjudicatorId][coupleId] = place;\n            }\n        }\n    });\n    \n    // Validate that all places are filled and unique\n    const allPlaces = [];\n    let isValid = true;\n    let errorMessage = '';\n    \n    inputs.forEach(input => {\n        const place = parseInt(input.value);\n        if (isNaN(place) || place < 1 || place > <?=count($players)?>) {\n            isValid = false;\n            errorMessage = '모든 순위를 1부터 <?=count($players)?>까지 입력해주세요.';\n        } else {\n            if (allPlaces.includes(place)) {\n                isValid = false;\n                errorMessage = '같은 순위를 두 선수에게 줄 수 없습니다.';\n            }\n            allPlaces.push(place);\n        }\n    });\n    \n    if (!isValid) {\n        showMessage(errorMessage, 'error');\n        return;\n    }\n    \n    // Submit data\n    const submitData = {\n        comp_id: formData.get('comp_id'),\n        event_no: formData.get('event_no'),\n        type: 'final',\n        adjudicator_marks: adjudicatorMarks\n    };\n    \n    submitScores(submitData);\n}\n\nfunction handleRecallRound(formData, recallCount) {\n    const recallMarks = {};\n    let totalSelected = 0;\n    let isValid = true;\n    let errorMessage = '';\n    \n    // Collect recall marks for each dance\n    const danceSections = document.querySelectorAll('.dance-section');\n    danceSections.forEach(section => {\n        const dance = section.dataset.dance;\n        const checkboxes = section.querySelectorAll('.recall-checkbox:checked');\n        \n        recallMarks[dance] = [];\n        checkboxes.forEach(checkbox => {\n            recallMarks[dance].push(checkbox.dataset.player);\n        });\n        \n        totalSelected += checkboxes.length;\n    });\n    \n    // Check if total selected count matches recall count\n    if (totalSelected !== recallCount) {\n        isValid = false;\n        errorMessage = `전체 ${recallCount}명을 선택해주세요. (현재 ${totalSelected}명 선택됨)`;\n    }\n    \n    if (!isValid) {\n        showMessage(errorMessage, 'error');\n        return;\n    }\n    \n    // Submit data\n    const submitData = {\n        comp_id: formData.get('comp_id'),\n        event_no: formData.get('event_no'),\n        type: 'recall',\n        recall_marks: recallMarks\n    };\n    \n    submitScores(submitData);\n}\n\nfunction submitScores(submitData) {\n    fetch('scoring/save_scores.php', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(submitData)\n    })\n    .then(response => response.json())\n    .then(data => {\n        if (data.success) {\n            showMessage('점수가 성공적으로 저장되었습니다!', 'success');\n            if (data.results) {\n                showResults(data.results);\n            }\n        } else {\n            showMessage('저장 실패: ' + (data.error || '알 수 없는 오류'), 'error');\n        }\n    })\n    .catch(error => {\n        showMessage('오류가 발생했습니다: ' + error, 'error');\n    });\n}\n\nfunction clearAllScores() {\n    if (confirm('모든 점수를 지우시겠습니까?')) {\n        // Clear final round inputs\n        const inputs = document.querySelectorAll('.place-input');\n        inputs.forEach(input => input.value = '');\n        \n        // Clear recall checkboxes\n        const checkboxes = document.querySelectorAll('.recall-checkbox');\n        checkboxes.forEach(checkbox => {\n            checkbox.checked = false;\n            checkbox.closest('.player-card').classList.remove('selected');\n        });\n        \n        // Update recall status\n        updateRecallStatus();\n        \n        showMessage('모든 점수가 지워졌습니다.', 'success');\n    }\n}\n\n// Recall system event handlers\n    document.addEventListener('DOMContentLoaded', function() {\n    // Handle player card clicks - Touch optimized\n    document.querySelectorAll('.player-card').forEach(card => {\n        // Click event\n        card.addEventListener('click', function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            togglePlayerSelection(this);\n        });\n        \n        // Touch events for better mobile experience\n        card.addEventListener('touchstart', function(e) {\n            e.preventDefault();\n            this.style.transform = 'scale(0.95)';\n        });\n        \n        card.addEventListener('touchend', function(e) {\n            e.preventDefault();\n            this.style.transform = '';\n            togglePlayerSelection(this);\n        });\n        \n        // Prevent default touch behavior\n        card.addEventListener('touchmove', function(e) {\n            e.preventDefault();\n        });\n    });\n\n    // Handle checkbox changes\n    document.querySelectorAll('.recall-checkbox').forEach(checkbox => {\n        checkbox.addEventListener('change', function() {\n            updatePlayerCardState(this.closest('.player-card'));\n            updateRecallStatus();\n        });\n    });\n\n    // Initialize recall status\n    updateRecallStatus();\n    \n    // Initialize drag and drop for final ranking\n    initializeDragAndDrop();\n    \n    // Load saved scores\n    loadSavedScores();\n    \n    // Initialize fixed progress bar\n    initializeFixedProgress();\n});\n\nfunction initializeDragAndDrop() {\n    const container = document.getElementById('rankingContainer');\n    if (!container) return;\n    \n    let draggedElement = null;\n    \n    // Handle drag start\n    container.addEventListener('dragstart', function(e) {\n        if (e.target.classList.contains('ranking-item')) {\n            draggedElement = e.target;\n            e.target.classList.add('dragging');\n            e.dataTransfer.effectAllowed = 'move';\n        }\n    });\n    \n    // Handle drag end\n    container.addEventListener('dragend', function(e) {\n        if (e.target.classList.contains('ranking-item')) {\n            e.target.classList.remove('dragging');\n            draggedElement = null;\n        }\n    });\n    \n    // Handle drag over\n    container.addEventListener('dragover', function(e) {\n        e.preventDefault();\n        e.dataTransfer.dropEffect = 'move';\n        \n        const afterElement = getDragAfterElement(container, e.clientY);\n        if (afterElement == null) {\n            container.appendChild(draggedElement);\n        } else {\n            container.insertBefore(draggedElement, afterElement);\n        }\n    });\n    \n    // Handle drop\n    container.addEventListener('drop', function(e) {\n        e.preventDefault();\n        updateRankingNumbers();\n    });\n    \n    // Handle manual input changes\n    container.addEventListener('input', function(e) {\n        if (e.target.classList.contains('ranking-place-input')) {\n            updateRankingFromInputs();\n        }\n    });\n}\n\nfunction getDragAfterElement(container, y) {\n    const draggableElements = [...container.querySelectorAll('.ranking-item:not(.dragging)')];\n    \n    return draggableElements.reduce((closest, child) => {\n        const box = child.getBoundingClientRect();\n        const offset = y - box.top - box.height / 2;\n        \n        if (offset < 0 && offset > closest.offset) {\n            return { offset: offset, element: child };\n        } else {\n            return closest;\n        }\n    }, { offset: Number.NEGATIVE_INFINITY }).element;\n}\n\nfunction updateRankingNumbers() {\n    const container = document.getElementById('rankingContainer');\n    if (!container) return;\n    \n    const items = container.querySelectorAll('.ranking-item');\n    items.forEach((item, index) => {\n        const numberDiv = item.querySelector('.ranking-number');\n        const input = item.querySelector('.ranking-place-input');\n        \n        numberDiv.textContent = index + 1;\n        input.value = index + 1;\n        \n        // Update input name to reflect new position\n        const player = item.dataset.player;\n        input.name = `adjudicator_marks[${index + 1}][${player}]`;\n    });\n}\n\nfunction updateRankingFromInputs() {\n    const container = document.getElementById('rankingContainer');\n    if (!container) return;\n    \n    const items = Array.from(container.querySelectorAll('.ranking-item'));\n    const inputs = items.map(item => ({\n        element: item,\n        value: parseInt(item.querySelector('.ranking-place-input').value) || 0\n    }));\n    \n    // Sort by input value\n    inputs.sort((a, b) => a.value - b.value);\n    \n    // Reorder DOM elements\n    inputs.forEach((input, index) => {\n        container.appendChild(input.element);\n        \n        // Update visual number\n        const numberDiv = input.element.querySelector('.ranking-number');\n        numberDiv.textContent = index + 1;\n        \n        // Update input name\n        const player = input.element.dataset.player;\n        const inputElement = input.element.querySelector('.ranking-place-input');\n        inputElement.name = `adjudicator_marks[${index + 1}][${player}]`;\n    });\n}\n\nfunction loadSavedScores() {\n    <?php if ($saved_scores && !$is_final): ?>\n    // Load saved recall scores\n    const savedScores = <?= json_encode($saved_scores) ?>;\n    \n    Object.keys(savedScores).forEach(dance => {\n        const danceSection = document.querySelector(`[data-dance=\"${dance}\"]`);\n        if (!danceSection) return;\n        \n        const selectedPlayers = savedScores[dance];\n        selectedPlayers.forEach(playerNo => {\n            const checkbox = danceSection.querySelector(`input[data-player=\"${playerNo}\"]`);\n            if (checkbox) {\n                checkbox.checked = true;\n                updatePlayerCardState(checkbox.closest('.player-card'));\n            }\n        });\n    });\n\n    updateRecallStatus();\n    <?php endif; ?>\n}\n\nfunction initializeFixedProgress() {\n    const fixedProgress = document.getElementById('fixedProgress');\n    if (!fixedProgress) return;\n    \n    let isScrolling = false;\n    let scrollTimeout;\n    \n    // Show progress bar when scrolling down\n    window.addEventListener('scroll', function() {\n        if (!isScrolling) {\n            fixedProgress.classList.add('show');\n            document.body.classList.add('progress-bar-visible');\n        }\n        \n        isScrolling = true;\n        clearTimeout(scrollTimeout);\n        \n        scrollTimeout = setTimeout(function() {\n            isScrolling = false;\n            // Hide progress bar after scrolling stops (only if no selections)\n            const totalSelected = document.querySelectorAll('.recall-checkbox:checked').length;\n            if (totalSelected === 0) {\n                fixedProgress.classList.remove('show');\n                document.body.classList.remove('progress-bar-visible');\n            }\n        }, 1000);\n    });\n    \n    // Touch events for mobile\n    document.addEventListener('touchstart', function() {\n        fixedProgress.classList.add('show');\n        document.body.classList.add('progress-bar-visible');\n    });\n}\n\nfunction togglePlayerSelection(card) {\n    const checkbox = card.querySelector('.recall-checkbox');\n    checkbox.checked = !checkbox.checked;\n    updatePlayerCardState(card);\n    updateRecallStatus();\n    updateTopRecallStatus(); // Add this line\n}\n\nfunction updatePlayerCardState(card) {\n    const checkbox = card.querySelector('.recall-checkbox');\n    if (checkbox.checked) {\n        card.classList.add('selected');\n    } else {\n        card.classList.remove('selected');\n    }\n}\n\nfunction updateTopRecallStatus() {\n    // Get all checked checkboxes from all pages\n    const allCheckboxes = document.querySelectorAll('.recall-checkbox:checked');\n    const selectedCount = allCheckboxes.length;\n    const recallCount = <?= json_encode(intval($recall_count)) ?>;\n    \n    // Update top recall progress display\n    const topRecallProgress = document.getElementById('recallProgress');\n    if (topRecallProgress) {\n        topRecallProgress.textContent = selectedCount;\n        \n        // Update color based on progress\n        if (selectedCount === recallCount) {\n            topRecallProgress.style.color = '#4CAF50';\n            topRecallProgress.style.fontWeight = 'bold';\n        } else if (selectedCount > recallCount) {\n            topRecallProgress.style.color = '#f44336';\n            topRecallProgress.style.fontWeight = 'bold';\n        } else {\n            topRecallProgress.style.color = '#ff9800';\n            topRecallProgress.style.fontWeight = 'normal';\n        }\n    }\n    \n    // Update fixed progress bar\n    const fixedRecallCount = document.getElementById('fixedRecallCount');\n    if (fixedRecallCount) {\n        fixedRecallCount.textContent = selectedCount;\n    }\n    \n    // Update submit button state for current dance page\n    const currentPage = document.querySelector('.dance-page[data-dance-index=\"' + currentDanceIndex + '\"]');\n    if (currentPage) {\n        const submitSection = currentPage.querySelector('.dance-submit-section');\n        const submitBtn = currentPage.querySelector('.dance-submit-btn');\n        \n        if (submitSection && submitBtn) {\n            // Show/hide submit section based on selection count\n            if (selectedCount === recallCount) {\n                submitSection.style.display = 'block';\n                submitBtn.disabled = false;\n                submitBtn.style.opacity = '1';\n                submitBtn.style.cursor = 'pointer';\n            } else {\n                submitSection.style.display = 'none';\n                submitBtn.disabled = true;\n                submitBtn.style.opacity = '0.5';\n                submitBtn.style.cursor = 'not-allowed';\n            }\n        }\n    }\n}\n\nfunction updateRecallStatus() {\n    const currentPage = document.querySelector('.dance-page[data-dance-index=\"' + currentDanceIndex + '\"]');\n    \n    if (!currentPage) {\n        // Fallback: get all checked checkboxes from all pages\n        const allCheckboxes = document.querySelectorAll('.recall-checkbox:checked');\n        const selectedCount = allCheckboxes.length;\n        const recallCount = <?= json_encode(intval($recall_count)) ?>;\n        \n        // Update top recall progress display\n        const topRecallProgress = document.getElementById('recallProgress');\n        if (topRecallProgress) {\n            topRecallProgress.textContent = selectedCount;\n            \n            // Update color based on progress\n            if (selectedCount === recallCount) {\n                topRecallProgress.style.color = '#4CAF50';\n                topRecallProgress.style.fontWeight = 'bold';\n            } else if (selectedCount > recallCount) {\n                topRecallProgress.style.color = '#f44336';\n                topRecallProgress.style.fontWeight = 'bold';\n            } else {\n                topRecallProgress.style.color = '#ff9800';\n                topRecallProgress.style.fontWeight = 'normal';\n            }\n        }\n        return;\n    }\n    \n    const checkboxes = currentPage.querySelectorAll('.recall-checkbox:checked');\n    const selectedCount = checkboxes.length;\n    const recallCount = <?= json_encode(intval($recall_count)) ?>;\n    \n    // Top recall progress is handled by updateTopRecallStatus function\n    \n    // Update fixed progress bar\n    const fixedProgress = document.getElementById('fixedProgress');\n    if (fixedProgress) {\n        const progressText = fixedProgress.querySelector('#recallProgress');\n        if (progressText) {\n            progressText.textContent = selectedCount;\n        }\n        \n        // Update progress bar styling\n        fixedProgress.classList.remove('complete', 'over');\n        if (selectedCount === recallCount) {\n            fixedProgress.classList.add('complete');\n        } else if (selectedCount > recallCount) {\n            fixedProgress.classList.add('over');\n        }\n    }\n    \n    // Update current page status\n    const statusDiv = currentPage.querySelector('.recall-status');\n    const countSpan = statusDiv.querySelector('.selected-count');\n    const submitSection = currentPage.querySelector('.dance-submit-section');\n    \n    if (countSpan) {\n        countSpan.textContent = selectedCount;\n    }\n    \n    // Update status styling\n    statusDiv.classList.remove('complete', 'over');\n    if (selectedCount === recallCount) {\n        statusDiv.classList.add('complete');\n        if (submitSection) submitSection.style.display = 'block';\n    } else if (selectedCount > recallCount) {\n        statusDiv.classList.add('over');\n        if (submitSection) submitSection.style.display = 'none';\n    } else {\n        if (submitSection) submitSection.style.display = 'none';\n    }\n}\n\nfunction showMessage(message, type) {\n    const messageDiv = document.getElementById('message');\n    messageDiv.innerHTML = `<div class=\"${type}\">${message}</div>`;\n    setTimeout(() => {\n        messageDiv.innerHTML = '';\n    }, 5000);\n}\n\nfunction showResults(results) {\n    let resultsHtml = '<div class=\"success\"><h3>최종 결과 (Skating System 적용)</h3><ol>';\n    const sortedResults = Object.entries(results).sort((a, b) => a[1] - b[1]);\n    sortedResults.forEach(([coupleId, place]) => {\n        resultsHtml += `<li>선수 #${coupleId} - ${place}등</li>`;\n    });\n    resultsHtml += '</ol></div>';\n    document.getElementById('message').innerHTML = resultsHtml;\n}\n\n// Instagram Style Dance System\nlet currentDanceIndex = 0;\nlet totalDances = 0;\nlet completedDances = new Set();\nlet existingSelections = <?= json_encode($existing_selections) ?>;\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    const firstInput = document.querySelector('.place-input');\n    if (firstInput) {\n        firstInput.focus();\n    }\n    \n    // Initialize dance system if in preliminary round (not final)\n    <?php if (!$is_final && $event_no !== '8'): ?>\n    const danceSlider = document.getElementById('danceSlider');\n    if (danceSlider) {\n        initializeDanceSystem();\n    }\n    <?php endif; ?>\n    \n    // Setup fixed action buttons\n    setupFixedButtons();\n});\n\nfunction setupFixedButtons() {\n    // Dashboard button\n    const dashboardBtn = document.getElementById('dashboardBtn');\n    if (dashboardBtn) {\n        dashboardBtn.addEventListener('click', function() {\n            const compId = '<?= h($comp_id) ?>';\n            const lang = '<?= h($lang) ?>';\n            window.location.href = `scoring_dashboard.php?comp_id=${compId}&lang=${lang}`;\n        });\n    }\n    \n    // Refresh button\n    const refreshBtn = document.getElementById('refreshBtn');\n    if (refreshBtn) {\n        refreshBtn.addEventListener('click', function() {\n            if (confirm('페이지를 새로고침하시겠습니까? 현재 작업 중인 내용이 저장되지 않을 수 있습니다.')) {\n                window.location.reload();\n            }\n        });\n    }\n}\n\nfunction loadExistingSelections() {\n    // Load existing selections for all dances\n    Object.keys(existingSelections).forEach(dance => {\n        const dancePage = document.querySelector(`[data-dance=\"${dance}\"]`);\n        if (!dancePage) return;\n        \n        const selectedPlayers = existingSelections[dance];\n        selectedPlayers.forEach(playerNo => {\n            const checkbox = dancePage.querySelector(`input[data-player=\"${playerNo}\"]`);\n            if (checkbox) {\n                checkbox.checked = true;\n                const card = checkbox.closest('.player-card');\n                if (card) {\n                    card.classList.add('selected');\n                }\n            }\n        });\n        \n        // Mark as completed if selections exist\n        if (selectedPlayers.length > 0) {\n            completedDances.add(dance);\n        }\n    });\n}\n\nfunction loadExistingSelectionsForDance(page, dance) {\n    // Load existing selections for a specific dance\n    if (existingSelections[dance]) {\n        const selectedPlayers = existingSelections[dance];\n        selectedPlayers.forEach(playerNo => {\n            const checkbox = page.querySelector(`input[data-player=\"${playerNo}\"]`);\n            if (checkbox) {\n                checkbox.checked = true;\n                const card = checkbox.closest('.player-card');\n                if (card) {\n                    card.classList.add('selected');\n                }\n            }\n        });\n    }\n}\n\nfunction initializeDanceSystem() {\n    const dancePages = document.querySelectorAll('.dance-page');\n    totalDances = dancePages.length;\n    \n    if (totalDances === 0) return;\n    \n    // Load existing selections for all dances\n    loadExistingSelections();\n    \n    // Show first dance page\n    showDancePage(0);\n    \n    // Setup event listeners\n    setupDanceEventListeners();\n    updateProgress();\n    \n    // Initialize top recall status\n    updateTopRecallStatus();\n}\n\nfunction showDancePage(index) {\n    const danceSlider = document.getElementById('danceSlider');\n    const dancePages = document.querySelectorAll('.dance-page');\n    \n    if (index < 0 || index >= totalDances) return;\n    \n    currentDanceIndex = index;\n    danceSlider.style.transform = `translateX(-${index * 100}%)`;\n    \n    // Update progress\n    updateProgress();\n    \n    // Update navigation buttons\n    updateNavigationButtons();\n    \n    // Reset touch events for current page\n    resetTouchEvents();\n    \n    // Restore dance page state if going back to a completed dance\n    const currentPage = document.querySelector('.dance-page[data-dance-index=\"' + currentDanceIndex + '\"]');\n    if (currentPage) {\n        const dance = currentPage.dataset.dance;\n        const isCompleted = completedDances.has(dance);\n        \n        if (isCompleted) {\n            // Restore the page to editable state\n            restoreDancePageState(currentPage, dance);\n        } else {\n            // Load existing selections for this dance if not completed\n            loadExistingSelectionsForDance(currentPage, dance);\n        }\n    }\n    \n    // Update recall status for current page\n    updateTopRecallStatus();\n}\n\nfunction setupDanceEventListeners() {\n    // Navigation buttons\n    document.getElementById('prevDance')?.addEventListener('click', () => {\n        if (currentDanceIndex > 0) {\n            showDancePage(currentDanceIndex - 1);\n        }\n    });\n    \n    document.getElementById('nextDance')?.addEventListener('click', () => {\n        if (currentDanceIndex < totalDances - 1) {\n            showDancePage(currentDanceIndex + 1);\n        }\n    });\n    \n    // Dance submit buttons\n    document.querySelectorAll('.dance-submit-btn').forEach(btn => {\n        btn.addEventListener('click', function() {\n            const dance = this.dataset.dance;\n            submitDance(dance);\n        });\n    });\n    \n    // Touch/swipe events\n    let startX = 0;\n    let startY = 0;\n    let isSwipe = false;\n    \n    const danceSlider = document.getElementById('danceSlider');\n    \n    danceSlider.addEventListener('touchstart', function(e) {\n        startX = e.touches[0].clientX;\n        startY = e.touches[0].clientY;\n        isSwipe = false;\n    });\n    \n    danceSlider.addEventListener('touchmove', function(e) {\n        if (!startX || !startY) return;\n        \n        const currentX = e.touches[0].clientX;\n        const currentY = e.touches[0].clientY;\n        const diffX = startX - currentX;\n        const diffY = startY - currentY;\n        \n        // Determine if this is a horizontal swipe\n        if (Math.abs(diffX) > Math.abs(diffY) && Math.abs(diffX) > 50) {\n            isSwipe = true;\n            e.preventDefault();\n        }\n    });\n    \n    danceSlider.addEventListener('touchend', function(e) {\n        if (!isSwipe || !startX || !startY) return;\n        \n        const endX = e.changedTouches[0].clientX;\n        const diffX = startX - endX;\n        \n        if (Math.abs(diffX) > 100) {\n            if (diffX > 0 && currentDanceIndex < totalDances - 1) {\n                // Swipe left - next dance\n                showDancePage(currentDanceIndex + 1);\n            } else if (diffX < 0 && currentDanceIndex > 0) {\n                // Swipe right - previous dance\n                showDancePage(currentDanceIndex - 1);\n            }\n        }\n        \n        startX = 0;\n        startY = 0;\n        isSwipe = false;\n    });\n}\n\nfunction resetTouchEvents() {\n    // Remove existing event listeners and re-add them\n    const playerCards = document.querySelectorAll('.player-card');\n    playerCards.forEach(card => {\n        // Remove old listeners by cloning the element\n        const newCard = card.cloneNode(true);\n        card.parentNode.replaceChild(newCard, card);\n        \n        // Add new listeners\n        setupPlayerCardEvents(newCard);\n    });\n}\n\nfunction setupPlayerCardEvents(card) {\n    let touchStartTime = 0;\n    let touchStartPos = { x: 0, y: 0 };\n    \n    // Click event\n    card.addEventListener('click', function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        togglePlayerSelection(this);\n    });\n    \n    // Touch start\n    card.addEventListener('touchstart', function(e) {\n        touchStartTime = Date.now();\n        const touch = e.touches[0];\n        touchStartPos = { x: touch.clientX, y: touch.clientY };\n    });\n    \n    // Touch end\n    card.addEventListener('touchend', function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        \n        const touchEndTime = Date.now();\n        const touchDuration = touchEndTime - touchStartTime;\n        \n        // Only trigger if it's a quick tap (less than 500ms)\n        if (touchDuration < 500) {\n            togglePlayerSelection(this);\n        }\n    });\n    \n    // Prevent context menu on long press\n    card.addEventListener('contextmenu', function(e) {\n        e.preventDefault();\n    });\n}\n\nfunction updateProgress() {\n    const progressFill = document.querySelector('.progress-fill');\n    const currentDanceSpan = document.querySelector('.current-dance');\n    \n    if (progressFill) {\n        const progress = ((currentDanceIndex + 1) / totalDances) * 100;\n        progressFill.style.width = progress + '%';\n    }\n    \n    if (currentDanceSpan) {\n        currentDanceSpan.textContent = currentDanceIndex + 1;\n    }\n}\n\nfunction restoreDancePageState(page, dance) {\n    // Remove from completed dances to allow re-editing\n    completedDances.delete(dance);\n    \n    // Restore the recall status section\n    const statusDiv = page.querySelector('.recall-status');\n    if (statusDiv) {\n        statusDiv.innerHTML = `\n            <div style=\"font-size:20px; margin-bottom:5px;\">📊 Recall 진행 상황</div>\n            <div style=\"font-size:28px; font-weight:900; color:#2e7d32;\">\n                <span class=\"selected-count\">0</span> / <?= $recall_count ?>명\n            </div>\n            <div style=\"font-size:14px; margin-top:5px; opacity:0.8;\">\n                <?= $recall_count ?>명을 선택하면 전송할 수 있습니다\n            </div>\n        `;\n    }\n    \n    // Show submit section (will be hidden/shown based on selection count)\n    const submitSection = page.querySelector('.dance-submit-section');\n    if (submitSection) {\n        submitSection.style.display = 'none';\n    }\n    \n    // Load existing selections for this dance\n    if (existingSelections[dance]) {\n        const selectedPlayers = existingSelections[dance];\n        selectedPlayers.forEach(playerNo => {\n            const checkbox = page.querySelector(`input[data-player=\"${playerNo}\"]`);\n            if (checkbox) {\n                checkbox.checked = true;\n                const card = checkbox.closest('.player-card');\n                if (card) {\n                    card.classList.add('selected');\n                }\n            }\n        });\n    } else {\n        // No existing selections, clear all\n        const checkboxes = page.querySelectorAll('.recall-checkbox');\n        checkboxes.forEach(checkbox => {\n            checkbox.checked = false;\n        });\n        \n        // Update player card states\n        const playerCards = page.querySelectorAll('.player-card');\n        playerCards.forEach(card => {\n            card.classList.remove('selected');\n        });\n    }\n}\n\nfunction updateNavigationButtons() {\n    const prevBtn = document.getElementById('prevDance');\n    const nextBtn = document.getElementById('nextDance');\n    \n    if (prevBtn) {\n        prevBtn.style.display = currentDanceIndex > 0 ? 'inline-block' : 'none';\n    }\n    \n    if (nextBtn) {\n        // Show next button if there are more dances AND current dance is completed\n        const currentDance = document.querySelector('.dance-page[data-dance-index=\"' + currentDanceIndex + '\"]');\n        const isCurrentDanceCompleted = currentDance && completedDances.has(currentDance.dataset.dance);\n        \n        if (currentDanceIndex < totalDances - 1 && isCurrentDanceCompleted) {\n            nextBtn.style.display = 'inline-block';\n            nextBtn.disabled = false;\n            nextBtn.style.opacity = '1';\n            nextBtn.style.cursor = 'pointer';\n        } else {\n            nextBtn.style.display = 'none';\n        }\n    }\n}\n\nfunction submitDance(dance) {\n    const currentPage = document.querySelector(`[data-dance=\"${dance}\"]`);\n    const checkboxes = currentPage.querySelectorAll('.recall-checkbox:checked');\n    const recallCount = <?= json_encode(intval($recall_count)) ?>;\n    \n    if (checkboxes.length !== recallCount) {\n        alert(`${recallCount}명을 정확히 선택해주세요.`);\n        return;\n    }\n    \n    // Collect selected players for this dance\n    const selectedPlayers = Array.from(checkboxes).map(cb => cb.dataset.player);\n    \n    // Prepare data for this dance only\n    const recallMarks = {};\n    recallMarks[dance] = selectedPlayers;\n    \n    const data = {\n        comp_id: <?= json_encode($comp_id) ?>,\n        event_no: <?= json_encode($event_no) ?>,\n        type: 'recall',\n        recall_marks: recallMarks\n    };\n    \n    // Show loading state\n    const submitBtn = currentPage.querySelector('.dance-submit-btn');\n    const originalText = submitBtn.textContent;\n    submitBtn.textContent = '전송 중...';\n    submitBtn.disabled = true;\n    \n    fetch('scoring/save_scores.php', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data)\n    })\n    .then(response => response.json())\n    .then(result => {\n        if (result.success) {\n            // Mark this dance as completed\n            completedDances.add(dance);\n            \n            // Update existing selections\n            existingSelections[dance] = selectedPlayers;\n            \n            // Hide submit button and show completion message\n            submitBtn.style.display = 'none';\n            const statusDiv = currentPage.querySelector('.recall-status');\n            statusDiv.innerHTML = `\n                <div style=\"font-size:20px; margin-bottom:5px;\">✅ 완료</div>\n                <div style=\"font-size:18px; font-weight:bold; color:#4CAF50;\">\n                    ${recallCount}명 선택 완료\n                </div>\n                <div style=\"font-size:14px; margin-top:5px; opacity:0.8;\">\n                    다음 댄스로 진행하세요\n                </div>\n            `;\n            \n            // Enable next dance button if available\n            updateNavigationButtons();\n            \n            // Show completion message\n            if (currentDanceIndex < totalDances - 1) {\n                setTimeout(() => {\n                    alert(`${dance} 댄스 채점이 완료되었습니다. 다음 댄스로 진행하세요.`);\n                }, 1000);\n            } else {\n                // All dances completed\n                setTimeout(() => {\n                    alert('모든 댄스 채점이 완료되었습니다!');\n                }, 1000);\n            }\n        } else {\n            alert('전송 실패: ' + (result.error || '알 수 없는 오류'));\n            submitBtn.textContent = originalText;\n            submitBtn.disabled = false;\n        }\n    })\n    .catch(error => {\n        console.error('Error:', error);\n        alert('전송 중 오류가 발생했습니다: ' + error);\n        submitBtn.textContent = originalText;\n        submitBtn.disabled = false;\n    });\n}\n\n// Final Round Dance-by-Dance System\n<?php if ($is_final || $event_no === '8'): ?>\nlet selectedPlayer = null;\nlet playerRankings = {};\nlet draggedSlot = null;\nlet isDragging = false;\nlet dragStartTime = 0;\nlet finalDanceNames = <?= json_encode($event_data['dances']) ?>;\nlet finalCompletedDances = new Set();\nlet savedRankings = <?= json_encode($saved_rankings ?? []) ?>;\nlet currentJudgeId = <?= json_encode($judge_id) ?>;\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    // Initialize dance-by-dance system\n    initializeFinalDanceSystem();\n    setupFinalDanceNavigation();\n    \n    // Initialize touch-based system\n    initializeTouchSystem();\n    \n    // Setup drag and drop for ranking slots\n    setupDragAndDrop();\n});\n\nfunction initializeFinalDanceSystem() {\n    totalDances = finalDanceNames.length;\n    // Populate progress header\n    updateFinalDanceProgress();\n    // Show first dance\n    showFinalDance(0);\n}\n\nfunction updateFinalDanceProgress() {\n    const progressEl = document.getElementById('danceProgress');\n    if (!progressEl) return;\n    progressEl.innerHTML = finalDanceNames.map((dance, idx) => {\n        const isCurrent = idx === currentDanceIndex;\n        const isCompleted = finalCompletedDances.has(dance);\n        const isPending = !isCompleted && !isCurrent;\n        return `<span class=\"dance-step ${isCurrent ? 'current' : (isCompleted ? 'completed' : 'pending')}\">${dance}</span>`;\n    }).join('');\n}\n\nfunction showFinalDance(danceIndex) {\n    if (danceIndex < 0 || danceIndex >= totalDances) return;\n    currentDanceIndex = danceIndex;\n    updateFinalDanceProgress();\n    updateCurrentDanceDisplay();\n    \n    // Clear rankings when switching dances\n    clearFinalScores();\n    \n    // Update navigation after DOM is ready\n    setTimeout(() => {\n        updateFinalDanceNav();\n    }, 50);\n    \n    // Restore saved rankings for current dance (after clearing)\n    setTimeout(() => {\n        restoreSavedRankings();\n    }, 100);\n}\n\nfunction updateCurrentDanceDisplay() {\n    const currentDanceEl = document.getElementById('currentDanceDisplay');\n    if (currentDanceEl && finalDanceNames[currentDanceIndex]) {\n        currentDanceEl.textContent = `현재 종목: ${finalDanceNames[currentDanceIndex]}`;\n    }\n}\n\nfunction setupFinalDanceNavigation() {\n    // Bind \"Submit Dance\" and \"Next Dance\" buttons\n    const submitBtn = document.getElementById('saveFinalScores');\n    if (submitBtn) {\n        submitBtn.addEventListener('click', submitFinalDance);\n    }\n    const nextBtn = document.getElementById('nextFinalDance');\n    if (nextBtn) {\n        nextBtn.addEventListener('click', () => {\n            if (currentDanceIndex < totalDances - 1) {\n                showFinalDance(currentDanceIndex + 1);\n            }\n        });\n    }\n}\n\nfunction submitFinalDance() {\n    const totalPlayers = document.querySelectorAll('.player-item').length;\n    const assignedPlayers = Object.keys(playerRankings).length;\n    \n    if (assignedPlayers < totalPlayers) {\n        alert(`모든 선수에게 순위를 부여해야 합니다. (${assignedPlayers}/${totalPlayers})`);\n        return;\n    }\n    \n    const form = document.getElementById('scoringForm');\n    const formData = new FormData(form);\n    formData.append('is_final', '1');\n    formData.append('dance', finalDanceNames[currentDanceIndex]);\n    \n    Object.keys(playerRankings).forEach(player => {\n        formData.append(`final_ranking[${playerRankings[player]}]`, player);\n    });\n    \n    const submitBtn = document.getElementById('saveFinalScores');\n    const originalText = submitBtn.textContent;\n    submitBtn.textContent = '전송 중...';\n    submitBtn.disabled = true;\n    \n    fetch('scoring/save_scores.php', {\n        method: 'POST',\n        body: formData\n    })\n    .then(response => response.json())\n    .then(result => {\n        if (result.success) {\n            if (result.dance_completed) {\n                // All judges completed this dance\n                finalCompletedDances.add(finalDanceNames[currentDanceIndex]);\n                updateFinalDanceProgress();\n                alert(`${finalDanceNames[currentDanceIndex]} 댄스 채점이 완료되었습니다!`);\n            } else {\n                // Only this judge submitted\n                alert(`${finalDanceNames[currentDanceIndex]} 댄스 점수가 저장되었습니다`);\n            }\n            \n            if (currentDanceIndex < totalDances - 1) {\n                showFinalDance(currentDanceIndex + 1);\n            } else {\n                updateFinalDanceNav();\n                alert('모든 종목 순위 제출이 완료되었습니다!');\n            }\n        } else {\n            alert('제출 실패: ' + (result.error || '알 수 없는 오류'));\n            submitBtn.textContent = originalText;\n            submitBtn.disabled = false;\n        }\n    })\n    .catch(error => {\n        console.error('Error:', error);\n        alert('제출 중 오류가 발생했습니다: ' + error);\n        submitBtn.textContent = originalText;\n        submitBtn.disabled = false;\n    });\n}\n\nfunction updateFinalDanceNav() {\n    const submitBtn = document.getElementById('saveFinalScores');\n    const nextBtn = document.getElementById('nextFinalDance');\n    \n    console.log('updateFinalDanceNav called - currentDanceIndex:', currentDanceIndex, 'totalDances:', totalDances);\n    \n    if (submitBtn) {\n        const buttonText = currentDanceIndex < totalDances - 1 ? `${finalDanceNames[currentDanceIndex]} 순위 제출` : '최종 저장';\n        submitBtn.textContent = buttonText;\n        console.log('Button text updated to:', buttonText);\n    }\n    if (nextBtn) {\n        nextBtn.style.display = (currentDanceIndex < totalDances - 1) ? 'inline-block' : 'none';\n    }\n    // Hide clear button\n    const clearBtn = document.getElementById('clearFinalScores');\n    if (clearBtn) clearBtn.style.display = 'none';\n}\n\nfunction initializeTouchSystem() {\n    // Clear any existing rankings when switching dances\n    clearFinalScores();\n    \n    // Bind clear button with confirmation\n    const clearBtn = document.getElementById('clearFinalScores');\n    if (clearBtn) {\n        clearBtn.addEventListener('click', clearFinalScoresWithConfirm);\n    }\n}\n\nfunction setupDragAndDrop() {\n    // Add drag and drop event listeners to all ranking slots\n    document.querySelectorAll('.ranking-slot').forEach(slot => {\n        slot.addEventListener('dragstart', dragStart);\n        slot.addEventListener('dragover', dragOver);\n        slot.addEventListener('drop', drop);\n        slot.addEventListener('dragend', dragEnd);\n        slot.addEventListener('mousedown', handleMouseDown);\n        slot.addEventListener('mouseup', handleMouseUp);\n    });\n}\n\n// Final Round JavaScript - Touch-based System\n\nfunction selectPlayer(element) {\n    // Remove previous selection\n    document.querySelectorAll('.player-item').forEach(item => {\n        item.classList.remove('selected');\n    });\n    \n    // Check if player is already assigned\n    if (element.classList.contains('assigned')) {\n        return;\n    }\n    \n    // Select current player\n    element.classList.add('selected');\n    selectedPlayer = element.dataset.player;\n    \n    console.log('Selected player:', selectedPlayer);\n}\n\nfunction assignRank(element) {\n    // If no player is selected, check if we can cancel an existing assignment\n    if (!selectedPlayer) {\n        if (element.classList.contains('assigned')) {\n            // Cancel existing assignment\n            cancelRank(element);\n        }\n        return;\n    }\n    \n    const rank = element.dataset.rank;\n    \n    // Check if this rank is already assigned\n    if (element.classList.contains('assigned')) {\n        // Remove existing assignment\n        const currentPlayer = element.querySelector('.player-assigned').textContent;\n        if (currentPlayer) {\n            // Remove from player list\n            const playerElement = document.querySelector(`[data-player=\"${currentPlayer}\"]`);\n            if (playerElement) {\n                playerElement.classList.remove('assigned');\n            }\n            // Remove from rankings\n            delete playerRankings[currentPlayer];\n        }\n    }\n    \n    // Assign new player to this rank\n    element.querySelector('.player-assigned').textContent = selectedPlayer;\n    element.querySelector('input').value = selectedPlayer;\n    element.classList.add('assigned');\n    \n    // Mark player as assigned\n    const playerElement = document.querySelector(`[data-player=\"${selectedPlayer}\"]`);\n    if (playerElement) {\n        playerElement.classList.add('assigned');\n    }\n    \n    // Update rankings object\n    playerRankings[selectedPlayer] = rank;\n    \n    // Clear selection\n    selectedPlayer = null;\n    document.querySelectorAll('.player-item').forEach(item => {\n        item.classList.remove('selected');\n    });\n    \n    console.log('Assigned player', selectedPlayer, 'to rank', rank);\n    console.log('Current rankings:', playerRankings);\n}\n\nfunction cancelRank(element) {\n    const currentPlayer = element.querySelector('.player-assigned').textContent;\n    if (currentPlayer) {\n        // Remove from player list\n        const playerElement = document.querySelector(`[data-player=\"${currentPlayer}\"]`);\n        if (playerElement) {\n            playerElement.classList.remove('assigned');\n        }\n        \n        // Clear the ranking slot\n        element.querySelector('.player-assigned').textContent = '';\n        element.querySelector('input').value = '';\n        element.classList.remove('assigned');\n        \n        // Remove from rankings\n        delete playerRankings[currentPlayer];\n        \n        console.log('Cancelled assignment for player', currentPlayer);\n        console.log('Current rankings:', playerRankings);\n    }\n}\n\n// Drag and Drop functions for ranking slots\nfunction dragStart(event) {\n    console.log('dragStart called', event.target);\n    isDragging = true;\n    draggedSlot = event.target;\n    draggedSlot.classList.add('dragging');\n    event.dataTransfer.effectAllowed = 'move';\n    event.dataTransfer.setData('text/html', draggedSlot.outerHTML);\n}\n\nfunction dragOver(event) {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n    \n    // Add visual feedback\n    if (event.target.classList.contains('ranking-slot')) {\n        event.target.classList.add('drag-over');\n        console.log('dragOver on ranking slot');\n    }\n}\n\nfunction drop(event) {\n    event.preventDefault();\n    console.log('drop called', event.target, 'draggedSlot:', draggedSlot);\n    \n    // Remove drag-over class\n    document.querySelectorAll('.ranking-slot').forEach(slot => {\n        slot.classList.remove('drag-over');\n    });\n    \n    if (event.target.classList.contains('ranking-slot') && draggedSlot !== event.target) {\n        console.log('Swapping rankings between slots');\n        // Swap the players between the two slots\n        swapRankings(draggedSlot, event.target);\n    }\n}\n\nfunction dragEnd(event) {\n    // Remove dragging class\n    document.querySelectorAll('.ranking-slot').forEach(slot => {\n        slot.classList.remove('dragging', 'drag-over');\n    });\n    draggedSlot = null;\n    isDragging = false;\n}\n\n// Mouse event handlers for better drag detection\nfunction handleMouseDown(event) {\n    dragStartTime = Date.now();\n    isDragging = false;\n    console.log('Mouse down on ranking slot');\n}\n\nfunction handleMouseUp(event) {\n    const dragDuration = Date.now() - dragStartTime;\n    console.log('Mouse up, drag duration:', dragDuration);\n    \n    if (dragDuration > 200 && isDragging) {\n        // This was a drag operation, not a click\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    }\n}\n\n// Double-click to swap with next rank\nfunction swapWithNext(element) {\n    console.log('Double-clicked ranking slot:', element);\n    \n    const currentRank = parseInt(element.dataset.rank);\n    const nextRank = currentRank + 1;\n    const nextElement = document.querySelector(`[data-rank=\"${nextRank}\"]`);\n    \n    if (nextElement && element.classList.contains('assigned') && nextElement.classList.contains('assigned')) {\n        console.log('Swapping ranks', currentRank, 'and', nextRank);\n        swapRankings(element, nextElement);\n    } else {\n        console.log('Cannot swap - one or both slots are empty');\n    }\n}\n\nfunction swapRankings(slot1, slot2) {\n    const player1 = slot1.querySelector('.player-assigned').textContent;\n    const player2 = slot2.querySelector('.player-assigned').textContent;\n    const input1 = slot1.querySelector('input');\n    const input2 = slot2.querySelector('input');\n    \n    // Swap the players\n    slot1.querySelector('.player-assigned').textContent = player2;\n    slot2.querySelector('.player-assigned').textContent = player1;\n    input1.value = player2;\n    input2.value = player1;\n    \n    // Update visual states\n    if (player1) {\n        slot1.classList.add('assigned');\n    } else {\n        slot1.classList.remove('assigned');\n    }\n    \n    if (player2) {\n        slot2.classList.add('assigned');\n    } else {\n        slot2.classList.remove('assigned');\n    }\n    \n    // Update rankings object\n    const rank1 = slot1.dataset.rank;\n    const rank2 = slot2.dataset.rank;\n    \n    if (player1) {\n        playerRankings[player1] = rank2;\n    } else {\n        // Remove from rankings if empty\n        Object.keys(playerRankings).forEach(player => {\n            if (playerRankings[player] === rank1) {\n                delete playerRankings[player];\n            }\n        });\n    }\n    \n    if (player2) {\n        playerRankings[player2] = rank1;\n    } else {\n        // Remove from rankings if empty\n        Object.keys(playerRankings).forEach(player => {\n            if (playerRankings[player] === rank2) {\n                delete playerRankings[player];\n            }\n        });\n    }\n    \n    console.log('Swapped rankings:', playerRankings);\n}\n\nfunction submitFinalDance() {\n    // Check if all players are assigned\n    const totalPlayers = document.querySelectorAll('.player-item').length;\n    const assignedPlayers = Object.keys(playerRankings).length;\n    \n    if (assignedPlayers < totalPlayers) {\n        alert(`모든 선수에게 순위를 부여해야 합니다. (${assignedPlayers}/${totalPlayers})`);\n        return;\n    }\n    \n    const form = document.getElementById('scoringForm');\n    const formData = new FormData(form);\n    \n    // Add final round flag\n    formData.append('is_final', '1');\n    \n    // Add current dance\n    const currentDance = finalDanceNames[currentDanceIndex];\n    formData.append('dance', currentDance);\n    \n    // Add rankings data in the format expected by save_scores.php\n    const adjudicator_marks = {};\n    adjudicator_marks[<?= json_encode($judge_id) ?>] = {};\n    \n    Object.keys(playerRankings).forEach(player => {\n        const rank = playerRankings[player];\n        adjudicator_marks[<?= json_encode($judge_id) ?>][player] = rank;\n    });\n    \n    console.log('Sending adjudicator_marks:', adjudicator_marks);\n    formData.append('adjudicator_marks', JSON.stringify(adjudicator_marks));\n    \n    const saveBtn = document.getElementById('saveFinalScores');\n    const originalText = saveBtn.textContent;\n    saveBtn.textContent = '저장 중...';\n    saveBtn.disabled = true;\n    \n    fetch('scoring/save_scores.php', {\n        method: 'POST',\n        body: formData\n    })\n    .then(response => response.json())\n    .then(result => {\n        if (result.success) {\n            if (result.dance_completed) {\n                finalCompletedDances.add(currentDance);\n                updateFinalDanceProgress();\n                alert(`${currentDance} 댄스 채점이 완료되었습니다!`);\n            } else {\n                alert(`${currentDance} 댄스 점수가 저장되었습니다`);\n            }\n            updateFinalDanceNav();\n            \n            if (currentDanceIndex < totalDances - 1) {\n                showFinalDance(currentDanceIndex + 1);\n            } else {\n                alert('모든 종목 순위 제출이 완료되었습니다!');\n            }\n        } else {\n            alert('저장 실패: ' + (result.error || '알 수 없는 오류'));\n        }\n    })\n    .catch(error => {\n        console.error('Error:', error);\n        alert('저장 중 오류가 발생했습니다: ' + error);\n    })\n    .finally(() => {\n        saveBtn.textContent = originalText;\n        saveBtn.disabled = false;\n    });\n}\n\nfunction clearFinalScores() {\n    // Clear all assignments (no confirmation for dance switching)\n    document.querySelectorAll('.ranking-slot').forEach(slot => {\n        slot.classList.remove('assigned');\n        slot.querySelector('.player-assigned').textContent = '';\n        slot.querySelector('input').value = '';\n    });\n    \n    document.querySelectorAll('.player-item').forEach(item => {\n        item.classList.remove('assigned');\n    });\n    \n    // Clear selection\n    selectedPlayer = null;\n    playerRankings = {};\n    \n    console.log('Cleared all scores');\n}\n\nfunction clearFinalScoresWithConfirm() {\n    if (confirm('모든 점수를 초기화하시겠습니까?')) {\n        clearFinalScores();\n    }\n}\n\nfunction restoreSavedRankings() {\n    // Get current dance name\n    const currentDance = finalDanceNames[currentDanceIndex];\n    console.log('=== RESTORE SAVED RANKINGS DEBUG ===');\n    console.log('Current judge ID:', currentJudgeId);\n    console.log('Current dance:', currentDance);\n    console.log('Current dance index:', currentDanceIndex);\n    console.log('Available saved rankings:', savedRankings);\n    console.log('Final dance names:', finalDanceNames);\n    \n    if (!currentDance || !savedRankings[currentDance]) {\n        console.log('No saved data for dance:', currentDance);\n        return; // No saved data for this dance\n    }\n    \n    const rankings = savedRankings[currentDance];\n    console.log('Restoring rankings for', currentDance, ':', rankings);\n    \n    // Restore each ranking\n    Object.keys(rankings).forEach(rank => {\n        const player = rankings[rank];\n        const rankElement = document.querySelector(`[data-rank=\"${rank}\"]`);\n        \n        console.log(`Attempting to restore rank ${rank}: player ${player}`);\n        console.log('Rank element found:', rankElement);\n        \n        if (rankElement && player) {\n            // Assign player to this rank\n            rankElement.querySelector('.player-assigned').textContent = player;\n            rankElement.querySelector('input').value = player;\n            rankElement.classList.add('assigned');\n            \n            // Mark player as assigned\n            const playerElement = document.querySelector(`[data-player=\"${player}\"]`);\n            if (playerElement) {\n                playerElement.classList.add('assigned');\n            }\n            \n            // Update rankings object\n            playerRankings[player] = rank;\n            \n            console.log(`Successfully restored rank ${rank}: player ${player}`);\n        } else {\n            console.log(`Failed to restore rank ${rank}: player ${player} - element not found`);\n        }\n    });\n    \n    console.log('Restored rankings:', playerRankings);\n}\n<?php endif; ?>\n    </script>\n    \n    <!-- Bottom Navigation -->\n    <div class=\"bottom-nav\">\n        <button type=\"button\" id=\"dashboardBtn\" class=\"nav-button primary\">\n            <div class=\"nav-icon\">🏠</div>\n            <div class=\"nav-text\">메인으로</div>\n        </button>\n        <button type=\"button\" id=\"refreshBtn\" class=\"nav-button\">\n            <div class=\"nav-icon\">🔄</div>\n            <div class=\"nav-text\">새로고침</div>\n        </button>\n    </div>\n    \n    <footer style=\"text-align: center; margin-top: 30px; color: #666; font-size: 0.9em; padding: 20px; border-top: 1px solid #eee;\">\n        2025 danceoffice.net | Powered by Seyoung Lee\n    </footer>\n</body>\n</html>","size_bytes":101680},"comp/live_aggregation_api.php":{"content":"<?php\nheader('Content-Type: application/json; charset=utf-8');\nerror_reporting(E_ALL);\nini_set('display_errors', 1);\n\n// 명령행에서 실행되는 경우와 웹에서 실행되는 경우 모두 처리\nif (php_sapi_name() === 'cli') {\n    // 명령행에서 실행되는 경우\n    $comp_id = $argv[1] ?? '';\n    $event_no = $argv[2] ?? '';\n} else {\n    // 웹에서 실행되는 경우\n    $comp_id = $_GET['comp_id'] ?? '';\n    $event_no = $_GET['event_no'] ?? '';\n}\n\nerror_log(\"=== Live Aggregation API Called ===\");\nerror_log(\"GET parameters: \" . json_encode($_GET ?? []));\nerror_log(\"comp_id: '$comp_id', event_no: '$event_no'\");\n\nif (empty($comp_id) || empty($event_no)) {\n    error_log(\"Missing parameters - comp_id: '$comp_id', event_no: '$event_no'\");\n    echo json_encode(['success' => false, 'error' => 'Missing parameters']);\n    exit;\n}\n\n$data_dir = \"data/{$comp_id}\";\nerror_log(\"data_dir: $data_dir\");\n\n// 이벤트 정보 가져오기\nerror_log(\"Looking for event: $event_no\");\n$event_info = getEventInfo($data_dir, $event_no);\nif (!$event_info) {\n    error_log(\"Event not found: $event_no\");\n    echo json_encode(['success' => false, 'error' => 'Event not found']);\n    exit;\n}\nerror_log(\"Event found: \" . json_encode($event_info));\n\n// 댄스 목록 가져오기\n$dances = $event_info['dances'];\nif (empty($dances)) {\n    echo json_encode(['success' => false, 'error' => 'No dances found for this event']);\n    exit;\n}\n\n// 심사위원 목록 가져오기\n$judges = getJudgesForEvent($data_dir, $event_no);\nif (empty($judges)) {\n    echo json_encode(['success' => false, 'error' => 'No judges found for this event']);\n    exit;\n}\n\n// 선수 목록 가져오기\n$players = getPlayersForEvent($data_dir, $event_no);\nif (empty($players)) {\n    echo json_encode(['success' => false, 'error' => 'No players found for this event']);\n    exit;\n}\n\n// 전체 선수 정보 가져오기 (실제 선수명을 위해)\n$all_players = [];\n$players_file = \"$data_dir/players.txt\";\nif (file_exists($players_file)) {\n    $lines = file($players_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    foreach ($lines as $line) {\n        $cols = array_map('trim', explode(',', $line));\n        if (count($cols) >= 3) {\n            $all_players[$cols[0]] = [\n                'male' => $cols[1] ?? '',\n                'female' => $cols[2] ?? '',\n            ];\n        }\n    }\n}\n\n// 집계 데이터 수집\n$aggregation_data = collectAggregationData($data_dir, $event_no, $dances, $judges, $players, $all_players);\n\necho json_encode([\n    'success' => true,\n    'event_info' => $event_info,\n    'judges' => $judges,\n    'players' => $players,\n    'all_players' => $all_players,\n    'aggregation' => $aggregation_data\n]);\n\nfunction getEventInfo($data_dir, $event_no) {\n    $runorder_file = \"$data_dir/RunOrder_Tablet.txt\";\n    if (!file_exists($runorder_file)) {\n        return null;\n    }\n    \n    $lines = file($runorder_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    \n    foreach ($lines as $line) {\n        $cols = explode(',', $line);\n        if (count($cols) >= 13) {\n            $file_event_no = preg_replace('/\\x{FEFF}/u', '', $cols[0] ?? '');\n            $file_event_no = preg_replace('/\\D+/', '', $file_event_no);\n            $detail_no = trim($cols[13] ?? '');\n            \n            $match_event_no = !empty($detail_no) ? $detail_no : $file_event_no;\n            \n            // 디버그 로그 추가\n            error_log(\"Event matching: file_event_no='$file_event_no', detail_no='$detail_no', match_event_no='$match_event_no', target='$event_no'\");\n            \n            if ($match_event_no === $event_no) {\n                $dances = [];\n                for ($i = 6; $i <= 10; $i++) {\n                    if (!empty($cols[$i]) && $cols[$i] !== '0') {\n                        $dances[] = $cols[$i];\n                    }\n                }\n                \n                return [\n                    'no' => $cols[0],\n                    'detail_no' => $detail_no,\n                    'name' => $cols[1],\n                    'round' => $cols[2],\n                    'dances' => $dances,\n                    'panel' => $cols[11] ?? ''\n                ];\n            }\n        }\n    }\n    \n    return null;\n}\n\nfunction getJudgesForEvent($data_dir, $event_no) {\n    $panel_file = \"$data_dir/panel_list.json\";\n    if (!file_exists($panel_file)) {\n        error_log(\"Panel file not found: $panel_file\");\n        return [];\n    }\n    \n    $panel_data = json_decode(file_get_contents($panel_file), true);\n    if (!$panel_data) {\n        error_log(\"Failed to parse panel file: $panel_file\");\n        return [];\n    }\n    \n    // 이벤트의 패널 코드 가져오기\n    $event_info = getEventInfo($data_dir, $event_no);\n    if (!$event_info || !isset($event_info['panel'])) {\n        error_log(\"No panel info for event: $event_no\");\n        return [];\n    }\n    \n    $panel_code = $event_info['panel'];\n    error_log(\"Looking for judges in panel: $panel_code\");\n    \n    // 해당 패널의 심사위원들 찾기\n    $judges = [];\n    foreach ($panel_data as $item) {\n        if (isset($item['panel_code']) && $item['panel_code'] === $panel_code) {\n            $judges[] = [\n                'code' => $item['adj_code'],\n                'name' => \"Judge {$item['adj_code']}\" // 실제 이름이 없으므로 코드로 대체\n            ];\n        }\n    }\n    \n    error_log(\"Found \" . count($judges) . \" judges for panel: $panel_code\");\n    return $judges;\n}\n\nfunction getPlayersForEvent($data_dir, $event_no) {\n    // live_panel.php와 동일한 방식으로 선수 정보 로드\n    $players_file = \"$data_dir/players_{$event_no}.txt\";\n    if (!file_exists($players_file)) {\n        // BOM 등 비정상 문자가 끼어 생성된 파일을 탐색하여 보정\n        foreach (glob($data_dir . \"/players_*.txt\") as $alt) {\n            $base = basename($alt);\n            $num = $base;\n            $num = preg_replace('/^players_/u', '', $num);\n            $num = preg_replace('/\\.txt$/u', '', $num);\n            $num = preg_replace('/\\x{FEFF}/u', '', $num); // BOM 제거\n            $num = preg_replace('/\\D+/', '', $num); // 숫자만 남김\n            \n            if ($num === (string)$event_no) {\n                $players_file = $alt;\n                break;\n            }\n        }\n    }\n    \n    if (!file_exists($players_file)) {\n        error_log(\"Players file not found for event: $event_no\");\n        return [];\n    }\n    \n    $lines = file($players_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    $players = [];\n    \n    foreach ($lines as $line) {\n        $line = trim($line);\n        if (empty($line)) continue;\n        \n        $parts = explode(',', $line);\n        if (count($parts) >= 2) {\n            $players[] = [\n                'number' => trim($parts[0]),\n                'name' => trim($parts[1])\n            ];\n        } else {\n            // 등번호만 있는 경우\n            $player_number = trim($line);\n            if (!empty($player_number)) {\n                $players[] = [\n                    'number' => $player_number,\n                    'name' => \"선수 {$player_number}\"\n                ];\n            }\n        }\n    }\n    \n    error_log(\"Loaded \" . count($players) . \" players for event: $event_no\");\n    return $players;\n}\n\nfunction collectAggregationData($data_dir, $event_no, $dances, $judges, $players, $all_players = []) {\n    $player_scores = [];\n    $judge_status = [];\n    \n    // 각 선수별 점수 초기화\n    foreach ($players as $player) {\n        $player_number = $player['number'];\n        $player_name = $player['name'];\n        \n        // 전체 선수 정보에서 실제 선수명 가져오기\n        if (isset($all_players[$player_number])) {\n            $male = $all_players[$player_number]['male'] ?? '';\n            $female = $all_players[$player_number]['female'] ?? '';\n            if ($male && $female) {\n                $player_name = \"{$male} / {$female}\";\n            } elseif ($male) {\n                $player_name = $male;\n            } elseif ($female) {\n                $player_name = $female;\n            }\n        }\n        \n        $player_scores[$player_number] = [\n            'name' => $player_name,\n            'total_recall' => 0,\n            'dance_scores' => []\n        ];\n    }\n    \n    // 각 심사위원별 상태 초기화\n    foreach ($judges as $judge) {\n        $judge_status[$judge['code']] = [\n            'name' => $judge['name'],\n            'completed_dances' => 0,\n            'total_dances' => count($dances),\n            'status' => 'waiting'\n        ];\n    }\n    \n    // 각 댄스별로 .adj 파일 확인\n    foreach ($dances as $dance) {\n        foreach ($judges as $judge) {\n            $adj_file = \"$data_dir/{$event_no}_{$dance}_{$judge['code']}.adj\";\n            \n            if (file_exists($adj_file)) {\n                $judge_status[$judge['code']]['completed_dances']++;\n                $judge_status[$judge['code']]['status'] = 'scoring';\n                \n                // .adj 파일에서 Recall 데이터 읽기\n                $recall_data = file($adj_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n                foreach ($recall_data as $line) {\n                    $player_number = trim($line, '\"');\n                    if (isset($player_scores[$player_number])) {\n                        $player_scores[$player_number]['total_recall']++;\n                        $player_scores[$player_number]['dance_scores'][$dance] = \n                            ($player_scores[$player_number]['dance_scores'][$dance] ?? 0) + 1;\n                    }\n                }\n            }\n        }\n    }\n    \n    // 심사위원 상태 업데이트\n    foreach ($judge_status as $code => &$status) {\n        if ($status['completed_dances'] === 0) {\n            $status['status'] = 'waiting';\n        } elseif ($status['completed_dances'] < $status['total_dances']) {\n            $status['status'] = 'scoring';\n        } else {\n            $status['status'] = 'completed';\n        }\n    }\n    \n    // 선수별 점수로 정렬\n    uasort($player_scores, function($a, $b) {\n        return $b['total_recall'] - $a['total_recall'];\n    });\n    \n    return [\n        'player_scores' => $player_scores,\n        'judge_status' => $judge_status,\n        'total_judges' => count($judges),\n        'completed_judges' => count(array_filter($judge_status, function($status) {\n            return $status['status'] === 'completed';\n        })),\n        'progress_rate' => round((count(array_filter($judge_status, function($status) {\n            return $status['status'] === 'completed';\n        })) / count($judges)) * 100, 1)\n    ];\n}\n?>\n","size_bytes":10688},"comp/live_panel.php":{"content":"<?php\n// 테스트 페이지 2: 고급 멀티 이벤트 탭 구조 (실제 데이터 연동)\n$comp_id = $_GET['comp_id'] ?? '20250913-001';\n$data_dir = __DIR__ . \"/data/$comp_id\";\n\n// 집계 결과 표시 모드 확인\n$view_mode = $_GET['view'] ?? '';\n$view_event_no = $_GET['event_no'] ?? '';\n$aggregation_result = null;\n\n// 집계 결과 표시 모드인 경우\nif ($view_mode === 'aggregation' && $view_event_no) {\n    // 직접 API 파일을 include하여 실행\n    $aggregation_result = null;\n    \n    try {\n        // GET 매개변수 설정\n        $_GET['comp_id'] = $comp_id;\n        $_GET['event_no'] = $view_event_no;\n        \n        // API 파일 직접 실행하여 결과 캡처\n        ob_start();\n        include 'final_aggregation_api.php';\n        $aggregation_data = ob_get_clean();\n        \n        error_log(\"집계 데이터 길이: \" . strlen($aggregation_data));\n        error_log(\"집계 데이터: \" . substr($aggregation_data, 0, 500));\n        \n        if ($aggregation_data) {\n            $aggregation_result = json_decode($aggregation_data, true);\n            if (json_last_error() !== JSON_ERROR_NONE) {\n                error_log(\"JSON 파싱 오류: \" . json_last_error_msg());\n                error_log(\"원본 데이터: \" . substr($aggregation_data, 0, 500));\n                $aggregation_result = null;\n            } else {\n                error_log(\"집계 결과 파싱 성공: \" . json_encode($aggregation_result));\n            }\n        } else {\n            error_log(\"집계 데이터 로드 실패\");\n        }\n        \n        // 디버깅: 집계 결과 상태 확인\n        error_log(\"집계 결과 최종 상태: \" . ($aggregation_result ? \"성공\" : \"실패\"));\n        if ($aggregation_result) {\n            error_log(\"집계 결과 키: \" . implode(', ', array_keys($aggregation_result)));\n        }\n    } catch (Exception $e) {\n        error_log(\"집계 API 실행 오류: \" . $e->getMessage());\n        $aggregation_result = null;\n    }\n}\n\n// --- 댄스종목 약어->이름 매핑 (DanceName.txt 기준) ---\n$dancename_file = \"$data_dir/DanceName.txt\";\n$dance_map_en = [];\nif (is_file($dancename_file)) {\n    foreach (file($dancename_file) as $line) {\n        $cols = array_map('trim', explode(',', $line));\n        if (count($cols) < 3 || $cols[2] == '-' || $cols[2] == '') continue;\n        // 영문 코드를 키로 사용\n        $dance_map_en[$cols[2]] = $cols[1];\n        // 숫자 코드도 키로 사용 (28번 이벤트 등에서 사용)\n        $dance_map_en[$cols[0]] = $cols[1];\n    }\n}\n\n// --- 전체 선수명단 players.txt (등번호,남자,여자) ---\n$players_file = \"$data_dir/players.txt\";\n$all_players = [];\nif (file_exists($players_file)) {\n    $lines = file($players_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    foreach ($lines as $line) {\n        $cols = array_map('trim', explode(',', $line));\n        $all_players[$cols[0]] = [\n            'male' => $cols[1] ?? '',\n            'female' => $cols[2] ?? '',\n        ];\n    }\n}\n\n// 실제 이벤트 데이터 로드 (live_panel.php와 동일한 로직)\n$runorder_file = \"$data_dir/RunOrder_Tablet.txt\";\n$events = [];\n$event_groups = [];\n\nif (file_exists($runorder_file)) {\n    $lines = file($runorder_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    foreach ($lines as $line) {\n        if (preg_match('/^bom/', $line)) continue;\n        $cols = array_map('trim', explode(',', $line));\n        // 이벤트 번호 정규화: BOM 및 숫자 이외 문자 제거\n        $no = $cols[0] ?? '';\n        $no = preg_replace('/\\x{FEFF}/u', '', $no); // UTF-8 BOM 제거\n        $no = preg_replace('/\\D+/', '', $no);       // 숫자만 남김\n        $no = trim($no);\n        $desc = $cols[1] ?? '';\n        $roundtype = $cols[2] ?? '';\n        $panel = isset($cols[11]) ? strtoupper($cols[11]) : '';\n        $recall = $cols[4] ?? '';\n        $heats = $cols[14] ?? ''; // 히트는 15번째 컬럼 (인덱스 14)\n        $dance_codes = [];\n        // 6-10번째 컬럼의 숫자를 댄스 코드로 사용 (정확한 데이터)\n        for ($i=6; $i<=10; $i++) {\n            if (isset($cols[$i]) && is_numeric($cols[$i]) && $cols[$i] > 0) {\n                $dance_codes[] = $cols[$i];\n            }\n        }\n        // 댄스 코드를 실제 댄스명으로 변환\n        $dance_names = [];\n        foreach ($dance_codes as $code) {\n            $dance_names[] = $dance_map_en[$code] ?? $code; // 매핑된 이름 또는 코드\n        }\n        \n        $events[] = [\n            'no' => $no,\n            'desc' => $desc,\n            'round' => $roundtype,\n            'panel' => $panel,\n            'recall' => $recall,\n            'heats' => $heats,\n            'dances' => $dance_codes,\n            'dance_names' => $dance_names,\n            'detail_no' => $cols[13] ?? '' // 14번째 컬럼에서 detail_no 읽기\n        ];\n    }\n}\n\n// 실제 심사위원 데이터 로드 (live_panel.php와 동일한 로직)\n$adjudicator_file = \"$data_dir/adjudicators.txt\";\n$adjudicator_dict = [];\nif (file_exists($adjudicator_file)) {\n    $lines = file($adjudicator_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    foreach ($lines as $line) {\n        $cols = array_map('trim', explode(',', $line));\n        if (count($cols) < 2) continue;\n        $code = (string)$cols[0];\n        $adjudicator_dict[$code] = [\n            'code' => $cols[0],\n            'name' => $cols[1],\n            'nation' => $cols[2] ?? '',\n            'id' => $cols[3] ?? ''\n        ];\n    }\n}\n\n// 패널 매핑 데이터 로드\n$panel_map_file = \"$data_dir/panel_list.json\";\n$panel_map = [];\nif (file_exists($panel_map_file)) {\n    $panel_map = json_decode(file_get_contents($panel_map_file), true);\n}\n\n// 실제 선수 데이터 로드 (live_panel.php와 동일한 로직)\n$players_by_event = [];\nforeach ($events as $ev) {\n    $eno = $ev['no'];\n    $detail_no = $ev['detail_no'] ?? '';\n    \n    // 세부번호가 있으면 세부번호로, 없으면 이벤트 번호로\n    $file_key = !empty($detail_no) ? $detail_no : $eno;\n    $pfile = \"$data_dir/players_$file_key.txt\";\n    \n    if (file_exists($pfile)) {\n        $lines = file($pfile, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n        $player_data = [];\n        foreach ($lines as $line) {\n            $line = trim($line);\n            if (!empty($line)) {\n                // 등번과 이름 분리 (공백으로 구분)\n                $parts = explode(' ', $line, 2);\n                $number = trim($parts[0]);\n                $name = isset($parts[1]) ? trim($parts[1]) : '';\n                \n                // 등번 정규화 (숫자와 하이픈만 남김)\n            if (!empty($detail_no)) {\n                    $num = preg_replace('/[^0-9\\-]/', '', $number);\n            } else {\n                    $num = preg_replace('/[^0-9]/', '', $number);\n                }\n                \n                if (!empty($num)) {\n                    $arr = [\n                        'number' => $num,\n                        'name' => $name,\n                        'display_name' => $name ? \"$num $name\" : $num,\n                        'type' => 'couple' // 기본값, 실제로는 데이터에서 판단\n                    ];\n                    $player_data[] = $arr;\n                }\n            }\n        }\n        $players_by_event[$eno] = $player_data;\n        // 세부번호가 있으면 세부번호 키로도 저장\n        if (!empty($detail_no)) {\n            $players_by_event[$detail_no] = $player_data;\n        }\n    }\n}\n\n// 이벤트 그룹 생성 (실제 데이터 기반)\n$event_groups = [];\n$grouped_events = [];\n\n// 이벤트를 그룹화 (detail_no가 있는 경우 멀티 이벤트로 처리)\nforeach ($events as $event) {\n    $group_key = $event['detail_no'] ? $event['no'] : $event['no'];\n    \n    if (!isset($grouped_events[$group_key])) {\n        $grouped_events[$group_key] = [\n            'group_no' => $group_key,\n            'group_name' => $event['desc'],\n            'events' => [],\n            'is_multi' => false\n        ];\n    }\n    \n    $grouped_events[$group_key]['events'][] = $event;\n}\n\n// 멀티 이벤트 확인\nforeach ($grouped_events as $group_key => $group) {\n    if (count($group['events']) > 1) {\n        $grouped_events[$group_key]['is_multi'] = true;\n    }\n}\n\n$event_groups = array_values($grouped_events);\n\n// 이벤트별 선수 데이터 로드 함수\nfunction getPlayersForEvent($data_dir, $event_key, $all_players) {\n    $players = [];\n    \n    // 이벤트별 선수 파일 확인\n    $players_file = \"$data_dir/players_{$event_key}.txt\";\n    if (file_exists($players_file)) {\n        $lines = file($players_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n        foreach ($lines as $line) {\n            $line = trim($line);\n            if (!empty($line)) {\n                $player_data = $all_players[$line] ?? null;\n                if ($player_data) {\n                    // 싱글/커플 구분: 여자 이름이 있으면 커플, 없으면 싱글\n                    $isCouple = !empty($player_data['female']);\n                    $players[] = [\n                        'number' => $line,\n                        'name' => $player_data['male'] . ($player_data['female'] ? ' & ' . $player_data['female'] : ''),\n                        'male' => $player_data['male'],\n                        'female' => $player_data['female'],\n                        'type' => $isCouple ? 'couple' : 'single'\n                    ];\n                } else {\n                    $players[] = [\n                        'number' => $line,\n                        'name' => \"선수 {$line}\",\n                        'male' => '',\n                        'female' => '',\n                        'type' => 'single' // 기본값은 싱글\n                    ];\n                }\n            }\n        }\n    }\n    \n    return $players;\n}\n\n// 이벤트별 심사위원 상태 확인 함수\nfunction getJudgeStatus($data_dir, $event_key, $dances, $panel_map, $adjudicator_dict) {\n    global $events;\n    $judge_status = [];\n    \n    // 해당 이벤트의 패널 코드 찾기 (실제 이벤트 데이터에서)\n    $panel_code = '';\n    foreach ($events as $event) {\n        $event_key_check = $event['detail_no'] ?: $event['no'];\n        if ($event_key_check === $event_key) {\n            $panel_code = $event['panel'];\n            break;\n        }\n    }\n    \n    if (empty($panel_code)) {\n        return $judge_status;\n    }\n    \n    // 패널에 속한 심사위원들 찾기\n    $panel_judges = [];\n    foreach ($panel_map as $mapping) {\n        if (isset($mapping['panel_code']) && $mapping['panel_code'] === $panel_code) {\n            $judge_code = $mapping['adj_code'];\n            if (isset($adjudicator_dict[$judge_code])) {\n                $panel_judges[] = $judge_code;\n            }\n        }\n    }\n    \n    // 각 심사위원의 채점 상태 확인\n    foreach ($panel_judges as $judge_code) {\n        $judge_info = $adjudicator_dict[$judge_code];\n        $completed = 0;\n        $total = count($dances);\n        \n        // .adj 파일에서 실제 채점 상태 확인\n        $adj_file = \"$data_dir/{$event_key}.adj\";\n        if (file_exists($adj_file)) {\n            $adj_data = file($adj_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n            foreach ($adj_data as $line) {\n                if (strpos($line, $judge_code) === 0) {\n                    $completed++;\n                }\n            }\n        }\n        \n        $status = $completed === $total ? 'completed' : ($completed > 0 ? 'partial' : 'waiting');\n        \n        $judge_status[] = [\n            'code' => $judge_code,\n            'name' => $judge_info['name'],\n            'country' => $judge_info['nation'],\n            'status' => $status,\n            'completed' => $completed,\n            'total' => $total\n        ];\n    }\n    \n    return $judge_status;\n}\n\n// 이벤트 그룹에 심사위원/선수 데이터 추가\nforeach ($event_groups as &$group) {\n    foreach ($group['events'] as &$event) {\n        $event_key = $event['detail_no'] ?: $event['no'];\n        $event['judges'] = getJudgeStatus($data_dir, $event_key, $event['dances'], $panel_map, $adjudicator_dict);\n        $event['players'] = getPlayersForEvent($data_dir, $event_key, $all_players);\n    }\n    \n    // 멀티 이벤트인 경우 댄스 순서 생성\n    if (count($group['events']) > 1) {\n        $group['dance_sequence'] = generateDanceSequence($group['events']);\n    }\n}\n\n// 카테고리 추출 함수\nfunction extractCategory($desc) {\n    // 이벤트 설명에서 카테고리 추출 (예: \"1-1 탱고\" -> \"1-1\")\n    if (preg_match('/^(\\d+-\\d+)/', $desc, $matches)) {\n        return $matches[1];\n    }\n    return $desc;\n}\n\n// 멀티이벤트의 댄스 순서 취합 함수\nfunction generateDanceSequence($events) {\n    global $dance_map_en;\n    $all_dances = [];\n    $dance_events = [];\n    \n    // 모든 이벤트의 댄스 수집\n    foreach ($events as $event) {\n        if (!empty($event['dances'])) {\n            foreach ($event['dances'] as $dance) {\n                if (!isset($all_dances[$dance])) {\n                    $all_dances[$dance] = [];\n                }\n                $all_dances[$dance][] = $event['detail_no'] ?: $event['no'];\n            }\n        }\n    }\n    \n    // 공동 댄스와 개별 댄스 분류\n    $common_dances = [];\n    $individual_dances = [];\n    \n    foreach ($all_dances as $dance => $event_list) {\n        $dance_name = $dance_map_en[$dance] ?? $dance;\n        if (count($event_list) > 1) {\n            // 여러 이벤트에서 공통으로 사용되는 댄스\n            $common_dances[] = [\n                'dance' => $dance,\n                'dance_name' => $dance_name,\n                'events' => $event_list,\n                'type' => 'common'\n            ];\n        } else {\n            // 개별 이벤트에서만 사용되는 댄스\n            $individual_dances[] = [\n                'dance' => $dance,\n                'dance_name' => $dance_name,\n                'events' => $event_list,\n                'type' => 'individual'\n            ];\n        }\n    }\n    \n    // 공동 댄스를 먼저, 개별 댄스를 나중에 배치\n    $sequence = array_merge($common_dances, $individual_dances);\n    \n    return $sequence;\n}\n\n// 각 그룹의 댄스 순서 생성\nforeach ($event_groups as $group_key => &$group) {\n    if (count($group['events']) > 1) {\n        $group['dance_sequence'] = generateDanceSequence($group['events']);\n    } else {\n        // 싱글 이벤트는 기존 댄스 순서 유지\n        $group['dance_sequence'] = [];\n        if (!empty($group['events'][0]['dances'])) {\n            foreach ($group['events'][0]['dances'] as $dance) {\n                $dance_name = $dance_map_en[$dance] ?? $dance;\n                $group['dance_sequence'][] = [\n                    'dance' => $dance,\n                    'dance_name' => $dance_name,\n                    'events' => [$group['events'][0]['detail_no'] ?: $group['events'][0]['no']],\n                    'type' => 'single'\n                ];\n            }\n        }\n    }\n}\n\nfunction h($s) { return htmlspecialchars($s ?? ''); }\n?>\n\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>라이브 패널 - 멀티 이벤트 관리</title>\n    <style>\n        body {\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n            margin: 0;\n            padding: 20px;\n            background-color: #f5f5f5;\n        }\n        \n        .container {\n            display: flex;\n            gap: 20px;\n            max-width: 1600px;\n            margin: 0 auto;\n        }\n        \n        .left-panel {\n            width: 350px;\n            background: white;\n            border-radius: 8px;\n            box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n            overflow: hidden;\n        }\n        \n        .right-panel {\n            flex: 1;\n            background: white;\n            border-radius: 8px;\n            box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n            overflow: hidden;\n        }\n        \n        .panel-header {\n            background: #2c3e50;\n            color: white;\n            padding: 15px;\n            font-weight: bold;\n            font-size: 16px;\n        }\n        \n        .event-group {\n            border-bottom: 1px solid #eee;\n        }\n        \n        .event-group:last-child {\n            border-bottom: none;\n        }\n        \n        .group-header {\n            background: #34495e;\n            color: white;\n            padding: 12px 15px;\n            font-weight: bold;\n            cursor: pointer;\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            transition: background-color 0.2s;\n        }\n        \n        .group-header:hover {\n            background: #2c3e50;\n        }\n        \n        .group-header.selected {\n            background: #e74c3c;\n        }\n        \n        .group-info {\n            display: flex;\n            flex-direction: column;\n            gap: 2px;\n        }\n        \n        .group-title {\n            font-size: 14px;\n        }\n        \n        .group-subtitle {\n            font-size: 11px;\n            opacity: 0.8;\n        }\n        \n        .group-toggle {\n            font-size: 14px;\n            transition: transform 0.3s;\n        }\n        \n        .group-toggle.expanded {\n            transform: rotate(90deg);\n        }\n        \n        .event-list {\n            display: none;\n            background: #f8f9fa;\n        }\n        \n        .event-list.expanded {\n            display: block;\n        }\n        \n        .event-item {\n            padding: 12px 15px;\n            border-bottom: 1px solid #e9ecef;\n            cursor: pointer;\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            transition: all 0.2s;\n        }\n        \n        .event-item:hover {\n            background: #e3f2fd;\n        }\n        \n        .event-item.selected {\n            background: #bbdefb;\n            border-left: 4px solid #2196f3;\n        }\n        \n        .event-item:last-child {\n            border-bottom: none;\n        }\n        \n        .event-info {\n            flex: 1;\n        }\n        \n        .event-number {\n            font-weight: bold;\n            color: #2c3e50;\n            margin-bottom: 3px;\n            font-size: 14px;\n        }\n        \n        .event-desc {\n            font-size: 11px;\n            color: #666;\n            line-height: 1.3;\n            margin-bottom: 2px;\n        }\n        \n        .event-dances {\n            font-size: 10px;\n            color: #888;\n            font-style: italic;\n        }\n        \n        .event-status {\n            font-size: 10px;\n            padding: 3px 8px;\n            border-radius: 12px;\n            font-weight: bold;\n            text-align: center;\n            min-width: 50px;\n        }\n        \n        .status-final {\n            background: #d4edda;\n            color: #155724;\n        }\n        \n        .status-semi {\n            background: #fff3cd;\n            color: #856404;\n        }\n        \n        .status-prelim {\n            background: #f8d7da;\n            color: #721c24;\n        }\n        \n        .right-header {\n            background: #34495e;\n            color: white;\n            padding: 15px 20px;\n        }\n        \n        .right-title {\n            font-size: 20px;\n            font-weight: bold;\n            margin-bottom: 10px;\n        }\n        \n        .event-info-row {\n            display: grid;\n            grid-template-columns: 80px 80px 80px 1fr;\n            gap: 20px;\n            align-items: center;\n            font-size: 12px;\n        }\n        \n        .info-item {\n            display: flex;\n            flex-direction: column;\n            gap: 2px;\n        }\n        \n        .info-label {\n            font-weight: bold;\n            color: #bdc3c7;\n            font-size: 10px;\n            text-transform: uppercase;\n            letter-spacing: 0.5px;\n        }\n        \n        .info-value {\n            color: white;\n            font-size: 12px;\n        }\n        \n        .dance-sequence-value {\n            color: #3498db;\n            font-weight: 500;\n            cursor: pointer;\n            display: flex;\n            align-items: center;\n            gap: 4px;\n        }\n        \n        .dance-sequence-value:hover {\n            text-decoration: underline;\n        }\n        \n        .dance-edit-icon {\n            font-size: 10px;\n            opacity: 0.7;\n        }\n        \n        .right-subtitle {\n            font-size: 12px;\n            opacity: 0.8;\n        }\n        \n        .group-info-header {\n            background: #f8f9fa;\n            padding: 15px 20px;\n            border-bottom: 1px solid #dee2e6;\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n        }\n        \n        .group-title {\n            font-size: 16px;\n            font-weight: bold;\n            color: #2c3e50;\n            display: flex;\n            align-items: center;\n            gap: 8px;\n            flex-wrap: wrap;\n        }\n        \n        .group-subtitle {\n            font-size: 12px;\n            color: #666;\n            line-height: 1.4;\n        }\n        \n        .event-details {\n            display: flex;\n            gap: 4px;\n            flex-wrap: wrap;\n            font-size: 10px;\n            color: #666;\n        }\n        \n        .event-detail-item {\n            background: #e9ecef;\n            padding: 2px 6px;\n            border-radius: 10px;\n            white-space: nowrap;\n        }\n        \n        .dance-sequence {\n            color: #2196f3;\n            font-weight: 500;\n        }\n        \n        .dance-sequence-editable {\n            cursor: pointer;\n            padding: 4px 8px;\n            border-radius: 4px;\n            transition: background-color 0.2s;\n        }\n        \n        .dance-sequence-editable:hover {\n            background: rgba(33, 150, 243, 0.1);\n        }\n        \n        .dance-edit-icon {\n            margin-left: 5px;\n            font-size: 10px;\n            opacity: 0.7;\n        }\n        \n        .dance-edit-modal {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background: rgba(0,0,0,0.5);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            z-index: 1000;\n        }\n        \n        .dance-edit-content {\n            background: white;\n            padding: 20px;\n            border-radius: 8px;\n            width: 80%;\n            max-width: 600px;\n            max-height: 80vh;\n            overflow-y: auto;\n        }\n        \n        .dance-edit-header {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            margin-bottom: 20px;\n            padding-bottom: 10px;\n            border-bottom: 1px solid #dee2e6;\n        }\n        \n        .dance-edit-title {\n            font-size: 18px;\n            font-weight: bold;\n            color: #2c3e50;\n        }\n        \n        .dance-edit-close {\n            background: none;\n            border: none;\n            font-size: 24px;\n            cursor: pointer;\n            color: #666;\n        }\n        \n        .dance-list-container {\n            margin-bottom: 20px;\n        }\n        \n        .dance-item {\n            display: flex;\n            align-items: center;\n            gap: 10px;\n            padding: 10px;\n            border: 1px solid #dee2e6;\n            border-radius: 6px;\n            margin-bottom: 8px;\n            background: #f8f9fa;\n        }\n        \n        .dance-item.dragging {\n            opacity: 0.5;\n        }\n        \n        .dance-drag-handle {\n            cursor: move;\n            color: #666;\n            font-size: 16px;\n        }\n        \n        .dance-number {\n            background: #2196f3;\n            color: white;\n            width: 24px;\n            height: 24px;\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            font-size: 12px;\n            font-weight: bold;\n        }\n        \n        .dance-info {\n            flex: 1;\n        }\n        \n        .dance-name {\n            font-weight: 500;\n            color: #2c3e50;\n        }\n        \n        .dance-events {\n            font-size: 12px;\n            color: #666;\n        }\n        \n        .dance-actions {\n            display: flex;\n            gap: 5px;\n        }\n        \n        .dance-action-btn {\n            width: 24px;\n            height: 24px;\n            border: none;\n            border-radius: 4px;\n            cursor: pointer;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            font-size: 12px;\n        }\n        \n        .dance-remove-btn {\n            background: #dc3545;\n            color: white;\n        }\n        \n        .dance-remove-btn:hover {\n            background: #c82333;\n        }\n        \n        .dance-edit-buttons {\n            display: flex;\n            gap: 10px;\n            justify-content: flex-end;\n        }\n        \n        .btn-save {\n            background: #28a745;\n            color: white;\n            border: none;\n            padding: 8px 16px;\n            border-radius: 4px;\n            cursor: pointer;\n        }\n        \n        .btn-cancel {\n            background: #6c757d;\n            color: white;\n            border: none;\n            padding: 8px 16px;\n            border-radius: 4px;\n            cursor: pointer;\n        }\n        \n        .event-cards-container {\n            padding: 20px;\n            min-height: 400px;\n        }\n        \n        .event-cards-grid {\n            display: grid;\n            grid-template-columns: repeat(2, 1fr);\n            gap: 20px;\n            margin-bottom: 20px;\n        }\n        \n        .event-card {\n            background: white;\n            border: 1px solid #dee2e6;\n            border-radius: 8px;\n            padding: 0;\n            box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n            transition: all 0.3s;\n            cursor: pointer;\n            overflow: hidden;\n        }\n        \n        .event-card:hover {\n            box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n            transform: translateY(-2px);\n        }\n        \n        .event-card.selected {\n            border-color: #2196f3;\n            box-shadow: 0 4px 12px rgba(33, 150, 243, 0.2);\n            transform: translateY(-2px);\n        }\n        \n        \n        .event-card-body {\n            display: flex;\n            min-height: 400px;\n            padding-top: 15px;\n        }\n        \n        .event-card-left {\n            flex: 1;\n            padding: 15px;\n            border-right: 1px solid #dee2e6;\n            background: #fafbfc;\n        }\n        \n        .event-card-right {\n            flex: 1;\n            padding: 15px;\n            background: white;\n        }\n        \n        .event-card-title {\n            font-size: 14px;\n            font-weight: 500;\n            color: #2c3e50;\n            margin-bottom: 12px;\n            line-height: 1.4;\n        }\n        \n        .event-card-details {\n            margin-bottom: 15px;\n        }\n        \n        .event-card-detail-row {\n            display: flex;\n            justify-content: space-between;\n            margin-bottom: 5px;\n            font-size: 12px;\n        }\n        \n        .event-card-detail-label {\n            color: #666;\n            font-weight: 500;\n        }\n        \n        .event-card-detail-value {\n            color: #2c3e50;\n        }\n        \n        .event-card-dances {\n            background: #f8f9fa;\n            padding: 8px 12px;\n            border-radius: 6px;\n            font-size: 11px;\n            color: #666;\n            margin-bottom: 15px;\n        }\n        \n        .event-card-judges {\n            height: 100%;\n        }\n        \n        .judges-header {\n            margin-bottom: 12px;\n            padding-bottom: 8px;\n            border-bottom: 1px solid #dee2e6;\n        }\n        \n        .event-title {\n            font-size: 14px;\n            font-weight: bold;\n            color: #2c3e50;\n            margin-bottom: 8px;\n        }\n        \n        .event-number {\n            color: #007bff;\n            font-weight: bold;\n            margin-right: 8px;\n        }\n        \n        .judges-info {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            font-size: 12px;\n            font-weight: bold;\n            color: #2c3e50;\n        }\n        \n        .judges-progress {\n            font-size: 10px;\n            color: #666;\n            background: #e9ecef;\n            padding: 2px 6px;\n            border-radius: 10px;\n        }\n        \n        .judges-list {\n            display: flex;\n            flex-direction: column;\n            gap: 4px;\n        }\n        \n        .judge-item {\n            display: flex;\n            align-items: center;\n            justify-content: space-between;\n            padding: 6px 8px;\n            border-radius: 4px;\n            font-size: 10px;\n            font-weight: 500;\n            transition: background-color 0.2s;\n        }\n        \n        .judge-item:hover {\n            background: rgba(0,0,0,0.05);\n        }\n        \n        .judge-info {\n            display: flex;\n            align-items: center;\n            gap: 8px;\n        }\n        \n        .judge-status-waiting {\n            background: #f8f9fa;\n            color: #6c757d;\n            border: 1px solid #e9ecef;\n        }\n        \n        .judge-status-scoring {\n            background: #fff3cd;\n            color: #856404;\n            border: 1px solid #ffeaa7;\n        }\n        \n        .judge-status-completed {\n            background: #d4edda;\n            color: #155724;\n            border: 1px solid #c3e6cb;\n        }\n        \n        /* 심사위원 상태 표시 (백업 파일 방식) */\n        .judge-status {\n            font-size: 0.8em;\n            padding: 2px 6px;\n            border-radius: 10px;\n            font-weight: bold;\n            text-align: center;\n            min-width: 40px;\n        }\n        .judge-status.scoring {\n            background: #28a745;\n            color: white;\n        }\n        .judge-status.completed {\n            background: #007bff;\n            color: white;\n        }\n        .judge-status.waiting {\n            background: #ffc107;\n            color: #333;\n        }\n        .judge-status.offline {\n            background: #6c757d;\n            color: white;\n        }\n        \n        .judge-dot {\n            width: 8px;\n            height: 8px;\n            border-radius: 50%;\n            flex-shrink: 0;\n        }\n        \n        .judge-dot-waiting {\n            background: #6c757d;\n        }\n        \n        .judge-dot-scoring {\n            background: #ffc107;\n        }\n        \n        .judge-dot-completed {\n            background: #28a745;\n        }\n        \n        .judge-name {\n            font-weight: 600;\n            min-width: 20px;\n            font-size: 10px;\n        }\n        \n        .judge-progress {\n            font-size: 9px;\n            color: #666;\n            background: rgba(255,255,255,0.7);\n            padding: 1px 4px;\n            border-radius: 3px;\n        }\n        \n        .judge-actions {\n            display: flex;\n            gap: 4px;\n            align-items: center;\n        }\n        \n        .judge-btn {\n            width: 20px;\n            height: 20px;\n            border: none;\n            border-radius: 3px;\n            cursor: pointer;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            font-size: 10px;\n            transition: all 0.2s;\n        }\n        \n        .judge-btn:hover {\n            transform: scale(1.1);\n        }\n        \n        .judge-btn-edit {\n            background: #2196f3;\n            color: white;\n        }\n        \n        .judge-btn-edit:hover {\n            background: #1976d2;\n        }\n        \n        .judge-btn-view {\n            background: #6c757d;\n            color: white;\n        }\n        \n        .judge-btn-view:hover {\n            background: #5a6268;\n        }\n        \n        .judge-btn-exclude {\n            background: #dc3545;\n            color: white;\n        }\n        \n        .judge-btn-exclude:hover {\n            background: #c82333;\n        }\n        \n        .event-card-players {\n                    margin-bottom: 15px;\n                }\n        \n        .players-header {\n            font-size: 11px;\n                    font-weight: bold;\n            color: #2c3e50;\n            margin-bottom: 8px;\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n        }\n        \n        .players-count {\n            font-size: 10px;\n            color: #666;\n        }\n        \n        .players-list {\n            display: flex;\n            flex-direction: column;\n            gap: 4px;\n            max-height: 200px;\n            overflow-y: auto;\n        }\n        \n        .player-item {\n            display: flex;\n            align-items: center;\n            gap: 8px;\n            padding: 6px 8px;\n            background: #f8f9fa;\n            border-radius: 6px;\n            border: 1px solid #e9ecef;\n            transition: background-color 0.2s;\n        }\n        \n        .player-item:hover {\n            background: #e3f2fd;\n            border-color: #bbdefb;\n        }\n        \n        .player-number {\n            background: #2196f3;\n            color: white;\n            font-size: 10px;\n            padding: 2px 6px;\n            border-radius: 10px;\n            font-weight: bold;\n            min-width: 25px;\n            text-align: center;\n        }\n        \n        .player-name {\n            font-size: 11px;\n            color: #2c3e50;\n            font-weight: 500;\n            flex: 1;\n            line-height: 1.2;\n        }\n        \n        .player-gender {\n            font-size: 9px;\n            color: #666;\n            background: #e9ecef;\n            padding: 2px 6px;\n            border-radius: 10px;\n            font-weight: 500;\n            min-width: 30px;\n            text-align: center;\n        }\n        \n        .event-card-actions {\n            display: flex;\n            gap: 6px;\n            flex-wrap: wrap;\n        }\n        \n        .event-card-btn {\n            padding: 8px 12px;\n            border: none;\n            border-radius: 6px;\n            cursor: pointer;\n            font-size: 11px;\n            font-weight: 500;\n            transition: all 0.2s;\n            flex: 1;\n            min-width: 70px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 4px;\n        }\n        \n        .event-card-btn:hover {\n            transform: translateY(-1px);\n            box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n        }\n        \n        .event-card-btn-scores {\n            background: #17a2b8;\n            color: white;\n        }\n        \n        .event-card-btn-scores:hover {\n            background: #138496;\n        }\n        \n        .event-card-btn-aggregation {\n            background: #28a745;\n            color: white;\n        }\n        \n        .event-card-btn-aggregation:hover {\n            background: #218838;\n        }\n        \n        .event-card-btn-awards {\n            background: #ffc107;\n            color: #212529;\n        }\n        \n        .event-card-btn-players {\n            background: #17a2b8;\n            color: white;\n        }\n        \n        .event-card-btn-awards:hover {\n            background: #e0a800;\n        }\n        \n        .event-card-btn-players:hover {\n            background: #138496;\n        }\n        \n        .single-event-view {\n            padding: 20px;\n            min-height: 400px;\n        }\n        \n        .event-details {\n            display: grid;\n            grid-template-columns: 1fr 1fr;\n            gap: 20px;\n            margin-bottom: 20px;\n        }\n        \n        .detail-card {\n            background: #f8f9fa;\n            padding: 15px;\n            border-radius: 8px;\n            border-left: 4px solid #2196f3;\n        }\n        \n        .detail-title {\n            font-weight: bold;\n            color: #2c3e50;\n            margin-bottom: 8px;\n        }\n        \n        .detail-content {\n            font-size: 14px;\n            color: #666;\n        }\n        \n        .action-buttons {\n            display: flex;\n            gap: 10px;\n            margin-top: 20px;\n        }\n        \n        .btn {\n            padding: 10px 20px;\n            border: none;\n            border-radius: 6px;\n            cursor: pointer;\n            font-size: 14px;\n            font-weight: 500;\n            transition: all 0.2s;\n        }\n        \n        .btn-primary {\n            background: #2196f3;\n            color: white;\n        }\n        \n        .btn-primary:hover {\n            background: #1976d2;\n        }\n        \n        .btn-secondary {\n            background: #6c757d;\n            color: white;\n        }\n        \n        .btn-secondary:hover {\n            background: #5a6268;\n        }\n        \n        .btn-success {\n            background: #28a745;\n            color: white;\n        }\n        \n        .btn-success:hover {\n            background: #218838;\n        }\n        \n        .no-selection {\n            text-align: center;\n            padding: 60px 20px;\n            color: #666;\n        }\n        \n        .no-selection h3 {\n            color: #2c3e50;\n            margin-bottom: 10px;\n        }\n        \n        .multi-event-indicator {\n            display: inline-block;\n            background: #ff9800;\n            color: white;\n            font-size: 10px;\n            padding: 2px 6px;\n            border-radius: 10px;\n            margin-left: 5px;\n        }\n        \n        .group-actions {\n            display: flex;\n            gap: 8px;\n            align-items: center;\n        }\n        \n        .group-complete-btn {\n            background: #28a745;\n            color: white;\n            border: none;\n            padding: 4px 8px;\n            border-radius: 4px;\n            font-size: 10px;\n            cursor: pointer;\n            transition: background-color 0.2s;\n        }\n        \n        .group-complete-btn:hover {\n            background: #218838;\n        }\n        \n        .group-complete-btn.completed {\n            background: #6c757d;\n        }\n        \n        .group-complete-btn.completed:hover {\n            background: #5a6268;\n        }\n        \n        .event-group.completed {\n            opacity: 0.5;\n            background: #f8f9fa;\n        }\n        \n        .event-group.completed .group-header {\n            background: #6c757d;\n        }\n        \n        .list-controls {\n            background: #e9ecef;\n            padding: 10px 15px;\n            border-bottom: 1px solid #dee2e6;\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n        }\n        \n        .list-toggle-btn {\n            background: #007bff;\n            color: white;\n            border: none;\n            padding: 6px 12px;\n            border-radius: 4px;\n            font-size: 12px;\n            cursor: pointer;\n            transition: background-color 0.2s;\n        }\n        \n        .list-toggle-btn:hover {\n            background: #0056b3;\n        }\n        \n        .list-toggle-btn.hidden {\n            background: #6c757d;\n        }\n        \n        .list-toggle-btn.hidden:hover {\n            background: #5a6268;\n        }\n        \n        .event-group.hidden {\n            display: none;\n        }\n        \n        /* 집계 결과 스타일 */\n        .aggregation-result {\n            padding: 20px;\n            background: #f8f9fa;\n            border-radius: 8px;\n            margin: 20px 0;\n        }\n        \n        .aggregation-result h2 {\n            color: #2c3e50;\n            border-bottom: 2px solid #3498db;\n            padding-bottom: 10px;\n            margin-bottom: 20px;\n        }\n        \n        .aggregation-result h3 {\n            color: #34495e;\n            margin-top: 20px;\n            margin-bottom: 10px;\n        }\n        \n        .event-info {\n            background: white;\n            padding: 15px;\n            border-radius: 5px;\n            margin-bottom: 20px;\n            border-left: 4px solid #3498db;\n        }\n        \n        .event-info p {\n            margin: 5px 0;\n        }\n        \n        .rankings-table {\n            width: 100%;\n            border-collapse: collapse;\n            background: white;\n            border-radius: 5px;\n            overflow: hidden;\n            box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n        }\n        \n        .rankings-table th {\n            background: #3498db;\n            color: white;\n            padding: 12px;\n            text-align: center;\n            font-weight: bold;\n        }\n        \n        .rankings-table td {\n            padding: 10px 12px;\n            text-align: center;\n            border-bottom: 1px solid #ecf0f1;\n        }\n        \n        .rankings-table tr:nth-child(even) {\n            background: #f8f9fa;\n        }\n        \n        .rankings-table tr:hover {\n            background: #e8f4f8;\n        }\n        \n        .players-info {\n            background: white;\n            padding: 15px;\n            border-radius: 5px;\n            border-left: 4px solid #27ae60;\n        }\n        \n        .players-info ul {\n            list-style: none;\n            padding: 0;\n        }\n        \n        .players-info li {\n            padding: 5px 0;\n            border-bottom: 1px solid #ecf0f1;\n        }\n        \n        .players-info li:last-child {\n            border-bottom: none;\n        }\n        \n        /* 집계 오류 스타일 */\n        .aggregation-error {\n            padding: 20px;\n            background: #f8d7da;\n            border: 1px solid #f5c6cb;\n            border-radius: 8px;\n            margin: 20px 0;\n            color: #721c24;\n        }\n        \n        .aggregation-error h2 {\n            color: #721c24;\n            margin-bottom: 15px;\n        }\n        \n        .aggregation-error p {\n            margin: 5px 0;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <!-- 왼쪽 이벤트 리스트 패널 -->\n        <div class=\"left-panel\">\n            <div class=\"panel-header\">\n                📋 이벤트 리스트\n            </div>\n            \n            <div class=\"list-controls\">\n                <span style=\"font-size: 12px; color: #666;\">리스트 관리</span>\n                <button class=\"list-toggle-btn\" onclick=\"toggleCompletedGroups()\" id=\"toggleCompletedBtn\">\n                    완료된 이벤트 숨기기\n                </button>\n            </div>\n        \n            <?php foreach ($event_groups as $group): ?>\n            <div class=\"event-group\" data-group=\"<?=h($group['group_no'])?>\">\n                <div class=\"group-header\" onclick=\"toggleGroup('<?=h($group['group_no'])?>')\">\n                    <div class=\"group-info\">\n                        <div class=\"group-title\">\n                            통합이벤트 <?=h($group['group_no'])?>\n                            <?php if (count($group['events']) > 1): ?>\n                                <span class=\"multi-event-indicator\">멀티</span>\n                            <?php endif; ?>\n                        </div>\n                        <div class=\"group-subtitle\"><?=h($group['group_name'])?></div>\n                    </div>\n                    <div class=\"group-actions\">\n                        <button class=\"group-complete-btn\" onclick=\"event.stopPropagation(); toggleGroupComplete('<?=h($group['group_no'])?>')\" \n                                data-group=\"<?=h($group['group_no'])?>\">\n                            완료\n                        </button>\n                        <span class=\"group-toggle\">▶</span>\n                    </div>\n                </div>\n            \n                <div class=\"event-list\" id=\"group-<?=h($group['group_no'])?>\">\n                    <?php foreach ($group['events'] as $event): ?>\n                    <div class=\"event-item\" \n                         data-event=\"<?=h($event['detail_no'] ?: $event['no'])?>\"\n                         data-group=\"<?=h($group['group_no'])?>\"\n                         <?php if ($group['is_multi']): ?>\n                         onclick=\"selectEvent('<?=h($group['group_no'])?>', '<?=h($group['group_no'])?>', this)\"\n                         <?php else: ?>\n                         onclick=\"selectEvent('<?=h($event['detail_no'] ?: $event['no'])?>', '<?=h($group['group_no'])?>', this)\"\n                         <?php endif; ?>>\n                        <div class=\"event-info\">\n                            <div class=\"event-number\">\n                                <?=h($event['detail_no'] ?: $event['no'])?>\n                    </div>\n                            <div class=\"event-desc\">\n                                <?=h($event['desc'])?>\n        </div>\n                            <?php if (!empty($event['dance_names'])): ?>\n                            <div class=\"event-dances\">\n                                댄스: <?=h(implode(', ', $event['dance_names']))?>\n                            </div>\n                            <?php elseif (!empty($event['dances'])): ?>\n                            <div class=\"event-dances\">\n                                댄스: <?=h(implode(', ', $event['dances']))?>\n                            </div>\n                            <?php endif; ?>\n    </div>\n                        <div class=\"event-status status-<?=strtolower($event['round'])?>\">\n                            <?=h($event['round'])?>\n                </div>\n            </div>\n                    <?php endforeach; ?>\n                </div>\n            </div>\n            <?php endforeach; ?>\n        </div>\n        \n        <!-- 오른쪽 메인 패널 -->\n        <div class=\"right-panel\">\n            \n            <div id=\"right-content\">\n                <?php if ($view_mode === 'aggregation'): ?>\n                <?php if ($aggregation_result): ?>\n                <!-- 집계 결과 표시 -->\n                <div class=\"aggregation-result\">\n                    <h2>📊 집계 결과 - <?=h($aggregation_result['event_info']['desc'] ?? '알 수 없는 이벤트')?></h2>\n                    \n                    <!-- 디버깅 정보 -->\n                    <div style=\"background: #f0f0f0; padding: 10px; margin: 10px 0; border-radius: 5px; font-size: 12px;\">\n                        <strong>디버깅 정보:</strong><br>\n                        집계 결과 타입: <?=gettype($aggregation_result)?><br>\n                        집계 결과 키: <?=implode(', ', array_keys($aggregation_result))?><br>\n                        이벤트 정보: <?=json_encode($aggregation_result['event_info'] ?? '없음')?><br>\n                        최종 순위 수: <?=count($aggregation_result['final_rankings'] ?? [])?>\n                    </div>\n                    \n                    <div class=\"event-info\">\n                        <h3>이벤트 정보</h3>\n                        <p><strong>이벤트 번호:</strong> <?=h($aggregation_result['event_info']['event_no'] ?? '')?></p>\n                        <p><strong>라운드:</strong> <?=h($aggregation_result['event_info']['round'] ?? '')?></p>\n                        <p><strong>패널:</strong> <?=h($aggregation_result['event_info']['panel'] ?? '')?></p>\n                        <p><strong>댄스:</strong> <?=implode(', ', $aggregation_result['event_info']['dances'] ?? [])?></p>\n                    </div>\n                    \n                    <div class=\"final-rankings\">\n                        <h3>🏆 최종 순위</h3>\n                        <table class=\"rankings-table\">\n                            <thead>\n                                <tr>\n                                    <th>순위</th>\n                                    <th>선수 번호</th>\n                                    <th>합계</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <?php foreach ($aggregation_result['final_rankings'] ?? [] as $ranking): ?>\n                                <tr>\n                                    <td><?=h($ranking['final_rank'])?></td>\n                                    <td><?=h($ranking['player_no'])?></td>\n                                    <td><?=h($ranking['sum_of_places'])?></td>\n                                </tr>\n                                <?php endforeach; ?>\n                            </tbody>\n                        </table>\n                    </div>\n                    \n                    <div class=\"players-info\">\n                        <h3>👥 참가 선수</h3>\n                        <ul>\n                            <?php foreach ($aggregation_result['players'] ?? [] as $player): ?>\n                            <li>선수 번호: <?=h($player['number'])?></li>\n                            <?php endforeach; ?>\n                        </ul>\n                    </div>\n                </div>\n                <?php else: ?>\n                <!-- 집계 결과 로드 실패 -->\n                <div class=\"aggregation-error\">\n                    <h2>❌ 집계 결과 로드 실패</h2>\n                    <p><strong>이벤트:</strong> <?=h($view_event_no)?></p>\n                    <p><strong>컴피티션 ID:</strong> <?=h($comp_id)?></p>\n                    <p>집계 API에서 데이터를 가져올 수 없습니다.</p>\n                    <div style=\"background: #f8f9fa; padding: 10px; margin: 10px 0; border-radius: 5px;\">\n                        <strong>디버깅 정보:</strong><br>\n                        URL: <?=h($aggregation_url ?? '')?><br>\n                        데이터 길이: <?=strlen($aggregation_data ?? '')?><br>\n                        오류: <?=error_get_last()['message'] ?? '없음'?>\n                    </div>\n                </div>\n                <?php endif; ?>\n                <?php else: ?>\n                <div class=\"no-selection\">\n                    <h3>이벤트를 선택해주세요</h3>\n                    <p>왼쪽에서 이벤트를 선택하면 여기에 상세 정보가 표시됩니다.</p>\n                <?php endif; ?>\n                    <?php if (isset($_GET['debug'])): ?>\n                    <div style=\"background: #f0f0f0; padding: 10px; margin: 10px 0; font-size: 12px;\">\n                        <strong>디버그 정보:</strong><br>\n                        이벤트 그룹 수: <?=count($event_groups)?><br>\n                        첫 번째 그룹: <?=json_encode($event_groups[0] ?? '없음')?>\n            </div>\n                    <?php endif; ?>\n        </div>\n            </div>\n        </div>\n    </div>\n\n    <!-- 선수 관리 모달 -->\n    <div class=\"modal-bg\" id=\"playerModalBg\" style=\"display:none; position:fixed; left:0; top:0; width:100vw; height:100vh; background:rgba(0,0,0,0.3); align-items:center; justify-content:center; z-index:100;\">\n        <div class=\"modal\" style=\"background:#fff; border-radius:10px; padding:2em 2.2em; box-shadow:0 10px 40px #0002; min-width:400px;\">\n            <div class=\"modal-title\">선수 관리<br><span style=\"font-size:0.9em;color:#888;\">등번호를 입력하세요 (예: 10, 23, 10~18)</span></div>\n            <div style=\"display:flex; gap:0.5em; margin:1em 0;\">\n                <input type=\"text\" id=\"playerInput\" placeholder=\"등번호나 범위를 입력하세요\" style=\"font-size:1.1em; padding:0.3em 0.6em; border:1.5px solid #aaa; flex:1;\" autocomplete=\"off\">\n                <button onclick=\"addPlayers()\" style=\"background:#007bff; color:white; border:none; padding:0.3em 1em; border-radius:4px; cursor:pointer;\">추가</button>\n            </div>\n            <div id=\"currentPlayers\" style=\"margin:1em 0; max-height:200px; overflow-y:auto; border:1px solid #ddd; padding:0.5em; border-radius:4px;\">\n                <div style=\"font-weight:bold; margin-bottom:0.5em;\">현재 선수 목록:</div>\n                <div id=\"playersList\"></div>\n            </div>\n            <div class=\"modal-btns\" style=\"margin-top:1em; text-align:right;\">\n                <button type=\"button\" onclick=\"closePlayerModal()\" style=\"font-size:1.08em; margin-left:0.9em; border-radius:4px; padding:0.29em 1.3em;\">닫기</button>\n                <button type=\"button\" onclick=\"savePlayers()\" style=\"font-size:1.08em; margin-left:0.9em; border-radius:4px; padding:0.29em 1.3em; background:#28a745; color:white; border:none;\">저장</button>\n            </div>\n        </div>\n    </div>\n\n    <script>\n        let selectedEvent = null;\n        let selectedGroup = null;\n        \n        // 전역 그룹 데이터\n        const groupData = <?=json_encode($event_groups)?>;\n        let expandedGroups = new Set();\n        let completedGroups = new Set();\n        let hideCompleted = false;\n        let currentEventForPlayerModal = null;\n        let currentPlayers = [];\n        let disabledJudgesByEvent = {};\n        \n        function toggleGroup(groupNo) {\n            const group = document.querySelector(`[data-group=\"${groupNo}\"]`);\n            const eventList = document.getElementById(`group-${groupNo}`);\n            const toggle = group.querySelector('.group-toggle');\n            \n            if (expandedGroups.has(groupNo)) {\n                eventList.classList.remove('expanded');\n                toggle.classList.remove('expanded');\n                expandedGroups.delete(groupNo);\n            } else {\n                eventList.classList.add('expanded');\n                toggle.classList.add('expanded');\n                expandedGroups.add(groupNo);\n            }\n        }\n        \n        function toggleGroupComplete(groupNo) {\n            const group = document.querySelector(`[data-group=\"${groupNo}\"]`);\n            const completeBtn = group.querySelector('.group-complete-btn');\n            \n            if (completedGroups.has(groupNo)) {\n                // 완료 해제\n                group.classList.remove('completed');\n                completeBtn.classList.remove('completed');\n                completeBtn.textContent = '완료';\n                completedGroups.delete(groupNo);\n            } else {\n                // 완료 처리\n                group.classList.add('completed');\n                completeBtn.classList.add('completed');\n                completeBtn.textContent = '완료됨';\n                completedGroups.add(groupNo);\n            }\n            \n            // 숨김 모드가 활성화되어 있으면 업데이트\n            if (hideCompleted) {\n                updateGroupVisibility();\n            }\n        }\n        \n        function toggleCompletedGroups() {\n            const toggleBtn = document.getElementById('toggleCompletedBtn');\n            hideCompleted = !hideCompleted;\n            \n            if (hideCompleted) {\n                toggleBtn.textContent = '완료된 이벤트 보기';\n                toggleBtn.classList.add('hidden');\n            } else {\n                toggleBtn.textContent = '완료된 이벤트 숨기기';\n                toggleBtn.classList.remove('hidden');\n            }\n            \n            updateGroupVisibility();\n        }\n        \n        function updateGroupVisibility() {\n            const groups = document.querySelectorAll('.event-group');\n            groups.forEach(group => {\n                const groupNo = group.dataset.group;\n                if (hideCompleted && completedGroups.has(groupNo)) {\n                    group.classList.add('hidden');\n                } else {\n                    group.classList.remove('hidden');\n                }\n            });\n        }\n        \n        function selectEvent(eventId, groupId, element) {\n            console.log('selectEvent called:', {eventId, groupId});\n            \n            // 이전 선택 해제\n            document.querySelectorAll('.event-item.selected').forEach(item => {\n                item.classList.remove('selected');\n            });\n            document.querySelectorAll('.group-header.selected').forEach(header => {\n                header.classList.remove('selected');\n            });\n            \n            // 현재 선택\n            element.classList.add('selected');\n            element.closest('.event-group').querySelector('.group-header').classList.add('selected');\n            \n            selectedEvent = eventId;\n            selectedGroup = groupId;\n            \n            console.log('selectedEvent set to:', selectedEvent);\n            console.log('selectedGroup set to:', selectedGroup);\n            \n            // 오른쪽 패널 업데이트\n            updateRightPanel(eventId, groupId);\n        }\n        \n        function updateRightPanel(eventId, groupId) {\n            console.log('updateRightPanel called:', {eventId, groupId});\n            const rightContent = document.getElementById('right-content');\n            \n            console.log('GroupData:', groupData);\n            console.log('Looking for groupId:', groupId);\n            \n            const group = groupData.find(g => g.group_no == groupId);\n            console.log('Found group:', group);\n            \n            if (!group) {\n                console.error('Group not found for groupId:', groupId);\n                return;\n            }\n            \n            const event = group.events.find(e => (e.detail_no || e.no) === eventId);\n            console.log('Found event:', event);\n            \n            if (!event) {\n                console.error('Event not found for eventId:', eventId);\n            return;\n        }\n        \n            const isMultiEvent = group.events.length > 1;\n            console.log('isMultiEvent:', isMultiEvent);\n            console.log('group.events.length:', group.events.length);\n            \n            let content = `\n                <div class=\"right-header\">\n                    <div class=\"right-title\">통합이벤트 ${groupId}</div>\n                    <div class=\"event-info-row\">\n                        <div class=\"info-item\">\n                            <div class=\"info-label\">유형</div>\n                            <div class=\"info-value\">${isMultiEvent ? '멀티 이벤트' : '싱글 이벤트'}</div>\n                        </div>\n                        <div class=\"info-item\">\n                            <div class=\"info-label\">이벤트수</div>\n                            <div class=\"info-value\">${group.events.length}개</div>\n                        </div>\n                        <div class=\"info-item\">\n                            <div class=\"info-label\">패널</div>\n                            <div class=\"info-value\">${group.events[0].panel || 'N/A'}</div>\n                        </div>\n                        <div class=\"info-item\">\n                            <div class=\"info-label\">댄스순서</div>\n                            <div class=\"dance-sequence-value\" \n                                 onclick=\"openDanceEditModal('${groupId}')\"\n                                 title=\"댄스 순서 수정\">\n                                ${getDanceSequenceDisplay(group.dance_sequence)}\n                                <span class=\"dance-edit-icon\">✏️</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            `;\n            \n            if (isMultiEvent) {\n                // 멀티 이벤트인 경우 카드 그리드 표시\n                content += `\n                    <div class=\"event-cards-container\">\n                        <div class=\"event-cards-grid\">\n                `;\n                \n                group.events.forEach(evt => {\n                    const isSelected = (evt.detail_no || evt.no) === eventId;\n                    const statusClass = evt.round.toLowerCase().includes('final') ? 'status-final' : \n                                      evt.round.toLowerCase().includes('semi') ? 'status-semi' : 'status-prelim';\n                    \n                    // 이벤트 키 생성\n                    const eventKey = evt.detail_no || evt.no;\n                    \n        // PHP에서 미리 계산된 데이터 사용\n        let eventJudges = evt.judges || [];\n        const eventPlayers = evt.players || [];\n        \n        // 제외된 심사위원 필터링\n        const disabledJudges = disabledJudgesByEvent[evt.detail_no || evt.no] || [];\n        eventJudges = eventJudges.filter(judge => !disabledJudges.includes(judge.code));\n                    \n                    // 이벤트 제목 가져오기\n                    const eventTitle = evt.name || evt.title || `이벤트 ${evt.detail_no || evt.no}`;\n                    \n                    content += `\n                        <div class=\"event-card ${isSelected ? 'selected' : ''}\" \n                             data-event=\"${evt.detail_no || evt.no}\"\n                             onclick=\"selectEventFromCard('${evt.detail_no || evt.no}', '${groupId}')\">\n                            <div class=\"event-card-body\">\n                                <!-- 왼쪽: 심사위원 리스트 -->\n                                <div class=\"event-card-left\">\n                                    <div class=\"event-card-judges\">\n                                        <div class=\"judges-header\">\n                                            <div class=\"event-title\">\n                                                <span class=\"event-number\">${evt.detail_no || evt.no}</span>\n                                                ${eventTitle}\n                                            </div>\n                                            <div class=\"judges-info\">\n                                                <span>심사위원 현황</span>\n                                                <span class=\"judges-progress\">\n                                                    ${eventJudges.filter(j => j.status === 'completed').length}/${eventJudges.length} 완료\n                                                </span>\n                                            </div>\n                                        </div>\n                                        <div class=\"judges-list\">\n                                            ${eventJudges.map(judge => `\n                                                <div class=\"judge-item\" data-judge-code=\"${judge.code}\">\n                                                    <div class=\"judge-info\">\n                                                        <span class=\"judge-status waiting\" id=\"judge-status-${judge.code}\" data-judge-code=\"${judge.code}\">대기</span>\n                                                        <span class=\"judge-name\">${judge.code}</span>\n                                                    </div>\n                                                    <div class=\"judge-actions\">\n                                                        <button class=\"judge-btn judge-btn-exclude\" \n                                                                onclick=\"event.stopPropagation(); toggleAdjudicator('${evt.detail_no || evt.no}', '${judge.code}')\"\n                                                                title=\"이 이벤트에서 심사위원 제외\">\n                                                            X\n                                                        </button>\n                                                        <button class=\"judge-btn judge-btn-edit\" \n                                                                onclick=\"event.stopPropagation(); openJudgeScoring('${evt.detail_no || evt.no}', '${judge.code}')\"\n                                                                title=\"채점하기\">\n                                                            ✏️\n                                                        </button>\n                                                    </div>\n                                                </div>\n                                            `).join('')}\n        </div>\n        </div>\n    </div>\n                                \n                                <!-- 오른쪽: 나머지 정보 -->\n                                <div class=\"event-card-right\">\n                                    <div class=\"event-card-title\">${evt.desc}</div>\n                                    \n                                    <div class=\"event-card-details\">\n                                        <div class=\"event-card-detail-row\">\n                                            <span class=\"event-card-detail-label\">라운드:</span>\n                                            <span class=\"event-card-detail-value\">${evt.round}</span>\n</div>\n                                        <div class=\"event-card-detail-row\">\n                                            <span class=\"event-card-detail-label\">댄스:</span>\n                                            <span class=\"event-card-detail-value\">${evt.dance_names ? evt.dance_names.join(', ') : (evt.dances ? evt.dances.join(', ') : 'N/A')}</span>\n                                        </div>\n</div>\n                                    \n                                    <!-- 출전 선수 등번 -->\n                                    <div class=\"event-card-players\">\n                                        <div class=\"players-header\">\n                                            <span>출전 선수</span>\n                                            <span class=\"players-count\">${eventPlayers.length}명</span>\n    </div>\n                                        <div class=\"players-list\">\n                                            ${eventPlayers.map(player => `\n                                                <div class=\"player-item\">\n                                                    <div class=\"player-number\">${player.number}</div>\n                                                    <div class=\"player-name\">${player.name || `선수 ${player.number}`}</div>\n                                                    <div class=\"player-gender\">\n                                                        ${player.type === 'couple' ? '커플' : '싱글'}\n            </div>\n            </div>\n                                            `).join('')}\n            </div>\n            </div>\n                                    \n                                    <div class=\"event-card-actions\">\n                                        <button class=\"event-card-btn event-card-btn-players\" onclick=\"event.stopPropagation(); openPlayerModal('${evt.detail_no || evt.no}')\">\n                                            👥 선수\n                                        </button>\n                                        <button class=\"event-card-btn event-card-btn-scores\" onclick=\"event.stopPropagation(); viewScores('${evt.detail_no || evt.no}')\">\n                                            📊 점수\n                                        </button>\n                                        <button class=\"event-card-btn event-card-btn-aggregation\" onclick=\"event.stopPropagation(); openAggregation('${evt.detail_no || evt.no}')\">\n                                            📈 집계\n                                        </button>\n                                        <button class=\"event-card-btn event-card-btn-awards\" onclick=\"event.stopPropagation(); openAwards('${evt.detail_no || evt.no}')\">\n                                            🏆 상장\n                                        </button>\n        </div>\n    </div>\n    </div>\n                        </div>\n                    `;\n                });\n                \n                content += `\n                        </div>\n                    </div>\n                `;\n    } else {\n                // 싱글 이벤트인 경우 기존 상세 정보 표시\n                content += `\n                    <div class=\"group-info-header\">\n                        <div>\n                            <div class=\"group-title\">싱글 이벤트 상세 정보</div>\n                            <div class=\"group-subtitle\">\n                                <strong>패널:</strong> ${event.panel || 'N/A'} | \n                                <strong>댄스:</strong> \n                                <span class=\"dance-sequence\">\n                                    ${event.dance_names ? event.dance_names.join(' → ') : (event.dances ? event.dances.join(' → ') : 'N/A')}\n                                </span>\n</div>\n</div>\n</div>\n                    <div class=\"single-event-view\">\n                        <div class=\"event-details\">\n                            <div class=\"detail-card\">\n                                <div class=\"detail-title\">이벤트 정보</div>\n                                <div class=\"detail-content\">\n                                    <strong>이벤트 번호:</strong> ${eventId}<br>\n                                    <strong>라운드:</strong> ${event.round}<br>\n                                    <strong>카테고리:</strong> ${group.group_name}\n                                </div>\n                            </div>\n                            \n                            <div class=\"detail-card\">\n                                <div class=\"detail-title\">그룹 정보</div>\n                                <div class=\"detail-content\">\n                                    <strong>그룹 번호:</strong> ${groupId}<br>\n                                    <strong>총 이벤트:</strong> ${group.events.length}개<br>\n                                    <strong>타입:</strong> 싱글 이벤트\n                                </div>\n                            </div>\n                        </div>\n                        \n                        <div class=\"action-buttons\">\n                            <button class=\"btn btn-info\" onclick=\"viewScores('${eventId}')\">\n                                📊 점수 보기\n                            </button>\n                            <button class=\"btn btn-success\" onclick=\"openAggregation('${eventId}')\">\n                                📈 결과 집계\n                            </button>\n                            <button class=\"btn btn-warning\" onclick=\"openAwards('${eventId}')\">\n                                🏆 상장 발급\n                            </button>\n                        </div>\n                </div>\n            `;\n            }\n            \n            rightContent.innerHTML = content;\n            \n            // 실시간 업데이트는 startJudgeStatusMonitoring에서 처리\n        }\n        \n        function selectEventFromCard(eventId, groupId) {\n            // 왼쪽 패널의 해당 이벤트도 선택 상태로 업데이트\n            const eventElement = document.querySelector(`[data-event=\"${eventId}\"]`);\n            if (eventElement) {\n                // 이전 선택 해제\n                document.querySelectorAll('.event-item.selected').forEach(item => {\n                    item.classList.remove('selected');\n                });\n                document.querySelectorAll('.group-header.selected').forEach(header => {\n                    header.classList.remove('selected');\n                });\n                \n                // 현재 선택\n                eventElement.classList.add('selected');\n                eventElement.closest('.event-group').querySelector('.group-header').classList.add('selected');\n                \n                selectedEvent = eventId;\n                selectedGroup = groupId;\n                \n                // 오른쪽 패널 업데이트\n                updateRightPanel(eventId, groupId);\n            }\n        }\n        \n        function openJudgeScoring(eventId, judgeCode) {\n            if (!eventId || !judgeCode) {\n                alert('이벤트와 심사위원을 선택해주세요.');\n                return;\n            }\n            \n            // 디버그: 전달받은 매개변수 확인\n            console.log('openJudgeScoring called:', {\n                eventId: eventId,\n                judgeCode: judgeCode,\n                type: typeof judgeCode\n            });\n            \n            // 매개변수 유효성 검사\n            if (!eventId || eventId === 'undefined' || eventId === 'null') {\n                alert('이벤트 ID가 올바르지 않습니다: ' + eventId);\n                return;\n            }\n            if (!judgeCode || judgeCode === 'undefined' || judgeCode === 'null') {\n                alert('심사위원 코드가 올바르지 않습니다: ' + judgeCode);\n                return;\n            }\n            \n            const compId = '<?=$comp_id?>';\n            \n            // 여러 URL 옵션 시도\n            const urls = [\n                `judge_scoring.php?comp_id=${compId}&event_no=${eventId}&judge_code=${judgeCode}&admin_mode=1`,\n                `./judge_scoring.php?comp_id=${compId}&event_no=${eventId}&judge_code=${judgeCode}&admin_mode=1`,\n                `https://www.danceoffice.net/comp/judge_scoring.php?comp_id=${compId}&event_no=${eventId}&judge_code=${judgeCode}&admin_mode=1`\n            ];\n            \n            // 첫 번째 URL 시도\n            const url = urls[0];\n            console.log('Opening URL:', url);\n            console.log('Full URL details:', {\n                compId: compId,\n                eventId: eventId,\n                judgeCode: judgeCode,\n                baseUrl: window.location.origin + window.location.pathname.substring(0, window.location.pathname.lastIndexOf('/')),\n                finalUrl: url\n            });\n            \n            // URL이 올바른지 확인\n            if (url.includes('undefined') || url.includes('null')) {\n                alert('URL에 잘못된 값이 포함되어 있습니다: ' + url);\n                return;\n            }\n            \n            // 새 창 열기\n            const newWindow = window.open(url, '_blank', 'width=1200,height=800,scrollbars=yes,resizable=yes');\n            \n            // 새 창이 제대로 열렸는지 확인\n            if (!newWindow || newWindow.closed || typeof newWindow.closed == 'undefined') {\n                console.error('팝업이 차단되었습니다. 팝업 차단을 해제해주세요.');\n                alert('팝업이 차단되었습니다. 브라우저 설정에서 팝업을 허용해주세요.');\n            } else {\n                // 2초 후 페이지 로드 확인\n                setTimeout(() => {\n                    try {\n                        if (newWindow.location.href === 'about:blank' || newWindow.location.href.includes('danceoffice.net')) {\n                            console.log('채점 페이지가 정상적으로 로드되었습니다.');\n                        } else {\n                            console.warn('예상과 다른 페이지가 로드되었습니다:', newWindow.location.href);\n                        }\n                    } catch (e) {\n                        console.log('크로스 오리진 정책으로 인해 페이지 내용을 확인할 수 없습니다.');\n                    }\n                }, 2000);\n            }\n        }\n        \n        function viewJudgeScores(eventId, judgeCode) {\n            if (!eventId || !judgeCode) {\n                alert('이벤트와 심사위원을 선택해주세요.');\n            return;\n            }\n            \n            // 점수 보기 (기존 viewScores 함수 활용)\n            viewScores(eventId);\n        }\n        \n        function viewScores(eventId) {\n            if (!eventId) {\n                alert('이벤트를 선택해주세요.');\n                return;\n            }\n            \n            const compId = '<?=$comp_id?>';\n            const url = `https://www.danceoffice.net/comp/live_panel.php?comp_id=${compId}&view=scores&event_no=${eventId}`;\n            \n            console.log('Opening scores URL:', url);\n            \n            // 새 창에서 점수 보기\n            window.open(url, '_blank', 'width=1000,height=700,scrollbars=yes,resizable=yes');\n        }\n        \n        function openAggregation(eventId) {\n            if (!eventId) {\n                alert('이벤트를 선택해주세요.');\n                return;\n            }\n            \n            const compId = '<?=$comp_id?>';\n            \n            console.log('집계 시작:', {eventId, compId});\n            \n            // 집계 결과 페이지로 직접 이동 (API 호출 없이)\n            const url = `https://www.danceoffice.net/comp/live_panel.php?comp_id=${compId}&view=aggregation&event_no=${eventId}`;\n            console.log('집계 결과 페이지로 이동:', url);\n            \n            // 새 창에서 집계 결과 표시\n            const newWindow = window.open(url, '_blank', 'width=1200,height=800,scrollbars=yes,resizable=yes');\n            \n            // 새 창이 제대로 열렸는지 확인\n            if (!newWindow || newWindow.closed || typeof newWindow.closed == 'undefined') {\n                console.error('팝업이 차단되었습니다. 팝업 차단을 해제해주세요.');\n                alert('팝업이 차단되었습니다. 브라우저 설정에서 팝업을 허용해주세요.');\n            } else {\n                console.log('집계 결과 창이 열렸습니다.');\n            }\n        }\n        \n        function openAwards(eventId) {\n            if (!eventId) {\n                alert('이벤트를 선택해주세요.');\n                return;\n            }\n            \n            const compId = '<?=$comp_id?>';\n            const url = `https://www.danceoffice.net/comp/live_panel.php?comp_id=${compId}&view=awards&event_no=${eventId}`;\n            \n            console.log('Opening awards URL:', url);\n            \n            // 새 창에서 상장 발급\n            window.open(url, '_blank', 'width=1000,height=700,scrollbars=yes,resizable=yes');\n        }\n        \n        function getDanceSequenceDisplay(danceSequence) {\n            if (!danceSequence || danceSequence.length === 0) return 'N/A';\n            \n            return danceSequence.map(item => {\n                const typeLabel = item.type === 'common' ? '(공동)' : \n                                 item.type === 'individual' ? '(개별)' : '';\n                return `${item.dance_name || item.dance}${typeLabel}`;\n            }).join(' → ');\n        }\n        \n        function openDanceEditModal(groupId) {\n            const group = groupData.find(g => g.group_no == groupId);\n            \n            if (!group || !group.dance_sequence) {\n                alert('댄스 순서 정보를 찾을 수 없습니다.');\n        return;\n    }\n    \n            const modal = document.createElement('div');\n            modal.className = 'dance-edit-modal';\n            modal.innerHTML = `\n                <div class=\"dance-edit-content\">\n                    <div class=\"dance-edit-header\">\n                        <div class=\"dance-edit-title\">댄스 순서 수정 - 통합이벤트 ${groupId}</div>\n                        <button class=\"dance-edit-close\" onclick=\"closeDanceEditModal()\">&times;</button>\n                    </div>\n                    \n                    <div class=\"dance-list-container\" id=\"dance-list-container\">\n                        ${group.dance_sequence.map((item, index) => `\n                            <div class=\"dance-item\" data-index=\"${index}\" draggable=\"true\">\n                                <div class=\"dance-drag-handle\">⋮⋮</div>\n                                <div class=\"dance-number\">${index + 1}</div>\n                                <div class=\"dance-info\">\n                                    <div class=\"dance-name\">${item.dance_name || item.dance}</div>\n                                    <div class=\"dance-events\">\n                                        ${item.type === 'common' ? '공동 댄스' : \n                                          item.type === 'individual' ? '개별 댄스' : '싱글 댄스'} \n                                        (이벤트: ${item.events.join(', ')})\n                                    </div>\n                                </div>\n                                <div class=\"dance-actions\">\n                                    <button class=\"dance-action-btn dance-remove-btn\" \n                                            onclick=\"removeDanceItem(${index})\" title=\"제거\">×</button>\n                                </div>\n                            </div>\n                        `).join('')}\n                    </div>\n                    \n                    <div class=\"dance-edit-buttons\">\n                        <button class=\"btn-cancel\" onclick=\"closeDanceEditModal()\">취소</button>\n                        <button class=\"btn-save\" onclick=\"saveDanceSequence('${groupId}')\">저장</button>\n        </div>\n        </div>\n            `;\n            \n            document.body.appendChild(modal);\n            \n            // 드래그 앤 드롭 기능 추가\n            makeDanceListSortable();\n        }\n        \n        function makeDanceListSortable() {\n            const container = document.getElementById('dance-list-container');\n            let draggedElement = null;\n            \n            container.addEventListener('dragstart', function(e) {\n                if (e.target.classList.contains('dance-drag-handle')) {\n                    draggedElement = e.target.closest('.dance-item');\n                    draggedElement.classList.add('dragging');\n                }\n            });\n            \n            container.addEventListener('dragend', function(e) {\n                if (draggedElement) {\n                    draggedElement.classList.remove('dragging');\n                    draggedElement = null;\n                }\n            });\n            \n            container.addEventListener('dragover', function(e) {\n                e.preventDefault();\n            });\n            \n            container.addEventListener('drop', function(e) {\n                e.preventDefault();\n                if (draggedElement) {\n                    const afterElement = getDragAfterElement(container, e.clientY);\n                    if (afterElement == null) {\n                        container.appendChild(draggedElement);\n        } else {\n                        container.insertBefore(draggedElement, afterElement);\n                    }\n                    updateDanceNumbers();\n                }\n            });\n        }\n        \n        function getDragAfterElement(container, y) {\n            const draggableElements = [...container.querySelectorAll('.dance-item:not(.dragging)')];\n            \n            return draggableElements.reduce((closest, child) => {\n                const box = child.getBoundingClientRect();\n                const offset = y - box.top - box.height / 2;\n                \n                if (offset < 0 && offset > closest.offset) {\n                    return { offset: offset, element: child };\n    } else {\n                    return closest;\n                }\n            }, { offset: Number.NEGATIVE_INFINITY }).element;\n        }\n        \n        function updateDanceNumbers() {\n            const items = document.querySelectorAll('.dance-item');\n            items.forEach((item, index) => {\n                const numberElement = item.querySelector('.dance-number');\n                numberElement.textContent = index + 1;\n            });\n        }\n        \n        function removeDanceItem(index) {\n            const item = document.querySelector(`[data-index=\"${index}\"]`);\n            if (item) {\n                item.remove();\n                updateDanceNumbers();\n            }\n        }\n        \n        function saveDanceSequence(groupId) {\n            const items = document.querySelectorAll('.dance-item');\n            const newSequence = Array.from(items).map((item, index) => {\n                const danceName = item.querySelector('.dance-name').textContent;\n                const eventsText = item.querySelector('.dance-events').textContent;\n                const events = eventsText.match(/이벤트: ([^)]+)/);\n                \n                return {\n                    dance: danceName,\n                    events: events ? events[1].split(', ') : [],\n                    type: eventsText.includes('공동') ? 'common' : \n                          eventsText.includes('개별') ? 'individual' : 'single'\n                };\n            });\n            \n            // 실제 저장 로직 (서버로 전송)\n            console.log('새로운 댄스 순서:', newSequence);\n            alert('댄스 순서가 저장되었습니다.');\n            closeDanceEditModal();\n        }\n        \n        function closeDanceEditModal() {\n            const modal = document.querySelector('.dance-edit-modal');\n            if (modal) {\n                modal.remove();\n            }\n        }\n        \n        // 실시간 업데이트 기능\n        function startRealTimeUpdates() {\n            // 5초마다 심사위원 상태 업데이트\n            setInterval(() => {\n                updateAllJudgeStatus();\n            }, 5000);\n        }\n        \n        function updateAllJudgeStatus() {\n            // 모든 이벤트의 심사위원 상태 업데이트\n            const eventCards = document.querySelectorAll('.event-card');\n            eventCards.forEach(card => {\n                const eventId = card.dataset.event;\n                if (eventId) {\n                    updateEventJudgeStatus(eventId);\n        }\n    });\n}\n\n        function updateEventJudgeStatus(eventId) {\n            // 서버에서 최신 심사위원 상태 가져오기\n            const compId = '<?=$comp_id?>';\n            fetch(`https://www.danceoffice.net/comp/api/get_judge_status.php?comp_id=${compId}&event=${eventId}`)\n                .then(response => response.json())\n        .then(data => {\n                    if (data.success) {\n                        updateJudgeStatusDisplay(eventId, data.judges);\n                    }\n                })\n                .catch(error => {\n                    console.log('심사위원 상태 업데이트 실패:', error);\n                });\n        }\n        \n        function updateJudgeStatusDisplay(eventId, judges) {\n            const card = document.querySelector(`[data-event=\"${eventId}\"]`);\n            if (!card) return;\n            \n            const judgesList = card.querySelector('.judges-list');\n            if (!judgesList) return;\n            \n            // 심사위원 상태 업데이트\n            judges.forEach(judge => {\n                const judgeItem = judgesList.querySelector(`[data-judge=\"${judge.code}\"]`);\n                if (judgeItem) {\n                    const statusDot = judgeItem.querySelector('.judge-dot');\n                    const progressText = judgeItem.querySelector('.judge-progress');\n                    \n                    if (statusDot) {\n                        statusDot.className = `judge-dot judge-dot-${judge.status}`;\n                    }\n                    \n                    if (progressText) {\n                        progressText.textContent = `${judge.completed}/${judge.total}`;\n                    }\n                }\n            });\n        }\n        \n        // 심사위원 상태 모니터링 함수 (멀티 이벤트 지원)\n        function updateJudgeStatus(eventNo) {\n            // 현재 이벤트의 심사위원들 상태 확인\n            if (!eventNo) return;\n            \n            console.log('updateJudgeStatus called for:', eventNo);\n            \n            fetch(`https://www.danceoffice.net/comp/get_judge_status.php?comp_id=<?=urlencode($comp_id)?>&event_no=${eventNo}&${Date.now()}`)\n                .then(r => r.ok ? r.json() : {success: false, status: {}})\n                .then(data => {\n                    console.log('Judge status response for', eventNo, ':', data);\n                    \n                    if (data.success && data.status) {\n                        // 해당 이벤트의 카드 내에서만 상태 업데이트\n                        const eventCard = document.querySelector(`.event-card[data-event=\"${eventNo}\"]`);\n                        console.log('Found event card:', eventCard);\n                        \n                        if (eventCard) {\n                            let completedCount = 0;\n                            let totalCount = 0;\n                            \n                            Object.keys(data.status).forEach(judgeCode => {\n                                let statusElement = eventCard.querySelector(`#judge-status-${judgeCode}`);\n                                if (statusElement) {\n                                    let status = data.status[judgeCode];\n                                    statusElement.className = `judge-status ${status.class}`;\n                                    statusElement.textContent = status.text;\n                                    \n                                    // 완료된 심사위원 수 계산\n                                    if (status.class === 'completed') {\n                                        completedCount++;\n                                    }\n                                    totalCount++;\n                                }\n                            });\n                            \n                            // 심사위원 현황 진행률 업데이트\n                            const progressElement = eventCard.querySelector('.judges-progress');\n                            if (progressElement) {\n                                progressElement.textContent = `${completedCount}/${totalCount} 완료`;\n                                console.log('Updated progress:', `${completedCount}/${totalCount} 완료`);\n                            }\n                        }\n                    }\n                })\n                .catch(err => {\n                    console.warn('심사위원 상태 로드 오류:', err);\n                });\n        }\n        \n        // 실시간 심사위원 상태 모니터링 시작\n        function startJudgeStatusMonitoring() {\n            // 2초마다 심사위원 상태 업데이트\n            setInterval(() => {\n                if (selectedEvent && selectedGroup) {\n                    // 현재 선택된 그룹이 멀티 이벤트인지 확인\n                    const group = groupData.find(g => g.group_no == selectedGroup);\n                    if (group && group.is_multi) {\n                        // 멀티 이벤트인 경우 각 이벤트별로 개별 업데이트\n                        group.events.forEach(evt => {\n                            const eventKey = evt.detail_no || evt.no;\n                            updateJudgeStatus(eventKey);\n                        });\n                    } else {\n                        // 싱글 이벤트인 경우 현재 이벤트만 업데이트\n                        updateJudgeStatus(selectedEvent);\n                    }\n                }\n            }, 2000);\n        }\n        \n        // 선수 관리 모달 열기\n        function openPlayerModal(eventId) {\n            currentEventForPlayerModal = eventId;\n            document.getElementById('playerModalBg').style.display = 'flex';\n            \n            // 현재 선수 목록 로드\n            loadCurrentPlayers(eventId);\n        }\n        \n        // 선수 관리 모달 닫기\n        function closePlayerModal() {\n            document.getElementById('playerModalBg').style.display = 'none';\n            currentEventForPlayerModal = null;\n            currentPlayers = [];\n        }\n        \n        // 현재 선수 목록 로드\n        function loadCurrentPlayers(eventId) {\n            const compId = '<?=$comp_id?>';\n            fetch(`https://www.danceoffice.net/comp/get_players.php?comp_id=${compId}&event_no=${eventId}`)\n                .then(response => response.json())\n                .then(data => {\n                    if (data.success) {\n                        currentPlayers = data.players || [];\n                        updatePlayersList();\n                    }\n                })\n                .catch(error => {\n                    console.error('Error loading players:', error);\n                    currentPlayers = [];\n                    updatePlayersList();\n                });\n        }\n        \n        // 선수 목록 업데이트\n        function updatePlayersList() {\n            const playersList = document.getElementById('playersList');\n            if (currentPlayers.length === 0) {\n                playersList.innerHTML = '<div style=\"color:#666; font-style:italic;\">등록된 선수가 없습니다.</div>';\n            } else {\n                playersList.innerHTML = currentPlayers.map(player => `\n                    <div style=\"display:flex; justify-content:space-between; align-items:center; padding:0.3em; border-bottom:1px solid #eee;\">\n                        <span>${player.number} (${player.type === 'couple' ? '커플' : '싱글'})</span>\n                        <button onclick=\"removePlayer(${player.number})\" style=\"background:#dc3545; color:white; border:none; padding:0.2em 0.5em; border-radius:3px; cursor:pointer;\">X</button>\n                    </div>\n                `).join('');\n            }\n        }\n        \n        // 선수 제거\n        function removePlayer(playerNumber) {\n            currentPlayers = currentPlayers.filter(p => p.number != playerNumber);\n            updatePlayersList();\n        }\n        \n        // 선수 추가 (입력 처리)\n        function addPlayers() {\n            const input = document.getElementById('playerInput').value.trim();\n            if (!input) return;\n            \n            const newPlayers = parsePlayerInput(input);\n            newPlayers.forEach(playerNum => {\n                if (!currentPlayers.find(p => p.number == playerNum)) {\n                    // 선수 번호로 전체 선수 데이터에서 정보 찾기\n                    const allPlayers = <?=json_encode($all_players)?>;\n                    const playerData = allPlayers[playerNum];\n                    \n                    let playerName = `선수 ${playerNum}`;\n                    let playerType = 'single';\n                    \n                    if (playerData) {\n                        const isCouple = playerData.female && playerData.female.trim() !== '';\n                        playerName = playerData.male + (playerData.female ? ' & ' + playerData.female : '');\n                        playerType = isCouple ? 'couple' : 'single';\n                    }\n                    \n                    currentPlayers.push({\n                        number: playerNum,\n                        name: playerName,\n                        type: playerType\n                    });\n                }\n            });\n            \n            document.getElementById('playerInput').value = '';\n            updatePlayersList();\n        }\n        \n        // 선수 입력 파싱 (범위 지원)\n        function parsePlayerInput(input) {\n            const players = [];\n            const parts = input.split(',');\n            \n            parts.forEach(part => {\n                part = part.trim();\n                if (part.includes('~')) {\n                    const [start, end] = part.split('~').map(n => parseInt(n.trim()));\n                    if (!isNaN(start) && !isNaN(end)) {\n                        for (let i = start; i <= end; i++) {\n                            players.push(i);\n                        }\n                    }\n                } else {\n                    const num = parseInt(part);\n                    if (!isNaN(num)) {\n                        players.push(num);\n                    }\n                }\n            });\n            \n            return players;\n        }\n        \n        // 선수 저장\n        function savePlayers() {\n            if (!currentEventForPlayerModal) return;\n            \n            const compId = '<?=$comp_id?>';\n            const formData = new FormData();\n            formData.append('comp_id', compId);\n            formData.append('event_no', currentEventForPlayerModal);\n            formData.append('players', JSON.stringify(currentPlayers));\n            \n            fetch('https://www.danceoffice.net/comp/save_players.php', {\n                method: 'POST',\n                body: formData\n            })\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    alert('선수 목록이 저장되었습니다.');\n                    closePlayerModal();\n                    // 카드 새로고침\n                    if (selectedEvent) {\n                        updateRightPanel(selectedEvent, selectedGroup);\n                    }\n                } else {\n                    alert('저장 중 오류가 발생했습니다: ' + (data.message || '알 수 없는 오류'));\n                }\n            })\n            .catch(error => {\n                console.error('Error saving players:', error);\n                alert('저장 중 오류가 발생했습니다.');\n            });\n        }\n        \n        // 심사위원 제외/포함 토글\n        function toggleAdjudicator(eventNo, judgeCode) {\n            if (!disabledJudgesByEvent[eventNo]) {\n                disabledJudgesByEvent[eventNo] = [];\n            }\n            const arr = disabledJudgesByEvent[eventNo];\n            const idx = arr.indexOf(judgeCode);\n            if (idx === -1) {\n                arr.push(judgeCode);\n            } else {\n                arr.splice(idx, 1);\n            }\n            \n            // 해당 이벤트의 카드 새로고침\n            if (selectedEvent === eventNo) {\n                updateRightPanel(selectedEvent, selectedGroup);\n            }\n        }\n        \n        \n        // 입력 필드에서 Enter 키 처리\n        document.addEventListener('DOMContentLoaded', function() {\n            const playerInput = document.getElementById('playerInput');\n            if (playerInput) {\n                playerInput.addEventListener('keypress', function(e) {\n                    if (e.key === 'Enter') {\n                        addPlayers();\n                    }\n                });\n            }\n        });\n        \n\n        // 페이지 로드 시 첫 번째 그룹 확장 및 실시간 업데이트 시작\n        document.addEventListener('DOMContentLoaded', function() {\n            const firstGroup = document.querySelector('.event-group');\n            if (firstGroup) {\n                const groupNo = firstGroup.dataset.group;\n                toggleGroup(groupNo);\n                \n                // 첫 번째 이벤트 자동 선택\n                const firstEvent = firstGroup.querySelector('.event-item');\n                if (firstEvent) {\n                    const eventId = firstEvent.dataset.event;\n                    const groupId = firstEvent.dataset.group;\n                    selectEvent(eventId, groupId, firstEvent);\n                }\n            }\n\n            // 실시간 업데이트 시작\n            startJudgeStatusMonitoring();\n        });\n</script>\n</body>\n</html>\n","size_bytes":99558},"comp/live_panel_mc.php":{"content":"<?php\n$comp_id = $_GET['comp_id'] ?? '';\n$data_dir = __DIR__ . \"/data/$comp_id\";\n$info_file = \"$data_dir/info.json\";\n$runorder_file = \"$data_dir/RunOrder_Tablet.txt\";\n$adjudicator_file = \"$data_dir/adjudicators.txt\";\n$panel_map_file = \"$data_dir/panel_list.json\";\n$dancename_file = \"$data_dir/DanceName.txt\";\n\nrequire_once 'detail_numbers_manager.php';\n\n// --- 댄스종목 약어->이름 매핑 (DanceName.txt 기준) ---\n$dance_map_en = [];\nif (is_file($dancename_file)) {\n    foreach (file($dancename_file) as $line) {\n        $cols = array_map('trim', explode(',', $line));\n        if (count($cols) < 3 || $cols[2] == '-' || $cols[2] == '') continue;\n        $dance_map_en[$cols[2]] = $cols[1];\n    }\n}\n\n// 대회 정보 로드\nif (!preg_match('/^\\d{8}-\\d+$/', $comp_id) || !is_file($info_file)) {\n    echo \"<h1>잘못된 대회 ID 또는 대회 정보가 없습니다.</h1>\";\n    exit;\n}\n$info = json_decode(file_get_contents($info_file), true);\n\n// --- 이벤트 목록/패널 정보 및 종목 ---\n$events = [];\nif (file_exists($runorder_file)) {\n    $lines = file($runorder_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    foreach ($lines as $line) {\n        if (preg_match('/^bom/', $line)) continue;\n        $cols = array_map('trim', explode(',', $line));\n        $no = $cols[0] ?? '';\n        $desc = $cols[1] ?? '';\n        $roundtype = $cols[2] ?? '';\n        $panel = isset($cols[11]) ? strtoupper($cols[11]) : '';\n        $recall = $cols[4] ?? '';\n        $heats = $cols[12] ?? '';\n        // 6번째 필드는 \"5\" 등 숫자이므로, 7~11번째(W,T,V,S,Q 등)만 추출\n        $dance_codes = [];\n        for ($i=6; $i<=10; $i++) {\n            if (isset($cols[$i]) && preg_match('/^[A-Z\\.]{1,6}$/', $cols[$i]) && $cols[$i]!='AD' && $cols[$i]!='2') {\n                // BOM 제거\n                $codestr = $cols[$i];\n                if (substr($codestr, 0, 3) === \"\\xEF\\xBB\\xBF\") $codestr = substr($codestr, 3);\n                $dance_codes[] = $codestr;\n            }\n        }\n        $events[] = [\n            'no' => $no,\n            'desc' => $desc,\n            'round' => $roundtype,\n            'panel' => $panel,\n            'recall' => $recall,\n            'heats' => $heats,\n            'dances' => $dance_codes\n        ];\n    }\n}\n\n// 세부번호 추가\nforeach ($events as $idx => &$event) {\n    $event['detail_no'] = getDetailNumber($comp_id, $event['no'], $event['desc']);\n}\n\n// 팀수 자동 계산 함수 (세부번호별)\nfunction calculateTeamCountByDetail($comp_id, $detail_no) {\n    // 세부번호별 선수 데이터 확인\n    $players = getPlayersByDetailNumber($comp_id, $detail_no);\n    if (!empty($players)) {\n        return count($players);\n    }\n    \n    // players_{detail_no}.txt 파일에서 선수 수 계산\n    $players_file = __DIR__ . \"/data/$comp_id/players_{$detail_no}.txt\";\n    if (file_exists($players_file)) {\n        $lines = file($players_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n        $count = 0;\n        foreach ($lines as $line) {\n            $line = trim($line);\n            if (!empty($line)) {\n                $count++;\n            }\n        }\n        return $count > 0 ? $count : '-';\n    }\n    \n    return '-';\n}\n\n// 기존 함수 (하위 호환성 유지)\nfunction calculateTeamCount($comp_id, $event_no, $players_by_event) {\n    // 선수 데이터가 있으면 선수 수 반환\n    if (isset($players_by_event[$event_no]) && !empty($players_by_event[$event_no])) {\n        return count($players_by_event[$event_no]);\n    }\n    \n    // players_{event_no}.txt 파일에서 선수 수 계산\n    $players_file = __DIR__ . \"/data/$comp_id/players_{$event_no}.txt\";\n    if (file_exists($players_file)) {\n        $lines = file($players_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n        $count = 0;\n        foreach ($lines as $line) {\n            $line = trim($line);\n            if (!empty($line)) {\n                $count++;\n            }\n        }\n        return $count > 0 ? $count : '-';\n    }\n    \n    // 폴백: 전체 players.txt에서 계산\n    $players_file = __DIR__ . \"/data/$comp_id/players.txt\";\n    if (file_exists($players_file)) {\n        $lines = file($players_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n        $count = 0;\n        foreach ($lines as $line) {\n            $cols = array_map('trim', explode(',', $line));\n            if (count($cols) >= 3 && !empty($cols[1]) && !empty($cols[2])) {\n                $count++;\n            }\n        }\n        return $count > 0 ? $count : '-';\n    }\n    \n    return '-';\n}\n\n// --- 심사위원 상세 목록 adjudicators.txt (번호,이름,국가,ID) ---\n$adjudicator_dict = [];\nif (file_exists($adjudicator_file)) {\n    $lines = file($adjudicator_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    foreach ($lines as $line) {\n        $cols = array_map('trim', explode(',', $line));\n        if (count($cols) < 2) continue;\n        $code = (string)$cols[0];\n        $adjudicator_dict[$code] = [\n            'code' => $cols[0],\n            'name' => $cols[1],\n            'nation' => $cols[2] ?? '',\n            'id' => $cols[3] ?? ''\n        ];\n    }\n}\n\n// --- 패널-심사위원 매핑 panel_list.json [{panel_code, adj_code}] ---\n$panel_map = [];\nif (file_exists($panel_map_file)) {\n    $panel_map = json_decode(file_get_contents($panel_map_file), true);\n}\n\n// --- 선수 데이터 불러오기 (이벤트별) ---\n$players_by_event = [];\nforeach ($events as $ev) {\n    $eno = $ev['no'];\n    // BOM 제거\n    if (substr($eno, 0, 3) === \"\\xEF\\xBB\\xBF\") $eno = substr($eno, 3);\n    $pfile = \"$data_dir/players_$eno.txt\";\n    if (is_file($pfile)) {\n        $players_by_event[$eno] = array_filter(array_map('trim', file($pfile)));\n    } else {\n        $players_by_event[$eno] = [];\n    }\n}\n\n// --- 전체 선수명단 players.txt (등번호,남자,여자) ---\n$players_file = \"$data_dir/players.txt\";\n$all_players = [];\nif (file_exists($players_file)) {\n    $lines = file($players_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    foreach ($lines as $line) {\n        $cols = array_map('trim', explode(',', $line));\n        $all_players[$cols[0]] = [\n            'male' => $cols[1] ?? '',\n            'female' => $cols[2] ?? '',\n        ];\n    }\n}\n\nfunction h($s) { return htmlspecialchars($s ?? ''); }\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title><?= h($info['title']) ?> 사회자 컨트롤 패널</title>\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\n    <style>\n        html, body { height:100%; margin:0; padding:0; }\n        body { background:#1a1a1a; font-family:sans-serif; margin:0; height:100vh; }\n        .live-root { width:100vw; height:100vh; min-height:100vh; min-width:100vw; background:#bdbdbd; margin:0; padding:0; display: flex; flex-direction:column; align-items:stretch; justify-content:stretch; }\n        .live-frame { width:100vw; height:100vh; min-height:100vh; min-width:100vw; background: #fff; border: 0; box-sizing: border-box; display: flex; flex-direction: row; overflow: hidden; border-radius: 0; box-shadow: none; }\n        .side-events {\n            flex: 0 0 25vw;\n            min-width: 220px;\n            max-width: 35vw;\n            background: #ededed;\n            border-right: 3px solid #071d6e;\n            overflow-y: auto;\n            padding: 0.7em 0.2em 0.7em 0.7em;\n            box-sizing: border-box;\n        }\n        .side-events h2 { font-size: 1.09em; margin: 0.2em 0 0.5em 0.2em; color: #071d6e; letter-spacing:0.1em;}\n        .event-list { width: 100%; border-collapse: collapse; font-size: 1em;}\n        .event-list tr.selected { background: #d0e6ff; }\n        .event-list tr:hover { background: #e6f1ff; cursor:pointer;}\n        .event-list td { border-bottom: 1px solid #c7d1e0; padding: 0.28em 0.3em; color: #222; font-size: 0.96em;}\n        .main-panel { flex: 1 1 0; display: flex; flex-direction: column; background: #0d2c96; padding: 0; width: 75vw; min-width:0; }\n        .event-header-panel {\n            background: #bdbdbd;\n            border: 3px solid #071d6e;\n            border-radius: 0 0 16px 16px;\n            padding: 0.8em 1.2em;\n            margin: 0 0 1.2em 0;\n            display: flex;\n            flex-direction: row;\n            align-items: center;\n            justify-content: center;\n            gap: 0.8em;\n            width: 100%;\n            box-sizing: border-box;\n            min-height: 130px;\n        }\n        .event-header-box { background: #bdbdbd; border: 3px solid #071d6e; border-radius: 6px; padding: 0.5em 0.8em; width: 100%; max-width: 900px; min-width: 300px; font-family: Arial, sans-serif; margin-right: 0; box-sizing: border-box;}\n        .event-row1, .event-row2 { display: flex; align-items: center; gap: 0.6em; margin-bottom: 0.25em;}\n        .event-row2 {margin-bottom: 0;}\n        .ev-arrow-btn { width: 1.8em; height: 1.8em; background: #fff; border: 2px solid #333; border-radius: 3px; padding: 0; margin: 0; font-size: 1.05em; font-weight: 700; display: flex; align-items: center; justify-content: center; cursor: pointer;}\n        .ev-arrow-btn:active {background:#dfdfdf;}\n        .ev-idx {width: 2.2em; text-align: center; font-size: 1.15em; border: 1.5px solid #333; border-radius: 2px; background:#fff;}\n        .ev-title {flex:1; font-size: 1.02em; font-weight: 600; background:#fff; border:1.5px solid #333; border-radius:6px; padding:0.18em 0.6em; min-height: 2em;}\n        .ev-refresh-btn { background: #fff; border:2px solid #071d6e; border-radius: 8px; width:2.6em; height:2.6em; display:flex; align-items:center; justify-content:center; cursor:pointer; font-size:1.6em; margin-left:0;}\n        .ev-refresh-btn:active {background:#e5e5e5;}\n        .ev-fromto, .ev-recall, .ev-heats { background:#fff; border:1px solid #222; border-radius:6px; font-size:0.95em; width:3.0em; text-align:center; padding:0.18em 0.28em;}\n        .ev-fromto {width:3.2em;}\n        .ev-label-bold {font-weight:700;}\n        .ev-ctrl-btn {background:none;border:none;padding:0;margin:0;}\n        .ev-row2-label {font-size: 0.9em; min-width: 2.4em; color:#0d2c96; font-weight:600;}\n        .event-row2 { flex-wrap: wrap; }\n        .main-content-row { display: flex; flex-direction: row; gap: 1.2em; height: 93%;}\n        .adjudicator-list-panel { flex: 1.3; background: #eaf0ff; border-radius: 8px; margin-top: 0.2em; padding: 1em 1em 1em 1em; min-width: 220px; max-width: 340px; box-sizing: border-box; display: flex; flex-direction: column; align-items: stretch;}\n        .adjudicator-list-panel h3 { font-size: 1.1em; color: #0d2c96; margin: 0 0 0.6em 0;}\n        .adjudicator-list { list-style: none; padding:0; margin:0;}\n        .adjudicator-list li { margin-bottom: 0.28em; padding: 0.13em 0.2em; background: #fff; border-radius: 4px; font-size: 0.97em; color: #282828; display: flex; align-items: center; justify-content: space-between;}\n        .adjudicator-list li.disabled { color: #aaa; text-decoration: line-through; background: #f5f5f5;}\n        .adjudicator-x-btn { background:#dc3232;color:#fff;border:none;border-radius:3px;padding:2px 8px;font-size:1em;cursor:pointer;margin-left:0.5em;}\n        .adjudicator-x-btn:disabled {background:#ccc; color:#888; cursor:default;}\n        .adjudicator-list-panel .empty {color:#888; margin-top:0.7em; font-size:0.98em;}\n        .player-dance-row { display: flex; flex-direction: row; gap: 2.2em; align-items: flex-start;}\n        .player-list-panel { flex: 1.1; background: #f5f5fa; border-radius: 8px; margin-top: 0.2em; padding: 1em 1em 1em 1em; min-width: 180px; max-width: 260px; box-sizing: border-box; display: flex; flex-direction: column; align-items: stretch;}\n        .player-list-panel h3 { font-size:1.1em; color:#0d2c96; margin:0 0 0.6em 0;}\n        .player-list-panel .player-controls-row {\n            display: flex;\n            gap: 0.6em;\n            margin-bottom: 0.8em;\n            align-items: center;\n            flex-wrap: wrap;\n        }\n        .player-list {list-style:none; padding:0; margin:0;}\n        .player-list li {margin-bottom:0.3em; padding:0.17em 0.3em; background:#fff; border-radius:4px; font-size:1.04em; display:flex; align-items:center; justify-content:space-between;}\n        .add-player-btn, .show-entry-list-btn {\n            background: #1c7aee;\n            color: #fff;\n            border: none;\n            border-radius: 4px;\n            padding: 0.37em 1.15em;\n            font-size: 1em;\n            font-weight: 500;\n            cursor: pointer;\n            height: 2.3em;\n            box-sizing: border-box;\n            transition: background 0.13s;\n            display:inline-flex; align-items:center; justify-content:center;\n        }\n        .add-player-btn:active, .show-entry-list-btn:active {background:#155cb0;}\n        .show-entry-list-btn {\n            background: #29a950;\n        }\n        .show-entry-list-btn:active {\n            background: #176c32;\n        }\n        .player-x-btn { background:#dc3232;color:#fff;border:none;border-radius:3px;padding:2px 8px;font-size:1em;cursor:pointer;margin-left:0.5em;}\n        .dance-block {\n            background: #fff;\n            border: 2px solid #e9b200;\n            border-radius: 8px;\n            padding: 1em 1.6em;\n            font-size: 1.12em;\n            color: #b36b00;\n            font-weight: 600;\n            min-width: 180px;\n            min-height: 120px;\n            box-shadow: 0 4px 24px #ffe09460;\n            display: flex;\n            flex-direction: column;\n            align-items: flex-start;\n            gap: 0.15em;\n        }\n        .dance-block .dance-title {\n            font-size: 1.08em;\n            color: #e9b200;\n            font-weight: bold;\n            margin-bottom: 0.55em;\n            letter-spacing: 0.05em;\n        }\n        .dance-block .dance-list {\n            margin-left: 0.2em;\n            width: 100%;\n        }\n        .dance-block .dance-item {\n            font-size: 1.05em;\n            color: #885e00;\n            margin-bottom: 0.12em;\n            line-height: 1.6;\n            display: flex;\n            align-items: center;\n            justify-content: space-between;\n            gap: 0.7em;\n            width: 100%;\n        }\n        .done-btn {\n            margin-left:0.7em; padding:0.2em 1.1em; border-radius:5px; border:1.5px solid #e9b200; font-weight:bold;\n            background:#fff; color:#b36b00; cursor:pointer; font-size:1em;\n        }\n        .done-btn.done {\n            background: #ffe082;\n            color: #b36b00;\n        }\n        @media (max-width: 860px) {\n            .event-header-panel { flex-direction: column; align-items: stretch; gap: 0.8em; min-height: unset; }\n            .ev-refresh-btn { align-self: center; }\n        }\n    </style>\n</head>\n<body>\n<div class=\"live-root\">\n    <div class=\"live-frame\">\n        <!-- 이벤트 리스트 (좌측) -->\n        <div class=\"side-events\">\n            <h2>이벤트 리스트</h2>\n            <table class=\"event-list\" id=\"event-table\">\n                <thead>\n                    <tr>\n                        <th style=\"width:3em;\">번호</th>\n                        <th style=\"min-width:6em;\">이벤트명</th>\n                        <th style=\"width:6em;\">라운드</th>\n                        <th style=\"width:3em;\">팀수</th>\n                    </tr>\n                </thead>\n                <tbody>\n                <?php foreach($events as $ix=>$evt): ?>\n                    <tr data-idx=\"<?=$ix?>\">\n                        <td><?=h($evt['detail_no'])?></td>\n                        <td><?=h($evt['desc'])?></td>\n                        <td><?=h($evt['round'])?></td>\n                        <td><?=h(calculateTeamCountByDetail($comp_id, $evt['detail_no']))?></td>\n                    </tr>\n                <?php endforeach; ?>\n                </tbody>\n            </table>\n        </div>\n        <!-- 메인 컨트롤 (가운데) -->\n        <div class=\"main-panel\">\n            <!-- 상단: 이벤트 헤더 -->\n            <div class=\"event-header-panel\">\n                <div class=\"event-header-box\">\n                    <div class=\"event-row1\">\n                        <button class=\"ev-arrow-btn\" id=\"evtPrev\" title=\"이전 이벤트\"><span style=\"font-size:1.1em;\">▲</span></button>\n                        <input type=\"text\" class=\"ev-idx\" id=\"evtNo\" readonly>\n                        <input type=\"text\" class=\"ev-title\" id=\"evtName\" readonly>\n                        <button class=\"ev-arrow-btn\" id=\"evtNext\" title=\"다음 이벤트\"><span style=\"font-size:1.1em;\">▼</span></button>\n                    </div>\n                    <div class=\"event-row2\">\n                        <span class=\"ev-row2-label\">From</span>\n                        <input type=\"text\" class=\"ev-fromto\" id=\"evtFrom\" value=\"\">\n                        <span class=\"ev-row2-label\">To</span>\n                        <input type=\"text\" class=\"ev-fromto\" id=\"evtTo\" value=\"\">\n                        <button class=\"ev-ctrl-btn\" id=\"evtRangeMove\" title=\"범위 이동\" style=\"margin-right:0.6em;\"><span style=\"font-size:1.2em;\">⏩</span></button>\n                        <span class=\"ev-row2-label\">Recall</span>\n                        <input type=\"text\" class=\"ev-recall\" id=\"evtRecall\" value=\"\">\n                        <span class=\"ev-row2-label\" style=\"margin-left:0.4em;\">Heats</span>\n                        <input type=\"text\" class=\"ev-heats\" id=\"evtHeats\" value=\"\">\n                    </div>\n                </div>\n                <button class=\"ev-refresh-btn\" id=\"evtRefresh\" title=\"새로고침\">↻</button>\n            </div>\n            <!-- 중단: 심사위원/선수+종목 -->\n            <div class=\"main-content-row\">\n                <!-- 심사위원 리스트 (좌) -->\n                <div class=\"adjudicator-list-panel\" id=\"adjudicator-list-panel\">\n                    <h3>심사위원</h3>\n                    <table style=\"width:100%;\">\n                        <thead>\n                            <tr>\n                                <th style=\"width:2.1em;\">#</th>\n                                <th style=\"width:3.2em;\">코드</th>\n                                <th style=\"min-width:6em;\">심사위원명</th>\n                                <th style=\"width:2.2em;\">국가</th>\n                                <th style=\"width:2.2em;\">X</th>\n                            </tr>\n                        </thead>\n                        <tbody id=\"adjudicator-list\">\n                            <!-- 심사위원 행이 JS로 들어감 -->\n                        </tbody>\n                    </table>\n                    <div class=\"empty\" id=\"judge-empty\" style=\"display:none;\">심사위원이 없습니다</div>\n                </div>\n                <!-- 선수+종목 (우) -->\n                <div class=\"player-dance-row\">\n                    <div class=\"player-list-panel\" id=\"player-list-panel\">\n                        <h3>선수</h3>\n                        <div class=\"player-controls-row\">\n                            <button class=\"add-player-btn\" onclick=\"openPlayerModal()\">선수 추가</button>\n                            <button class=\"show-entry-list-btn\" onclick=\"showEntryPlayers()\">출전선수</button>\n                        </div>\n                        <ul class=\"player-list\" id=\"player-list\"></ul>\n                    </div>\n                </div>\n                <!-- 진행종목(댄스) 완료 체크 UI -->\n            <div class=\"dance-block\" id=\"dance-block\">\n                <div class=\"dance-title\">진행종목</div>\n                <div class=\"dance-list\" id=\"dance-list\"></div>\n            </div>\n            </div>\n        </div>\n    </div>\n    <!-- 선수 추가 모달 -->\n    <div class=\"modal-bg\" id=\"playerModalBg\" style=\"display:none; position:fixed; left:0; top:0; width:100vw; height:100vh; background:rgba(0,0,0,0.3); align-items:center; justify-content:center; z-index:100;\">\n        <div class=\"modal\" style=\"background:#fff; border-radius:10px; padding:2em 2.2em; box-shadow:0 10px 40px #0002; min-width:260px;\">\n            <div class=\"modal-title\">선수 등번호 추가<br><span style=\"font-size:0.9em;color:#888;\">(예: 10, 23, 10~18 입력 가능)</span></div>\n            <input type=\"text\" id=\"playerInput\" placeholder=\"등번호나 범위를 입력하세요\" style=\"font-size:1.1em; padding:0.3em 0.6em; border:1.5px solid #aaa;\" autocomplete=\"off\">\n            <div class=\"modal-btns\" style=\"margin-top:1em; text-align:right;\">\n                <button type=\"button\" onclick=\"closePlayerModal()\" style=\"font-size:1.08em; margin-left:0.9em; border-radius:4px; padding:0.29em 1.3em;\">닫기</button>\n                <button type=\"button\" onclick=\"saveAndClosePlayerModal()\" style=\"font-size:1.08em; margin-left:0.9em; border-radius:4px; padding:0.29em 1.3em;\">저장</button>\n            </div>\n        </div>\n    </div>\n    <!-- 출전선수 모달 -->\n    <div class=\"modal-bg\" id=\"entryPlayersModalBg\" style=\"display:none; position:fixed; left:0; top:0; width:100vw; height:100vh; background:rgba(0,0,0,0.3); align-items:center; justify-content:center; z-index:100;\">\n        <div class=\"modal\" style=\"background:#fff; border-radius:10px; padding:2em 2.2em; box-shadow:0 10px 40px #0002; min-width:340px;\">\n            <div class=\"modal-title\">출전선수 리스트</div>\n            <table style=\"margin-top:1em; width:100%; border-collapse:collapse;\" id=\"entryPlayersTable\">\n                <thead>\n                    <tr>\n                        <th style=\"width:4em\">등번호</th>\n                        <th>남자선수</th>\n                        <th>여자선수</th>\n                    </tr>\n                </thead>\n                <tbody></tbody>\n            </table>\n            <div style=\"margin-top:1em; text-align:right;\">\n                <button onclick=\"closeEntryPlayersModal()\" style=\"font-size:1.08em; border-radius:4px; padding:0.29em 1.3em;\">닫기</button>\n            </div>\n        </div>\n        \n    </div>\n\n</div>\n<script>\nconst events = <?=json_encode($events, JSON_UNESCAPED_UNICODE)?>;\nconst panelMap = <?=json_encode($panel_map, JSON_UNESCAPED_UNICODE)?>;\nconst allAdjudicators = <?=json_encode($adjudicator_dict, JSON_UNESCAPED_UNICODE)?>;\nconst allPlayers = <?=json_encode($all_players, JSON_UNESCAPED_UNICODE)?>;\nconst danceMapEn = <?=json_encode($dance_map_en, JSON_UNESCAPED_UNICODE)?>;\nlet curIdx = 0;\nlet disabledJudgesByEvent = {};\nlet playersByEvent = <?=json_encode($players_by_event, JSON_UNESCAPED_UNICODE)?>;\n\n// 진행종목(댄스) 완료 체크 추가\nlet danceDone = {};\nfunction fetchDanceDone(eventNo) {\n    if (typeof eventNo === \"string\") eventNo = eventNo.replace(/^\\uFEFF/, \"\");\n    fetch(`get_dance_done.php?comp_id=<?=urlencode($comp_id)?>&event_no=${encodeURIComponent(eventNo)}&${Date.now()}`)\n        .then(r => {\n            if (!r.ok) {\n                throw new Error(`HTTP ${r.status}: ${r.statusText}`);\n            }\n            return r.json();\n        })\n        .then(obj => {\n            danceDone = (typeof obj === 'object' && obj !== null) ? obj : {};\n            renderDanceBlock(curIdx);\n        })\n        .catch(err => {\n            console.error('dance_done fetch error:', err);\n            danceDone = {};\n            renderDanceBlock(curIdx);\n        });\n}\nfunction toggleDanceDone(danceCode) {\n    let eventNo = events[curIdx].no;\n    if (typeof eventNo === \"string\") eventNo = eventNo.replace(/^\\uFEFF/, \"\");\n    const newDone = !(danceDone[danceCode] === true);\n    \n    // 즉시 UI 업데이트 (낙관적 업데이트)\n    danceDone[danceCode] = newDone;\n    renderDanceBlock(curIdx);\n    \n    fetch('dance_done_update.php', {\n        method: 'POST',\n        headers: {'Content-Type':'application/x-www-form-urlencoded'},\n        body: `comp_id=<?=urlencode($comp_id)?>&event_no=${encodeURIComponent(eventNo)}&dance_code=${encodeURIComponent(danceCode)}&done=${newDone}`\n    })\n    .then(r => r.json())\n    .then(res => {\n        if (!res.success) {\n            // 실패 시 원래 상태로 되돌림\n            danceDone[danceCode] = !newDone;\n            renderDanceBlock(curIdx);\n            alert(\"저장 실패: \" + (res.error || \"\"));\n        }\n    })\n    .catch(err => {\n        // 네트워크 오류 시 원래 상태로 되돌림\n        danceDone[danceCode] = !newDone;\n        renderDanceBlock(curIdx);\n        console.error('dance_done update error:', err);\n        alert(\"저장 실패: 네트워크 오류\");\n    });\n}\n\nfunction renderDanceBlock(eventIdx) {\n    const ev = events[eventIdx];\n    const danceListDiv = document.getElementById('dance-list');\n    let danceNames = [];\n    if (ev.dances && ev.dances.length > 0) {\n        danceNames = ev.dances.map(code => ({\n            code,\n            name: danceMapEn[code] || code,\n            done: !!danceDone[code]\n        }));\n    }\n    if (danceNames.length) {\n        danceListDiv.innerHTML = danceNames.map((d, i) =>\n            `<div class=\"dance-item\">\n                <span>${i+1}. ${d.name}</span>\n                <button class=\"done-btn${d.done?' done':''}\" onclick=\"toggleDanceDone('${d.code}')\">\n                    ${d.done?'✔ 완료':'완료'}\n                </button>\n            </div>`\n        ).join('');\n    } else {\n        danceListDiv.innerHTML = `<div class=\"dance-item\">-</div>`;\n    }\n}\n\nfunction renderAdjudicatorList(panelCode, eventNo) {\n    const judgeLinks = panelMap.filter(m => (m.panel_code||\"\").toUpperCase() === (panelCode||\"\").toUpperCase());\n    const judgeArr = judgeLinks.map(m => allAdjudicators[m.adj_code]).filter(j=>j);\n    const tbody = document.getElementById(\"adjudicator-list\");\n    const empty = document.getElementById(\"judge-empty\");\n    tbody.innerHTML = \"\";\n    if (!panelCode || judgeArr.length === 0) {\n        empty.style.display = \"\";\n        return;\n    }\n    empty.style.display = \"none\";\n    const disabled = disabledJudgesByEvent[eventNo] || [];\n    judgeArr.forEach((j, i) => {\n        const isDisabled = disabled.includes(j.code);\n        let tr = document.createElement(\"tr\");\n        tr.className = isDisabled ? \"disabled\" : \"\";\n        tr.innerHTML = `<td>${i+1}</td>\n            <td>${j.code}</td>\n            <td>${j.name}</td>\n            <td>${j.nation || ''}</td>\n            <td><button class=\"adjudicator-x-btn\" onclick=\"toggleAdjudicator('${eventNo}','${j.code}')\" title=\"이 이벤트에서 심사위원 제외\" ${isDisabled ? 'disabled' : ''}>X</button></td>`;\n        tbody.appendChild(tr);\n    });\n}\nfunction toggleAdjudicator(eventNo, judgeCode) {\n    if(!disabledJudgesByEvent[eventNo]) disabledJudgesByEvent[eventNo] = [];\n    const arr = disabledJudgesByEvent[eventNo];\n    const idx = arr.indexOf(judgeCode);\n    if(idx === -1) arr.push(judgeCode);\n    else arr.splice(idx,1);\n    renderAdjudicatorList(events[curIdx].panel, events[curIdx].no);\n}\nfunction renderPlayerList(eventNo) {\n    const ul = document.getElementById(\"player-list\");\n    let arr = playersByEvent[eventNo] || [];\n    let sorted = arr.slice().sort((a, b) => Number(a) - Number(b));\n    ul.innerHTML = \"\";\n    if (!sorted.length) {\n        ul.innerHTML = \"<li style='color:#aaa;'>선수 등번호 없음</li>\";\n        return;\n    }\n    sorted.forEach((bib, idx) => {\n        let li = document.createElement(\"li\");\n        li.innerHTML = `${bib} <button class=\"player-x-btn\" onclick=\"removePlayer('${bib}')\">X</button>`;\n        ul.appendChild(li);\n    });\n}\nfunction openPlayerModal() {\n    document.getElementById('playerInput').value = '';\n    document.getElementById('playerModalBg').style.display = 'flex';\n    setTimeout(()=>{document.getElementById('playerInput').focus();}, 180);\n}\nfunction closePlayerModal() {\n    document.getElementById('playerModalBg').style.display = 'none';\n}\ndocument.getElementById('playerInput').onkeydown = function(e){\n    if (e.key === 'Enter') {\n        submitPlayerModal(false);\n        e.preventDefault();\n    }\n    if (e.key === 'Escape') {\n        closePlayerModal();\n    }\n};\nfunction saveAndClosePlayerModal() {\n    submitPlayerModal(true);\n}\nfunction parseBibsFromInput(input) {\n    let result = [];\n    input.split(',').forEach(part=>{\n        part = part.trim();\n        if (/^\\d+\\s*~\\s*\\d+$/.test(part)) {\n            let [start, end] = part.split('~').map(x=>parseInt(x.trim(),10));\n            if (start && end && start <= end && end-start<100) {\n                for (let i=start; i<=end; i++) result.push(String(i));\n            }\n        } else if (/^\\d+$/.test(part)) {\n            result.push(part);\n        }\n    });\n    return result;\n}\nfunction submitPlayerModal(closeAfter) {\n    let val = document.getElementById('playerInput').value.trim();\n    if (!val) {\n        if (closeAfter) closePlayerModal();\n        return;\n    }\n    let eventNo = events[curIdx].no;\n    if (typeof eventNo === \"string\") eventNo = eventNo.replace(/^\\uFEFF/, \"\");\n    if (!playersByEvent[eventNo]) playersByEvent[eventNo] = [];\n    let bibs = parseBibsFromInput(val);\n    let added = 0;\n    bibs.forEach(bib=>{\n        if (!playersByEvent[eventNo].includes(bib)) {\n            playersByEvent[eventNo].push(bib);\n            added++;\n        }\n    });\n    if (added>0) {\n        playersByEvent[eventNo] = playersByEvent[eventNo].slice().sort((a, b) => Number(a) - Number(b));\n        renderPlayerList(eventNo);\n        savePlayersToServer(eventNo);\n    }\n    if (closeAfter) {\n        closePlayerModal();\n    } else {\n        document.getElementById('playerInput').value = '';\n        setTimeout(()=>{document.getElementById('playerInput').focus();}, 100);\n    }\n}\nfunction savePlayersToServer(eventNo) {\n    fetch('save_players.php?comp_id=<?=urlencode($comp_id)?>', {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({eventNo: eventNo, players: playersByEvent[eventNo]})\n    })\n    .then(res => res.json())\n    .then(data => {\n        if(!data.success) alert(\"선수 저장 실패: \" + (data.error||\"\"));\n    });\n}\nfunction removePlayer(bib) {\n    let eventNo = events[curIdx].no;\n    if (typeof eventNo === \"string\") eventNo = eventNo.replace(/^\\uFEFF/, \"\");\n    let arr = playersByEvent[eventNo] || [];\n    playersByEvent[eventNo] = arr.filter(x => x !== bib);\n    renderPlayerList(eventNo);\n    savePlayersToServer(eventNo);\n}\nfunction showEntryPlayers() {\n    let eventNo = events[curIdx].no;\n    if (typeof eventNo === \"string\") eventNo = eventNo.replace(/^\\uFEFF/, \"\");\n    let entryBibs = playersByEvent[eventNo] || [];\n    let sorted = entryBibs.slice().sort((a,b)=>Number(a)-Number(b));\n    let tbody = document.querySelector('#entryPlayersTable tbody');\n    tbody.innerHTML = '';\n    if (!sorted.length) {\n        tbody.innerHTML = '<tr><td colspan=\"3\" style=\"color:#aaa;\">출전선수 없음</td></tr>';\n    } else {\n        sorted.forEach(bib => {\n            let p = allPlayers[bib] || {};\n            let male = p.male || '';\n            let female = p.female || '';\n            let tr = document.createElement('tr');\n            tr.innerHTML = `<td>${bib}</td><td>${male}</td><td>${female}</td>`;\n            tbody.appendChild(tr);\n        });\n    }\n    document.getElementById('entryPlayersModalBg').style.display = 'flex';\n}\nfunction closeEntryPlayersModal() {\n    document.getElementById('entryPlayersModalBg').style.display = 'none';\n}\nfunction updatePanel(idx) {\n    if (idx < 0) idx = 0;\n    if (idx > events.length-1) idx = events.length-1;\n    curIdx = idx;\n    let ev = events[curIdx];\n    let eventNo = ev.no;\n    if (typeof eventNo === \"string\") eventNo = eventNo.replace(/^\\uFEFF/, \"\");\n    document.getElementById('evtNo').value = ev.no || '';\n    document.getElementById('evtName').value = ev.desc || '';\n    document.getElementById('evtRecall').value = ev.recall || '';\n    document.getElementById('evtHeats').value = ev.heats || '';\n    document.getElementById('evtFrom').value = '';\n    document.getElementById('evtTo').value = '';\n    document.querySelectorAll('#event-table tr').forEach(tr=>tr.classList.remove('selected'));\n    let tr = document.querySelector('#event-table tr[data-idx=\"'+curIdx+'\"]');\n    if (tr) tr.classList.add('selected');\n    renderAdjudicatorList(ev.panel, ev.no);\n    renderPlayerList(eventNo);\n    \n    // 완료 상태를 먼저 초기화하고 서버에서 로드\n    danceDone = {};\n    fetchDanceDone(eventNo);\n}\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n    document.getElementById('evtPrev').onclick = ()=>updatePanel(curIdx-1);\n    document.getElementById('evtNext').onclick = ()=>updatePanel(curIdx+1);\n    document.getElementById('evtRefresh').onclick = ()=>updatePanel(curIdx);\n    document.getElementById('evtRangeMove').onclick = ()=>{ alert('범위 이동 기능(From~To): 구현 필요'); };\n    document.querySelectorAll('#event-table tr[data-idx]').forEach(function(row) {\n        row.addEventListener('click', function(){\n            updatePanel(parseInt(this.dataset.idx));\n        });\n    });\n    if(events.length) updatePanel(0);\n});\nwindow.addEventListener('keydown', function(e){\n    if(e.key === 'Escape') closePlayerModal();\n});\n</script>\n</body>\n</html>","size_bytes":33111},"comp/login.php":{"content":"<?php\nsession_start();\nrequire_once 'auth.php';\n\n// 이미 로그인된 경우 리다이렉트\nif (isset($_SESSION['user'])) {\n    $user = $_SESSION['user'];\n    if (hasPermission($user, 'create_comp')) {\n        header(\"Location: index.php\");\n    } else {\n        header(\"Location: senior_dashboard.php\");\n    }\n    exit;\n}\n\n$error = '';\n\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $username = trim($_POST['username'] ?? '');\n    $password = trim($_POST['password'] ?? '');\n    \n    if ($username && $password) {\n        $user = authenticateUser($username, $password);\n        if ($user) {\n            $_SESSION['user'] = $user;\n            if (hasPermission($user, 'create_comp')) {\n                header(\"Location: index.php\");\n            } else {\n                header(\"Location: senior_dashboard.php\");\n            }\n            exit;\n        } else {\n            $error = \"사용자명 또는 비밀번호가 올바르지 않습니다.\";\n        }\n    } else {\n        $error = \"사용자명과 비밀번호를 입력해주세요.\";\n    }\n}\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>로그인 - danceoffice.net</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded\" rel=\"stylesheet\" />\n    <style>\n        body {\n            background: #181B20;\n            min-height: 100vh;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            margin: 0;\n            padding: 0;\n            font-family: 'Noto Sans KR', sans-serif;\n        }\n        .login-container {\n            background: linear-gradient(135deg, #1a1d21 0%, #181B20 100%);\n            border-radius: 20px;\n            padding: 40px;\n            box-shadow: 0 20px 40px rgba(3, 199, 90, 0.2);\n            border: 2px solid #03C75A;\n            text-align: center;\n            max-width: 400px;\n            width: 90%;\n        }\n        .login-title {\n            color: #03C75A;\n            font-size: 24px;\n            margin-bottom: 10px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 10px;\n        }\n        .login-subtitle {\n            color: #00BFAE;\n            font-size: 16px;\n            margin-bottom: 30px;\n        }\n        .form-group {\n            margin-bottom: 20px;\n            text-align: left;\n        }\n        .form-group label {\n            display: block;\n            color: #F5F7FA;\n            font-size: 14px;\n            margin-bottom: 8px;\n            font-weight: 600;\n        }\n        .form-group input {\n            width: 100%;\n            padding: 12px;\n            border: 1px solid #31343a;\n            border-radius: 10px;\n            background: #222;\n            color: #F5F7FA;\n            font-size: 14px;\n            box-sizing: border-box;\n        }\n        .btn {\n            background: linear-gradient(90deg, #03C75A 70%, #00BFAE 100%);\n            color: #222;\n            border: none;\n            padding: 12px 30px;\n            border-radius: 25px;\n            font-weight: 600;\n            font-size: 14px;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            width: 100%;\n        }\n        .btn:hover {\n            background: linear-gradient(90deg, #00BFAE 60%, #03C75A 100%);\n            color: white;\n            transform: translateY(-2px);\n        }\n        .error {\n            color: #ff4444;\n            background: rgba(255, 68, 68, 0.1);\n            padding: 10px;\n            border-radius: 8px;\n            margin-bottom: 15px;\n            font-size: 13px;\n        }\n        .role-info {\n            background: rgba(3, 199, 90, 0.1);\n            border-radius: 8px;\n            padding: 15px;\n            margin-top: 20px;\n            font-size: 12px;\n            color: #B0B3B8;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"login-container\">\n        <h1 class=\"login-title\">\n            <span class=\"material-symbols-rounded\">login</span>\n            로그인\n        </h1>\n        <p class=\"login-subtitle\">danceoffice.net 관리 시스템</p>\n        <form method=\"post\">\n            <?php if ($error): ?>\n                <div class=\"error\"><?= htmlspecialchars($error) ?></div>\n            <?php endif; ?>\n            <div class=\"form-group\">\n                <label for=\"username\">사용자명</label>\n                <input type=\"text\" id=\"username\" name=\"username\" placeholder=\"사용자명을 입력하세요\" required>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">비밀번호</label>\n                <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"비밀번호를 입력하세요\" required>\n            </div>\n            <button type=\"submit\" class=\"btn\">로그인</button>\n        </form>\n        <div class=\"role-info\">\n            <strong>권한 안내:</strong><br>\n            • <strong>오너</strong>: 대회 생성 및 모든 관리<br>\n            • <strong>선임관리자</strong>: 등록된 대회 관리<br>\n            • <strong>관리자</strong>: 콘텐츠 관리\n        </div>\n    </div>\n</body>\n</html>\n\n\n\n\n\n\n","size_bytes":5259},"comp/logout.php":{"content":"<?php\nsession_start();\nsession_destroy();\nheader(\"Location: login.php\");\nexit;\n?>\n\n\n\n","size_bytes":85},"comp/manage_adjudicator_panels.php":{"content":"<?php\n$comp_id = $_GET['comp_id'] ?? '';\n$data_dir = __DIR__ . \"/data/$comp_id\";\n$info_file = \"$data_dir/info.json\";\n$adjs_file = \"$data_dir/adjudicators.txt\";\n$panel_file = \"$data_dir/panel_list.json\"; // 패널코드-심사위원 json\n\nif (!preg_match('/^\\d{8}-\\d+$/', $comp_id) || !is_file($info_file)) {\n    echo \"<h1>잘못된 대회 ID 또는 대회 정보가 없습니다.</h1>\";\n    exit;\n}\n$info = json_decode(file_get_contents($info_file), true);\n\n// 심사위원 명단 불러오기\n$adjudicators = [];\nif (file_exists($adjs_file)) {\n    foreach (file($adjs_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES) as $line) {\n        $parts = array_map('trim', explode(',', $line));\n        $adjudicators[] = [\n            'code' => $parts[0] ?? '',\n            'name' => $parts[1] ?? '',\n            'nation' => $parts[2] ?? '',\n            'password' => $parts[3] ?? ''\n        ];\n    }\n}\n\n// 패널코드-심사위원 불러오기\n$panel_list = [];\nif (file_exists($panel_file)) {\n    $panel_list = json_decode(file_get_contents($panel_file), true);\n    if (!is_array($panel_list)) $panel_list = [];\n}\n\n// 패널코드순 정렬\nusort($panel_list, fn($a, $b) => strcmp($a['panel_code'], $b['panel_code']));\n\n// 메시지\n$msg = \"\";\n\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    // 패널코드-심사위원 처리\n    if (isset($_POST['save_panel'])) {\n        $panel_list = [];\n        foreach ($_POST['panel'] as $row) {\n            if (empty($row['panel_code']) || empty($row['adj_code'])) continue;\n            $panel_list[] = [\n                'panel_code' => trim($row['panel_code']),\n                'adj_code'   => trim($row['adj_code'])\n            ];\n        }\n        file_put_contents($panel_file, json_encode($panel_list, JSON_UNESCAPED_UNICODE|JSON_PRETTY_PRINT));\n        $msg = \"패널코드-심사위원 지정이 저장되었습니다.\";\n    }\n    // 패널코드 파일 업로드 (txt/csv, panel_code,심사위원코드)\n    if (isset($_POST['upload_panel_csv']) && isset($_FILES['panelfile']) && $_FILES['panelfile']['error'] == UPLOAD_ERR_OK) {\n        $lines = file($_FILES['panelfile']['tmp_name'], FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n        $new_panel_list = [];\n        foreach ($lines as $line) {\n            $parts = array_map('trim', explode(',', $line));\n            if (count($parts)<2) continue;\n            $panel_code = $parts[0];\n            $adj_code = $parts[1];\n            if ($panel_code && $adj_code) {\n                $new_panel_list[] = ['panel_code'=>$panel_code, 'adj_code'=>$adj_code];\n            }\n        }\n        $panel_list = $new_panel_list;\n        file_put_contents($panel_file, json_encode($panel_list, JSON_UNESCAPED_UNICODE|JSON_PRETTY_PRINT));\n        $msg = \"패널코드-심사위원 업로드가 완료되었습니다.\";\n    }\n    header(\"Location: manage_adjudicator_panels.php?comp_id=\" . urlencode($comp_id) . \"&msg=\" . urlencode($msg));\n    exit;\n}\nif (isset($_GET['msg'])) $msg = $_GET['msg'];\n\nfunction h($s) { return htmlspecialchars($s ?? ''); }\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title><?= h($info['title']) ?> 심사위원 패널코드 관리 | danceoffice.net COMP</title>\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\n    <style>\n        body { background:#f7fafd; font-family:sans-serif; margin:0;}\n        .mainbox { max-width:950px; margin:3vh auto 0 auto; background:#fff; border-radius:18px; box-shadow:0 6px 32px #00339911; padding:2.2em 1.5em 2em 1.5em;}\n        h1 { color:#003399; font-size:1.15em; margin-bottom:0.6em;}\n        .desc {margin-bottom:1.3em; color:#333;}\n        table { width:100%; border-collapse:collapse; background:#fff;}\n        th, td { padding:0.3em 0.2em; text-align:center; font-size:0.96em;}\n        th { background:#f0f4fa; color:#003399; font-weight:700;}\n        td { color:#333;}\n        tr:not(:last-child) td { border-bottom:1px solid #eee;}\n        .panel-form-table input[type=\"text\"], .panel-form-table select {\n            padding: 0.2em 0.4em;\n            font-size: 0.97em;\n            height: 2em;\n        }\n        .panel-btns {\n            display: flex;\n            gap: 0.3em;\n            justify-content: center;\n            align-items: center;\n        }\n        .panel-add-btn, .panel-del-btn {\n            padding: 0.15em 0.7em;\n            font-size: 0.97em;\n            height: 2em;\n            min-width: 2em;\n            border-radius: 7px;\n        }\n        .panel-add-btn { background:#03C75A; color:#fff; border:none; font-weight:700; cursor:pointer;}\n        .panel-del-btn { background:#ec3b28; color:#fff; border:none; font-weight:700; cursor:pointer;}\n        .panel-add-btn:hover { background:#00BFAE;}\n        .panel-del-btn:hover { background:#b31e06;}\n        .panel-upload-form { margin:0 0 1.2em 0; display:flex; align-items:center; gap:0.7em;}\n        .panel-upload-form input[type=\"file\"] { border-radius:7px; border:1px solid #bbb; padding:0.3em;}\n        .panel-upload-form button { background:#003399; color:#fff; border:none; border-radius:8px; padding:0.4em 1.6em; font-weight:700; cursor:pointer;}\n        .panel-upload-form button:hover { background:#2222aa;}\n        .small {font-size:0.93em; color:#888; margin-left:0.8em;}\n        .goto-dash {display:inline-block; margin-bottom:1.1em; color:#888;}\n        .goto-dash:hover {color:#003399;}\n        .goto-data {color:#03C75A; margin-left:1em;}\n        .goto-data:hover {color:#009c85;}\n        .goto-adj {\n            display:inline-block; margin-left:1em; font-size:1em; color:#003399; background:#eaf3ff;\n            padding:0.38em 1.2em; border-radius:7px; text-decoration:none; font-weight:600; transition:background 0.15s;\n        }\n        .goto-adj:hover { background:#d3e9ff; color:#021b75;}\n        .print-btn { background:#666; color:#fff; font-weight:600; border:none; border-radius:8px; padding:0.3em 1.5em; margin-left:1em; cursor:pointer;}\n        .print-btn:hover { background:#003399; }\n        .print-adj-name { display:none; }\n        @media (max-width:1000px) {\n            .mainbox { max-width:99vw; padding:1.1em 0.3em;}\n            .panel-form-table input[type=\"text\"] {min-width:70px;}\n        }\n        @media print {\n            .print-btn, .panel-btns, .panel-upload-form, .goto-dash, .goto-data, .goto-adj, .msg, .desc, h1, footer { display:none !important; }\n            .mainbox { box-shadow:none !important; padding:0; }\n            table, th, td { font-size:1em; }\n            body { background:#fff !important; }\n            select { display: none !important; }\n            .print-adj-name { display: inline !important; }\n        }\n        footer {\n            position: relative;\n            width: 100%;\n            min-height: 45px;\n            margin-top: 3em;\n            background: none;\n            text-align: center;\n            font-size: 0.95em;\n            color: #aaa;\n            padding: 1em 0 1em 0;\n            box-sizing: border-box;\n            z-index: 2;\n        }\n    </style>\n    <script>\n    // 동적으로 패널 행 추가/삭제\n    function addPanelRow() {\n        const tb = document.getElementById('panel-table-body');\n        const row = tb.rows[0].cloneNode(true);\n        row.querySelectorAll('input,select').forEach(el => {\n            if (el.tagName === 'INPUT') el.value='';\n            if (el.tagName === 'SELECT') el.selectedIndex=0;\n        });\n        row.querySelector('.print-adj-name').textContent = '';\n        tb.appendChild(row);\n    }\n    function removePanelRow(btn) {\n        const tb = document.getElementById('panel-table-body');\n        if (tb.rows.length>1) btn.closest('tr').remove();\n        else alert(\"최소 1행은 필요합니다.\");\n    }\n    </script>\n</head>\n<body>\n<div class=\"mainbox\">\n    <div style=\"display:flex; justify-content:space-between; align-items:center; margin-bottom:1.2em;\">\n        <div>\n            <a href=\"dashboard.php?comp_id=<?= urlencode($comp_id) ?>\" class=\"goto-dash\">&lt; 대시보드로</a>\n            <a href=\"data_manage.php?comp_id=<?= urlencode($comp_id) ?>\" class=\"goto-data\">데이터 관리로 &gt;</a>\n        </div>\n        <div>\n            <a href=\"manage_adjudicators.php?comp_id=<?= urlencode($comp_id) ?>\" class=\"goto-adj\">심사위원 관리로 이동 &gt;</a>\n            <button type=\"button\" onclick=\"window.print()\" class=\"print-btn\">명단 인쇄</button>\n        </div>\n    </div>\n    <h1><?= h($info['title']) ?> 심사위원 패널코드 관리</h1>\n    <div class=\"desc\">\n        패널코드와 심사위원을 조합하여 패널을 등록하세요.<br>\n        (이벤트별 배정은 필요시 별도 구현)\n    </div>\n    <?php if ($msg): ?><div class=\"msg\" style=\"color:#03C75A; margin-bottom:1em;\"><?= h($msg) ?></div><?php endif; ?>\n\n    <form class=\"panel-upload-form\" method=\"post\" enctype=\"multipart/form-data\" onsubmit=\"return confirm('패널코드-심사위원코드 txt/csv 파일로 패널을 일괄 업로드합니다. 진행할까요?');\">\n        <input type=\"file\" name=\"panelfile\" accept=\".txt,.csv\" required>\n        <button type=\"submit\" name=\"upload_panel_csv\" value=\"1\">패널 TXT 업로드</button>\n        <span class=\"small\">형식: 패널코드,심사위원코드 (한 줄에 한 패널)</span>\n    </form>\n\n    <form method=\"post\">\n    <table class=\"panel-form-table\" style=\"margin-bottom:1.8em;\">\n        <thead>\n            <tr>\n                <th style=\"width:110px;\">패널코드</th>\n                <th>심사위원</th>\n                <th style=\"width:80px;\">관리</th>\n            </tr>\n        </thead>\n        <tbody id=\"panel-table-body\">\n        <?php if (empty($panel_list)): ?>\n            <tr>\n                <td><input type=\"text\" name=\"panel[0][panel_code]\" value=\"\" placeholder=\"예: PA\"></td>\n                <td>\n                    <select name=\"panel[0][adj_code]\" style=\"min-width:120px;\">\n                        <option value=\"\">-- 심사위원 선택 --</option>\n                        <?php foreach ($adjudicators as $adj): ?>\n                        <option value=\"<?=h($adj['code'])?>\"><?=h($adj['name'])?> (<?=h($adj['code'])?>)</option>\n                        <?php endforeach; ?>\n                    </select>\n                    <span class=\"print-adj-name\"></span>\n                </td>\n                <td>\n                    <div class=\"panel-btns\">\n                        <button type=\"button\" class=\"panel-add-btn\" onclick=\"addPanelRow()\">+</button>\n                        <button type=\"button\" class=\"panel-del-btn\" onclick=\"removePanelRow(this)\">-</button>\n                    </div>\n                </td>\n            </tr>\n        <?php else: foreach ($panel_list as $i=>$row): ?>\n            <tr>\n                <td>\n                    <input type=\"text\" name=\"panel[<?=$i?>][panel_code]\" value=\"<?=h($row['panel_code'])?>\" placeholder=\"예: PA\">\n                </td>\n                <td>\n                    <select name=\"panel[<?=$i?>][adj_code]\" style=\"min-width:120px;\">\n                        <option value=\"\">-- 심사위원 선택 --</option>\n                        <?php foreach ($adjudicators as $adj): ?>\n                        <option value=\"<?=h($adj['code'])?>\"<?=($row['adj_code']==$adj['code']?' selected':'')?>>\n                            <?=h($adj['name'])?> (<?=h($adj['code'])?>)\n                        </option>\n                        <?php endforeach; ?>\n                    </select>\n                    <span class=\"print-adj-name\" style=\"display:none;\">\n                        <?php\n                        $found = array_filter($adjudicators, fn($a) => $a['code']==$row['adj_code']);\n                        $adj = $found ? array_values($found)[0] : null;\n                        echo $adj ? h($adj['name'].' ('.$adj['code'].')') : '';\n                        ?>\n                    </span>\n                </td>\n                <td>\n                    <div class=\"panel-btns\">\n                        <button type=\"button\" class=\"panel-add-btn\" onclick=\"addPanelRow()\">+</button>\n                        <button type=\"button\" class=\"panel-del-btn\" onclick=\"removePanelRow(this)\">-</button>\n                    </div>\n                </td>\n            </tr>\n        <?php endforeach; endif; ?>\n        </tbody>\n    </table>\n    <button type=\"submit\" name=\"save_panel\" value=\"1\" class=\"panel-add-btn\" style=\"padding:0.5em 2em;\">패널 저장</button>\n    </form>\n</div>\n<footer>\n    2025 danceoffice.net | Powered by Seyoung Lee\n</footer>\n</body>\n</html>","size_bytes":12525},"comp/manage_adjudicators.php":{"content":"<?php\n$comp_id = $_GET['comp_id'] ?? '';\n$data_dir = __DIR__ . \"/data/$comp_id\";\n$info_file = \"$data_dir/info.json\";\n$adjs_file = \"$data_dir/adjudicators.txt\";\n\nif (!preg_match('/^\\d{8}-\\d+$/', $comp_id) || !is_file($info_file)) {\n    echo \"<h1>잘못된 대회 ID 또는 대회 정보가 없습니다.</h1>\";\n    exit;\n}\n$info = json_decode(file_get_contents($info_file), true);\n\n// 심사위원 명단 불러오기\n$adjudicators = [];\nif (file_exists($adjs_file)) {\n    foreach (file($adjs_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES) as $line) {\n        $parts = array_map('trim', explode(',', $line));\n        $adjudicators[] = [\n            'code' => $parts[0] ?? '',\n            'name' => $parts[1] ?? '',\n            'nation' => $parts[2] ?? '',\n            'password' => $parts[3] ?? ''\n        ];\n    }\n}\n\n$msg = '';\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    // 심사위원 명단 파일 업로드\n    if (isset($_POST['upload']) && isset($_FILES['adjsfile']) && $_FILES['adjsfile']['error'] == UPLOAD_ERR_OK) {\n        $lines = file($_FILES['adjsfile']['tmp_name'], FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n        $added = 0; $skipped = 0;\n        $existing_codes = array_column($adjudicators, 'code');\n        foreach ($lines as $line) {\n            $parts = array_map('trim', explode(',', $line));\n            if (!$parts[0] || !$parts[1]) continue; // 코드, 성명 필수\n            if (in_array($parts[0], $existing_codes)) { $skipped++; continue;}\n            $adjudicators[] = [\n                'code' => $parts[0],\n                'name' => $parts[1],\n                'nation' => $parts[2] ?? '',\n                'password' => $parts[3] ?? ''\n            ];\n            $added++;\n        }\n        $msg = \"업로드 완료! {$added}명 추가, {$skipped}명(중복) 건너뜀\";\n    }\n    // 심사위원 추가\n    if (isset($_POST['add']) && $_POST['code'] && $_POST['name']) {\n        $adjudicators[] = [\n            'code' => trim($_POST['code']),\n            'name' => trim($_POST['name']),\n            'nation' => trim($_POST['nation']),\n            'password' => trim($_POST['password'])\n        ];\n        $msg = \"심사위원이 추가되었습니다.\";\n    }\n    // 삭제\n    if (isset($_POST['delete']) && isset($_POST['idx'])) {\n        unset($adjudicators[$_POST['idx']]);\n        $msg = \"삭제되었습니다.\";\n    }\n    // adjudicators.txt 저장\n    $lines = [];\n    foreach ($adjudicators as $a) {\n        $lines[] = implode(',', [$a['code'], $a['name'], $a['nation'], $a['password']]);\n    }\n    file_put_contents($adjs_file, implode(\"\\n\", $lines));\n    header(\"Location: manage_adjudicators.php?comp_id=\" . urlencode($comp_id) . \"&msg=\" . urlencode($msg));\n    exit;\n}\n\nif (isset($_GET['msg'])) $msg = $_GET['msg'];\n\nfunction h($s) { return htmlspecialchars($s ?? ''); }\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title><?= h($info['title']) ?> 심사위원 명단 관리 | danceoffice.net COMP</title>\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\n    <style>\n        body { background:#f7fafd; font-family:sans-serif; margin:0;}\n        .mainbox { max-width:950px; margin:3vh auto 0 auto; background:#fff; border-radius:18px; box-shadow:0 6px 32px #00339911; padding:2.2em 1.5em 2em 1.5em;}\n        h1 { color:#003399; font-size:1.15em; margin-bottom:0.6em;}\n        .desc {margin-bottom:1.3em; color:#333;}\n        table { width:100%; border-collapse:collapse; background:#fff;}\n        th, td { padding:0.6em 0.3em; text-align:center;}\n        th { background:#f0f4fa; color:#003399; font-weight:700;}\n        td { color:#333;}\n        tr:not(:last-child) td { border-bottom:1px solid #eee;}\n        .del-btn { background:#ec3b28; color:#fff; border:none; border-radius:8px; padding:0.3em 1em; font-weight:700; cursor:pointer;}\n        .del-btn:hover { background:#b31e06;}\n        .add-form { margin:1.5em 0 1em 0; display:flex; gap:0.6em; flex-wrap:wrap;}\n        .add-form input { padding:0.4em 0.6em; border-radius:7px; border:1px solid #bbb; font-size:1em; min-width:100px;}\n        .add-form button { background:#03C75A; color:#fff; border:none; border-radius:8px; padding:0.4em 1.5em; font-weight:700; cursor:pointer;}\n        .add-form button:hover { background:#00BFAE;}\n        .msg { color:#03C75A; margin-bottom:1em;}\n        .goto-dash {display:inline-block; margin-bottom:1.1em; color:#888;}\n        .goto-dash:hover {color:#003399;}\n        .goto-data {color:#03C75A; margin-left:1em;}\n        .goto-data:hover {color:#009c85;}\n        .panel-link {\n            display:inline-block; margin-left:1em; font-size:1em; color:#003399; background:#eaf3ff;\n            padding:0.38em 1.2em; border-radius:7px; text-decoration:none; font-weight:600;\n            transition:background 0.15s;\n        }\n        .panel-link:hover { background:#d3e9ff; color:#021b75;}\n        .upload-form { margin:0 0 1.2em 0; display:flex; align-items:center; gap:0.7em; }\n        .upload-form input[type=\"file\"] { border-radius:7px; border:1px solid #bbb; padding:0.3em; }\n        .upload-form button { background:#003399; color:#fff; border:none; border-radius:8px; padding:0.4em 1.6em; font-weight:700; cursor:pointer;}\n        .upload-form button:hover { background:#2222aa;}\n        .small {font-size:0.93em; color:#888; margin-left:0.8em;}\n        .nation-th {min-width:80px;}\n        .print-btn { background:#666; color:#fff; font-weight:600; border:none; border-radius:8px; padding:0.3em 1.5em; margin-left:1em; cursor:pointer;}\n        .print-btn:hover { background:#003399; }\n        @media (max-width:1000px) {\n            .mainbox { max-width:99vw; padding:1.1em 0.3em;}\n            .add-form input {min-width:70px;}\n        }\n        @media (max-width:730px) {\n            .add-form {flex-direction:column;}\n            .add-form input {width:100%;}\n            .upload-form {flex-direction:column; align-items:flex-start;}\n        }\n        /* 인쇄시 명단 표만 */\n        @media print {\n            .print-btn, .add-form, .upload-form, .goto-dash, .goto-data, .msg, .panel-link, .desc, h1, footer { display:none !important; }\n            table { margin-top:0 !important; }\n            body { background:#fff !important; }\n            .mainbox { box-shadow:none !important; padding:0; }\n            table, th, td { font-size:1em; }\n        }\n        footer {\n            position: relative;\n            width: 100%;\n            min-height: 45px;\n            margin-top: 3em;\n            background: none;\n            text-align: center;\n            font-size: 0.95em;\n            color: #aaa;\n            padding: 1em 0 1em 0;\n            box-sizing: border-box;\n            z-index: 2;\n        }\n    </style>\n</head>\n<body>\n<div class=\"mainbox\">\n    <div style=\"display:flex; justify-content:space-between; align-items:center; margin-bottom:1.2em;\">\n        <div>\n            <a href=\"dashboard.php?comp_id=<?= urlencode($comp_id) ?>\" class=\"goto-dash\">&lt; 대시보드로</a>\n            <a href=\"data_manage.php?comp_id=<?= urlencode($comp_id) ?>\" class=\"goto-data\">데이터 관리로 &gt;</a>\n        </div>\n        <div>\n            <a href=\"manage_adjudicator_panels.php?comp_id=<?= urlencode($comp_id) ?>\" class=\"panel-link\">패널 설정으로 이동 &gt;</a>\n            <button type=\"button\" onclick=\"window.print()\" class=\"print-btn\">명단 인쇄</button>\n        </div>\n    </div>\n    <h1><?= h($info['title']) ?> 심사위원 명단 관리</h1>\n    <div class=\"desc\">\n        심사위원은 코드, 성명, 국적 필수, 비밀번호는 선택입니다.<br>\n        심사위원을 모두 등록한 후 <b>패널 설정으로 이동</b>하여 패널구성 및 이벤트 배정을 하세요.\n    </div>\n    <?php if ($msg): ?><div class=\"msg\"><?= h($msg) ?></div><?php endif; ?>\n    <form class=\"upload-form\" method=\"post\" enctype=\"multipart/form-data\" onsubmit=\"return confirm('업로드된 txt/csv 파일의 심사위원 정보가 추가됩니다. 진행할까요?');\">\n        <input type=\"file\" name=\"adjsfile\" accept=\".txt,.csv\" required>\n        <button type=\"submit\" name=\"upload\" value=\"1\">TXT 업로드</button>\n        <span class=\"small\">형식: 코드,이름,국적,비밀번호 (비밀번호 생략 가능, 기존 코드 무시)</span>\n    </form>\n    <form class=\"add-form\" method=\"post\" autocomplete=\"off\">\n        <input name=\"code\" placeholder=\"코드\" required>\n        <input name=\"name\" placeholder=\"심사위원명\" required>\n        <input name=\"nation\" placeholder=\"국적\">\n        <input name=\"password\" placeholder=\"비밀번호\">\n        <button type=\"submit\" name=\"add\" value=\"1\">추가</button>\n    </form>\n    <table>\n        <tr>\n            <th>코드</th>\n            <th>성명</th>\n            <th class=\"nation-th\">국적</th>\n            <th>비밀번호</th>\n            <th>관리</th>\n        </tr>\n        <?php foreach ($adjudicators as $i => $a): ?>\n            <tr>\n                <td><?= h($a['code']) ?></td>\n                <td><?= h($a['name']) ?></td>\n                <td><?= h($a['nation']) ?></td>\n                <td><?= h($a['password']) ?></td>\n                <td>\n                    <form method=\"post\" style=\"display:inline;\">\n                        <input type=\"hidden\" name=\"idx\" value=\"<?= $i ?>\">\n                        <button type=\"submit\" name=\"delete\" value=\"1\" class=\"del-btn\" onclick=\"return confirm('정말 삭제할까요?');\">삭제</button>\n                    </form>\n                </td>\n            </tr>\n        <?php endforeach; ?>\n        <?php if (empty($adjudicators)): ?>\n            <tr><td colspan=\"5\" style=\"color:#aaa;\">등록된 심사위원이 없습니다.</td></tr>\n        <?php endif; ?>\n    </table>\n</div>\n<footer>\n    2025 danceoffice.net | Powered by Seyoung Lee\n</footer>\n</body>\n</html>","size_bytes":9843},"comp/manage_competitors.php":{"content":"<?php\n$comp_id = $_GET['comp_id'] ?? '';\n$data_dir = __DIR__ . \"/data/$comp_id\";\n$info_file = \"$data_dir/info.json\";\n$players_file = \"$data_dir/players.txt\";\n\nif (!preg_match('/^\\d{8}-\\d+$/', $comp_id) || !is_file($info_file)) {\n    echo \"<h1>잘못된 대회 ID 또는 대회 정보가 없습니다.</h1>\";\n    exit;\n}\n$info = json_decode(file_get_contents($info_file), true);\n\n// 선수명단 불러오기\n$players = [];\nif (file_exists($players_file)) {\n    foreach (file($players_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES) as $line) {\n        $parts = array_map('trim', explode(',', $line));\n        $players[] = [\n            'number' => $parts[0] ?? '',\n            'name' => $parts[1] ?? '',\n            'partner' => $parts[2] ?? '',\n            'club' => $parts[3] ?? '',\n            'nation' => $parts[4] ?? '',\n        ];\n    }\n}\n\n$msg = '';\n\n// 등록/삭제/업로드 처리\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    // 업로드\n    if (isset($_POST['upload']) && isset($_FILES['txtfile']) && $_FILES['txtfile']['error'] == UPLOAD_ERR_OK) {\n        $lines = file($_FILES['txtfile']['tmp_name'], FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n        foreach ($lines as $line) {\n            $parts = array_map('trim', explode(',', $line));\n            if (!$parts[1]) continue; // 이름 필수\n            $exists = false;\n            foreach ($players as $p) {\n                if ($p['number'] === ($parts[0] ?? '')) { $exists = true; break; }\n            }\n            if (!$exists) {\n                $players[] = [\n                    'number' => $parts[0] ?? '',\n                    'name' => $parts[1] ?? '',\n                    'partner' => $parts[2] ?? '',\n                    'club' => $parts[3] ?? '',\n                    'nation' => $parts[4] ?? '',\n                ];\n            }\n        }\n        $msg = \"업로드 완료! (중복 등번호 제외)\";\n    }\n    // 추가\n    if (isset($_POST['add']) && $_POST['name']) {\n        $players[] = [\n            'number' => trim($_POST['number']),\n            'name' => trim($_POST['name']),\n            'partner' => trim($_POST['partner']),\n            'club' => trim($_POST['club']),\n            'nation' => trim($_POST['nation']),\n        ];\n        $msg = \"선수가 추가되었습니다.\";\n    }\n    // 삭제\n    if (isset($_POST['delete']) && isset($_POST['idx'])) {\n        unset($players[$_POST['idx']]);\n        $msg = \"삭제되었습니다.\";\n    }\n    // 저장\n    $lines = [];\n    foreach ($players as $p) {\n        $lines[] = implode(',', [\n            $p['number'], $p['name'], $p['partner'], $p['club'], $p['nation']\n        ]);\n    }\n    file_put_contents($players_file, implode(\"\\n\", $lines));\n    header(\"Location: manage_competitors.php?comp_id=\" . urlencode($comp_id) . \"&msg=\" . urlencode($msg));\n    exit;\n}\n\nif (isset($_GET['msg'])) $msg = $_GET['msg'];\n\nfunction h($s) { return htmlspecialchars($s ?? ''); }\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title><?= h($info['title']) ?> 선수 명단 관리 | danceoffice.net COMP</title>\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\n    <style>\n        body { background:#f7fafd; font-family:sans-serif; margin:0;}\n        .mainbox { max-width:900px; margin:3vh auto 0 auto; background:#fff; border-radius:18px; box-shadow:0 6px 32px #00339911; padding:2.2em 1.5em 2em 1.5em;}\n        h1 { color:#003399; font-size:1.15em; margin-bottom:0.9em;}\n        .desc {margin-bottom:1.3em; color:#333;}\n        table { width:100%; border-collapse:collapse; background:#fff; font-size:0.97em;}\n        th, td { padding:0.6em 0.3em; text-align:center;}\n        th { background:#f0f4fa; color:#003399; font-weight:700;}\n        td { color:#333;}\n        tr:not(:last-child) td { border-bottom:1px solid #eee;}\n        .del-btn { background:#ec3b28; color:#fff; border:none; border-radius:8px; padding:0.3em 1em; font-weight:700; cursor:pointer;}\n        .del-btn:hover { background:#b31e06;}\n        .add-form { margin:1.7em 0 1em 0; display:flex; gap:0.6em; flex-wrap:wrap;}\n        .add-form input { padding:0.4em 0.6em; border-radius:7px; border:1px solid #bbb; font-size:1em; min-width:120px;}\n        .add-form button { background:#03C75A; color:#fff; border:none; border-radius:8px; padding:0.4em 1.5em; font-weight:700; cursor:pointer;}\n        .add-form button:hover { background:#00BFAE;}\n        .upload-form { margin:0 0 1.3em 0; display:flex; align-items:center; gap:0.7em; }\n        .upload-form input[type=\"file\"] { border-radius:7px; border:1px solid #bbb; padding:0.3em; }\n        .upload-form button { background:#003399; color:#fff; border:none; border-radius:8px; padding:0.4em 1.6em; font-weight:700; cursor:pointer;}\n        .upload-form button:hover { background:#2222aa;}\n        .msg { color:#03C75A; margin-bottom:1em;}\n        .goto-dash {display:inline-block; margin-bottom:1.4em; color:#888;}\n        .goto-dash:hover {color:#003399;}\n        .small {font-size:0.93em; color:#888; margin-left:0.8em;}\n        @media (max-width:1000px) {\n            .mainbox { max-width:99vw; padding:1.1em 0.3em;}\n            .add-form input {min-width:80px;}\n        }\n        @media (max-width:600px) {\n            .add-form {flex-direction:column;}\n            .add-form input {width:100%;}\n            .upload-form {flex-direction:column; align-items:flex-start;}\n        }\n        .th-club {min-width:80px;}\n        .th-nation {min-width:80px;}\n        footer {\n            position: relative;\n            width: 100%;\n            min-height: 45px;\n            margin-top: 3em;\n            background: none;\n            text-align: center;\n            font-size: 0.95em;\n            color: #aaa;\n            padding: 1em 0 1em 0;\n            box-sizing: border-box;\n            z-index: 2;\n        }\n        .top-links {\n            display:flex; justify-content:space-between; align-items:center; margin-bottom:1.2em;\n        }\n        .top-links a { color:#888; font-size:1em; text-decoration:none;}\n        .top-links a.goto-dash:hover { color:#003399; }\n        .top-links a.goto-data { color:#03C75A; }\n        .top-links a.goto-data:hover { color:#009c85; }\n    </style>\n</head>\n<body>\n<div class=\"mainbox\">\n    <div class=\"top-links\">\n        <a href=\"dashboard.php?comp_id=<?= urlencode($comp_id) ?>\" class=\"goto-dash\">&lt; 대시보드로</a>\n        <a href=\"data_manage.php?comp_id=<?= urlencode($comp_id) ?>\" class=\"goto-data\">데이터 관리로 &gt;</a>\n    </div>\n    <h1><?= h($info['title']) ?> 선수 명단 관리</h1>\n    <div class=\"desc\">\n        싱글댄스의 경우 이름만 입력해도 되고, 파트너가 있으면 입력하세요. 국가 승인/국제대회용으로 소속, 국적은 선택 입력입니다.\n    </div>\n    <?php if ($msg): ?><div class=\"msg\"><?= h($msg) ?></div><?php endif; ?>\n    <form class=\"upload-form\" method=\"post\" enctype=\"multipart/form-data\" onsubmit=\"return confirm('업로드된 txt 파일의 선수정보가 추가됩니다. 진행할까요?');\">\n        <input type=\"file\" name=\"txtfile\" accept=\".txt,.csv\" required>\n        <button type=\"submit\" name=\"upload\" value=\"1\">TXT 업로드</button>\n        <span class=\"small\">형식: 등번호,이름,파트너,소속,국적 (파트너/소속/국적은 생략 가능)</span>\n    </form>\n    <form class=\"add-form\" method=\"post\" autocomplete=\"off\">\n        <input name=\"number\" placeholder=\"등번호\">\n        <input name=\"name\" placeholder=\"이름\" required>\n        <input name=\"partner\" placeholder=\"파트너\">\n        <input name=\"club\" placeholder=\"소속\">\n        <input name=\"nation\" placeholder=\"국적\">\n        <button type=\"submit\" name=\"add\" value=\"1\">추가</button>\n    </form>\n    <table>\n        <tr>\n            <th>등번호</th>\n            <th>이름</th>\n            <th>파트너</th>\n            <th class=\"th-club\">소속</th>\n            <th class=\"th-nation\">국적</th>\n            <th>관리</th>\n        </tr>\n        <?php foreach ($players as $i => $p): ?>\n            <tr>\n                <td><?= h($p['number']) ?></td>\n                <td><?= h($p['name']) ?></td>\n                <td><?= h($p['partner']) ?></td>\n                <td><?= h($p['club']) ?></td>\n                <td><?= h($p['nation']) ?></td>\n                <td>\n                    <form method=\"post\" style=\"display:inline;\">\n                        <input type=\"hidden\" name=\"idx\" value=\"<?= $i ?>\">\n                        <button type=\"submit\" name=\"delete\" value=\"1\" class=\"del-btn\" onclick=\"return confirm('정말 삭제할까요?');\">삭제</button>\n                    </form>\n                </td>\n            </tr>\n        <?php endforeach; ?>\n        <?php if (empty($players)): ?>\n            <tr><td colspan=\"6\" style=\"color:#aaa;\">등록된 선수가 없습니다.</td></tr>\n        <?php endif; ?>\n    </table>\n</div>\n<footer>\n    2025 danceoffice.net | Powered by Seyoung Lee\n</footer>\n</body>\n</html>","size_bytes":8959},"comp/manage_events.php":{"content":"<?php\n$comp_id = $_GET['comp_id'] ?? '';\n$data_dir = __DIR__ . \"/data/$comp_id\";\n$info_file = \"$data_dir/info.json\";\n$runorder_file = \"$data_dir/RunOrder_Tablet.txt\";\n$dance_file = \"$data_dir/DanceName.txt\";\n$panel_file = \"$data_dir/panel_list.json\";\n\nrequire_once 'detail_numbers_manager.php';\n\n// ==== 1. 예제파일 다운로드용 샘플 데이터 생성 ====\n$example_csv = <<<CSV\n순번,이벤트명,라운드타입,라운드차수,진출자수,다음라운드,댄스1,댄스2,댄스3,댄스4,댄스5,패널코드,시간(분)\n1,Under 21 Open Latin,예선전,1,5,2,CCC,Samba,Rumba,Paso,,PA,1.5\n1,Under 21 Open Latin,예선전,2,3,3,CCC,Samba,Rumba,Paso,,PB,1.5\n1,Under 21 Open Latin,준결승,,3,4,CCC,Samba,Rumba,Paso,,PC,1.5\n1,Under 21 Open Latin,결승,,,,CCC,Samba,Rumba,Paso,,PD,1.5\n2,Break Time,,,,,,,,,,0.5\nCSV;\n\n// ==== 2. 예제파일 다운로드 처리 ====\nif (isset($_GET['download_example'])) {\n    header('Content-Type: text/csv; charset=UTF-8');\n    header('Content-Disposition: attachment; filename=\"event_example.csv\"');\n    echo $example_csv;\n    exit;\n}\n\n// ==== 3. 파일 업로드 처리 ====\n$msg = '';\nif (isset($_POST['upload_event']) && isset($_FILES['eventfile']) && $_FILES['eventfile']['error'] == UPLOAD_ERR_OK) {\n    $ext = strtolower(pathinfo($_FILES['eventfile']['name'], PATHINFO_EXTENSION));\n    if (!in_array($ext, ['csv','txt'])) {\n        $msg = \"CSV 또는 TXT 파일만 업로드 가능합니다.\";\n    } else {\n        move_uploaded_file($_FILES['eventfile']['tmp_name'], $runorder_file);\n        $msg = \"이벤트 데이터가 업로드 되었습니다.\";\n    }\n    header(\"Location: manage_events.php?comp_id=\" . urlencode($comp_id) . \"&msg=\" . urlencode($msg));\n    exit;\n}\nif (isset($_GET['msg'])) $msg = $_GET['msg'];\n\n// ==== 4. Dance 종류 데이터(축약명 => 정식명) 불러오기 ====\n$dance_types = [];\nif (file_exists($dance_file)) {\n    $lines = file($dance_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    foreach ($lines as $line) {\n        if (preg_match('/^bom/', $line)) continue;\n        $cols = array_map('trim', explode(',', $line));\n        if (isset($cols[2]) && $cols[2] && isset($cols[1]) && $cols[1]) {\n            $dance_types[$cols[2]] = $cols[1]; // 축약명 => 정식명\n        }\n    }\n}\n\n// ==== 5. 패널코드 목록 불러오기 ====\n$panel_codes = [];\nif (file_exists($panel_file)) {\n    $panel_list = json_decode(file_get_contents($panel_file), true);\n    foreach ($panel_list as $row) {\n        if (!empty($row['panel_code'])) $panel_codes[$row['panel_code']] = true;\n    }\n    $panel_codes = array_keys($panel_codes); // 중복제거\n}\n\n// ==== 6. RunOrder 파일 불러오기 및 분류 ====\n$events = [];\n$non_competition_events = [];\nif (file_exists($runorder_file)) {\n    $lines = file($runorder_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    foreach ($lines as $line) {\n        if (preg_match('/^bom/', $line)) continue;\n        $cols = array_map('trim', explode(',', $line));\n        // 컬럼 mapping: 순번,이벤트명,라운드타입,라운드차수,진출자수,다음라운드,댄스1~5,패널코드,시간(분),세부번호\n        $panel_code = $cols[11] ?? '';\n        $music_time = isset($cols[12]) ? floatval($cols[12]) : 0.0;\n        $detail_no = $cols[13] ?? ''; // 세부번호 컬럼 추가\n        $dance_abbr = [];\n        for ($i=6; $i<=10; $i++) {\n            if (isset($cols[$i]) && trim($cols[$i])!=='') $dance_abbr[] = $cols[$i];\n        }\n        // 경기 외 이벤트: 댄스컬럼 모두 비었으면\n        if (count($dance_abbr) === 0) {\n            $non_competition_events[] = [\n                'raw_no' => $cols[0] ?? '',\n                'name'   => $cols[1] ?? '',\n                'music_time' => $music_time,\n            ];\n        } else {\n            // 댄스 종목 번호를 이름으로 변환\n            $converted_dances = convert_dance_numbers_to_names($dance_abbr, $dance_types);\n            // 댄스 종목을 번호 순으로 정렬\n            $sorted_dances = sort_dances_by_number($converted_dances, $dance_types);\n            \n            $events[] = [\n                'raw_no'      => $cols[0] ?? '',\n                'name'        => $cols[1] ?? '',\n                'round_type'  => $cols[2] ?? '',\n                'round_num'   => $cols[3] ?? '',\n                'next_qual'   => $cols[4] ?? '',\n                'next_event'  => $cols[5] ?? '',\n                'panel_code'  => $panel_code,\n                'music_time'  => $music_time,\n                'dances'      => $sorted_dances,\n                'detail_no'   => $detail_no, // 세부번호 추가\n            ];\n        }\n    }\n}\n\n// ==== 7. 순번 그룹화 ====\n$grouped_events = [];\nforeach ($events as $evt) {\n    if (preg_match('/^(\\d+)/', $evt['raw_no'], $m)) $grp = $m[1];\n    else $grp = $evt['raw_no'];\n    $grouped_events[$grp][] = $evt;\n}\n\n// ==== 7-1. 세부번호 자동 생성 ====\n// 모든 이벤트에 대해 세부번호를 새로 계산\nforeach ($events as $idx => &$event) {\n    // 같은 raw_no를 가진 이벤트들 찾기\n    $same_raw_no_events = array_filter($events, function($e) use ($event) {\n        return $e['raw_no'] === $event['raw_no'];\n    });\n    $event_count = count($same_raw_no_events);\n    \n    // 이벤트가 2개 이상인 경우에만 세부번호 할당\n    if ($event_count > 1) {\n        // 같은 raw_no를 가진 이벤트들을 순서대로 정렬\n        $sorted_events = $same_raw_no_events;\n        usort($sorted_events, function($a, $b) {\n            return strcmp($a['name'], $b['name']);\n        });\n        \n        $event_index = array_search($event, $sorted_events);\n        if ($event_index !== false) {\n            $event['detail_no'] = $event['raw_no'] . '-' . ($event_index + 1);\n        }\n    } else {\n        // 이벤트가 1개인 경우 세부번호를 빈 문자열로 설정\n        $event['detail_no'] = '';\n    }\n}\n\n// 세부번호를 RunOrder_Tablet.txt에 저장\n$updated_lines = [];\nif (file_exists($runorder_file)) {\n    $lines = file($runorder_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    $event_counter = 0; // 실제 이벤트 카운터\n    \n    foreach ($lines as $line_idx => $line) {\n        if (preg_match('/^bom/', $line)) {\n            $updated_lines[] = $line;\n            continue;\n        }\n        \n        $cols = array_map('trim', explode(',', $line));\n        \n        // 해당 이벤트의 세부번호 찾기\n        $detail_no = '';\n        if (isset($events[$event_counter])) {\n            $event = $events[$event_counter];\n            $raw_no = $event['raw_no'];\n            \n            // 같은 순번의 이벤트 개수 확인\n            $same_raw_no_events = array_filter($events, function($e) use ($raw_no) {\n                return $e['raw_no'] === $raw_no;\n            });\n            $event_count = count($same_raw_no_events);\n            \n            // 이벤트가 2개 이상인 경우에만 세부번호 사용\n            if ($event_count > 1) {\n                $detail_no = $event['detail_no'];\n            }\n            // 이벤트가 1개인 경우 세부번호는 빈 문자열\n        }\n        \n        // 세부번호 컬럼이 없으면 추가, 있으면 업데이트\n        if (count($cols) < 14) {\n            // 세부번호 컬럼이 없으면 추가\n            $cols[] = $detail_no;\n        } else {\n            // 세부번호 컬럼이 있으면 업데이트\n            $cols[13] = $detail_no;\n        }\n        \n        // 다음 이벤트 번호 업데이트 (5번째 컬럼)\n        if (isset($events[$event_counter])) {\n            $next_event = $events[$event_counter]['next_event'] ?? '';\n            $cols[5] = $next_event;\n        }\n        \n        $updated_lines[] = implode(',', $cols);\n        $event_counter++; // 실제 이벤트만 카운트\n    }\n    \n    // 파일 저장\n    file_put_contents($runorder_file, implode(\"\\n\", $updated_lines) . \"\\n\");\n}\n\n// ==== 7-1. 라운드 자동 계산 함수 ====\nfunction calculateRoundInfo($events) {\n    // 이벤트명별로 그룹화\n    $name_groups = [];\n    foreach ($events as $idx => $evt) {\n        $name = $evt['name'];\n        if (!isset($name_groups[$name])) {\n            $name_groups[$name] = [];\n        }\n        $name_groups[$name][] = ['idx' => $idx, 'event' => $evt];\n    }\n    \n    // 각 그룹별로 라운드 정보 계산\n    $round_info = [];\n    $next_event_info = []; // 다음 이벤트 번호 정보\n    \n    foreach ($name_groups as $name => $group) {\n        $total_events = count($group);\n        \n        // 같은 이벤트명을 가진 이벤트들을 순번 순으로 정렬\n        usort($group, function($a, $b) {\n            $raw_no_a = intval($a['event']['raw_no']);\n            $raw_no_b = intval($b['event']['raw_no']);\n            \n            // 순번이 같으면 이벤트명으로 정렬\n            if ($raw_no_a === $raw_no_b) {\n                return strcmp($a['event']['name'], $b['event']['name']);\n            }\n            \n            return $raw_no_a - $raw_no_b;\n        });\n        \n        foreach ($group as $pos => $item) {\n            $idx = $item['idx'];\n            $stage_text = '';\n            \n            if ($total_events === 1) {\n                $stage_text = 'Final';\n            } else if ($total_events === 2) {\n                if ($pos === 0) $stage_text = 'Semi-Final';\n                else $stage_text = 'Final';\n            } else if ($total_events === 3) {\n                if ($pos === 0) $stage_text = 'Round 1';\n                else if ($pos === 1) $stage_text = 'Semi-Final';\n                else $stage_text = 'Final';\n            } else if ($total_events === 4) {\n                if ($pos === 0) $stage_text = 'Round 1';\n                else if ($pos === 1) $stage_text = 'Round 2';\n                else if ($pos === 2) $stage_text = 'Semi-Final';\n                else $stage_text = 'Final';\n            } else if ($total_events === 5) {\n                if ($pos === 0) $stage_text = 'Round 1';\n                else if ($pos === 1) $stage_text = 'Round 2';\n                else if ($pos === 2) $stage_text = 'Round 3';\n                else if ($pos === 3) $stage_text = 'Semi-Final';\n                else $stage_text = 'Final';\n            } else {\n                $stage_text = ($pos + 1) . '/' . $total_events;\n            }\n            \n            $round_info[$idx] = $stage_text;\n            \n            // 다음 이벤트 번호 자동 계산\n            if ($pos < $total_events - 1) {\n                // 다음 라운드가 있는 경우\n                $next_item = $group[$pos + 1];\n                $next_event_info[$idx] = $next_item['event']['raw_no'];\n            } else {\n                // 마지막 라운드인 경우\n                $next_event_info[$idx] = '';\n            }\n        }\n    }\n    \n    return ['round_info' => $round_info, 'next_event_info' => $next_event_info];\n}\n\n// 라운드 정보 계산\n$round_calculation = calculateRoundInfo($events);\n$round_info = $round_calculation['round_info'];\n$next_event_info = $round_calculation['next_event_info'];\n\n// 다음 이벤트 번호를 이벤트에 적용\nforeach ($events as $idx => &$event) {\n    if (isset($next_event_info[$idx])) {\n        $event['next_event'] = $next_event_info[$idx];\n    }\n}\n\n// RunOrder_Tablet.txt에서 읽어온 라운드 정보를 사용\nforeach ($events as $idx => &$event) {\n    // RunOrder_Tablet.txt에서 읽어온 라운드 정보가 있으면 사용\n    if (!empty($event['round_type'])) {\n        $round_info[$idx] = $event['round_type'];\n    }\n    // RunOrder_Tablet.txt에서 읽어온 다음 이벤트 번호가 있으면 사용\n    if (!empty($event['next_event'])) {\n        $next_event_info[$idx] = $event['next_event'];\n    }\n}\n\n// ==== 8. 직접 입력 처리 및 \"다음라운드 자동 생성\" ====\nif ($_SERVER['REQUEST_METHOD']==='POST' && isset($_POST['add_event_inline'])) {\n    $fields = [\n        $_POST['raw_no'] ?? '',\n        $_POST['name'] ?? '',\n        $_POST['round_type'] ?? '',\n        $_POST['round_num'] ?? '',\n        $_POST['next_qual'] ?? '',\n        $_POST['next_event'] ?? '',\n        $_POST['dance1'] ?? '',\n        $_POST['dance2'] ?? '',\n        $_POST['dance3'] ?? '',\n        $_POST['dance4'] ?? '',\n        $_POST['dance5'] ?? '',\n        $_POST['panel_code'] ?? '',\n        $_POST['music_time'] ?? '',\n    ];\n    $line = implode(',', array_map(fn($s)=>str_replace([\",\",\"\\n\",\"\\r\"],['',' ',''],$s), $fields));\n    $line .= \"\\n\";\n    file_put_contents($runorder_file, $line, FILE_APPEND);\n\n    // 자동 다음라운드 생성\n    $next_event = trim($_POST['next_event'] ?? '');\n    $existing_nums = array_column($events, 'raw_no');\n    if ($next_event !== \"\" && !in_array($next_event, $existing_nums)) {\n        // 자동 라운드타입 증가\n        $now_round_type = $_POST['round_type'];\n        $next_round_type = $now_round_type;\n        if ($now_round_type === \"Round 1\") {\n            $next_round_type = \"Round 2\";\n            // Round 1이 여러 번이면 Round 2부터는 Semi-Final, 그 이후 Final\n            $exist_same = array_filter($events, fn($e) => $e['name']==$_POST['name'] && $e['round_type']==\"Round 1\");\n            if (count($exist_same) >= 2) {\n                $next_round_type = \"Semi-Final\";\n            }\n        } elseif ($now_round_type === \"Round 2\") {\n            $next_round_type = \"Semi-Final\";\n        } elseif ($now_round_type === \"Round 3\") {\n            $next_round_type = \"Semi-Final\";\n        } elseif ($now_round_type === \"Semi-Final\") {\n            $next_round_type = \"Final\";\n        }\n        // 댄스 종목 번호를 이름으로 변환\n        $dance_abbrs = array_filter([\n            $_POST['dance1'] ?? '',\n            $_POST['dance2'] ?? '',\n            $_POST['dance3'] ?? '',\n            $_POST['dance4'] ?? '',\n            $_POST['dance5'] ?? ''\n        ]);\n        $converted_dances = convert_dance_numbers_to_names($dance_abbrs, $dance_types);\n        $sorted_dances = sort_dances_by_number($converted_dances, $dance_types);\n        \n        $next_fields = [\n            $next_event,\n            $_POST['name'],\n            $next_round_type,\n            $next_round_num,\n            \"\", // 진출자수\n            \"\", // 다음라운드\n            $sorted_dances[0] ?? '',\n            $sorted_dances[1] ?? '',\n            $sorted_dances[2] ?? '',\n            $sorted_dances[3] ?? '',\n            $sorted_dances[4] ?? '',\n            $_POST['panel_code'] ?? '',\n            $_POST['music_time'] ?? '',\n        ];\n        $next_line = implode(',', array_map(fn($s)=>str_replace([\",\",\"\\n\",\"\\r\"],['',' ',''],$s), $next_fields));\n        $next_line .= \"\\n\";\n        file_put_contents($runorder_file, $next_line, FILE_APPEND);\n    }\n    header(\"Location: manage_events.php?comp_id=\" . urlencode($comp_id) . \"&msg=\" . urlencode(\"한 줄이 추가되었습니다.\"));\n    exit;\n}\n\n// ==== 9. 삭제 처리 ====\nif (isset($_GET['delete']) && is_numeric($_GET['delete'])) {\n    $delete_idx = intval($_GET['delete']);\n    // RunOrder 파일 다시 읽기\n    if (file_exists($runorder_file)) {\n        $lines = file($runorder_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n        if (isset($lines[$delete_idx])) {\n            unset($lines[$delete_idx]);\n            file_put_contents($runorder_file, implode(\"\\n\", $lines) . \"\\n\");\n            \n            // 세부번호도 재생성\n            $detail_numbers = generateDetailNumbers($events);\n            saveDetailNumbers($comp_id, $detail_numbers);\n            \n            header(\"Location: manage_events.php?comp_id=\" . urlencode($comp_id) . \"&msg=이벤트가 삭제되었습니다.\");\n            exit;\n        }\n    }\n}\n\n// ==== 9-1. 세부번호 수정 처리 ====\nif ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['update_detail_numbers'])) {\n    $detail_updates = $_POST['detail_numbers'] ?? [];\n    $updated = false;\n    \n    foreach ($detail_updates as $key => $new_detail_no) {\n        list($raw_no, $name) = explode('|', $key, 2);\n        $raw_no = trim($raw_no); // 공백 문자 제거\n        if (updateDetailNumber($comp_id, $raw_no, $name, $new_detail_no)) {\n            $updated = true;\n        }\n    }\n    \n    if ($updated) {\n        // RunOrder_Tablet.txt 파일 업데이트\n        $updated_lines = [];\n        if (file_exists($runorder_file)) {\n            $lines = file($runorder_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n            $event_counter = 0;\n            \n            foreach ($lines as $line_idx => $line) {\n                if (preg_match('/^bom/', $line)) {\n                    $updated_lines[] = $line;\n                    continue;\n                }\n                \n                $cols = array_map('trim', explode(',', $line));\n                \n                // 해당 이벤트의 세부번호 찾기\n                $detail_no = '';\n                if (isset($events[$event_counter])) {\n                    $event = $events[$event_counter];\n                    $raw_no = $event['raw_no'];\n                    \n                    // 같은 순번의 이벤트 개수 확인\n                    $same_raw_no_events = array_filter($events, function($e) use ($raw_no) {\n                        return $e['raw_no'] === $raw_no;\n                    });\n                    $event_count = count($same_raw_no_events);\n                    \n                    // 이벤트가 2개 이상인 경우에만 세부번호 사용\n                    if ($event_count > 1) {\n                        $detail_no = $event['detail_no'];\n                    }\n                }\n                \n                // 세부번호 컬럼이 없으면 추가, 있으면 업데이트\n                if (count($cols) < 14) {\n                    $cols[] = $detail_no;\n                } else {\n                    $cols[13] = $detail_no;\n                }\n                \n                $updated_lines[] = implode(',', $cols);\n                $event_counter++;\n            }\n            \n            // 파일 저장\n            file_put_contents($runorder_file, implode(\"\\n\", $updated_lines) . \"\\n\");\n        }\n        \n        $msg = \"세부번호가 업데이트되었습니다.\";\n    } else {\n        $msg = \"세부번호 업데이트에 실패했습니다.\";\n    }\n    \n    header(\"Location: manage_events.php?comp_id=\" . urlencode($comp_id) . \"&msg=\" . urlencode($msg));\n    exit;\n}\n\n// ==== 10. 수정 폼 제출 처리 (수정시에도 다음라운드 자동생성 지원) ====\nif (isset($_POST['edit_idx']) && is_numeric($_POST['edit_idx'])) {\n    $edit_idx = intval($_POST['edit_idx']);\n    if (file_exists($runorder_file)) {\n        $lines = file($runorder_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n        if (isset($lines[$edit_idx])) {\n            $fields = [\n                $_POST['raw_no'] ?? '',\n                $_POST['name'] ?? '',\n                $_POST['round_type'] ?? '',\n                $_POST['round_num'] ?? '',\n                $_POST['next_qual'] ?? '',\n                $_POST['next_event'] ?? '',\n                $_POST['dance1'] ?? '',\n                $_POST['dance2'] ?? '',\n                $_POST['dance3'] ?? '',\n                $_POST['dance4'] ?? '',\n                $_POST['dance5'] ?? '',\n                $_POST['panel_code'] ?? '',\n                $_POST['music_time'] ?? '',\n            ];\n            $line = implode(',', array_map(fn($s)=>str_replace([\",\",\"\\n\",\"\\r\"],['',' ',''],$s), $fields));\n            $lines[$edit_idx] = $line;\n\n            // === 다음라운드 자동 생성 (수정시에도) ===\n            $next_event = trim($_POST['next_event'] ?? '');\n            // lines 전체에서 첫번째 컬럼(순번)만 추출\n            $existing_nums = [];\n            foreach ($lines as $l) {\n                $cols = array_map('trim', explode(',', $l));\n                $existing_nums[] = $cols[0] ?? '';\n            }\n            if ($next_event !== \"\" && !in_array($next_event, $existing_nums)) {\n                // 라운드타입 증가 로직\n                $now_round_type = $_POST['round_type'];\n                $next_round_type = $now_round_type;\n                if ($now_round_type === \"Round 1\") {\n                    $next_round_type = \"Round 2\";\n                    // Round 1 여러 번 있으면 Semi-Final 전환\n                    $exist_same = 0;\n                    foreach ($lines as $l) {\n                        $cols = array_map('trim', explode(',', $l));\n                        if (($cols[1]??'')==$_POST['name'] && ($cols[2]??'')==\"Round 1\") $exist_same++;\n                    }\n                    if ($exist_same >= 2) {\n                        $next_round_type = \"Semi-Final\";\n                    }\n                } elseif ($now_round_type === \"Round 2\") {\n                    $next_round_type = \"Semi-Final\";\n                } elseif ($now_round_type === \"Round 3\") {\n                    $next_round_type = \"Semi-Final\";\n                } elseif ($now_round_type === \"Semi-Final\") {\n                    $next_round_type = \"Final\";\n                }\n                // 댄스 종목 번호를 이름으로 변환\n                $dance_abbrs = array_filter([\n                    $_POST['dance1'] ?? '',\n                    $_POST['dance2'] ?? '',\n                    $_POST['dance3'] ?? '',\n                    $_POST['dance4'] ?? '',\n                    $_POST['dance5'] ?? ''\n                ]);\n                $converted_dances = convert_dance_numbers_to_names($dance_abbrs, $dance_types);\n                $sorted_dances = sort_dances_by_number($converted_dances, $dance_types);\n                \n                $next_fields = [\n                    $next_event,\n                    $_POST['name'],\n                    $next_round_type,\n                    $next_round_num,\n                    \"\", // 진출자수\n                    \"\", // 다음라운드\n                    $sorted_dances[0] ?? '',\n                    $sorted_dances[1] ?? '',\n                    $sorted_dances[2] ?? '',\n                    $sorted_dances[3] ?? '',\n                    $sorted_dances[4] ?? '',\n                    $_POST['panel_code'] ?? '',\n                    $_POST['music_time'] ?? '',\n                ];\n                $next_line = implode(',', array_map(fn($s)=>str_replace([\",\",\"\\n\",\"\\r\"],['',' ',''],$s), $next_fields));\n                $lines[] = $next_line;\n            }\n            // 저장\n            file_put_contents($runorder_file, implode(\"\\n\", $lines) . \"\\n\");\n            header(\"Location: manage_events.php?comp_id=\" . urlencode($comp_id) . \"&msg=이벤트가 수정되었습니다.\");\n            exit;\n        }\n    }\n}\n\nfunction h($s) { return htmlspecialchars($s ?? ''); }\nfunction get_round_label($round_type, $round_num) {\n    if ($round_type === \"Round 1\") return \"Round 1\";\n    if ($round_type === \"Round 2\") return \"Round 2\";\n    if ($round_type === \"Round 3\") return \"Round 3\";\n    if ($round_type === \"Semi-Final\") return \"Semi-Final\";\n    if ($round_type === \"Final\") return \"Final\";\n    return h($round_type);\n}\nfunction render_dances($abbrs, $dance_types) {\n    $out = [];\n    foreach ($abbrs as $ab) {\n        // None, 0, 빈 문자열, '?' 등 무효한 값 제외\n        if (empty($ab) || $ab === '0' || $ab === 'None' || $ab === '?' || $ab === '-') {\n            continue;\n        }\n        \n        if (isset($dance_types[$ab])) {\n            // 이름만 표시 (예: Waltz)\n            $dance_info = get_dance_info_by_abbr($ab, $dance_types);\n            $out[] = $dance_info['name'];\n        } else {\n            // 매칭되지 않는 경우 원본 표시 (유효한 경우만)\n            if (!empty($ab) && $ab !== '0' && $ab !== 'None' && $ab !== '?' && $ab !== '-') {\n                $out[] = $ab;\n            }\n        }\n    }\n    return implode(', ', $out);\n}\n\nfunction get_dance_info_by_abbr($abbr, $dance_types) {\n    // DanceName.txt에서 번호 정보를 가져오기 위해 파일을 다시 읽음\n    $dance_file = __DIR__ . \"/data/{$_GET['comp_id']}/DanceName.txt\";\n    $dance_data = [];\n    \n    if (file_exists($dance_file)) {\n        $lines = file($dance_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n        foreach ($lines as $line) {\n            if (preg_match('/^bom/', $line)) continue;\n            $cols = array_map('trim', explode(',', $line));\n            if (count($cols) >= 3 && is_numeric($cols[0])) {\n                $dance_data[$cols[2]] = [\n                    'number' => $cols[0],\n                    'name' => $cols[1],\n                    'abbr' => $cols[2]\n                ];\n            }\n        }\n    }\n    \n    return $dance_data[$abbr] ?? ['number' => '?', 'name' => $abbr, 'abbr' => $abbr];\n}\n\nfunction sort_dances_by_number($dance_abbrs, $dance_types) {\n    $dance_file = __DIR__ . \"/data/{$_GET['comp_id']}/DanceName.txt\";\n    $dance_data = [];\n    \n    if (file_exists($dance_file)) {\n        $lines = file($dance_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n        foreach ($lines as $line) {\n            if (preg_match('/^bom/', $line)) continue;\n            $cols = array_map('trim', explode(',', $line));\n            if (count($cols) >= 3 && is_numeric($cols[0])) {\n                $dance_data[$cols[2]] = intval($cols[0]);\n            }\n        }\n    }\n    \n    // 번호 순으로 정렬\n    usort($dance_abbrs, function($a, $b) use ($dance_data) {\n        $num_a = $dance_data[$a] ?? 999; // 매칭되지 않는 경우 맨 뒤로\n        $num_b = $dance_data[$b] ?? 999;\n        return $num_a - $num_b;\n    });\n    \n    return $dance_abbrs;\n}\n\nfunction convert_dance_numbers_to_names($dance_abbrs, $dance_types) {\n    $dance_file = __DIR__ . \"/data/{$_GET['comp_id']}/DanceName.txt\";\n    $dance_data = [];\n    \n    if (file_exists($dance_file)) {\n        $lines = file($dance_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n        foreach ($lines as $line) {\n            if (preg_match('/^bom/', $line)) continue;\n            $cols = array_map('trim', explode(',', $line));\n            if (count($cols) >= 3 && is_numeric($cols[0])) {\n                $dance_data[intval($cols[0])] = [\n                    'name' => $cols[1],\n                    'abbr' => $cols[2]\n                ];\n            }\n        }\n    }\n    \n    $converted_dances = [];\n    foreach ($dance_abbrs as $abbr) {\n        // 숫자인 경우 번호로 변환\n        if (is_numeric($abbr) && isset($dance_data[intval($abbr)])) {\n            $converted_dances[] = $dance_data[intval($abbr)]['abbr'];\n        } else {\n            $converted_dances[] = $abbr;\n        }\n    }\n    \n    return $converted_dances;\n}\nfunction sum_minutes($list) {\n    $total = 0.0;\n    foreach ($list as $e) $total += floatval($e['music_time']);\n    return $total;\n}\n\n// ==== 11. 수정 진입 시 데이터 준비 ====\n$edit_mode = false;\n$edit_fields = [];\nif (isset($_GET['edit']) && is_numeric($_GET['edit'])) {\n    $edit_mode = true;\n    $edit_idx = intval($_GET['edit']);\n    if (file_exists($runorder_file)) {\n        $lines = file($runorder_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n        if (isset($lines[$edit_idx])) {\n            $edit_fields = array_map('trim', explode(',', $lines[$edit_idx]));\n        }\n    }\n}\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>이벤트 관리 | danceoffice.net COMP</title>\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\n    <style>\n        body { background:#f7fafd; font-family:sans-serif; margin:0;}\n        .mainbox { max-width:1200px; margin:3vh auto 0 auto; background:#fff; border-radius:18px; box-shadow:0 6px 32px #00339911; padding:2.2em 1.3em 2em 1.3em;}\n        h1 { color:#003399; font-size:1.15em; margin-bottom:0.6em;}\n        .desc {margin-bottom:1.3em; color:#333;}\n        table { width:100%; border-collapse:collapse; background:#fff; }\n        th, td { padding:0.45em 0.3em; text-align:center; font-size:0.98em;}\n        th { background:#f0f4fa; color:#003399; font-weight:700;}\n        td { color:#333;}\n        tr:not(:last-child) td { border-bottom:1px solid #eee;}\n        .edit-btn, .del-btn {\n            border:none; border-radius:8px; padding:0.28em 1em; font-weight:700; cursor:pointer;\n        }\n        .edit-btn { background:#03C75A; color:#fff;}\n        .edit-btn:hover { background:#00BFAE;}\n        .del-btn { background:#ec3b28; color:#fff;}\n        .del-btn:hover { background:#b31e06;}\n        .goto-dash {display:inline-block; margin-bottom:1.1em; color:#888;}\n        .goto-dash:hover {color:#003399;}\n        .event-group-row { background:#f8fafd; }\n        .event-dances { font-size:0.96em; color:#225; }\n        .panel-code-cell { font-weight:600; color:#155; }\n        .time-table { margin-top:2.5em;}\n        .noncomp-title { color:#003399; font-size:1.07em; margin:1em 0 0.5em 0; font-weight:700;}\n        .addbox {margin:1.2em 0 1.5em 0;}\n        @media (max-width:900px) {\n            .mainbox { max-width:99vw; padding:1.1em 0.2em;}\n            th, td { font-size:0.95em;}\n        }\n    </style>\n    <script>\n    document.addEventListener('DOMContentLoaded', function() {\n        const danceMap = {\n            <?php foreach ($dance_types as $abbr => $fullname): ?>\n            \"<?=strtoupper($abbr)?>\": \"<?=h($fullname)?> (<?=h($abbr)?>)\",\n            <?php endforeach; ?>\n        };\n        document.querySelectorAll('.dance-input').forEach(function(input){\n            input.addEventListener('input', function(e) {\n                const v = input.value.trim().toUpperCase();\n                if(danceMap[v]) {\n                    input.value = v;\n                }\n            });\n        });\n        \n        // 댄스 입력 시 자동 정렬 기능\n        function autoSortDances() {\n            const danceInputs = document.querySelectorAll('.dance-input');\n            const danceValues = Array.from(danceInputs).map(input => input.value.trim()).filter(v => v);\n            \n            // 번호를 약어로 변환\n            const numberToAbbr = {\n                '1': 'W', '2': 'T', '3': 'V', '4': 'S', '5': 'Q',\n                '6': 'SA', '7': 'C', '8': 'R', '9': 'P', '10': 'J',\n                '11': 'F', '12': 'SW', '13': 'AT', '14': 'HAND.', '15': 'FO'\n            };\n            \n            // 숫자인 경우 약어로 변환\n            const convertedValues = danceValues.map(val => {\n                if (numberToAbbr[val]) {\n                    return numberToAbbr[val];\n                }\n                return val.toUpperCase();\n            });\n            \n            // DanceName.txt의 번호 순서대로 정렬\n            const danceOrder = {\n                'W': 1, 'T': 2, 'V': 3, 'S': 4, 'Q': 5,\n                'SA': 6, 'C': 7, 'R': 8, 'P': 9, 'J': 10,\n                'F': 11, 'SW': 12, 'AT': 13, 'HAND.': 14, 'FO': 15\n            };\n            \n            convertedValues.sort((a, b) => {\n                const orderA = danceOrder[a] || 999;\n                const orderB = danceOrder[b] || 999;\n                return orderA - orderB;\n            });\n            \n            // 정렬된 값으로 입력 필드 업데이트\n            danceInputs.forEach((input, index) => {\n                input.value = convertedValues[index] || '';\n            });\n        }\n        \n        // 댄스 입력 필드에 정렬 버튼 추가\n        document.addEventListener('DOMContentLoaded', function() {\n            const addForm = document.querySelector('form[method=\"post\"]');\n            if (addForm) {\n                const sortButton = document.createElement('button');\n                sortButton.type = 'button';\n                sortButton.textContent = '댄스 정렬';\n                sortButton.style.cssText = 'background:#FF6B35; color:#fff; border:none; border-radius:8px; padding:0.4em 1em; font-weight:700; cursor:pointer; margin-left:0.5em;';\n                sortButton.onclick = autoSortDances;\n                \n                const addButton = addForm.querySelector('button[type=\"submit\"]');\n                if (addButton) {\n                    addButton.parentNode.insertBefore(sortButton, addButton.nextSibling);\n                }\n            }\n        });\n        \n        // 삭제 확인\n        window.deleteEvent = function(idx) {\n            if(confirm('정말 삭제하시겠습니까?')) {\n                location.href = \"?comp_id=<?=h($comp_id)?>&delete=\" + idx;\n            }\n        };\n        // 수정 진입\n        window.editEvent = function(idx) {\n            location.href = \"?comp_id=<?=h($comp_id)?>&edit=\" + idx;\n        };\n        \n        // 라운드 정보 저장\n        window.saveRoundInfo = function() {\n            if(confirm('라운드 정보를 데이터 파일에 저장하시겠습니까? 타임테이블에서도 바로 적용됩니다.')) {\n                fetch(`save_round_info.php?comp_id=<?=h($comp_id)?>`)\n                    .then(response => response.json())\n                    .then(data => {\n                        if (data.success) {\n                            alert('라운드 정보가 저장되었습니다!');\n                        } else {\n                            alert('저장 실패: ' + (data.error || '알 수 없는 오류'));\n                        }\n                    })\n                    .catch(error => {\n                        alert('저장 중 오류가 발생했습니다: ' + error);\n                    });\n            }\n        };\n    });\n    \n    // 세부번호 자동 생성 기능 (전역 함수)\n    window.autoGenerateDetailNumbers = function() {\n        console.log('자동 생성 함수 시작');\n        const inputs = document.querySelectorAll('input[name^=\"detail_numbers[\"]');\n        console.log('찾은 입력 필드 수:', inputs.length);\n        \n        const groupCounters = {};\n        \n        inputs.forEach((input, index) => {\n            const name = input.getAttribute('name');\n            console.log(`입력 필드 ${index}:`, name);\n            \n            // 더 유연한 정규식 패턴 사용 (숫자가 아닌 raw_no도 처리)\n            const match = name.match(/detail_numbers\\[([^|]+)\\|/);\n            \n            if (match && match.length > 1 && match[1]) {\n                const rawNo = match[1].trim(); // 공백 문자 제거\n                console.log(`매칭된 raw_no: \"${rawNo}\" (길이: ${rawNo.length})`);\n                \n                // raw_no가 \"1\"인 경우 특별히 디버깅\n                if (rawNo === \"1\" || rawNo.includes(\"1\")) {\n                    console.log(`raw_no \"1\" 발견:`, {\n                        original: match[1],\n                        trimmed: rawNo,\n                        charCodes: Array.from(rawNo).map(c => c.charCodeAt(0))\n                    });\n                }\n                \n                if (!groupCounters[rawNo]) {\n                    groupCounters[rawNo] = 0;\n                }\n                groupCounters[rawNo]++;\n                \n                const newValue = rawNo + '-' + groupCounters[rawNo];\n                input.value = newValue;\n                console.log(`설정된 값: ${newValue}`);\n            } else {\n                console.warn('세부번호 입력 필드의 name 속성을 파싱할 수 없습니다:', name);\n                console.log('Input element:', input);\n            }\n        });\n        \n        console.log('자동 생성 완료. 그룹별 카운터:', groupCounters);\n        \n        // 자동 생성 후 자동으로 저장\n        setTimeout(() => {\n            saveDetailNumbers();\n        }, 100);\n    };\n    \n    // 세부번호 저장 후 값 유지를 위한 함수\n    window.saveDetailNumbers = function() {\n        const inputs = document.querySelectorAll('input[name^=\"detail_numbers[\"]');\n        const formData = new FormData();\n        \n        // 세부번호 데이터 수집\n        inputs.forEach(input => {\n            const name = input.getAttribute('name');\n            const value = input.value.trim();\n            if (value) {\n                formData.append(name, value);\n            }\n        });\n        \n        // 서버에 저장 요청\n        fetch('manage_events.php?comp_id=<?= urlencode($comp_id) ?>', {\n            method: 'POST',\n            body: formData\n        })\n        .then(response => {\n            if (response.ok) {\n                // 성공 시 성공 메시지와 함께 페이지 새로고침\n                alert('세부번호가 성공적으로 저장되었습니다.');\n                // 약간의 지연 후 새로고침하여 서버 처리 완료 보장\n                setTimeout(() => {\n                    window.location.reload();\n                }, 500);\n            } else {\n                alert('세부번호 저장에 실패했습니다.');\n            }\n        })\n        .catch(error => {\n            console.error('Error:', error);\n            alert('세부번호 저장 중 오류가 발생했습니다.');\n        });\n    };\n    </script>\n</head>\n<body>\n<div class=\"mainbox\">\n\n    <div style=\"margin-bottom:1.2em;\">\n        <a href=\"dashboard.php?comp_id=<?= urlencode($comp_id) ?>\" class=\"goto-dash\">&lt; 대시보드로</a>\n    </div>\n    <h1>이벤트 관리</h1>\n    \n    <?php if ($msg): ?>\n        <div style=\"color:#03c75a; margin-bottom:1em;\"><?= h($msg) ?></div>\n    <?php endif; ?>\n\n    <!-- 예제파일 다운로드 & 업로드 폼 -->\n    <div style=\"margin-bottom:1.2em; display:flex; gap:1.2em; align-items:center; flex-wrap:wrap;\">\n        <a href=\"?comp_id=<?=urlencode($comp_id)?>&download_example=1\" \n           style=\"display:inline-block; background:#003399; color:#fff; border-radius:8px; padding:0.4em 1.5em; font-weight:700; text-decoration:none;\">\n           이벤트 예제 파일 다운로드\n        </a>\n        <form method=\"post\" enctype=\"multipart/form-data\" style=\"display:inline-block;\">\n            <input type=\"file\" name=\"eventfile\" accept=\".csv,.txt\" required>\n            <button type=\"submit\" name=\"upload_event\" value=\"1\" style=\"background:#03C75A; color:#fff; border:none; border-radius:8px; padding:0.4em 1.5em; font-weight:700; cursor:pointer;\">이벤트 파일 업로드</button>\n        </form>\n        <button onclick=\"saveRoundInfo()\" style=\"background:#FF6B35; color:#fff; border:none; border-radius:8px; padding:0.4em 1.5em; font-weight:700; cursor:pointer;\">\n            라운드 정보 저장\n        </button>\n    </div>\n    \n    <!-- 웹 직접 입력: 한 줄 추가 폼 또는 수정 폼 -->\n    <?php if ($edit_mode): ?>\n    <form method=\"post\" action=\"\" style=\"margin-bottom:2em;\">\n        <fieldset class=\"addbox\" style=\"border:1px solid #bbe; border-radius:8px; padding:0.8em 1em;\">\n            <legend style=\"color:#003399;font-weight:700;\">이벤트 수정</legend>\n            <input type=\"hidden\" name=\"edit_idx\" value=\"<?=h($edit_idx)?>\">\n            <input type=\"text\" name=\"raw_no\" placeholder=\"순번\" style=\"width:4em;\" value=\"<?=h($edit_fields[0]??'')?>\">\n            <input type=\"text\" name=\"name\" placeholder=\"이벤트명\" style=\"width:12em;\" value=\"<?=h($edit_fields[1]??'')?>\">\n            <select name=\"round_type\" required>\n                <option value=\"\">라운드</option>\n                <option value=\"Round 1\" <?=($edit_fields[2]??'')==\"Round 1\"?'selected':''?>>Round 1</option>\n                <option value=\"Round 2\" <?=($edit_fields[2]??'')==\"Round 2\"?'selected':''?>>Round 2</option>\n                <option value=\"Round 3\" <?=($edit_fields[2]??'')==\"Round 3\"?'selected':''?>>Round 3</option>\n                <option value=\"Semi-Final\" <?=($edit_fields[2]??'')==\"Semi-Final\"?'selected':''?>>Semi-Final</option>\n                <option value=\"Final\" <?=($edit_fields[2]??'')==\"Final\"?'selected':''?>>Final</option>\n            </select>\n            <input type=\"number\" step=\"1\" name=\"next_qual\" placeholder=\"진출자수\" style=\"width:5em;\" value=\"<?=h($edit_fields[4]??'')?>\">\n            <input type=\"text\" name=\"next_event\" placeholder=\"다음라운드\" style=\"width:7em;\" value=\"<?=h($edit_fields[5]??'')?>\">\n            <?php for($i=1;$i<=5;$i++): ?>\n                <input class=\"dance-input\" list=\"dance-list\" name=\"dance<?=$i?>\" placeholder=\"댄스<?=$i?> or 약어\" value=\"<?=h($edit_fields[5+$i]??'')?>\">\n            <?php endfor; ?>\n            <datalist id=\"dance-list\">\n                <?php foreach ($dance_types as $abbr => $fullname): ?>\n                    <option value=\"<?=h($abbr)?>\"><?=h($fullname)?> (<?=h($abbr)?>)</option>\n                <?php endforeach; ?>\n            </datalist>\n            <input type=\"text\" name=\"panel_code\" placeholder=\"패널코드\" style=\"width:6em;\" value=\"<?=h($edit_fields[11]??'')?>\">\n            <input type=\"number\" step=\"0.1\" name=\"music_time\" placeholder=\"시간(분)\" style=\"width:5em;\" value=\"<?=h($edit_fields[12]??'')?>\">\n            <button type=\"submit\" style=\"background:#03C75A; color:#fff; border:none; border-radius:8px; padding:0.4em 1.3em; font-weight:700; cursor:pointer;\">\n                저장\n            </button>\n            <a href=\"?comp_id=<?=h($comp_id)?>\" style=\"margin-left:0.7em;color:#888;\">취소</a>\n        </fieldset>\n    </form>\n    <?php else: ?>\n    <form method=\"post\" action=\"\" style=\"margin-bottom:2em;\">\n        <fieldset class=\"addbox\" style=\"border:1px solid #bbe; border-radius:8px; padding:0.8em 1em;\">\n            <legend style=\"color:#003399;font-weight:700;\">새 이벤트 직접 입력</legend>\n            <input type=\"text\" name=\"raw_no\" placeholder=\"순번\" style=\"width:4em;\">\n            <input type=\"text\" name=\"name\" placeholder=\"이벤트명\" style=\"width:12em;\">\n            <select name=\"round_type\" required>\n                <option value=\"\">라운드</option>\n                <option value=\"Round 1\">Round 1</option>\n                <option value=\"Round 2\">Round 2</option>\n                <option value=\"Round 3\">Round 3</option>\n                <option value=\"Semi-Final\">Semi-Final</option>\n                <option value=\"Final\">Final</option>\n            </select>\n            <input type=\"number\" step=\"1\" name=\"next_qual\" placeholder=\"진출자수\" style=\"width:5em;\">\n            <input type=\"text\" name=\"next_event\" placeholder=\"다음라운드\" style=\"width:7em;\">\n            <?php for($i=1;$i<=5;$i++): ?>\n                <input class=\"dance-input\" list=\"dance-list\" name=\"dance<?=$i?>\" placeholder=\"댄스<?=$i?> or 약어\">\n            <?php endfor; ?>\n            <datalist id=\"dance-list\">\n                <?php foreach ($dance_types as $abbr => $fullname): ?>\n                    <option value=\"<?=h($abbr)?>\"><?=h($fullname)?> (<?=h($abbr)?>)</option>\n                <?php endforeach; ?>\n            </datalist>\n            <input type=\"text\" name=\"panel_code\" placeholder=\"패널코드\" style=\"width:6em;\">\n            <input type=\"number\" step=\"0.1\" name=\"music_time\" placeholder=\"시간(분)\" style=\"width:5em;\">\n            <button type=\"submit\" name=\"add_event_inline\" value=\"1\" style=\"background:#003399; color:#fff; border:none; border-radius:8px; padding:0.4em 1.3em; font-weight:700; cursor:pointer;\">\n                추가\n            </button>\n            <span class=\"small\" style=\"color:#888;\">예: Round 1, Semi-Final, Final, 경기외(댄스 입력 X)도 가능. <b>다음라운드 번호 입력시 자동 생성</b><br>\n            댄스 입력: 번호(1,2,3...) 또는 약어(W,T,V...) 모두 가능. <b>댄스 정렬 버튼으로 자동 정렬</b></span>\n        </fieldset>\n    </form>\n    <?php endif; ?>\n\n    <div class=\"desc\">\n        <b>라운드 컬럼은 같은 이벤트명을 가진 이벤트들을 자동으로 그룹화하여 Round 1, Round 2, Semi-Final, Final 순서로 계산됩니다.</b><br>\n        <b>경기 외 이벤트(브레이크, 개회식, 시상 등)는 별도 표로 정리되어 시간표 계산에 사용됩니다.</b><br>\n        각 경기 이벤트에는 음악 시간(분), 심사위원 패널 코드, 종목 등이 표시됩니다.<br>\n        <span style=\"color:#03c75a;\">동시진행 그룹</span>은 1-1, 1-2, ... 형식으로 묶어서 보여줍니다.<br>\n        <b>세부번호는 멀티이벤트 결승전에서 사용되며, 자동 생성되지만 수정 가능합니다.</b>\n    </div>\n    \n    <!-- 세부번호 수정 폼 -->\n    <div style=\"margin-bottom:20px; background:#f8f9fa; padding:15px; border-radius:8px; border:1px solid #dee2e6;\">\n        <h4 style=\"color:#495057; margin:0 0 15px 0; display:flex; align-items:center; gap:10px;\">\n            <span class=\"material-symbols-rounded\" style=\"font-size:20px;\">edit</span>\n            세부번호 수정\n        </h4>\n        <form method=\"post\">\n            <div style=\"display:grid; grid-template-columns: repeat(auto-fit, minmax(350px, 1fr)); gap:10px; max-height:300px; overflow-y:auto;\">\n                <?php foreach ($events as $evt): ?>\n                    <div style=\"display:flex; align-items:center; gap:10px; padding:8px; background:white; border-radius:4px; border:1px solid #e9ecef;\">\n                        <label style=\"min-width:60px; font-size:12px; color:#495057; font-weight:600;\">\n                            <?= h($evt['raw_no']) ?>\n                        </label>\n                        <div style=\"flex:1; font-size:11px; color:#6c757d; overflow:hidden; text-overflow:ellipsis; white-space:nowrap;\">\n                            <?= h($evt['name']) ?>\n                        </div>\n                        <input type=\"text\" \n                               name=\"detail_numbers[<?= h(trim($evt['raw_no'])) ?>|<?= h($evt['name']) ?>]\" \n                               value=\"<?= h($evt['detail_no']) ?>\" \n                               style=\"width:70px; padding:4px 6px; border:1px solid #ced4da; border-radius:4px; font-size:12px; text-align:center;\"\n                               placeholder=\"1-1\">\n                    </div>\n                <?php endforeach; ?>\n            </div>\n            <div style=\"margin-top:15px; text-align:center; display:flex; gap:10px; justify-content:center;\">\n                <button type=\"button\" onclick=\"autoGenerateDetailNumbers()\" \n                        style=\"background:#28a745; color:white; border:none; padding:8px 15px; border-radius:4px; font-weight:600; cursor:pointer; font-size:12px;\">\n                    자동 생성\n                </button>\n                <button type=\"button\" onclick=\"saveDetailNumbers()\" \n                        style=\"background:#ff6b35; color:white; border:none; padding:8px 20px; border-radius:4px; font-weight:600; cursor:pointer; font-size:12px;\">\n                    세부번호 저장\n                </button>\n            </div>\n        </form>\n    </div>\n    <table>\n        <tr>\n            <th>순번<br>(그룹)</th>\n            <th>세부번호<br>(동시진행)</th>\n            <th>이벤트명</th>\n            <th>라운드<br>(자동계산)</th>\n            <th>진출자수<br>(결승제외)</th>\n            <th>다음라운드<br>순번(결승제외)</th>\n            <th>댄스(종목)<br><small>번호.이름 순</small></th>\n            <th>심사위원<br>패널코드</th>\n            <th>시간<br>(분)</th>\n            <th>관리</th>\n        </tr>\n        <?php\n        // RunOrder 줄 번호 기록\n        $row_idx = 0;\n        foreach ($grouped_events as $grp_no => $evts):\n            foreach ($evts as $k => $e):\n                // 이벤트의 원본 인덱스 찾기\n                $original_idx = null;\n                foreach ($events as $orig_idx => $orig_evt) {\n                    if ($orig_evt['raw_no'] === $e['raw_no'] && $orig_evt['name'] === $e['name']) {\n                        $original_idx = $orig_idx;\n                        break;\n                    }\n                }\n                $calculated_round = $original_idx !== null ? ($round_info[$original_idx] ?? '-') : '-';\n        ?>\n            <tr<?=($k==0 && count($evts)>1?' class=\"event-group-row\"':'')?>>\n                <?php if ($k==0): ?>\n                    <td rowspan=\"<?=count($evts)?>\" style=\"font-weight:bold;\"><?=h($grp_no)?></td>\n                <?php endif; ?>\n                <td><?= h($e['detail_no']) ?></td>\n                <td><?= h($e['name']) ?></td>\n                <td style=\"font-weight:600; color:#0d2c96;\"><?= h($calculated_round) ?></td>\n                <?php if (!($e['round_type']===\"결승\")): ?>\n                    <td><?= h($e['next_qual']) ?></td>\n                    <td><?= h($e['next_event']) ?></td>\n                <?php else: ?>\n                    <td>-</td>\n                    <td>-</td>\n                <?php endif; ?>\n                <td class=\"event-dances\">\n                    <?= render_dances($e['dances'], $dance_types); ?>\n                </td>\n                <td class=\"panel-code-cell\">\n                    <?= h($e['panel_code']) ?>\n                </td>\n                <td>\n                    <?= $e['music_time'] ? number_format($e['music_time'], 1) : '-' ?>\n                </td>\n                <td>\n                    <button class=\"edit-btn\" onclick=\"editEvent(<?=$row_idx?>)\">수정</button>\n                    <button class=\"del-btn\" onclick=\"deleteEvent(<?=$row_idx?>)\">삭제</button>\n                </td>\n            </tr>\n        <?php\n            $row_idx++;\n            endforeach;\n        endforeach;\n        if ($row_idx === 0):\n        ?>\n            <tr><td colspan=\"10\" style=\"color:#aaa;\">이벤트가 없습니다.</td></tr>\n        <?php endif; ?>\n    </table>\n\n    <?php if (!empty($non_competition_events)): ?>\n        <div class=\"noncomp-title\">경기 외 이벤트(시간 계산용)</div>\n        <table class=\"time-table\">\n            <tr>\n                <th>순번</th>\n                <th>이벤트명</th>\n                <th>시간(분)</th>\n            </tr>\n            <?php foreach ($non_competition_events as $e): ?>\n            <tr>\n                <td><?= h($e['raw_no']) ?></td>\n                <td><?= h($e['name']) ?></td>\n                <td><?= $e['music_time'] ? number_format($e['music_time'],1) : '-' ?></td>\n            </tr>\n            <?php endforeach; ?>\n            <tr>\n                <td colspan=\"2\" style=\"text-align:right;color:#003399;font-weight:700;\">합계</td>\n                <td style=\"font-weight:700;\"><?= number_format(sum_minutes($non_competition_events),1) ?></td>\n            </tr>\n        </table>\n    <?php endif; ?>\n</div>\n</body>\n</html>","size_bytes":50345},"comp/manage_judges.php":{"content":"<?php\nsession_start();\nrequire_once 'auth.php';\nrequire_once 'judge_manager.php';\n\n// 오너 권한만 접근 가능\nrequirePermission('manage_users');\n\n$user = $_SESSION['user'];\n$message = '';\n$error = '';\n\n// 심사위원 추가 처리\nif ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['add_judge'])) {\n    $name = trim($_POST['name'] ?? '');\n    $organization = trim($_POST['organization'] ?? '');\n    $region = trim($_POST['region'] ?? '');\n    $phone = trim($_POST['phone'] ?? '');\n    $email = trim($_POST['email'] ?? '');\n    $specialty = trim($_POST['specialty'] ?? '');\n    \n    if ($name && $organization && $region && $phone && $email && $specialty) {\n        // 사진 업로드 처리\n        $photo = '';\n        if (isset($_FILES['photo']) && $_FILES['photo']['size'] > 0) {\n            $upload_dir = __DIR__ . '/judges_photos/';\n            if (!is_dir($upload_dir)) {\n                mkdir($upload_dir, 0777, true);\n            }\n            \n            $file_extension = pathinfo($_FILES['photo']['name'], PATHINFO_EXTENSION);\n            $photo = generateJudgeId() . '.' . $file_extension;\n            $upload_path = $upload_dir . $photo;\n            \n            if (move_uploaded_file($_FILES['photo']['tmp_name'], $upload_path)) {\n                // 사진 업로드 성공\n            } else {\n                $error = \"사진 업로드에 실패했습니다.\";\n            }\n        }\n        \n        if (!$error) {\n            $judge_data = [\n                'name' => $name,\n                'organization' => $organization,\n                'region' => $region,\n                'phone' => $phone,\n                'email' => $email,\n                'photo' => $photo,\n                'specialty' => $specialty\n            ];\n            \n            addJudge($judge_data);\n            $message = \"심사위원 '{$name}'이 추가되었습니다.\";\n        }\n    } else {\n        $error = \"모든 필수 항목을 입력해주세요.\";\n    }\n}\n\n// 심사위원 삭제 처리\nif (isset($_GET['delete']) && $_GET['delete']) {\n    $judge_id = $_GET['delete'];\n    $judge = getJudgeById($judge_id);\n    if ($judge) {\n        deleteJudge($judge_id);\n        $message = \"심사위원 '{$judge['name']}'이 삭제되었습니다.\";\n    }\n}\n\n$judges = loadJudges();\n$regions = getRegions();\n$specialties = getSpecialties();\n\nfunction h($s) { return htmlspecialchars($s ?? ''); }\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>심사위원 관리 | danceoffice.net</title>\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded\" rel=\"stylesheet\" />\n    <style>\n        body {\n            background: #181B20;\n            min-height: 100vh;\n            font-size: 14px;\n            line-height: 1.5;\n            margin: 0;\n            padding: 0;\n            font-family: 'Noto Sans KR', sans-serif;\n        }\n        \n        .container {\n            max-width: 1400px;\n            margin: 0 auto;\n            padding: 20px;\n        }\n        \n        .header {\n            background: linear-gradient(135deg, #1a1d21 0%, #181B20 100%);\n            border-radius: 15px;\n            padding: 25px;\n            margin-bottom: 20px;\n            box-shadow: 0 8px 25px rgba(3, 199, 90, 0.15);\n            border: 2px solid #03C75A;\n            text-align: center;\n        }\n        \n        .header h1 {\n            color: #03C75A;\n            font-size: 24px;\n            margin: 0 0 10px 0;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 10px;\n        }\n        \n        .header p {\n            color: #00BFAE;\n            font-size: 16px;\n            margin: 0;\n        }\n        \n        .nav {\n            display: flex;\n            gap: 15px;\n            margin-top: 20px;\n            justify-content: center;\n            flex-wrap: wrap;\n        }\n        \n        .nav a {\n            color: white;\n            text-decoration: none;\n            font-weight: 600;\n            font-size: 14px;\n            padding: 10px 20px;\n            border-radius: 20px;\n            background: rgba(3, 199, 90, 0.1);\n            backdrop-filter: blur(10px);\n            transition: all 0.3s ease;\n            display: flex;\n            align-items: center;\n            gap: 5px;\n        }\n        \n        .nav a:hover {\n            background: #03C75A;\n            color: #222;\n            transform: translateY(-2px);\n        }\n        \n        .card {\n            background: #222;\n            border-radius: 15px;\n            padding: 25px;\n            margin-bottom: 20px;\n            box-shadow: 0 8px 25px rgba(3, 199, 90, 0.08);\n            border: 1px solid #31343a;\n        }\n        \n        .card h3 {\n            color: #03C75A;\n            font-size: 18px;\n            margin: 0 0 20px 0;\n            display: flex;\n            align-items: center;\n            gap: 10px;\n        }\n        \n        .form-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n            gap: 20px;\n        }\n        \n        .form-group {\n            margin-bottom: 15px;\n        }\n        \n        .form-group label {\n            display: block;\n            color: #F5F7FA;\n            font-size: 13px;\n            margin-bottom: 5px;\n            font-weight: 600;\n        }\n        \n        .form-group input,\n        .form-group select {\n            width: 100%;\n            padding: 10px;\n            border: 1px solid #31343a;\n            border-radius: 8px;\n            background: #181B20;\n            color: #F5F7FA;\n            font-size: 13px;\n            box-sizing: border-box;\n        }\n        \n        .form-group select {\n            cursor: pointer;\n        }\n        \n        .form-group select option {\n            background: #181B20;\n            color: #F5F7FA;\n        }\n        \n        .btn {\n            background: linear-gradient(90deg, #03C75A 70%, #00BFAE 100%);\n            color: #222;\n            border: none;\n            padding: 10px 20px;\n            border-radius: 20px;\n            font-weight: 600;\n            font-size: 13px;\n            cursor: pointer;\n            transition: all 0.3s ease;\n        }\n        \n        .btn:hover {\n            background: linear-gradient(90deg, #00BFAE 60%, #03C75A 100%);\n            color: white;\n            transform: translateY(-2px);\n        }\n        \n        .btn-danger {\n            background: linear-gradient(90deg, #ff4444 70%, #cc0000 100%);\n            color: white;\n        }\n        \n        .btn-danger:hover {\n            background: linear-gradient(90deg, #cc0000 60%, #ff4444 100%);\n        }\n        \n        .btn-small {\n            padding: 6px 12px;\n            font-size: 11px;\n        }\n        \n        .message {\n            color: #03C75A;\n            background: rgba(3, 199, 90, 0.1);\n            padding: 10px;\n            border-radius: 8px;\n            margin-bottom: 15px;\n            font-size: 13px;\n        }\n        \n        .error {\n            color: #ff4444;\n            background: rgba(255, 68, 68, 0.1);\n            padding: 10px;\n            border-radius: 8px;\n            margin-bottom: 15px;\n            font-size: 13px;\n        }\n        \n        .judges-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n            gap: 20px;\n        }\n        \n        .judge-card {\n            background: #181B20;\n            border-radius: 12px;\n            padding: 20px;\n            border: 1px solid #31343a;\n            transition: all 0.3s ease;\n        }\n        \n        .judge-card:hover {\n            border-color: #03C75A;\n            box-shadow: 0 4px 15px rgba(3, 199, 90, 0.1);\n        }\n        \n        .judge-photo {\n            width: 80px;\n            height: 80px;\n            border-radius: 50%;\n            object-fit: cover;\n            margin: 0 auto 15px auto;\n            display: block;\n            border: 2px solid #03C75A;\n        }\n        \n        .judge-name {\n            color: #03C75A;\n            font-size: 16px;\n            font-weight: 600;\n            text-align: center;\n            margin-bottom: 10px;\n        }\n        \n        .judge-info {\n            color: #F5F7FA;\n            font-size: 12px;\n            margin-bottom: 8px;\n        }\n        \n        .judge-info strong {\n            color: #00BFAE;\n        }\n        \n        .judge-actions {\n            display: flex;\n            gap: 8px;\n            margin-top: 15px;\n            justify-content: center;\n        }\n        \n        .empty-state {\n            text-align: center;\n            color: #8A8D93;\n            font-size: 14px;\n            padding: 40px 20px;\n            grid-column: 1 / -1;\n        }\n        \n        .stats {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n            gap: 15px;\n            margin-bottom: 20px;\n        }\n        \n        .stat-card {\n            background: #181B20;\n            border-radius: 10px;\n            padding: 15px;\n            text-align: center;\n            border: 1px solid #31343a;\n        }\n        \n        .stat-number {\n            color: #03C75A;\n            font-size: 24px;\n            font-weight: 600;\n            margin-bottom: 5px;\n        }\n        \n        .stat-label {\n            color: #8A8D93;\n            font-size: 12px;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <header class=\"header\">\n            <h1>\n                <span class=\"material-symbols-rounded\">group</span>\n                심사위원 인명사전\n            </h1>\n            <p>국내 심사위원 정보 관리 시스템</p>\n            <nav class=\"nav\">\n                <a href=\"index.php\">\n                    <span class=\"material-symbols-rounded\">sports</span>\n                    대회 관리\n                </a>\n                <a href=\"manage_users.php\">\n                    <span class=\"material-symbols-rounded\">admin_panel_settings</span>\n                    사용자 관리\n                </a>\n                <a href=\"logout.php\">\n                    <span class=\"material-symbols-rounded\">logout</span>\n                    로그아웃\n                </a>\n            </nav>\n        </header>\n        \n        <div class=\"stats\">\n            <div class=\"stat-card\">\n                <div class=\"stat-number\"><?= count($judges) ?></div>\n                <div class=\"stat-label\">총 심사위원</div>\n            </div>\n            <div class=\"stat-card\">\n                <div class=\"stat-number\"><?= count(array_unique(array_column($judges, 'region'))) ?></div>\n                <div class=\"stat-label\">지역 수</div>\n            </div>\n            <div class=\"stat-card\">\n                <div class=\"stat-number\"><?= count(array_unique(array_column($judges, 'specialty'))) ?></div>\n                <div class=\"stat-label\">전문 분야</div>\n            </div>\n        </div>\n        \n        <div class=\"card\">\n            <h3>\n                <span class=\"material-symbols-rounded\">person_add</span>\n                심사위원 추가\n            </h3>\n            <?php if ($message): ?>\n                <div class=\"message\"><?= h($message) ?></div>\n            <?php endif; ?>\n            <?php if ($error): ?>\n                <div class=\"error\"><?= h($error) ?></div>\n            <?php endif; ?>\n            <form method=\"post\" enctype=\"multipart/form-data\">\n                <div class=\"form-grid\">\n                    <div class=\"form-group\">\n                        <label for=\"name\">이름 *</label>\n                        <input type=\"text\" id=\"name\" name=\"name\" placeholder=\"이름을 입력하세요\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"organization\">소속 *</label>\n                        <input type=\"text\" id=\"organization\" name=\"organization\" placeholder=\"소속을 입력하세요\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"region\">지역 *</label>\n                        <select id=\"region\" name=\"region\" required>\n                            <option value=\"\">지역을 선택하세요</option>\n                            <?php foreach ($regions as $region): ?>\n                                <option value=\"<?= h($region) ?>\"><?= h($region) ?></option>\n                            <?php endforeach; ?>\n                        </select>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"phone\">연락처 *</label>\n                        <input type=\"tel\" id=\"phone\" name=\"phone\" placeholder=\"010-1234-5678\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"email\">이메일 *</label>\n                        <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"email@example.com\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"specialty\">전문 분야 *</label>\n                        <select id=\"specialty\" name=\"specialty\" required>\n                            <option value=\"\">전문 분야를 선택하세요</option>\n                            <?php foreach ($specialties as $specialty): ?>\n                                <option value=\"<?= h($specialty) ?>\"><?= h($specialty) ?></option>\n                            <?php endforeach; ?>\n                        </select>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"photo\">증명사진</label>\n                        <input type=\"file\" id=\"photo\" name=\"photo\" accept=\"image/*\">\n                    </div>\n                </div>\n                <button type=\"submit\" name=\"add_judge\" class=\"btn\">\n                    <span class=\"material-symbols-rounded\">add</span>\n                    심사위원 추가\n                </button>\n            </form>\n        </div>\n        \n        <div class=\"card\">\n            <h3>\n                <span class=\"material-symbols-rounded\">list</span>\n                심사위원 목록\n            </h3>\n            <?php if (empty($judges)): ?>\n                <div class=\"empty-state\">등록된 심사위원이 없습니다.</div>\n            <?php else: ?>\n                <div class=\"judges-grid\">\n                    <?php foreach ($judges as $judge): ?>\n                        <div class=\"judge-card\">\n                            <?php if ($judge['photo'] && file_exists(__DIR__ . '/judges_photos/' . $judge['photo'])): ?>\n                                <img src=\"judges_photos/<?= h($judge['photo']) ?>\" class=\"judge-photo\" alt=\"<?= h($judge['name']) ?>\">\n                            <?php else: ?>\n                                <div class=\"judge-photo\" style=\"background: #31343a; display: flex; align-items: center; justify-content: center; color: #8A8D93;\">\n                                    <span class=\"material-symbols-rounded\">person</span>\n                                </div>\n                            <?php endif; ?>\n                            \n                            <div class=\"judge-name\"><?= h($judge['name']) ?></div>\n                            \n                            <div class=\"judge-info\">\n                                <strong>소속:</strong> <?= h($judge['organization']) ?>\n                            </div>\n                            <div class=\"judge-info\">\n                                <strong>지역:</strong> <?= h($judge['region']) ?>\n                            </div>\n                            <div class=\"judge-info\">\n                                <strong>연락처:</strong> <?= h($judge['phone']) ?>\n                            </div>\n                            <div class=\"judge-info\">\n                                <strong>이메일:</strong> <?= h($judge['email']) ?>\n                            </div>\n                            <div class=\"judge-info\">\n                                <strong>전문분야:</strong> <?= h($judge['specialty']) ?>\n                            </div>\n                            \n                            <div class=\"judge-actions\">\n                                <a href=\"?delete=<?= urlencode($judge['id']) ?>\" \n                                   class=\"btn btn-danger btn-small\" \n                                   onclick=\"return confirm('정말 삭제하시겠습니까?')\">\n                                    <span class=\"material-symbols-rounded\">delete</span>\n                                    삭제\n                                </a>\n                            </div>\n                        </div>\n                    <?php endforeach; ?>\n                </div>\n            <?php endif; ?>\n        </div>\n    </div>\n</body>\n</html>\n\n\n\n\n\n\n","size_bytes":17022},"comp/manage_timetable.php":{"content":"<?php\n$comp_id = $_GET['comp_id'] ?? '';\n$data_dir = __DIR__ . \"/data/$comp_id\";\n$info_file = \"$data_dir/info.json\";\n$runorder_file = \"$data_dir/RunOrder_Tablet.txt\";\n$dance_file = \"$data_dir/DanceName.txt\";\n\n// 대회 정보 로드\nif (!preg_match('/^\\d{8}-\\d+$/', $comp_id) || !is_file($info_file)) {\n    echo \"<h1>잘못된 대회 ID 또는 대회 정보가 없습니다.</h1>\";\n    exit;\n}\n$info = json_decode(file_get_contents($info_file), true);\n\n// 댄스 약어 => 풀네임 매핑\n$dance_types = [];\nif (file_exists($dance_file)) {\n    $lines = file($dance_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    foreach ($lines as $line) {\n        if (preg_match('/^bom/', $line)) continue;\n        $cols = array_map('trim', explode(',', $line));\n        if (isset($cols[2]) && $cols[2] && isset($cols[1]) && $cols[1]) {\n            $dance_types[strtoupper($cols[2])] = $cols[1]; // 약자(대문자) => 풀네임\n        }\n    }\n}\n\n// 시간 입력 처리\nfunction padzero($n) { return str_pad($n, 2, \"0\", STR_PAD_LEFT); }\nfunction to_time($s) {\n    if (strpos($s, ':') !== false) {\n        [$h, $m] = explode(':', $s);\n        return intval($h) * 60 + intval($m);\n    }\n    return intval($s);\n}\nfunction to_hm($m) {\n    $h = floor($m / 60);\n    $m = (int)$m % 60;\n    return padzero($h) . ':' . padzero($m);\n}\n$start_time_str = $_POST['start_time'] ?? '09:00';\n$opening_time_str = $_POST['opening_time'] ?? '10:30';\n$start_time_min = to_time($start_time_str);\n$opening_time_min = to_time($opening_time_str);\n\n// 추가 시간 저장 처리\nif (isset($_POST['save_extra_times']) && isset($_POST['extra_times'])) {\n    $extra_times = $_POST['extra_times'];\n    $lines = file($runorder_file, FILE_IGNORE_NEW_LINES);\n    $new_lines = [];\n    \n    foreach ($lines as $line) {\n        if (preg_match('/^bom/', $line)) {\n            $new_lines[] = $line;\n            continue;\n        }\n        \n        $cols = explode(\",\", $line);\n        if (count($cols) >= 14) {\n            $event_no = $cols[0];\n            $extra_time = isset($extra_times[$event_no]) ? intval($extra_times[$event_no]) : 0;\n            \n            // 15번째 컬럼이 없으면 추가\n            while (count($cols) < 15) {\n                $cols[] = '';\n            }\n            $cols[14] = $extra_time; // 15번째 컬럼에 추가 시간 저장\n            $new_lines[] = implode(\",\", $cols);\n        } else {\n            $new_lines[] = $line;\n        }\n    }\n    \n    file_put_contents($runorder_file, implode(\"\\n\", $new_lines));\n    header(\"Location: manage_timetable.php?comp_id=\" . urlencode($comp_id));\n    exit;\n}\n\n// 특별 이벤트 저장 처리\nif (isset($_POST['save_special_events'])) {\n    $special_events = $_POST['special_events'] ?? [];\n    $special_events_file = \"$data_dir/special_events.json\";\n    file_put_contents($special_events_file, json_encode($special_events, JSON_UNESCAPED_UNICODE));\n    header(\"Location: manage_timetable.php?comp_id=\" . urlencode($comp_id));\n    exit;\n}\n\n// 특별 이벤트 추가 처리\nif (isset($_POST['add_special_event'])) {\n    $name = trim($_POST['special_event_name'] ?? '');\n    $after_event = intval($_POST['special_event_after'] ?? 1);\n    $duration = intval($_POST['special_event_duration'] ?? 10);\n    \n    if (!empty($name) && $duration > 0) {\n        $special_events_file = \"$data_dir/special_events.json\";\n        $special_events = [];\n        if (file_exists($special_events_file)) {\n            $special_events = json_decode(file_get_contents($special_events_file), true) ?? [];\n        }\n        \n        $event_id = uniqid();\n        $special_events[$event_id] = [\n            'name' => $name,\n            'after_event' => $after_event,\n            'duration' => $duration\n        ];\n        \n        file_put_contents($special_events_file, json_encode($special_events, JSON_UNESCAPED_UNICODE));\n    }\n    header(\"Location: manage_timetable.php?comp_id=\" . urlencode($comp_id));\n    exit;\n}\n\n// 특별 이벤트 삭제 처리\nif (isset($_POST['delete_special_event'])) {\n    $event_id = $_POST['event_id'];\n    $special_events_file = \"$data_dir/special_events.json\";\n    if (file_exists($special_events_file)) {\n        $special_events = json_decode(file_get_contents($special_events_file), true) ?? [];\n        unset($special_events[$event_id]);\n        file_put_contents($special_events_file, json_encode($special_events, JSON_UNESCAPED_UNICODE));\n    }\n    header(\"Location: manage_timetable.php?comp_id=\" . urlencode($comp_id));\n    exit;\n}\n\n// 저장된 추가 시간 불러오기\n$extra_times = [];\nif (file_exists($runorder_file)) {\n    $lines = file($runorder_file, FILE_IGNORE_NEW_LINES);\n    foreach ($lines as $line) {\n        if (preg_match('/^bom/', $line)) continue;\n        $cols = explode(\",\", $line);\n        if (count($cols) >= 15) {\n            $event_no = $cols[0];\n            $extra_time = !empty($cols[14]) ? intval($cols[14]) : 0;\n            $extra_times[$event_no] = $extra_time;\n            if ($event_no == '1') {\n                echo \"<!-- 디버깅 extra_times 읽기: 순번 1, cols[14]=\" . $cols[14] . \", extra_time=$extra_time -->\";\n            }\n        }\n    }\n}\n\n// 저장된 특별 이벤트 불러오기\n$special_events = [];\n$special_events_file = \"$data_dir/special_events.json\";\nif (file_exists($special_events_file)) {\n    $special_events = json_decode(file_get_contents($special_events_file), true) ?? [];\n}\n\n// 저장된 라운드 정보 불러오기\n$round_info = [];\n$round_info_file = \"$data_dir/round_info.json\";\nif (file_exists($round_info_file)) {\n    $round_data = json_decode(file_get_contents($round_info_file), true);\n    if ($round_data && isset($round_data['round_info'])) {\n        $round_info = $round_data['round_info'];\n    }\n}\n\n// RunOrder에서 이벤트 불러오기\n$events = [];\n$raw_no_groups = []; // raw_no별로 그룹화\n\nif (file_exists($runorder_file)) {\n    $lines = file($runorder_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    foreach ($lines as $line) {\n        if (preg_match('/^bom/', $line)) continue;\n        $cols = array_map('trim', explode(',', $line));\n        // 순번,이벤트명,라운드타입,라운드차수,진출자수,다음라운드,댄스1~5,패널코드,시간(분),세부번호\n        $no = $cols[0] ?? '';\n        $desc = $cols[1] ?? '';\n        $roundtype = $cols[2] ?? '';\n        $roundnum = $cols[3] ?? '';\n        $detail_no = $cols[13] ?? ''; // 세부번호 추가\n        $dances = [];\n        for ($i = 6; $i <= 10; $i++) {\n            if (!empty($cols[$i])) $dances[] = $cols[$i];\n        }\n        if (count($dances) === 0) continue; // 경기 외 이벤트는 타임테이블에서 제외\n        \n        $dances_full = [];\n        foreach ($dances as $abbr) {\n            // 숫자로 된 댄스 코드를 처리\n            if (is_numeric($abbr)) {\n                $dance_num = intval($abbr);\n                // DanceName.txt에서 해당 번호의 댄스 찾기\n                $found_dance = '';\n                if (file_exists($dance_file)) {\n                    $lines = file($dance_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n                    foreach ($lines as $line) {\n                        if (preg_match('/^bom/', $line)) continue;\n                        $cols = array_map('trim', explode(',', $line));\n                        if (isset($cols[0]) && intval($cols[0]) === $dance_num) {\n                            $found_dance = $cols[1] ?? '';\n                            break;\n                        }\n                    }\n                }\n                $dances_full[] = $found_dance ?: $abbr;\n            } else {\n                // 약어로 된 댄스 코드를 처리\n                $abbr_up = strtoupper($abbr);\n                $dances_full[] = isset($dance_types[$abbr_up]) ? $dance_types[$abbr_up] : $abbr;\n            }\n        }\n        \n        // raw_no별로 그룹화\n        if (!isset($raw_no_groups[$no])) {\n            $raw_no_groups[$no] = [];\n        }\n        $extra_time = isset($cols[14]) && !empty($cols[14]) ? intval($cols[14]) : 0;\n        if ($no == '1') {\n            echo \"<!-- 디버깅 순번 1: cols[14]=\" . (isset($cols[14]) ? $cols[14] : '없음') . \", extra_time=$extra_time -->\";\n        }\n        $raw_no_groups[$no][] = [\n            'no' => $no,\n            'desc' => $desc,\n            'roundtype' => $roundtype,\n            'roundnum' => $roundnum,\n            'detail_no' => $detail_no,\n            'dances' => $dances_full,\n            'dance_count' => count($dances_full),\n            'extra_time' => $extra_time\n        ];\n    }\n}\n\n// 각 raw_no 그룹에서 댄스 수가 가장 많은 이벤트를 찾아 시간 계산용으로 사용\nforeach ($raw_no_groups as $raw_no => $group) {\n    // 댄스 수가 가장 많은 이벤트 찾기 (시간 계산용)\n    $max_dance_count = 0;\n    $selected_event = null;\n    \n    foreach ($group as $event) {\n        if ($event['dance_count'] > $max_dance_count) {\n            $max_dance_count = $event['dance_count'];\n            $selected_event = $event;\n        }\n    }\n    \n    if ($selected_event) {\n        $base_time = 1.5; // 기본 시간 (분)\n        $duration = $base_time * $max_dance_count; // 종목수만큼 곱하기!\n        \n        // 저장된 라운드 정보가 있으면 사용, 없으면 기존 방식 사용\n        $event_idx = count($events);\n        $calculated_round = isset($round_info[$event_idx]) ? $round_info[$event_idx] : \n                           ($selected_event['roundtype'] . ($selected_event['roundtype'] === '예선전' && $selected_event['roundnum'] ? \" $selected_event[roundnum]차\" : ''));\n        \n        // 멀티이벤트의 경우 raw_no 기준으로 추가 시간 사용\n        $extra_time = isset($extra_times[$raw_no]) ? $extra_times[$raw_no] : 0;\n        \n        $events[] = [\n            'no' => $selected_event['no'],\n            'desc' => $selected_event['desc'],\n            'round' => $calculated_round,\n            'dances' => $selected_event['dances'],\n            'duration' => $duration,\n            'detail_no' => $selected_event['detail_no'],\n            'extra_time' => $extra_time, // raw_no 기준으로 추가 시간 설정\n            'group_events' => $group, // 멀티이벤트 정보 저장 (모든 이벤트 포함)\n        ];\n        \n        // 디버깅: 순번 1의 추가 시간 확인\n        if ($selected_event['no'] == '1') {\n            echo \"<!-- 디버깅 이벤트 배열: 순번 1, extra_time=\" . $extra_time . \" -->\";\n        }\n    }\n}\n\n// 타임테이블 계산: 각 이벤트의 시작/종료 시간 구하기\n$rows = [];\n$cur_min = $start_time_min;\n$opening_row_idx = null;\n\nfor ($i = 0; $i < count($events); $i++) {\n    // 개회식 시각 도달 전이면 계속 진행\n    if ($cur_min < $opening_time_min && $cur_min + $events[$i]['duration'] >= $opening_time_min && $opening_row_idx === null) {\n        // 개회식 삽입\n        $rows[] = [\n            'no' => '',\n            'desc' => '개회식',\n            'round' => '',\n            'dances' => [],\n            'start' => $opening_time_min,\n            'end' => $opening_time_min + 20, // 기본 20분 예시\n            'is_opening' => true\n        ];\n        $cur_min = $opening_time_min + 20;\n        $opening_row_idx = count($rows) - 1;\n    }\n    \n    // 특별 이벤트 확인 (현재 이벤트 번호 후에 삽입할 특별 이벤트)\n    $event_no = $events[$i]['no'];\n    foreach ($special_events as $special_event) {\n        if ($special_event['after_event'] == $event_no) {\n            $special_duration = intval($special_event['duration']);\n            $rows[] = [\n                'no' => '',\n                'desc' => $special_event['name'],\n                'round' => '',\n                'dances' => [],\n                'start' => $cur_min,\n                'end' => $cur_min + $special_duration,\n                'is_special' => true,\n                'special_type' => $special_event['name']\n            ];\n            $cur_min += $special_duration;\n        }\n    }\n    \n    // 추가 시간 적용\n    $extra_time = $events[$i]['extra_time'] ?? 0;\n    $total_duration = $events[$i]['duration'] + $extra_time;\n    \n    $rows[] = [\n        'no' => $events[$i]['no'],\n        'desc' => $events[$i]['desc'],\n        'round' => $events[$i]['round'],\n        'dances' => $events[$i]['dances'],\n        'detail_no' => $events[$i]['detail_no'], // 세부번호 추가\n        'start' => $cur_min,\n        'end' => $cur_min + $total_duration,\n        'is_opening' => false,\n        'group_events' => $events[$i]['group_events'] ?? [], // 멀티이벤트 정보 추가\n        'extra_time' => $extra_time, // 추가 시간 정보\n    ];\n    $cur_min += $total_duration;\n}\n\n// 개회식 전 이벤트 시간 부족/초과 체크\n$total_pre_opening = 0;\nforeach ($rows as $r) {\n    if (isset($r['is_opening']) && $r['is_opening']) break;\n    $total_pre_opening += ($r['end'] - $r['start']);\n}\n$warning = '';\nif ($total_pre_opening < ($opening_time_min - $start_time_min)) {\n    $lack = ($opening_time_min - $start_time_min) - $total_pre_opening;\n    $warning = \"개회식 전 이벤트 시간이 \" . intval($lack) . \"분 부족합니다.\";\n} elseif ($total_pre_opening > ($opening_time_min - $start_time_min)) {\n    $over = $total_pre_opening - ($opening_time_min - $start_time_min);\n    $warning = \"개회식 전 이벤트 시간이 \" . intval($over) . \"분 초과합니다.\";\n}\n\nfunction h($s) { return htmlspecialchars($s ?? ''); }\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title><?= h($info['title']) ?> 타임테이블 | danceoffice.net COMP</title>\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\n    <style>\n        body { background:#1a1a1a; font-family:sans-serif; margin:0;}\n        .ttbox { max-width:1200px; margin:3vh auto 0 auto; background:#222; border-radius:18px; box-shadow:0 6px 32px #00339922; padding:2.7em 2em 2.2em 2em;}\n        h1 { color:#03C75A; font-size:1.25em; margin-bottom:0.6em;}\n        table { width:100%; border-collapse:collapse; background:#222; }\n        th, td { padding:0.45em 0.3em; text-align:center; font-size:0.98em;}\n        th { background:#202433; color:#03C75A; font-weight:700;}\n        td { color:#eee;}\n        tr:not(:last-child) td { border-bottom:1px solid #393a4a;}\n        .opening-row { background:#e4f7ff !important; color:#0079b8 !important;}\n        .warn { color:#ec3b28; font-weight:700; margin-bottom:1em;}\n        .ttform {margin-bottom:1.5em;}\n        input[type=\"time\"] {padding:0.3em 0.9em; font-size:1em;}\n        .ttform label {margin-right:1.1em;}\n        .ttform button {background:#03C75A;color:#fff;border:none;border-radius:8px;padding:0.5em 1.5em;font-weight:700;font-size:1.07em;cursor:pointer;}\n        .ttform button:hover {background:#009f5d;}\n        .goto-dash {display:inline-block;margin-bottom:1.2em;color:#bbb;}\n        .goto-dash:hover {color:#03C75A;}\n        @media (max-width:1050px) {\n            .ttbox {max-width:99vw;}\n        }\n        @media (max-width:700px) {\n            .ttbox {padding:1.3em 0.2em;}\n        }\n    </style>\n    <script>\n        function saveExtraTime(eventNo, value) {\n            console.log('saveExtraTime 호출됨:', eventNo, value);\n            \n            // 폼 생성\n            const form = document.createElement('form');\n            form.method = 'post';\n            form.style.display = 'none';\n            \n            // 추가 시간 데이터 추가\n            const extraTimeInput = document.createElement('input');\n            extraTimeInput.type = 'hidden';\n            extraTimeInput.name = 'extra_times[' + eventNo + ']';\n            extraTimeInput.value = value;\n            form.appendChild(extraTimeInput);\n            \n            // 저장 플래그 추가\n            const saveFlag = document.createElement('input');\n            saveFlag.type = 'hidden';\n            saveFlag.name = 'save_extra_times';\n            saveFlag.value = '1';\n            form.appendChild(saveFlag);\n            \n            console.log('폼 데이터:', {\n                eventNo: eventNo,\n                value: value,\n                formHTML: form.outerHTML\n            });\n            \n            // 폼을 body에 추가하고 제출\n            document.body.appendChild(form);\n            console.log('폼 제출 전');\n            form.submit();\n        }\n        \n        // 대회 대쉬보드로 푸시하는 함수\n        function pushTimetableToDashboard() {\n            if (!confirm('타임테이블을 대회 대쉬보드에 푸시하시겠습니까?')) {\n                return;\n            }\n            \n            const button = event.target;\n            const originalText = button.innerHTML;\n            button.innerHTML = '⏳ 푸시 중...';\n            button.disabled = true;\n            \n            const formData = new FormData();\n            formData.append('comp_id', '<?= h($comp_id) ?>');\n            \n            fetch('push_timetable.php', {\n                method: 'POST',\n                body: formData\n            })\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    alert('✅ ' + data.message + '\\n\\n' +\n                          '대회명: ' + data.data.competition_title + '\\n' +\n                          '이벤트 수: ' + data.data.events_count + '개\\n' +\n                          '특별 이벤트: ' + data.data.special_events_count + '개\\n' +\n                          '푸시 완료: ' + data.data.pushed_at);\n                    \n                    // 성공 시 버튼 색상 변경\n                    button.style.background = '#10b981';\n                    button.innerHTML = '✅ 푸시 완료';\n                    \n                    // 3초 후 원래 상태로\n                    setTimeout(() => {\n                        button.style.background = '#3b82f6';\n                        button.innerHTML = originalText;\n                        button.disabled = false;\n                    }, 3000);\n                } else {\n                    alert('❌ ' + data.message);\n                    button.innerHTML = originalText;\n                    button.disabled = false;\n                }\n            })\n            .catch(error => {\n                console.error('Error:', error);\n                alert('❌ 네트워크 오류가 발생했습니다.');\n                button.innerHTML = originalText;\n                button.disabled = false;\n            });\n        }\n        \n        // 페이지 로드 시 디버깅 정보 출력\n        window.addEventListener('load', function() {\n            console.log('페이지 로드 완료 - 푸시 기능 추가됨');\n        });\n    </script>\n</head>\n<body>\n<div class=\"ttbox\">\n    <a href=\"dashboard.php?comp_id=<?= urlencode($comp_id) ?>\" class=\"goto-dash\">&lt; 대시보드로</a>\n    <div style=\"display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;\">\n        <h1><?= h($info['title']) ?> <span style=\"font-size:0.85em;color:#03c75a;\">타임테이블</span></h1>\n        <div style=\"display: flex; gap: 10px;\">\n            <a href=\"export_timetable.php?comp=<?=h($comp_id)?>\" class=\"btn\" style=\"background: #e74c3c; color: white; padding: 8px 16px; text-decoration: none; border-radius: 4px; font-size: 14px;\" target=\"_blank\">\n                📄 PDF 내보내기\n            </a>\n            <a href=\"export_excel.php?comp=<?=h($comp_id)?>\" class=\"btn\" style=\"background: #27ae60; color: white; padding: 8px 16px; text-decoration: none; border-radius: 4px; font-size: 14px;\">\n                📊 엑셀 내보내기\n            </a>\n            <button onclick=\"pushTimetableToDashboard()\" class=\"btn\" style=\"background: #3b82f6; color: white; padding: 8px 16px; border: none; border-radius: 4px; font-size: 14px; cursor: pointer;\">\n                🚀 대회 대쉬보드에 푸시\n            </button>\n        </div>\n    </div>\n    <div class=\"compinfo\" style=\"color:#bbb; margin-bottom:1.2em;\">\n        <b>일자:</b> <?= h($info['date']) ?> &nbsp; <b>장소:</b> <?= h($info['place']) ?> &nbsp; <b>주최/주관:</b> <?= h($info['host']) ?>\n    </div>\n    <form method=\"post\" class=\"ttform\">\n        <div style=\"margin-bottom: 15px;\">\n            <label>\n                대회 시작 시간: <input type=\"time\" name=\"start_time\" value=\"<?=h($start_time_str)?>\">\n            </label>\n            <label>\n                개회식 시간: <input type=\"time\" name=\"opening_time\" value=\"<?=h($opening_time_str)?>\">\n            </label>\n        </div>\n        \n        <button type=\"submit\">타임테이블 생성</button>\n    </form>\n    \n    \n    <!-- 특별 이벤트 설정 -->\n    <div style=\"margin: 20px 0; padding: 15px; background: #333; border-radius: 5px;\">\n        <h3 style=\"color: #03C75A; margin: 0 0 15px 0;\">특별 이벤트 설정</h3>\n        <form method=\"post\" id=\"special-event-form\">\n            <div style=\"margin-bottom: 15px;\">\n                <div style=\"display: flex; gap: 10px; align-items: center; margin-bottom: 10px;\">\n                    <input type=\"text\" name=\"special_event_name\" placeholder=\"이벤트명 (예: 브레이크 타임, 시상식 등)\" style=\"flex: 1; padding: 8px;\">\n                    <span>순번</span>\n                    <input type=\"number\" name=\"special_event_after\" value=\"1\" min=\"1\" style=\"width: 80px; padding: 8px;\">\n                    <span>후</span>\n                    <input type=\"number\" name=\"special_event_duration\" value=\"10\" min=\"1\" style=\"width: 80px; padding: 8px;\">\n                    <span>분</span>\n                    <button type=\"submit\" name=\"add_special_event\" style=\"background: #03C75A; color: white; border: none; padding: 8px 15px; border-radius: 3px;\">추가</button>\n                </div>\n            </div>\n        </form>\n        \n        <!-- 저장된 특별 이벤트 목록 -->\n        <?php if (!empty($special_events)): ?>\n            <div style=\"margin-top: 15px;\">\n                <h4 style=\"color: #90EE90; margin: 0 0 10px 0;\">등록된 특별 이벤트</h4>\n                <?php foreach ($special_events as $id => $event): ?>\n                    <div style=\"display: flex; align-items: center; gap: 10px; padding: 8px; background: #444; border-radius: 3px; margin-bottom: 5px;\">\n                        <span style=\"color: #eee;\"><?=h($event['name'])?></span>\n                        <span style=\"color: #ccc;\">순번 <?=h($event['after_event'])?> 후</span>\n                        <span style=\"color: #ccc;\"><?=h($event['duration'])?>분</span>\n                        <form method=\"post\" style=\"margin: 0;\">\n                            <input type=\"hidden\" name=\"event_id\" value=\"<?=h($id)?>\">\n                            <button type=\"submit\" name=\"delete_special_event\" style=\"background: #ff4444; color: white; border: none; padding: 5px 10px; border-radius: 3px; font-size: 12px;\">삭제</button>\n                        </form>\n                    </div>\n                <?php endforeach; ?>\n            </div>\n        <?php endif; ?>\n    </div>\n    <?php if($warning): ?>\n        <div class=\"warn\"><?=h($warning)?></div>\n    <?php endif; ?>\n    <table>\n        <tr>\n            <th>Ext. Time</th>\n            <th>Start</th>\n            <th>End</th>\n            <th>No.</th>\n            <th>Detail No.</th>\n            <th>Description</th>\n            <th>Round</th>\n            <th colspan=\"6\">Dances</th>\n        </tr>\n        <?php foreach ($rows as $row): ?>\n            <?php if (!empty($row['is_opening'])): ?>\n                <tr class=\"opening-row\">\n                    <td></td>\n                    <td><?=to_hm($row['start'])?></td>\n                    <td><?=to_hm($row['end'])?></td>\n                    <td colspan=\"10\"><b>개회식</b></td>\n                </tr>\n            <?php elseif (!empty($row['is_special'])): ?>\n                <tr style=\"background: #2a4d3a; color: #90EE90;\">\n                    <td></td>\n                    <td><?=to_hm($row['start'])?></td>\n                    <td><?=to_hm($row['end'])?></td>\n                    <td colspan=\"10\"><b><?=h($row['special_type'])?></b></td>\n                </tr>\n            <?php else: ?>\n                <?php if (isset($row['group_events']) && count($row['group_events']) > 1): ?>\n                    <!-- 멀티이벤트: 첫 번째 행 -->\n                    <tr>\n                        <td rowspan=\"<?=count($row['group_events'])?>\">\n                            <input type=\"number\" id=\"extra_<?=h($row['no'])?>\" value=\"<?=h($row['extra_time'])?>\" min=\"0\" style=\"width: 50px; padding: 2px; text-align: center;\">\n                            <button type=\"button\" onclick=\"saveExtraTime('<?=h($row['no'])?>', document.getElementById('extra_<?=h($row['no'])?>').value)\" style=\"padding: 2px 5px; font-size: 10px;\">저장</button>\n                        </td>\n                        <td rowspan=\"<?=count($row['group_events'])?>\"><?=to_hm($row['start'])?></td>\n                        <td rowspan=\"<?=count($row['group_events'])?>\"><?=to_hm($row['end'])?></td>\n                        <td rowspan=\"<?=count($row['group_events'])?>\"><?=h($row['no'])?></td>\n                        <td><?=h($row['group_events'][0]['detail_no'])?></td>\n                        <td><?=h($row['group_events'][0]['desc'])?></td>\n                        <td rowspan=\"<?=count($row['group_events'])?>\"><?=h($row['round'])?></td>\n                        <?php for($i=0;$i<6;$i++): ?>\n                            <td><?=isset($row['group_events'][0]['dances'][$i]) ? h($row['group_events'][0]['dances'][$i]) : ''?></td>\n                        <?php endfor; ?>\n                    </tr>\n                    <!-- 멀티이벤트: 나머지 행들 -->\n                    <?php for($j=1; $j<count($row['group_events']); $j++): ?>\n                        <tr>\n                            <td><?=h($row['group_events'][$j]['detail_no'])?></td>\n                            <td><?=h($row['group_events'][$j]['desc'])?></td>\n                            <?php for($i=0;$i<6;$i++): ?>\n                                <td><?=isset($row['group_events'][$j]['dances'][$i]) ? h($row['group_events'][$j]['dances'][$i]) : ''?></td>\n                            <?php endfor; ?>\n                        </tr>\n                    <?php endfor; ?>\n                <?php else: ?>\n                    <!-- 단일 이벤트 -->\n                    <tr>\n                        <td>\n                            <input type=\"number\" id=\"extra_<?=h($row['no'])?>\" value=\"<?=h($row['extra_time'])?>\" min=\"0\" style=\"width: 50px; padding: 2px; text-align: center;\">\n                            <button type=\"button\" onclick=\"saveExtraTime('<?=h($row['no'])?>', document.getElementById('extra_<?=h($row['no'])?>').value)\" style=\"padding: 2px 5px; font-size: 10px;\">저장</button>\n                        </td>\n                        <td><?=to_hm($row['start'])?></td>\n                        <td><?=to_hm($row['end'])?></td>\n                        <td><?=h($row['no'])?></td>\n                        <td><?=h($row['detail_no'])?></td>\n                        <td><?=h($row['desc'])?></td>\n                        <td><?=h($row['round'])?></td>\n                        <?php for($i=0;$i<6;$i++): ?>\n                            <td><?=isset($row['dances'][$i]) ? h($row['dances'][$i]) : ''?></td>\n                        <?php endfor; ?>\n                    </tr>\n                <?php endif; ?>\n            <?php endif; ?>\n        <?php endforeach; ?>\n    </table>\n</div>\n</body>\n</html>","size_bytes":27615},"comp/manage_users.php":{"content":"<?php\nsession_start();\nrequire_once 'auth.php';\n\n// 오너 권한만 접근 가능\nrequirePermission('manage_users');\n\n$user = $_SESSION['user'];\n$message = '';\n$error = '';\n\n// 선임관리자 추가 처리\nif ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['add_senior'])) {\n    $username = trim($_POST['username'] ?? '');\n    $password = trim($_POST['password'] ?? '');\n    \n    if ($username && $password) {\n        $users = loadUsers();\n        \n        // 중복 확인\n        $exists = false;\n        foreach ($users as $u) {\n            if ($u['username'] === $username) {\n                $exists = true;\n                break;\n            }\n        }\n        \n        if (!$exists) {\n            $users[] = [\n                'username' => $username,\n                'password' => $password,\n                'role' => 'senior_admin',\n                'created_by' => $user['username'],\n                'created_at' => date('Y-m-d H:i:s')\n            ];\n            saveUsers($users);\n            $message = \"선임관리자 '{$username}'가 추가되었습니다.\";\n        } else {\n            $error = \"이미 존재하는 사용자명입니다.\";\n        }\n    } else {\n        $error = \"사용자명과 비밀번호를 입력해주세요.\";\n    }\n}\n\n// 사용자 삭제 처리\nif (isset($_GET['delete']) && $_GET['delete']) {\n    $delete_username = $_GET['delete'];\n    $users = loadUsers();\n    $users = array_filter($users, function($u) use ($delete_username) {\n        return $u['username'] !== $delete_username;\n    });\n    saveUsers($users);\n    $message = \"사용자 '{$delete_username}'가 삭제되었습니다.\";\n}\n\n$users = loadUsers();\n$senior_admins = array_filter($users, function($u) {\n    return $u['role'] === 'senior_admin';\n});\n\nfunction h($s) { return htmlspecialchars($s ?? ''); }\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>사용자 관리 | danceoffice.net</title>\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded\" rel=\"stylesheet\" />\n    <style>\n        body {\n            background: #181B20;\n            min-height: 100vh;\n            font-size: 14px;\n            line-height: 1.5;\n            margin: 0;\n            padding: 0;\n            font-family: 'Noto Sans KR', sans-serif;\n        }\n        \n        .container {\n            max-width: 1000px;\n            margin: 0 auto;\n            padding: 20px;\n        }\n        \n        .header {\n            background: linear-gradient(135deg, #1a1d21 0%, #181B20 100%);\n            border-radius: 15px;\n            padding: 25px;\n            margin-bottom: 20px;\n            box-shadow: 0 8px 25px rgba(3, 199, 90, 0.15);\n            border: 2px solid #03C75A;\n            text-align: center;\n        }\n        \n        .header h1 {\n            color: #03C75A;\n            font-size: 24px;\n            margin: 0 0 10px 0;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 10px;\n        }\n        \n        .header p {\n            color: #00BFAE;\n            font-size: 16px;\n            margin: 0;\n        }\n        \n        .nav {\n            display: flex;\n            gap: 15px;\n            margin-top: 20px;\n            justify-content: center;\n        }\n        \n        .nav a {\n            color: white;\n            text-decoration: none;\n            font-weight: 600;\n            font-size: 14px;\n            padding: 10px 20px;\n            border-radius: 20px;\n            background: rgba(3, 199, 90, 0.1);\n            backdrop-filter: blur(10px);\n            transition: all 0.3s ease;\n            display: flex;\n            align-items: center;\n            gap: 5px;\n        }\n        \n        .nav a:hover {\n            background: #03C75A;\n            color: #222;\n            transform: translateY(-2px);\n        }\n        \n        .card {\n            background: #222;\n            border-radius: 15px;\n            padding: 25px;\n            margin-bottom: 20px;\n            box-shadow: 0 8px 25px rgba(3, 199, 90, 0.08);\n            border: 1px solid #31343a;\n        }\n        \n        .card h3 {\n            color: #03C75A;\n            font-size: 18px;\n            margin: 0 0 20px 0;\n            display: flex;\n            align-items: center;\n            gap: 10px;\n        }\n        \n        .form-group {\n            margin-bottom: 15px;\n        }\n        \n        .form-group label {\n            display: block;\n            color: #F5F7FA;\n            font-size: 13px;\n            margin-bottom: 5px;\n            font-weight: 600;\n        }\n        \n        .form-group input {\n            width: 100%;\n            padding: 10px;\n            border: 1px solid #31343a;\n            border-radius: 8px;\n            background: #181B20;\n            color: #F5F7FA;\n            font-size: 13px;\n            box-sizing: border-box;\n        }\n        \n        .btn {\n            background: linear-gradient(90deg, #03C75A 70%, #00BFAE 100%);\n            color: #222;\n            border: none;\n            padding: 10px 20px;\n            border-radius: 20px;\n            font-weight: 600;\n            font-size: 13px;\n            cursor: pointer;\n            transition: all 0.3s ease;\n        }\n        \n        .btn:hover {\n            background: linear-gradient(90deg, #00BFAE 60%, #03C75A 100%);\n            color: white;\n            transform: translateY(-2px);\n        }\n        \n        .btn-danger {\n            background: linear-gradient(90deg, #ff4444 70%, #cc0000 100%);\n            color: white;\n        }\n        \n        .btn-danger:hover {\n            background: linear-gradient(90deg, #cc0000 60%, #ff4444 100%);\n        }\n        \n        .message {\n            color: #03C75A;\n            background: rgba(3, 199, 90, 0.1);\n            padding: 10px;\n            border-radius: 8px;\n            margin-bottom: 15px;\n            font-size: 13px;\n        }\n        \n        .error {\n            color: #ff4444;\n            background: rgba(255, 68, 68, 0.1);\n            padding: 10px;\n            border-radius: 8px;\n            margin-bottom: 15px;\n            font-size: 13px;\n        }\n        \n        .users-table {\n            width: 100%;\n            border-collapse: collapse;\n            background: #181B20;\n            border-radius: 8px;\n            overflow: hidden;\n        }\n        \n        .users-table th {\n            background: #1E2126;\n            color: #03C75A;\n            font-weight: 600;\n            font-size: 13px;\n            padding: 15px 10px;\n            text-align: center;\n            border-bottom: 1px solid #31343a;\n        }\n        \n        .users-table td {\n            color: #F5F7FA;\n            font-size: 13px;\n            padding: 15px 10px;\n            text-align: center;\n            border-bottom: 1px solid #31343a;\n        }\n        \n        .users-table tr:last-child td {\n            border-bottom: none;\n        }\n        \n        .role-badge {\n            display: inline-block;\n            padding: 4px 8px;\n            border-radius: 4px;\n            font-size: 11px;\n            font-weight: 600;\n        }\n        \n        .role-owner {\n            background: #ffd700;\n            color: #000;\n        }\n        \n        .role-senior_admin {\n            background: #03C75A;\n            color: #222;\n        }\n        \n        .role-admin {\n            background: #17a2b8;\n            color: white;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <header class=\"header\">\n            <h1>\n                <span class=\"material-symbols-rounded\">group</span>\n                사용자 관리\n            </h1>\n            <p>선임관리자 추가 및 관리</p>\n            <nav class=\"nav\">\n                <a href=\"index.php\">\n                    <span class=\"material-symbols-rounded\">sports</span>\n                    대회 관리\n                </a>\n                <a href=\"senior_dashboard.php\">\n                    <span class=\"material-symbols-rounded\">admin_panel_settings</span>\n                    선임관리자 대시보드\n                </a>\n                <a href=\"logout.php\">\n                    <span class=\"material-symbols-rounded\">logout</span>\n                    로그아웃\n                </a>\n            </nav>\n        </header>\n        \n        <div class=\"card\">\n            <h3>\n                <span class=\"material-symbols-rounded\">person_add</span>\n                선임관리자 추가\n            </h3>\n            <?php if ($message): ?>\n                <div class=\"message\"><?= h($message) ?></div>\n            <?php endif; ?>\n            <?php if ($error): ?>\n                <div class=\"error\"><?= h($error) ?></div>\n            <?php endif; ?>\n            <form method=\"post\">\n                <div class=\"form-group\">\n                    <label for=\"username\">사용자명</label>\n                    <input type=\"text\" id=\"username\" name=\"username\" placeholder=\"사용자명을 입력하세요\" required>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"password\">비밀번호</label>\n                    <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"비밀번호를 입력하세요\" required>\n                </div>\n                <button type=\"submit\" name=\"add_senior\" class=\"btn\">\n                    <span class=\"material-symbols-rounded\">add</span>\n                    선임관리자 추가\n                </button>\n            </form>\n        </div>\n        \n        <div class=\"card\">\n            <h3>\n                <span class=\"material-symbols-rounded\">group</span>\n                등록된 사용자 목록\n            </h3>\n            <table class=\"users-table\">\n                <thead>\n                    <tr>\n                        <th>사용자명</th>\n                        <th>역할</th>\n                        <th>생성자</th>\n                        <th>생성일</th>\n                        <th>관리</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <?php foreach ($users as $u): ?>\n                        <tr>\n                            <td><?= h($u['username']) ?></td>\n                            <td>\n                                <span class=\"role-badge role-<?= $u['role'] ?>\">\n                                    <?= getRoleDisplayName($u['role']) ?>\n                                </span>\n                            </td>\n                            <td><?= h($u['created_by']) ?></td>\n                            <td><?= h($u['created_at']) ?></td>\n                            <td>\n                                <?php if ($u['role'] !== 'owner' && $u['username'] !== $user['username']): ?>\n                                    <a href=\"?delete=<?= urlencode($u['username']) ?>\" \n                                       class=\"btn btn-danger\" \n                                       onclick=\"return confirm('정말 삭제하시겠습니까?')\">\n                                        <span class=\"material-symbols-rounded\">delete</span>\n                                        삭제\n                                    </a>\n                                <?php else: ?>\n                                    <span style=\"color: #8A8D93; font-size: 12px;\">-</span>\n                                <?php endif; ?>\n                            </td>\n                        </tr>\n                    <?php endforeach; ?>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</body>\n</html>\n\n\n\n\n\n\n","size_bytes":11655},"comp/monitor_control.php":{"content":"<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>모니터링 제어</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            max-width: 800px;\n            margin: 50px auto;\n            padding: 20px;\n            background: #f5f5f5;\n        }\n        .container {\n            background: white;\n            padding: 30px;\n            border-radius: 10px;\n            box-shadow: 0 0 20px rgba(0,0,0,0.1);\n        }\n        h1 {\n            color: #333;\n            text-align: center;\n            margin-bottom: 30px;\n        }\n        .btn {\n            background: #007bff;\n            color: white;\n            border: none;\n            padding: 15px 30px;\n            border-radius: 5px;\n            cursor: pointer;\n            font-size: 16px;\n            margin: 10px;\n            transition: background 0.3s;\n        }\n        .btn:hover {\n            background: #0056b3;\n        }\n        .btn-success {\n            background: #28a745;\n        }\n        .btn-success:hover {\n            background: #1e7e34;\n        }\n        .btn-danger {\n            background: #dc3545;\n        }\n        .btn-danger:hover {\n            background: #c82333;\n        }\n        .status {\n            margin: 20px 0;\n            padding: 15px;\n            border-radius: 5px;\n            font-weight: bold;\n        }\n        .status.online {\n            background: #d4edda;\n            color: #155724;\n            border: 1px solid #c3e6cb;\n        }\n        .status.offline {\n            background: #f8d7da;\n            color: #721c24;\n            border: 1px solid #f5c6cb;\n        }\n        .log-container {\n            background: #f8f9fa;\n            border: 1px solid #dee2e6;\n            border-radius: 5px;\n            padding: 15px;\n            margin-top: 20px;\n            max-height: 300px;\n            overflow-y: auto;\n            font-family: monospace;\n            font-size: 12px;\n        }\n        .controls {\n            text-align: center;\n            margin: 20px 0;\n        }\n        .info {\n            background: #d1ecf1;\n            color: #0c5460;\n            padding: 15px;\n            border-radius: 5px;\n            margin: 20px 0;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <h1>🔍 댄스스코어 결과 모니터링 제어</h1>\n        \n        <div class=\"info\">\n            <strong>사용법:</strong><br>\n            1. \"모니터링 시작\" 버튼을 클릭하여 Y:/results 폴더를 실시간 모니터링합니다.<br>\n            2. \"대시보드 열기\" 버튼으로 모니터링 대시보드를 엽니다.<br>\n            3. \"테스트 페이지\" 버튼으로 현재 파일들을 테스트합니다.<br>\n            4. \"상태 확인\" 버튼으로 현재 모니터링 상태를 확인합니다.\n        </div>\n        \n        <div class=\"controls\">\n            <button class=\"btn btn-success\" onclick=\"startMonitoring()\">▶️ 모니터링 시작</button>\n            <button class=\"btn\" onclick=\"openDashboard()\">📊 대시보드 열기</button>\n            <button class=\"btn\" onclick=\"openTestPage()\">🧪 테스트 페이지</button>\n            <button class=\"btn btn-primary\" onclick=\"openEventUpload()\">📁 이벤트 업로드</button>\n            <button class=\"btn btn-info\" onclick=\"openCompetitionSettings()\">🏆 대회 설정</button>\n            <button class=\"btn\" onclick=\"openEventControl()\">🎯 이벤트 제어</button>\n            <button class=\"btn\" onclick=\"openEventMonitor()\">🖥️ 이벤트 모니터링</button>\n            <button class=\"btn\" onclick=\"openEventMonitorV2()\">📺 그룹 모니터링</button>\n            <button class=\"btn\" onclick=\"openDebugEvents()\">🔍 이벤트 디버깅</button>\n            <button class=\"btn\" onclick=\"checkStatus()\">🔍 상태 확인</button>\n            <button class=\"btn btn-danger\" onclick=\"stopMonitoring()\">⏹️ 모니터링 중지</button>\n        </div>\n        \n        <div id=\"status\" class=\"status offline\">\n            모니터링 상태를 확인하세요.\n        </div>\n        \n        <div class=\"log-container\" id=\"logContainer\">\n            로그가 여기에 표시됩니다...\n        </div>\n    </div>\n\n    <script>\n        function startMonitoring() {\n            fetch('result_watcher.php?action=start')\n                .then(response => response.json())\n                .then(data => {\n                    if (data.success) {\n                        updateStatus('모니터링이 시작되었습니다.', 'online');\n                        addLog('모니터링 시작됨');\n                    } else {\n                        updateStatus('모니터링 시작 실패: ' + data.message, 'offline');\n                        addLog('모니터링 시작 실패: ' + data.message);\n                    }\n                })\n                .catch(error => {\n                    updateStatus('오류 발생: ' + error.message, 'offline');\n                    addLog('오류: ' + error.message);\n                });\n        }\n        \n        function stopMonitoring() {\n            fetch('result_watcher.php?action=stop')\n                .then(response => response.json())\n                .then(data => {\n                    if (data.success) {\n                        updateStatus('모니터링이 중지되었습니다.', 'offline');\n                        addLog('모니터링 중지됨');\n                    } else {\n                        updateStatus('모니터링 중지 실패: ' + data.message, 'offline');\n                        addLog('모니터링 중지 실패: ' + data.message);\n                    }\n                })\n                .catch(error => {\n                    updateStatus('오류 발생: ' + error.message, 'offline');\n                    addLog('오류: ' + error.message);\n                });\n        }\n        \n        function checkStatus() {\n            fetch('result_watcher.php?action=status')\n                .then(response => response.json())\n                .then(data => {\n                    if (data.success) {\n                        updateStatus('모니터링 상태 확인됨', 'online');\n                        if (data.logs) {\n                            displayLogs(data.logs);\n                        }\n                    } else {\n                        updateStatus('상태 확인 실패: ' + data.message, 'offline');\n                        addLog('상태 확인 실패: ' + data.message);\n                    }\n                })\n                .catch(error => {\n                    updateStatus('오류 발생: ' + error.message, 'offline');\n                    addLog('오류: ' + error.message);\n                });\n        }\n        \n        function openDashboard() {\n            window.open('result_dashboard.php', '_blank');\n        }\n        \n        function openTestPage() {\n            window.open('test_results.php', '_blank');\n        }\n        \n        function openFullscreenMonitor() {\n            window.open('fullscreen_monitor.php', '_blank');\n        }\n        \n        function openSimpleFullscreen() {\n            window.open('simple_fullscreen.php', '_blank');\n        }\n        \n        function openEventControl() {\n            window.open('event_control.php', '_blank');\n        }\n        \n        function openSmartFullscreen() {\n            window.open('smart_fullscreen.php', '_blank');\n        }\n        \n        function openEventUpload() {\n            window.open('event_upload.php', '_blank');\n        }\n        \n        function openEventMonitor() {\n            window.open('event_monitor_v2.php', '_blank');\n        }\n        \n        function openCompetitionSettings() {\n            window.open('competition_settings.php', '_blank');\n        }\n        \n        function openEventMonitorV2() {\n            window.open('event_monitor_v2.php', '_blank');\n        }\n        \n        function openDebugEvents() {\n            window.open('debug_events.php', '_blank');\n        }\n        \n        function updateStatus(message, type) {\n            const statusDiv = document.getElementById('status');\n            statusDiv.textContent = message;\n            statusDiv.className = 'status ' + type;\n        }\n        \n        function addLog(message) {\n            const logContainer = document.getElementById('logContainer');\n            const timestamp = new Date().toLocaleTimeString();\n            const logEntry = document.createElement('div');\n            logEntry.textContent = `[${timestamp}] ${message}`;\n            logContainer.appendChild(logEntry);\n            logContainer.scrollTop = logContainer.scrollHeight;\n        }\n        \n        function displayLogs(logs) {\n            const logContainer = document.getElementById('logContainer');\n            logContainer.innerHTML = '';\n            logs.forEach(log => {\n                if (log.trim()) {\n                    const logEntry = document.createElement('div');\n                    logEntry.textContent = log;\n                    logContainer.appendChild(logEntry);\n                }\n            });\n            logContainer.scrollTop = logContainer.scrollHeight;\n        }\n        \n        // 페이지 로드 시 상태 확인\n        window.onload = function() {\n            checkStatus();\n        };\n    </script>\n</body>\n</html>\n","size_bytes":9407},"comp/multievent_scoring.php":{"content":"<?php\nsession_start();\n\n$comp_id = $_GET['comp_id'] ?? '';\n$event_group = $_GET['event_group'] ?? '';\n\n// Remove BOM and normalize\n$comp_id = preg_replace('/\\x{FEFF}/u', '', $comp_id);\n$event_group = preg_replace('/\\x{FEFF}/u', '', $event_group);\n\n// Language setting\n$lang = $_GET['lang'] ?? 'ko';\nif (!in_array($lang, ['ko', 'en', 'zh', 'ja'])) {\n    $lang = 'ko';\n}\n\n// Language texts\n$texts = [\n    'ko' => [\n        'title' => '멀티이벤트 채점 시스템',\n        'judge_info' => '심사위원',\n        'event_info' => '이벤트 정보',\n        'round' => '라운드',\n        'dances' => '종목',\n        'players' => '출전 선수',\n        'submit' => '제출',\n        'no_data' => '이벤트 데이터를 찾을 수 없습니다.',\n        'invalid_data' => '잘못된 대회 ID 또는 이벤트 그룹입니다.'\n    ],\n    'en' => [\n        'title' => 'Multi-Event Scoring System',\n        'judge_info' => 'Judge',\n        'event_info' => 'Event Information',\n        'round' => 'Round',\n        'dances' => 'Dances',\n        'players' => 'Competitors',\n        'submit' => 'Submit',\n        'no_data' => 'Event data not found.',\n        'invalid_data' => 'Invalid competition ID or event group.'\n    ]\n];\n\n$t = $texts[$lang];\n\n// Check if judge is logged in\nif (!isset($_SESSION['scoring_logged_in']) || !$_SESSION['scoring_logged_in'] || $_SESSION['scoring_comp_id'] !== $comp_id) {\n    header(\"Location: scoring_login.php?comp_id=\" . urlencode($comp_id) . \"&lang=\" . urlencode($lang));\n    exit;\n}\n\nif (!$comp_id || !$event_group) {\n    echo \"<h1>\" . $t['invalid_data'] . \"</h1>\";\n    exit;\n}\n\n// Load event data\n$data_dir = __DIR__ . \"/data/$comp_id\";\n$runorder_file = \"$data_dir/RunOrder_Tablet.txt\";\n$dance_name_file = \"$data_dir/DanceName.txt\";\n\n$events = [];\n$dance_mapping = [];\n\n// Load dance name mapping\nif (file_exists($dance_name_file)) {\n    $lines = file($dance_name_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    foreach ($lines as $line) {\n        $line = preg_replace('/\\x{FEFF}/u', '', $line);\n        $cols = array_map('trim', explode(',', $line));\n        if (count($cols) >= 3 && !empty($cols[1]) && is_numeric($cols[0])) {\n            $dance_mapping[$cols[0]] = $cols[1];\n        }\n    }\n}\n\n// Load events from RunOrder_Tablet.txt\nif (file_exists($runorder_file)) {\n    $lines = file($runorder_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    foreach ($lines as $line) {\n        $line = preg_replace('/\\x{FEFF}/u', '', $line);\n        $line = str_replace([\"\\xEF\\xBB\\xBF\", \"\\xFEFF\", \"\\uFEFF\"], '', $line);\n        $line = preg_replace('/[\\x00-\\x1F\\x7F-\\x9F]/', '', $line);\n        \n        if (preg_match('/^bom/', $line)) continue;\n        $cols = array_map('trim', explode(',', $line));\n        \n        // Check if it's a competition event (has dances)\n        $has_dance = false;\n        for ($i = 6; $i <= 10; $i++) {\n            if (isset($cols[$i]) && $cols[$i] !== '') {\n                $has_dance = true;\n                break;\n            }\n        }\n        \n        if ($has_dance) {\n            $base_no_raw = $cols[0] ?? '';\n            $detail_no = trim($cols[13] ?? '');\n            $event_no = !empty($detail_no) ? $detail_no : $base_no_raw; // use detail_no when present\n            $event_base = preg_replace('/\\D+/', '', $base_no_raw); // numeric base number for grouping\n            \n            $event_data = [\n                'no' => $event_no,\n                'base_no' => $event_base,\n                'name' => $cols[1],\n                'round_type' => $cols[2],\n                'round_num' => $cols[3],\n                'recall_count' => intval($cols[4] ?? 0),\n                'detail_no' => $detail_no,\n                'dances' => []\n            ];\n            \n            for ($i = 6; $i <= 10; $i++) {\n                if (!empty($cols[$i])) $event_data['dances'][] = $cols[$i];\n            }\n            \n            $events[] = $event_data;\n        }\n    }\n}\n\n// Filter events by group\n$filtered_events = [];\nif ($event_group) {\n    // Find events that belong to the same group (same base event number)\n    $base_event_no = $event_group; // event_group is already the base number like \"1\"\n    foreach ($events as $event) {\n        if ($event['base_no'] === $base_event_no) {\n            $filtered_events[] = $event;\n        }\n    }\n    // Debug: log filtered events\n    error_log(\"Event group: $event_group, Filtered events: \" . print_r(array_map(function($e) { return $e['no'] . ' (' . $e['name'] . ')'; }, $filtered_events), true));\n} else {\n    $filtered_events = $events;\n}\n\n$event_count = count($filtered_events);\n\n// Load existing scores for current judge\n$judge_id = $_SESSION['scoring_judge_id'] ?? '';\n$existing_scores = [];\n\nif ($judge_id) {\n    foreach ($filtered_events as $event) {\n        $event_no = $event['no'];\n        foreach ($event['dances'] as $dance) {\n            $adj_file = \"$data_dir/{$event_no}_{$dance}_{$judge_id}.adj\";\n            error_log(\"Checking adj file: $adj_file (exists: \" . (file_exists($adj_file) ? 'yes' : 'no') . \")\");\n            \n            if (file_exists($adj_file)) {\n                $lines = file($adj_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n                $rankings = [];\n                \n                foreach ($lines as $line) {\n                    $line = trim($line);\n                    if (empty($line)) continue;\n                    \n                    if (strpos($line, ',') !== false) {\n                        // Final format: player,rank\n                        list($player, $rank) = explode(',', $line, 2);\n                        $player = trim($player, '\"');\n                        $rank = intval(trim($rank));\n                        if (is_numeric($player) && $rank > 0) {\n                            $rankings[$player] = $rank;\n                        }\n                    } else {\n                        // Recall format: \"player\" - store as selected (no rank)\n                        $player = trim($line, '\"');\n                        if (is_numeric($player)) {\n                            $rankings[$player] = 'selected'; // Mark as selected for recall\n                        }\n                    }\n                }\n                \n                if (!empty($rankings)) {\n                    if (!isset($existing_scores[$event_no])) {\n                        $existing_scores[$event_no] = [];\n                    }\n                    $existing_scores[$event_no][$dance] = $rankings;\n                    error_log(\"Loaded rankings for {$event_no}_{$dance}: \" . json_encode($rankings));\n                }\n            }\n        }\n    }\n}\n\n// Determine layout class based on event count\n$layout_class = 'multievent-2'; // default\nif ($event_count === 2) {\n    $layout_class = 'multievent-2';\n} elseif ($event_count === 3) {\n    $layout_class = 'multievent-3';\n} elseif ($event_count === 4) {\n    $layout_class = 'multievent-4';\n} elseif ($event_count === 5) {\n    $layout_class = 'multievent-5';\n} elseif ($event_count === 6) {\n    $layout_class = 'multievent-6';\n} elseif ($event_count > 6) {\n    $layout_class = 'multievent-6'; // fallback to 6-event layout\n}\n\nfunction h($s) { return htmlspecialchars($s ?? ''); }\n\n// Function to convert dance numbers to full names\nfunction getDanceNames($dances, $dance_mapping) {\n    $result = [];\n    foreach ($dances as $dance) {\n        $dance = trim($dance);\n        if (isset($dance_mapping[$dance])) {\n            $result[] = $dance_mapping[$dance];\n        } else {\n            $result[] = $dance;\n        }\n    }\n    return $result;\n}\n?>\n<!DOCTYPE html>\n<html lang=\"<?=h($lang)?>\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title><?=h($t['title'])?> | <?=h($comp_id)?></title>\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\n    <style>\n        body { \n            background: #1a1a1a; \n            font-family: sans-serif; \n            margin: 0; \n            padding: 10px;\n        }\n        \n        .multievent-container {\n            max-width: 100%;\n            margin: 0 auto;\n            background: #fff;\n            border-radius: 12px;\n            padding: 20px;\n            box-shadow: 0 4px 20px rgba(0,0,0,0.3);\n        }\n        \n        .header {\n            text-align: center;\n            margin-bottom: 30px;\n            padding: 20px;\n            background: linear-gradient(135deg, #003399, #0066cc);\n            color: white;\n            border-radius: 8px;\n        }\n        \n        .header h1 {\n            margin: 0 0 10px 0;\n            font-size: 28px;\n            font-weight: bold;\n        }\n        \n        .judge-info {\n            font-size: 16px;\n            opacity: 0.9;\n        }\n        \n        /* Multi-event Layouts */\n        .multievent-2 {\n            display: grid;\n            grid-template-columns: 1fr;\n            grid-template-rows: 1fr 1fr;\n            gap: 20px;\n            min-height: 80vh;\n        }\n        \n        .multievent-3 {\n            display: grid;\n            grid-template-columns: 1fr 1fr;\n            grid-template-rows: 1fr 1fr;\n            gap: 20px;\n            min-height: 80vh;\n        }\n        \n        .multievent-3 .event-block:nth-child(3) {\n            grid-column: 1 / -1;\n        }\n        \n        .multievent-4 {\n            display: grid;\n            grid-template-columns: 1fr 1fr;\n            grid-template-rows: 1fr 1fr;\n            gap: 20px;\n            min-height: 80vh;\n        }\n        \n        .multievent-5 {\n            display: grid;\n            grid-template-columns: 1fr 1fr;\n            grid-template-rows: 1fr 1fr 1fr;\n            gap: 20px;\n            min-height: 80vh;\n        }\n        \n        .multievent-5 .event-block:nth-child(5) {\n            grid-column: 1 / -1;\n        }\n        \n        .multievent-6 {\n            display: grid;\n            grid-template-columns: 1fr 1fr;\n            grid-template-rows: 1fr 1fr 1fr;\n            gap: 20px;\n            min-height: 80vh;\n        }\n        \n        .event-block {\n            background: #f8f9fa;\n            border: 3px solid #003399;\n            border-radius: 12px;\n            padding: 20px;\n            display: flex;\n            flex-direction: column;\n            position: relative;\n            transition: all 0.3s ease;\n            min-height: 200px;\n        }\n        \n        .event-block:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 8px 25px rgba(0,51,153,0.2);\n        }\n        \n        .event-header {\n            background: #003399;\n            color: white;\n            padding: 15px;\n            border-radius: 8px;\n            margin-bottom: 20px;\n            text-align: left;\n        }\n        .event-title-row { display:flex; align-items:center; gap:10px; justify-content:flex-start; }\n        .event-number-badge {\n            background: #ff6b35;\n            color: white;\n            min-width: 40px;\n            height: 40px;\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            font-weight: bold;\n            font-size: 16px;\n        }\n        /* Dance tabs per event */\n        .event-dances {\n            display: flex;\n            gap: 8px;\n            flex-wrap: wrap;\n            justify-content: center;\n            margin: 8px 0 14px 0;\n        }\n        .dance-btn {\n            background: #fff;\n            color: #003399;\n            border: 2px solid #003399;\n            border-radius: 16px;\n            padding: 6px 12px;\n            font-size: 12px;\n            font-weight: bold;\n            cursor: pointer;\n            transition: all 0.2s ease;\n        }\n        .dance-btn.active {\n            background: #003399;\n            color: #fff;\n        }\n        \n        .event-title {\n            font-size: 18px;\n            font-weight: bold;\n            margin: 0 0 5px 0;\n        }\n        \n        .event-details {\n            font-size: 14px;\n            opacity: 0.9;\n        }\n        \n        /* Removed top-right number; using left badge in title row */\n        \n        .scoring-area {\n            flex: 1;\n            display: flex;\n            flex-direction: column;\n            gap: 15px;\n        }\n        /* Touch-based final ranking layout */\n        .touch-scoring-container { display: flex; gap: 12px; }\n        .players-column, .ranking-column {\n            background: #fff;\n            border: 2px solid #ddd;\n            border-radius: 8px;\n            padding: 12px;\n            display: flex;\n            flex-direction: column;\n        }\n        .players-column { flex: 1; }\n        .ranking-column { flex: 0 0 190px; max-width: 200px; min-width: 160px; }\n        .players-column h4, .ranking-column h4 { margin: 0 0 8px 0; text-align: center; color:#003399; }\n        .players-list, .ranking-list { display: flex; flex-direction: column; gap: 8px; overflow-y: auto; }\n        .player-item {\n            background: #003399;\n            color: #fff;\n            border-radius: 8px;\n            text-align: center;\n            padding: 12px;\n            font-size: 18px;\n            font-weight: bold;\n            cursor: pointer;\n            user-select: none;\n        }\n        .player-item.selected { background: #28a745; }\n        .player-item.assigned { opacity: .35; background: #6c757d; cursor: not-allowed; }\n        .ranking-slot {\n            background: #f8f9fa;\n            border: 2px solid #ddd;\n            border-radius: 8px;\n            padding: 12px 12px 12px 40px; /* make room for rank label */\n            text-align: center;\n            min-height: 48px;\n            position: relative;\n        }\n        .ranking-slot::before {\n            content: attr(data-rank) \"위\";\n            position: absolute; left: 8px; top: 50%; transform: translateY(-50%);\n            background: #003399; color:#fff; padding: 2px 6px; font-size: 11px; border-radius: 10px;\n        }\n        .ranking-slot.assigned { border-color: #28a745; background: #f6fff6; }\n        .player-assigned { font-size: 20px; font-weight: 900; color: #28a745; }\n\n        /* Recall system styles */\n        .players-grid { \n            display: grid; \n            grid-template-columns: repeat(auto-fill, minmax(60px, 1fr)); \n            gap: 8px; \n            margin-bottom: 15px;\n        }\n        .player-card { \n            background: #fff; \n            border: 2px solid #ddd; \n            border-radius: 8px; \n            padding: 8px 4px; \n            text-align: center; \n            cursor: pointer; \n            transition: all 0.3s ease;\n            min-height: 60px;\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n        }\n        .player-card:hover { \n            border-color: #4CAF50; \n            transform: translateY(-2px); \n            box-shadow: 0 4px 8px rgba(0,0,0,0.15);\n        }\n        .player-card.selected { \n            border-color: #4CAF50; \n            background: linear-gradient(135deg, #e8f5e8, #c8e6c9);\n            transform: scale(1.05);\n            box-shadow: 0 6px 12px rgba(76, 175, 80, 0.3);\n        }\n        .player-number { \n            font-size: 24px; \n            font-weight: 900; \n            color: #333;\n            margin: 0;\n            line-height: 1;\n        }\n        .player-card.selected .player-number {\n            color: #2e7d32;\n        }\n        .recall-checkbox { \n            display: none;\n        }\n\n        .recall-status {\n            text-align: center;\n            padding: 15px;\n            background: #f0f0f0;\n            border-radius: 8px;\n            font-weight: bold;\n            color: #333;\n            font-size: 14px;\n            margin: 10px 0;\n            border: 2px solid #ddd;\n        }\n        \n        .recall-status.complete {\n            background: linear-gradient(135deg, #d4edda, #c3e6cb);\n            color: #155724;\n            border: 3px solid #28a745;\n        }\n        \n        .recall-status.over {\n            background: linear-gradient(135deg, #f8d7da, #f5c6cb);\n            color: #721c24;\n            border: 3px solid #dc3545;\n        }\n        \n        .recall-status .selected-count {\n            font-size: 20px;\n            font-weight: 900;\n        }\n        \n        .submit-section {\n            text-align: center;\n            margin-top: auto;\n        }\n        \n        .submit-btn {\n            background: #4CAF50;\n            color: #fff;\n            border: none;\n            padding: 12px 24px;\n            font-size: 14px;\n            font-weight: bold;\n            border-radius: 8px;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            display: none;\n        }\n        \n        .submit-btn:hover {\n            background: #45a049;\n            transform: translateY(-2px);\n        }\n        \n        .submit-btn:disabled {\n            background: #ccc;\n            cursor: not-allowed;\n            transform: none;\n        }\n        \n        .progress-overview {\n            background: #e7f3ff;\n            border: 2px solid #b3d9ff;\n            border-radius: 8px;\n            padding: 15px;\n            margin-bottom: 20px;\n            text-align: center;\n        }\n        \n        .progress-overview h3 {\n            margin: 0 0 10px 0;\n            color: #003399;\n            font-size: 18px;\n        }\n        \n        .progress-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n            gap: 10px;\n            margin-top: 10px;\n        }\n        \n        .progress-item {\n            background: #fff;\n            border: 2px solid #ddd;\n            border-radius: 6px;\n            padding: 8px;\n            text-align: center;\n            font-size: 12px;\n        }\n        \n        .progress-item.completed {\n            background: #d4edda;\n            border-color: #28a745;\n            color: #155724;\n        }\n        \n        .progress-item.current {\n            background: #fff3cd;\n            border-color: #ffc107;\n            color: #856404;\n        }\n        \n        /* Bottom Navigation */\n        .bottom-nav {\n            position: fixed;\n            bottom: 0;\n            left: 0;\n            right: 0;\n            background: #fff;\n            border-top: 2px solid #e0e0e0;\n            padding: 10px 20px;\n            display: flex;\n            justify-content: space-around;\n            align-items: center;\n            z-index: 1000;\n            box-shadow: 0 -2px 10px rgba(0,0,0,0.1);\n        }\n        \n        .nav-button {\n            background: #f5f5f5;\n            color: #333;\n            border: none;\n            padding: 12px 20px;\n            border-radius: 8px;\n            cursor: pointer;\n            font-size: 14px;\n            font-weight: bold;\n            transition: all 0.3s ease;\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            gap: 4px;\n            min-width: 80px;\n        }\n        \n        .nav-button:hover {\n            background: #e0e0e0;\n            transform: translateY(-2px);\n        }\n        \n        .nav-button.primary {\n            background: #2196F3;\n            color: #fff;\n        }\n        \n        .nav-button.primary:hover {\n            background: #1976D2;\n        }\n        \n        .nav-icon {\n            font-size: 18px;\n        }\n        \n        .nav-text {\n            font-size: 12px;\n        }\n        \n        /* Add bottom padding to body for navigation */\n        body {\n            padding-bottom: 80px;\n        }\n\n        /* Mobile responsive */\n        @media (max-width: 768px) {\n            .multievent-2,\n            .multievent-3,\n            .multievent-4,\n            .multievent-5,\n            .multievent-6 {\n                grid-template-columns: 1fr;\n                grid-template-rows: repeat(auto-fit, minmax(200px, 1fr));\n            }\n            \n            .multievent-3 .event-block:nth-child(3),\n            .multievent-5 .event-block:nth-child(5) {\n                grid-column: 1;\n            }\n            \n            .event-block {\n                min-height: 150px;\n            }\n            \n            .players-grid {\n                grid-template-columns: repeat(auto-fill, minmax(45px, 1fr));\n                gap: 6px;\n            }\n            \n            .player-card {\n                min-height: 45px;\n                padding: 6px 2px;\n            }\n            \n            .player-number {\n                font-size: 18px;\n            }\n        }\n    </style>\n</head>\n<body>\n    <div class=\"multievent-container\">\n        <!-- Header -->\n        <div class=\"header\">\n            <h1><?=h($t['title'])?></h1>\n            <div class=\"judge-info\">\n                #<?=h($_SESSION['scoring_judge_id'])?> <?=h($_SESSION['scoring_judge_name'])?> (<?=h($_SESSION['scoring_judge_country'])?>)\n            </div>\n        </div>\n        \n        <!-- Progress Overview -->\n        <div class=\"progress-overview\">\n            <h3>전체 진행 상황</h3>\n            <div class=\"progress-grid\" id=\"progressGrid\">\n                <!-- Progress items will be populated by JavaScript -->\n            </div>\n        </div>\n        \n        <!-- Multi-Event Layout -->\n        <div class=\"<?=h($layout_class)?>\" id=\"multieventContainer\">\n            <?php foreach ($filtered_events as $index => $event): ?>\n                <?php \n                $dance_names = getDanceNames($event['dances'], $dance_mapping);\n                // Use detail_no (which is already reflected in no) to load player list per sub-event\n                $players_file = \"$data_dir/players_{$event['no']}.txt\";\n                $players = [];\n                \n                // Debug: log player file path\n                error_log(\"Loading players for event {$event['no']}: $players_file (exists: \" . (file_exists($players_file) ? 'yes' : 'no') . \")\");\n                \n                if (file_exists($players_file)) {\n                    $lines = file($players_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n                    foreach ($lines as $line) {\n                        $line = preg_replace('/\\x{FEFF}/u', '', $line);\n                        $line = str_replace([\"\\xEF\\xBB\\xBF\", \"\\xFEFF\", \"\\uFEFF\"], '', $line);\n                        $line = preg_replace('/[\\x00-\\x1F\\x7F-\\x9F]/', '', $line);\n                        $line = trim($line);\n                        if ($line && is_numeric($line)) {\n                            $players[] = $line;\n                        }\n                    }\n                }\n                ?>\n                <div class=\"event-block\" data-event=\"<?=h($event['no'])?>\" data-index=\"<?=$index?>\">\n                    <div class=\"event-header\">\n                        <div class=\"event-title-row\">\n                            <div class=\"event-number-badge\">#<?=h($event['no'])?></div>\n                            <div>\n                                <div class=\"event-title\"><?=h($event['name'])?></div>\n                                <div class=\"event-details\">\n                                    <?php\n                                    // RunOrder_Tablet.txt의 round_type을 직접 사용\n                                    $round_display = $event['round_type'] ?: 'Final';\n                                    \n                                    // 디버그: 라운드 정보 확인\n                                    error_log(\"Event {$event['no']}: round_type='{$event['round_type']}', round_display='{$round_display}'\");\n                                    ?>\n                                    <?=h($round_display)?> | <?=h(implode(', ', $dance_names))?> | <?=count($players)?> couples\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"event-dances\">\n                        <?php foreach ($event['dances'] as $di => $dance_code): $dance_label = isset($dance_mapping[$dance_code]) ? $dance_mapping[$dance_code] : $dance_code; ?>\n                            <button type=\"button\" class=\"dance-btn<?= $di===0 ? ' active' : '' ?>\" data-event=\"<?=h($event['no'])?>\" data-dance=\"<?=h($dance_code)?>\"><?=\n                                h($dance_label)\n                            ?></button>\n                        <?php endforeach; ?>\n                    </div>\n                    \n                    <div class=\"scoring-area\">\n                        <?php \n                        $totalPlayers = count($players);\n                        $is_final = ($round_display === 'Final');\n                        $recall_count = intval($event['recall_count'] ?? 0);\n                        ?>\n                        \n                        <?php if ($is_final): ?>\n                            <!-- Final Round: 등위 입력 방식 -->\n                            <div class=\"touch-scoring-container\">\n                                <div class=\"players-column\">\n                                    <h4>선수</h4>\n                                    <div class=\"players-list\">\n                                        <?php foreach ($players as $player_no): ?>\n                                            <div class=\"player-item\" data-event=\"<?=h($event['no'])?>\" data-player=\"<?=h($player_no)?>\"><?=h($player_no)?></div>\n                                        <?php endforeach; ?>\n                                    </div>\n                                </div>\n                                <div class=\"ranking-column\">\n                                    <h4>순위</h4>\n                                    <div class=\"ranking-list\">\n                                        <?php for ($i=1; $i<= $totalPlayers; $i++): ?>\n                                            <div class=\"ranking-slot\" data-event=\"<?=h($event['no'])?>\" data-rank=\"<?=$i?>\">\n                                                <span class=\"player-assigned\"></span>\n                                            </div>\n                                        <?php endfor; ?>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"recall-status\">\n                                <div>Final 등위 입력</div>\n                                <div class=\"selected-count\">0</div> / <?= $totalPlayers ?>명\n                            </div>\n                            \n                            <div class=\"submit-section\">\n                                <button type=\"button\" \n                                        class=\"submit-btn\" \n                                        data-event=\"<?=h($event['no'])?>\"\n                                        data-total-count=\"<?= $totalPlayers ?>\"\n                                        data-type=\"final\">\n                                    <?=h($event['name'])?> 등위 제출\n                                </button>\n                            </div>\n                        <?php else: ?>\n                            <!-- Preliminary/Semi-Final Round: Recall 체크박스 방식 -->\n                            <div class=\"players-grid\">\n                                <?php foreach ($players as $player_no): ?>\n                                    <div class=\"player-card\" data-event=\"<?=h($event['no'])?>\" data-player=\"<?=h($player_no)?>\" onclick=\"togglePlayerSelection(this)\">\n                                        <div class=\"player-number\"><?=h($player_no)?></div>\n                                        <input type=\"checkbox\" \n                                               class=\"recall-checkbox\"\n                                               data-event=\"<?=h($event['no'])?>\"\n                                               data-player=\"<?=h($player_no)?>\"\n                                               style=\"display: none;\">\n                                    </div>\n                                <?php endforeach; ?>\n                            </div>\n                            \n                            <div class=\"recall-status\">\n                                <div style=\"font-size:20px; margin-bottom:5px;\">📊 Recall 진행 상황</div>\n                                <div style=\"font-size:28px; font-weight:900; color:#2e7d32;\">\n                                    <span class=\"selected-count\">0</span> / <?= $recall_count ?>명\n                                </div>\n                                <div style=\"font-size:14px; margin-top:5px; opacity:0.8;\">\n                                    <?= $recall_count ?>명을 선택하면 전송할 수 있습니다\n                                </div>\n                            </div>\n                            \n                            <div class=\"submit-section\">\n                                <button type=\"button\" \n                                        class=\"submit-btn\" \n                                        data-event=\"<?=h($event['no'])?>\"\n                                        data-recall-count=\"<?= $recall_count ?>\"\n                                        data-type=\"recall\">\n                                    <?=h($event['name'])?> Recall 제출\n                                </button>\n                            </div>\n                        <?php endif; ?>\n                    </div>\n                </div>\n            <?php endforeach; ?>\n        </div>\n    </div>\n\n    <script>\n    document.addEventListener('DOMContentLoaded', function() {\n        initializeMultiEventScoring();\n    });\n    \n    const CURRENT_JUDGE_ID = <?= json_encode($_SESSION['scoring_judge_id'] ?? '') ?>;\n    const ACTIVE_DANCE_BY_EVENT = {};\n    const EXISTING_SCORES = <?= json_encode($existing_scores) ?>;\n\n    const SELECTED_PLAYER_BY_EVENT = {};\n    const RANKINGS_BY_EVENT_AND_DANCE = {}; // { eventNo: { dance: { playerNo: rank } } }\n\n    function initializeMultiEventScoring() {\n        // 입력 상호작용: 등위 입력 포커스/변경 시 스타일 업데이트\n        document.querySelectorAll('.player-item').forEach(item => {\n            item.addEventListener('click', function() {\n                const ev = this.dataset.event;\n                // 이미 배정된 선수면 선택 불가\n                if (this.classList.contains('assigned')) return;\n                // 토글 선택\n                document.querySelectorAll(`.player-item[data-event=\"${ev}\"]`).forEach(it=>it.classList.remove('selected'));\n                this.classList.add('selected');\n                SELECTED_PLAYER_BY_EVENT[ev] = this.dataset.player;\n            });\n        });\n        document.querySelectorAll('.ranking-slot').forEach(slot => {\n            slot.addEventListener('click', function() {\n                const ev = this.dataset.event;\n                const dance = ACTIVE_DANCE_BY_EVENT[ev];\n                const selected = SELECTED_PLAYER_BY_EVENT[ev];\n                if (!dance) { alert('종목을 먼저 선택해주세요.'); return; }\n                if (!selected) {\n                    // 선택된 선수가 없으면 기존 배정을 취소(토글)\n                    if (this.classList.contains('assigned')) {\n                        const current = this.querySelector('.player-assigned').textContent;\n                        unassignPlayer(ev, dance, current, this);\n                        updateEventStatus(ev);\n                        updateProgressOverview();\n                    }\n                    return;\n                }\n                // 이미 이 랭크에 배정된 선수가 있으면 먼저 해제\n                if (this.classList.contains('assigned')) {\n                    const current = this.querySelector('.player-assigned').textContent;\n                    if (current === selected) {\n                        // 같은 선수 재터치시 해제\n                        unassignPlayer(ev, dance, selected, this);\n                        updateEventStatus(ev);\n                        updateProgressOverview();\n                        return;\n                    } else {\n                        unassignPlayer(ev, dance, current, this);\n                    }\n                }\n                assignPlayerToRank(ev, dance, selected, this);\n                updateEventStatus(ev);\n                updateProgressOverview();\n            });\n        });\n        // 댄스 탭 초기화 및 클릭 핸들러 (이벤트별 활성 댄스 설정)\n        document.querySelectorAll('.dance-btn').forEach(btn => {\n            const ev = btn.dataset.event;\n            if (ACTIVE_DANCE_BY_EVENT[ev] === undefined) {\n                ACTIVE_DANCE_BY_EVENT[ev] = btn.dataset.dance;\n            }\n            btn.addEventListener('click', function() {\n                const eventNo = this.dataset.event;\n                const parent = this.parentElement;\n                parent.querySelectorAll('.dance-btn').forEach(b=>b.classList.remove('active'));\n                this.classList.add('active');\n                ACTIVE_DANCE_BY_EVENT[eventNo] = this.dataset.dance;\n                // 선택된 종목 상태로 UI 반영\n                renderRanksForEventDance(eventNo, this.dataset.dance);\n                updateEventStatus(eventNo);\n                updateProgressOverview();\n            });\n        });\n\n        // 제출 버튼 핸들러\n        document.querySelectorAll('.submit-btn').forEach(btn => {\n            btn.addEventListener('click', function() {\n                submitEvent(this.dataset.event);\n            });\n        });\n        \n        // Load existing scores\n        loadExistingScores();\n        \n        updateProgressOverview();\n    }\n    \n    function loadExistingScores() {\n        console.log('Loading existing scores:', EXISTING_SCORES);\n        \n        Object.keys(EXISTING_SCORES).forEach(eventNo => {\n            const eventScores = EXISTING_SCORES[eventNo];\n            Object.keys(eventScores).forEach(dance => {\n                const rankings = eventScores[dance]; // { playerNo: rank }\n                \n                // Initialize RANKINGS_BY_EVENT_AND_DANCE structure\n                if (!RANKINGS_BY_EVENT_AND_DANCE[eventNo]) {\n                    RANKINGS_BY_EVENT_AND_DANCE[eventNo] = {};\n                }\n                if (!RANKINGS_BY_EVENT_AND_DANCE[eventNo][dance]) {\n                    RANKINGS_BY_EVENT_AND_DANCE[eventNo][dance] = {};\n                }\n                \n                // Store the rankings\n                Object.keys(rankings).forEach(playerNo => {\n                    const rank = rankings[playerNo];\n                    RANKINGS_BY_EVENT_AND_DANCE[eventNo][dance][playerNo] = rank;\n                });\n                \n                console.log(`Loaded scores for event ${eventNo}, dance ${dance}:`, rankings);\n            });\n        });\n        \n        // Update UI for all events with their first dance\n        document.querySelectorAll('.event-block').forEach(block => {\n            const eventNo = block.dataset.event;\n            const firstDanceBtn = block.querySelector('.dance-btn');\n            if (firstDanceBtn) {\n                const firstDance = firstDanceBtn.dataset.dance;\n                renderRanksForEventDance(eventNo, firstDance);\n                updateEventStatus(eventNo);\n            }\n        });\n    }\n    \n    function updateEventStatus(eventNo) {\n        const eventBlock = document.querySelector(`[data-event=\"${eventNo}\"]`);\n        const submitBtn = eventBlock.querySelector('.submit-btn');\n        const isRecall = submitBtn.dataset.type === 'recall';\n        const statusDiv = eventBlock.querySelector('.recall-status');\n        \n        if (isRecall) {\n            // Recall 방식: 체크박스 개수 확인\n            const recallCount = parseInt(submitBtn.dataset.recallCount);\n            const checkboxes = eventBlock.querySelectorAll('.recall-checkbox:checked');\n            const selectedCount = checkboxes.length;\n            \n            statusDiv.querySelector('.selected-count').textContent = selectedCount;\n            statusDiv.classList.remove('complete', 'over');\n            \n            if (selectedCount === recallCount) {\n                statusDiv.classList.add('complete');\n                submitBtn.style.display = 'inline-block';\n                submitBtn.disabled = false;\n            } else if (selectedCount > recallCount) {\n                statusDiv.classList.add('over');\n                submitBtn.style.display = 'none';\n                submitBtn.disabled = true;\n            } else {\n                submitBtn.style.display = 'none';\n                submitBtn.disabled = true;\n            }\n        } else {\n            // Final 방식: 순위 개수 확인\n            const totalCount = parseInt(submitBtn.dataset.totalCount);\n            const dance = ACTIVE_DANCE_BY_EVENT[eventNo];\n            const ranks = getCurrentRanks(eventNo, dance);\n            const values = Object.values(ranks);\n            const filled = values.length;\n            const duplicate = (new Set(values)).size !== values.length;\n            \n            statusDiv.querySelector('.selected-count').textContent = filled;\n            statusDiv.classList.remove('complete', 'over');\n            \n            if (filled === totalCount && !duplicate) {\n                statusDiv.classList.add('complete');\n                submitBtn.style.display = 'inline-block';\n                submitBtn.disabled = false;\n            } else {\n                if (duplicate) statusDiv.classList.add('over');\n                submitBtn.style.display = 'none';\n                submitBtn.disabled = true;\n            }\n        }\n    }\n    \n    function updateProgressOverview() {\n        const progressGrid = document.getElementById('progressGrid');\n        const eventBlocks = document.querySelectorAll('.event-block');\n        progressGrid.innerHTML = '';\n        eventBlocks.forEach(block => {\n            const eventNo = block.dataset.event;\n            const inputs = block.querySelectorAll('.rank-input');\n            const totalCount = parseInt(block.querySelector('.submit-btn').dataset.totalCount);\n            let filled = 0;\n            inputs.forEach(inp => { if ((inp.value || '').trim()) filled++; });\n            const item = document.createElement('div');\n            item.className = 'progress-item';\n            if (filled === totalCount) {\n                item.classList.add('completed');\n                item.textContent = `이벤트 ${eventNo} 완료`;\n            } else if (filled > 0) {\n                item.classList.add('current');\n                item.textContent = `이벤트 ${eventNo} ${filled}/${totalCount}`;\n            } else {\n                item.textContent = `이벤트 ${eventNo} 대기`;\n            }\n            progressGrid.appendChild(item);\n        });\n    }\n    \n    function submitEvent(eventNo) {\n        const eventBlock = document.querySelector(`[data-event=\"${eventNo}\"]`);\n        const submitBtn = eventBlock.querySelector('.submit-btn');\n        const submitType = submitBtn.dataset.type;\n        const dance = ACTIVE_DANCE_BY_EVENT[eventNo];\n        \n        if (!dance) { alert('종목을 선택해주세요.'); return; }\n        \n        const formData = new FormData();\n        formData.append('comp_id', '<?=h($comp_id)?>');\n        formData.append('event_no', eventNo);\n        formData.append('dance', dance);\n        \n        if (submitType === 'final') {\n            // Final Round: 등위 제출\n            const totalCount = parseInt(submitBtn.dataset.totalCount);\n            const ranks = getCurrentRanks(eventNo, dance);\n            const values = Object.values(ranks);\n            if (values.length !== totalCount) { alert('모든 순위를 배정해주세요.'); return; }\n            const uniq = new Set(values);\n            if (uniq.size !== values.length) { alert('중복된 순위가 있습니다.'); return; }\n            \n            formData.append('is_final', '1');\n            const adjudicator_marks = {};\n            adjudicator_marks[CURRENT_JUDGE_ID] = ranks;\n            formData.append('adjudicator_marks', JSON.stringify(adjudicator_marks));\n        } else {\n            // Recall Round: 체크박스 제출\n            const recallCount = parseInt(submitBtn.dataset.recallCount);\n            const checkboxes = eventBlock.querySelectorAll('.recall-checkbox:checked');\n            if (checkboxes.length !== recallCount) { \n                alert(`${recallCount}명을 정확히 선택해주세요.`); \n                return; \n            }\n            \n            const selectedPlayers = Array.from(checkboxes).map(cb => cb.dataset.player);\n            const recallMarks = {};\n            recallMarks[dance] = selectedPlayers;\n            \n            formData.append('type', 'recall');\n            formData.append('recall_marks', JSON.stringify(recallMarks));\n        }\n        \n        const originalText = submitBtn.textContent;\n        submitBtn.textContent = '전송 중...';\n        submitBtn.disabled = true;\n        \n        fetch('scoring/save_multievent_scores.php', { method: 'POST', body: formData })\n        .then(r=>r.json())\n        .then(result=>{\n            if (result.success) {\n                submitBtn.textContent = '완료';\n                submitBtn.style.background = '#28a745';\n                eventBlock.classList.add('completed');\n                updateProgressOverview();\n            } else {\n                alert('전송 실패: ' + (result.error || '알 수 없는 오류'));\n                submitBtn.textContent = originalText;\n                submitBtn.disabled = false;\n            }\n        })\n        .catch(err=>{\n            console.error(err);\n            alert('전송 중 오류가 발생했습니다: ' + err);\n            submitBtn.textContent = originalText;\n            submitBtn.disabled = false;\n        });\n    }\n\n    function renderRanksForEventDance(eventNo, dance) {\n        const eventBlock = document.querySelector(`[data-event=\"${eventNo}\"]`);\n        const submitBtn = eventBlock.querySelector('.submit-btn');\n        const isRecall = submitBtn.dataset.type === 'recall';\n        \n        if (isRecall) {\n            // Recall 방식: 체크박스 복원\n            document.querySelectorAll(`.event-block[data-event=\"${eventNo}\"] .player-card`).forEach(card => {\n                card.classList.remove('selected');\n                const checkbox = card.querySelector('.recall-checkbox');\n                if (checkbox) checkbox.checked = false;\n            });\n            \n            const ranks = getCurrentRanks(eventNo, dance);\n            Object.keys(ranks).forEach(playerNo => {\n                if (ranks[playerNo] === 'selected') {\n                    const card = document.querySelector(`.event-block[data-event=\"${eventNo}\"] .player-card[data-player=\"${playerNo}\"]`);\n                    if (card) {\n                        card.classList.add('selected');\n                        const checkbox = card.querySelector('.recall-checkbox');\n                        if (checkbox) checkbox.checked = true;\n                    }\n                }\n            });\n            \n            updateRecallStatus(eventNo);\n        } else {\n            // Final 방식: 순위 슬롯 복원\n            document.querySelectorAll(`.event-block[data-event=\"${eventNo}\"] .ranking-slot`).forEach(slot => {\n                slot.classList.remove('assigned');\n                const span = slot.querySelector('.player-assigned');\n                if (span) span.textContent = '';\n            });\n            document.querySelectorAll(`.player-item[data-event=\"${eventNo}\"]`).forEach(item => {\n                item.classList.remove('assigned');\n                item.classList.remove('selected');\n            });\n            \n            const ranks = getCurrentRanks(eventNo, dance);\n            Object.keys(ranks).forEach(playerNo => {\n                const rank = ranks[playerNo];\n                if (typeof rank === 'number') {\n                    const slot = document.querySelector(`.event-block[data-event=\"${eventNo}\"] .ranking-slot[data-rank=\"${rank}\"]`);\n                    if (slot) {\n                        slot.classList.add('assigned');\n                        const span = slot.querySelector('.player-assigned');\n                        if (span) span.textContent = playerNo;\n                    }\n                    const playerEl = document.querySelector(`.player-item[data-event=\"${eventNo}\"][data-player=\"${playerNo}\"]`);\n                    if (playerEl) playerEl.classList.add('assigned');\n                }\n            });\n            \n            updateEventStatus(eventNo);\n        }\n    }\n\n    function assignPlayerToRank(eventNo, dance, playerNo, rankSlotEl) {\n        // 랭크에 표시\n        rankSlotEl.classList.add('assigned');\n        rankSlotEl.querySelector('.player-assigned').textContent = playerNo;\n        // 선수 배정 마크\n        const playerEl = document.querySelector(`.player-item[data-event=\"${eventNo}\"][data-player=\"${playerNo}\"]`);\n        if (playerEl) { playerEl.classList.add('assigned'); playerEl.classList.remove('selected'); }\n        // 상태 저장\n        if (!RANKINGS_BY_EVENT_AND_DANCE[eventNo]) RANKINGS_BY_EVENT_AND_DANCE[eventNo] = {};\n        if (!RANKINGS_BY_EVENT_AND_DANCE[eventNo][dance]) RANKINGS_BY_EVENT_AND_DANCE[eventNo][dance] = {};\n        RANKINGS_BY_EVENT_AND_DANCE[eventNo][dance][playerNo] = parseInt(rankSlotEl.dataset.rank, 10);\n        // 선택 해제\n        SELECTED_PLAYER_BY_EVENT[eventNo] = null;\n    }\n\n    function unassignPlayer(eventNo, dance, playerNo, rankSlotEl) {\n        rankSlotEl.classList.remove('assigned');\n        rankSlotEl.querySelector('.player-assigned').textContent = '';\n        const playerEl = document.querySelector(`.player-item[data-event=\"${eventNo}\"][data-player=\"${playerNo}\"]`);\n        if (playerEl) { playerEl.classList.remove('assigned'); }\n        if (RANKINGS_BY_EVENT_AND_DANCE[eventNo] && RANKINGS_BY_EVENT_AND_DANCE[eventNo][dance]) {\n            delete RANKINGS_BY_EVENT_AND_DANCE[eventNo][dance][playerNo];\n        }\n    }\n\n    function getCurrentRanks(eventNo, dance) {\n        const obj = (RANKINGS_BY_EVENT_AND_DANCE[eventNo] && RANKINGS_BY_EVENT_AND_DANCE[eventNo][dance]) ? RANKINGS_BY_EVENT_AND_DANCE[eventNo][dance] : {};\n        return obj;\n    }\n\n    // Recall system functions\n    function togglePlayerSelection(card) {\n        const checkbox = card.querySelector('.recall-checkbox');\n        checkbox.checked = !checkbox.checked;\n        updatePlayerCardState(card);\n        updateRecallStatus(card.dataset.event);\n    }\n\n    function updatePlayerCardState(card) {\n        const checkbox = card.querySelector('.recall-checkbox');\n        if (checkbox.checked) {\n            card.classList.add('selected');\n        } else {\n            card.classList.remove('selected');\n        }\n    }\n\n    function updateRecallStatus(eventNo) {\n        const eventBlock = document.querySelector(`[data-event=\"${eventNo}\"]`);\n        const checkboxes = eventBlock.querySelectorAll('.recall-checkbox:checked');\n        const submitBtn = eventBlock.querySelector('.submit-btn');\n        const recallCount = parseInt(submitBtn.dataset.recallCount || '0');\n        const selectedCount = checkboxes.length;\n        \n        const statusDiv = eventBlock.querySelector('.recall-status');\n        const countSpan = statusDiv.querySelector('.selected-count');\n        \n        if (countSpan) {\n            countSpan.textContent = selectedCount;\n        }\n        \n        // Update status styling\n        statusDiv.classList.remove('complete', 'over');\n        if (selectedCount === recallCount) {\n            statusDiv.classList.add('complete');\n            submitBtn.style.display = 'inline-block';\n            submitBtn.disabled = false;\n        } else if (selectedCount > recallCount) {\n            statusDiv.classList.add('over');\n            submitBtn.style.display = 'none';\n            submitBtn.disabled = true;\n        } else {\n            submitBtn.style.display = 'none';\n            submitBtn.disabled = true;\n        }\n    }\n    </script>\n\n    <!-- Bottom Navigation -->\n    <div class=\"bottom-nav\">\n        <button type=\"button\" id=\"dashboardBtn\" class=\"nav-button primary\">\n            <div class=\"nav-icon\">🏠</div>\n            <div class=\"nav-text\">메인으로</div>\n        </button>\n        <button type=\"button\" id=\"refreshBtn\" class=\"nav-button\">\n            <div class=\"nav-icon\">🔄</div>\n            <div class=\"nav-text\">새로고침</div>\n        </button>\n    </div>\n\n    <script>\n    // Setup navigation buttons\n    document.addEventListener('DOMContentLoaded', function() {\n        document.getElementById('dashboardBtn').addEventListener('click', function() {\n            const compId = '<?= h($comp_id) ?>';\n            const lang = '<?= h($lang) ?>';\n            window.location.href = `scoring_dashboard.php?comp_id=${compId}&lang=${lang}`;\n        });\n        \n        document.getElementById('refreshBtn').addEventListener('click', function() {\n            if (confirm('페이지를 새로고침하시겠습니까? 현재 작업 중인 내용이 저장되지 않을 수 있습니다.')) {\n                window.location.reload();\n            }\n        });\n    });\n    </script>\n</body>\n</html>\n","size_bytes":49286},"comp/result_dashboard.php":{"content":"<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>댄스스코어 결과 모니터링 대시보드</title>\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n        \n        body {\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            min-height: 100vh;\n            color: #333;\n        }\n        \n        .container {\n            max-width: 1400px;\n            margin: 0 auto;\n            padding: 20px;\n        }\n        \n        .header {\n            text-align: center;\n            color: white;\n            margin-bottom: 30px;\n        }\n        \n        .header h1 {\n            font-size: 3em;\n            margin-bottom: 10px;\n            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);\n        }\n        \n        .header p {\n            font-size: 1.2em;\n            opacity: 0.9;\n        }\n        \n        .dashboard {\n            display: grid;\n            grid-template-columns: 1fr 1fr;\n            gap: 30px;\n            margin-bottom: 30px;\n        }\n        \n        .panel {\n            background: white;\n            border-radius: 15px;\n            padding: 25px;\n            box-shadow: 0 10px 30px rgba(0,0,0,0.2);\n            transition: transform 0.3s ease;\n        }\n        \n        .panel:hover {\n            transform: translateY(-5px);\n        }\n        \n        .panel h2 {\n            color: #667eea;\n            margin-bottom: 20px;\n            font-size: 1.5em;\n            border-bottom: 3px solid #667eea;\n            padding-bottom: 10px;\n        }\n        \n        .status-indicator {\n            display: inline-block;\n            width: 12px;\n            height: 12px;\n            border-radius: 50%;\n            margin-right: 10px;\n        }\n        \n        .status-online {\n            background: #4CAF50;\n            box-shadow: 0 0 10px rgba(76, 175, 80, 0.5);\n        }\n        \n        .status-offline {\n            background: #f44336;\n            box-shadow: 0 0 10px rgba(244, 67, 54, 0.5);\n        }\n        \n        .file-list {\n            max-height: 300px;\n            overflow-y: auto;\n            border: 1px solid #e0e0e0;\n            border-radius: 8px;\n            padding: 15px;\n        }\n        \n        .file-item {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            padding: 10px;\n            margin-bottom: 8px;\n            background: #f8f9fa;\n            border-radius: 5px;\n            border-left: 4px solid #667eea;\n        }\n        \n        .file-item:hover {\n            background: #e9ecef;\n        }\n        \n        .file-name {\n            font-weight: bold;\n            color: #333;\n        }\n        \n        .file-time {\n            font-size: 0.9em;\n            color: #666;\n        }\n        \n        .btn {\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            color: white;\n            border: none;\n            padding: 12px 25px;\n            border-radius: 25px;\n            cursor: pointer;\n            font-size: 16px;\n            transition: all 0.3s ease;\n            margin: 5px;\n        }\n        \n        .btn:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 5px 15px rgba(0,0,0,0.2);\n        }\n        \n        .btn:active {\n            transform: translateY(0);\n        }\n        \n        .btn-success {\n            background: linear-gradient(135deg, #4CAF50 0%, #45a049 100%);\n        }\n        \n        .btn-warning {\n            background: linear-gradient(135deg, #ff9800 0%, #f57c00 100%);\n        }\n        \n        .btn-danger {\n            background: linear-gradient(135deg, #f44336 0%, #d32f2f 100%);\n        }\n        \n        .controls {\n            text-align: center;\n            margin-bottom: 30px;\n        }\n        \n        .auto-refresh {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            margin-top: 15px;\n        }\n        \n        .auto-refresh input[type=\"checkbox\"] {\n            margin-right: 10px;\n            transform: scale(1.2);\n        }\n        \n        .auto-refresh label {\n            color: white;\n            font-weight: bold;\n        }\n        \n        .log-container {\n            background: #1e1e1e;\n            color: #00ff00;\n            padding: 20px;\n            border-radius: 10px;\n            font-family: 'Courier New', monospace;\n            max-height: 200px;\n            overflow-y: auto;\n            margin-top: 20px;\n        }\n        \n        .log-entry {\n            margin-bottom: 5px;\n            padding: 2px 0;\n        }\n        \n        .log-time {\n            color: #888;\n        }\n        \n        .log-info {\n            color: #00ff00;\n        }\n        \n        .log-warning {\n            color: #ffaa00;\n        }\n        \n        .log-error {\n            color: #ff4444;\n        }\n        \n        .fullscreen-btn {\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            z-index: 1000;\n        }\n        \n        .modal {\n            display: none;\n            position: fixed;\n            z-index: 2000;\n            left: 0;\n            top: 0;\n            width: 100%;\n            height: 100%;\n            background-color: rgba(0,0,0,0.8);\n        }\n        \n        .modal-content {\n            background-color: white;\n            margin: 5% auto;\n            padding: 20px;\n            border-radius: 15px;\n            width: 90%;\n            max-width: 1200px;\n            max-height: 80vh;\n            overflow-y: auto;\n        }\n        \n        .close {\n            color: #aaa;\n            float: right;\n            font-size: 28px;\n            font-weight: bold;\n            cursor: pointer;\n        }\n        \n        .close:hover {\n            color: #000;\n        }\n        \n        .stats-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n            gap: 20px;\n            margin-bottom: 20px;\n        }\n        \n        .stat-card {\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            color: white;\n            padding: 20px;\n            border-radius: 10px;\n            text-align: center;\n        }\n        \n        .stat-number {\n            font-size: 2em;\n            font-weight: bold;\n            margin-bottom: 5px;\n        }\n        \n        .stat-label {\n            font-size: 0.9em;\n            opacity: 0.9;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"header\">\n            <h1>🏆 댄스스코어 결과 모니터링</h1>\n            <p>실시간 결과 파일 모니터링 및 종합 결과 생성</p>\n        </div>\n        \n        <div class=\"controls\">\n            <button class=\"btn\" onclick=\"checkNewFiles()\">🔍 새 파일 확인</button>\n            <button class=\"btn btn-success\" onclick=\"processAllResults()\">⚡ 모든 결과 처리</button>\n            <button class=\"btn btn-warning\" onclick=\"showFileList()\">📁 파일 목록</button>\n            <button class=\"btn btn-danger\" onclick=\"clearLog()\">🗑️ 로그 지우기</button>\n            \n            <div class=\"auto-refresh\">\n                <input type=\"checkbox\" id=\"autoRefresh\" onchange=\"toggleAutoRefresh()\">\n                <label for=\"autoRefresh\">자동 새로고침 (30초)</label>\n            </div>\n        </div>\n        \n        <div class=\"stats-grid\">\n            <div class=\"stat-card\">\n                <div class=\"stat-number\" id=\"totalFiles\">0</div>\n                <div class=\"stat-label\">총 파일 수</div>\n            </div>\n            <div class=\"stat-card\">\n                <div class=\"stat-number\" id=\"processedFiles\">0</div>\n                <div class=\"stat-label\">처리된 파일</div>\n            </div>\n            <div class=\"stat-card\">\n                <div class=\"stat-number\" id=\"newFiles\">0</div>\n                <div class=\"stat-label\">새 파일</div>\n            </div>\n            <div class=\"stat-card\">\n                <div class=\"stat-number\" id=\"lastUpdate\">-</div>\n                <div class=\"stat-label\">마지막 업데이트</div>\n            </div>\n        </div>\n        \n        <div class=\"dashboard\">\n            <div class=\"panel\">\n                <h2>📊 모니터링 상태</h2>\n                <p><span class=\"status-indicator status-online\" id=\"monitorStatus\"></span>모니터링 활성</p>\n                <p><span class=\"status-indicator status-offline\" id=\"processStatus\"></span>처리 상태</p>\n                \n                <div class=\"file-list\" id=\"recentFiles\">\n                    <div class=\"file-item\">\n                        <span class=\"file-name\">시스템 초기화 중...</span>\n                        <span class=\"file-time\">-</span>\n                    </div>\n                </div>\n            </div>\n            \n            <div class=\"panel\">\n                <h2>📝 처리 로그</h2>\n                <div class=\"log-container\" id=\"logContainer\">\n                    <div class=\"log-entry\">\n                        <span class=\"log-time\">[시작]</span>\n                        <span class=\"log-info\">시스템이 시작되었습니다.</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n        <div class=\"fullscreen-btn\">\n            <button class=\"btn\" onclick=\"openFullscreen()\">🖥️ 전체화면</button>\n        </div>\n    </div>\n    \n    <!-- 모달 -->\n    <div id=\"fileModal\" class=\"modal\">\n        <div class=\"modal-content\">\n            <span class=\"close\" onclick=\"closeModal()\">&times;</span>\n            <h2>📁 파일 목록</h2>\n            <div id=\"fileListContent\"></div>\n        </div>\n    </div>\n    \n    <script>\n        let autoRefreshInterval;\n        let isAutoRefresh = false;\n        \n        // 페이지 로드 시 초기화\n        document.addEventListener('DOMContentLoaded', function() {\n            logMessage('시스템이 초기화되었습니다.', 'info');\n            checkNewFiles();\n            updateStats();\n        });\n        \n        // 새 파일 확인\n        async function checkNewFiles() {\n            try {\n                const response = await fetch('result_monitor.php?action=check');\n                const data = await response.json();\n                \n                if (data.success) {\n                    const newFiles = data.new_files || [];\n                    updateNewFilesCount(newFiles.length);\n                    \n                    if (newFiles.length > 0) {\n                        logMessage(`${newFiles.length}개의 새 파일이 발견되었습니다.`, 'warning');\n                        updateRecentFiles(newFiles);\n                    } else {\n                        logMessage('새 파일이 없습니다.', 'info');\n                    }\n                } else {\n                    logMessage('파일 확인 중 오류가 발생했습니다.', 'error');\n                }\n            } catch (error) {\n                logMessage(`오류: ${error.message}`, 'error');\n            }\n        }\n        \n        // 모든 결과 처리\n        async function processAllResults() {\n            try {\n                logMessage('결과 처리를 시작합니다...', 'info');\n                setProcessStatus(true);\n                \n                const response = await fetch('result_monitor.php?action=process');\n                const data = await response.json();\n                \n                if (data.success) {\n                    const processed = data.processed || [];\n                    updateProcessedFilesCount(processed.length);\n                    \n                    logMessage(`${processed.length}개의 결과가 처리되었습니다.`, 'info');\n                    \n                    processed.forEach(result => {\n                        logMessage(`처리 완료: ${result.event_title} (${result.event_id})`, 'info');\n                    });\n                } else {\n                    logMessage('결과 처리 중 오류가 발생했습니다.', 'error');\n                }\n            } catch (error) {\n                logMessage(`오류: ${error.message}`, 'error');\n            } finally {\n                setProcessStatus(false);\n            }\n        }\n        \n        // 파일 목록 표시\n        async function showFileList() {\n            try {\n                const response = await fetch('result_monitor.php?action=list');\n                const data = await response.json();\n                \n                if (data.success) {\n                    const pairs = data.pairs || [];\n                    displayFileList(pairs);\n                    document.getElementById('fileModal').style.display = 'block';\n                } else {\n                    logMessage('파일 목록을 가져올 수 없습니다.', 'error');\n                }\n            } catch (error) {\n                logMessage(`오류: ${error.message}`, 'error');\n            }\n        }\n        \n        // 파일 목록 표시\n        function displayFileList(pairs) {\n            const content = document.getElementById('fileListContent');\n            content.innerHTML = '';\n            \n            if (pairs.length === 0) {\n                content.innerHTML = '<p>처리할 파일이 없습니다.</p>';\n                return;\n            }\n            \n            pairs.forEach(pair => {\n                const div = document.createElement('div');\n                div.className = 'file-item';\n                div.innerHTML = `\n                    <div>\n                        <div class=\"file-name\">${pair.event_id}</div>\n                        <div style=\"font-size: 0.8em; color: #666;\">\n                            요약: ${pair.summary.split('/').pop()}<br>\n                            상세: ${pair.detailed.split('/').pop()}\n                        </div>\n                    </div>\n                    <div>\n                        <button class=\"btn\" onclick=\"viewResult('${pair.event_id}')\">보기</button>\n                    </div>\n                `;\n                content.appendChild(div);\n            });\n        }\n        \n        // 결과 보기\n        function viewResult(eventId) {\n            window.open(`combined_result_${eventId}.html`, '_blank');\n        }\n        \n        // 모달 닫기\n        function closeModal() {\n            document.getElementById('fileModal').style.display = 'none';\n        }\n        \n        // 전체화면 열기\n        function openFullscreen() {\n            const pairs = getFilePairs();\n            if (pairs.length > 0) {\n                const latestPair = pairs[pairs.length - 1];\n                window.open(`combined_result_${latestPair.event_id}.html`, '_blank');\n            } else {\n                alert('표시할 결과가 없습니다.');\n            }\n        }\n        \n        // 자동 새로고침 토글\n        function toggleAutoRefresh() {\n            isAutoRefresh = document.getElementById('autoRefresh').checked;\n            \n            if (isAutoRefresh) {\n                autoRefreshInterval = setInterval(() => {\n                    checkNewFiles();\n                    updateStats();\n                }, 30000);\n                logMessage('자동 새로고침이 활성화되었습니다.', 'info');\n            } else {\n                clearInterval(autoRefreshInterval);\n                logMessage('자동 새로고침이 비활성화되었습니다.', 'info');\n            }\n        }\n        \n        // 로그 메시지 추가\n        function logMessage(message, type = 'info') {\n            const logContainer = document.getElementById('logContainer');\n            const time = new Date().toLocaleTimeString();\n            \n            const logEntry = document.createElement('div');\n            logEntry.className = `log-entry log-${type}`;\n            logEntry.innerHTML = `<span class=\"log-time\">[${time}]</span> <span class=\"log-${type}\">${message}</span>`;\n            \n            logContainer.appendChild(logEntry);\n            logContainer.scrollTop = logContainer.scrollHeight;\n            \n            // 최대 100개 로그 유지\n            while (logContainer.children.length > 100) {\n                logContainer.removeChild(logContainer.firstChild);\n            }\n        }\n        \n        // 로그 지우기\n        function clearLog() {\n            document.getElementById('logContainer').innerHTML = '';\n            logMessage('로그가 지워졌습니다.', 'info');\n        }\n        \n        // 처리 상태 업데이트\n        function setProcessStatus(processing) {\n            const status = document.getElementById('processStatus');\n            if (processing) {\n                status.className = 'status-indicator status-online';\n                status.nextSibling.textContent = '처리 중...';\n            } else {\n                status.className = 'status-indicator status-offline';\n                status.nextSibling.textContent = '대기 중';\n            }\n        }\n        \n        // 통계 업데이트\n        async function updateStats() {\n            try {\n                const response = await fetch('result_monitor.php?action=list');\n                const data = await response.json();\n                \n                if (data.success) {\n                    const pairs = data.pairs || [];\n                    document.getElementById('totalFiles').textContent = pairs.length * 2; // 요약 + 상세\n                    document.getElementById('processedFiles').textContent = pairs.length;\n                    document.getElementById('lastUpdate').textContent = new Date().toLocaleTimeString();\n                }\n            } catch (error) {\n                console.error('통계 업데이트 오류:', error);\n            }\n        }\n        \n        // 새 파일 수 업데이트\n        function updateNewFilesCount(count) {\n            document.getElementById('newFiles').textContent = count;\n        }\n        \n        // 처리된 파일 수 업데이트\n        function updateProcessedFilesCount(count) {\n            document.getElementById('processedFiles').textContent = count;\n        }\n        \n        // 최근 파일 목록 업데이트\n        function updateRecentFiles(files) {\n            const container = document.getElementById('recentFiles');\n            container.innerHTML = '';\n            \n            files.slice(0, 10).forEach(file => {\n                const div = document.createElement('div');\n                div.className = 'file-item';\n                div.innerHTML = `\n                    <span class=\"file-name\">${file.split('/').pop()}</span>\n                    <span class=\"file-time\">${new Date().toLocaleTimeString()}</span>\n                `;\n                container.appendChild(div);\n            });\n        }\n        \n        // 파일 쌍 가져오기 (임시)\n        function getFilePairs() {\n            // 실제로는 서버에서 가져와야 함\n            return [];\n        }\n        \n        // 모달 외부 클릭 시 닫기\n        window.onclick = function(event) {\n            const modal = document.getElementById('fileModal');\n            if (event.target === modal) {\n                modal.style.display = 'none';\n            }\n        }\n    </script>\n</body>\n</html>\n\n\n\n\n","size_bytes":19533},"comp/result_monitor.php":{"content":"<?php\n/**\n * 댄스스코어 결과 파일 모니터링 및 종합 결과 표시 시스템\n * DanceScore 결과 파일을 실시간으로 모니터링하고 요약/상세 파일을 합쳐서 표시\n */\n\nclass ResultMonitor {\n    private $resultsPath;\n    private $lastCheckTime;\n    private $processedFiles;\n    \n    public function __construct($resultsPath = __DIR__ . \"/../results/results\") {\n        $this->resultsPath = $resultsPath;\n        $this->lastCheckTime = time();\n        $this->processedFiles = [];\n    }\n    \n    /**\n     * 결과 파일들을 모니터링하고 새로운 파일이 생성되었는지 확인\n     */\n    public function checkForNewResults() {\n        $files = glob($this->resultsPath . \"/*.html\");\n        $newFiles = [];\n        \n        foreach ($files as $file) {\n            $mtime = filemtime($file);\n            if ($mtime > $this->lastCheckTime) {\n                $newFiles[] = $file;\n            }\n        }\n        \n        $this->lastCheckTime = time();\n        return $newFiles;\n    }\n    \n    /**\n     * 요약 파일과 상세 파일 쌍을 찾아서 반환\n     */\n    public function findResultPairs() {\n        $files = glob($this->resultsPath . \"/*.html\");\n        $pairs = [];\n        \n        foreach ($files as $file) {\n            $basename = basename($file, '.html');\n            \n            // 상세 파일인지 확인 (-d로 끝나는 파일)\n            if (strpos($basename, '-d') !== false) {\n                $summaryFile = str_replace('-d', '', $file);\n                if (file_exists($summaryFile)) {\n                    $pairs[] = [\n                        'summary' => $summaryFile,\n                        'detailed' => $file,\n                        'event_id' => str_replace('-d', '', $basename)\n                    ];\n                }\n            }\n        }\n        \n        return $pairs;\n    }\n    \n    /**\n     * HTML 파일에서 결과 데이터를 파싱\n     */\n    public function parseResultFile($filePath) {\n        $html = file_get_contents($filePath);\n        $dom = new DOMDocument();\n        @$dom->loadHTML($html);\n        $xpath = new DOMXPath($dom);\n        \n        $result = [\n            'event_title' => '',\n            'event_date' => '',\n            'competitors' => [],\n            'adjudicators' => []\n        ];\n        \n        // 이벤트 제목 추출\n        $titleNodes = $xpath->query(\"//td[@style='font-weight:bold; padding-top:1em;']\");\n        if ($titleNodes->length > 0) {\n            $result['event_title'] = trim($titleNodes->item(0)->textContent);\n        }\n        \n        // 날짜 추출\n        $dateNodes = $xpath->query(\"//td[@style='font-weight:bold;']\");\n        if ($dateNodes->length > 0) {\n            $result['event_date'] = trim($dateNodes->item(0)->textContent);\n        }\n        \n        // 경쟁자 데이터 추출\n        $competitorRows = $xpath->query(\"//tr[td[@style='margin-top:2em; padding-left:1em; padding-top:5px; padding-bottom:5px; background-color:#eee; font-weight:bold;'] or td[@style='margin-top:2em; padding-left:1em; padding-top:5px; padding-bottom:5px; background-color:#ccc; font-weight:bold;']]\");\n        \n        foreach ($competitorRows as $row) {\n            $cells = $xpath->query(\".//td\", $row);\n            if ($cells->length >= 3) {\n                $competitor = [\n                    'place' => trim($cells->item(0)->textContent),\n                    'tag' => trim($cells->item(1)->textContent),\n                    'name' => trim($cells->item(2)->textContent),\n                    'scores' => []\n                ];\n                \n                // 점수 데이터 추출 (요약 파일의 경우)\n                for ($i = 3; $i < $cells->length - 1; $i++) {\n                    $score = trim($cells->item($i)->textContent);\n                    if ($score !== '') {\n                        $competitor['scores'][] = $score;\n                    }\n                }\n                \n                // 최종 점수 (마지막 셀)\n                if ($cells->length > 0) {\n                    $finalScore = trim($cells->item($cells->length - 1)->textContent);\n                    $competitor['final_score'] = $finalScore;\n                }\n                \n                $result['competitors'][] = $competitor;\n            }\n        }\n        \n        // 심판 정보 추출\n        $adjudicatorRows = $xpath->query(\"//tr[td[@style='padding-left:2em;']]\");\n        foreach ($adjudicatorRows as $row) {\n            $cells = $xpath->query(\".//td\", $row);\n            if ($cells->length >= 2) {\n                $letter = trim($cells->item(0)->textContent);\n                $name = trim($cells->item(1)->textContent);\n                if ($letter && $name) {\n                    $result['adjudicators'][] = [\n                        'letter' => $letter,\n                        'name' => $name\n                    ];\n                }\n            }\n        }\n        \n        return $result;\n    }\n    \n    /**\n     * 상세 파일에서 댄스별 점수 데이터를 파싱\n     */\n    public function parseDetailedFile($filePath) {\n        $html = file_get_contents($filePath);\n        $dom = new DOMDocument();\n        @$dom->loadHTML($html);\n        $xpath = new DOMXPath($dom);\n        \n        $dances = [];\n        \n        // 각 댄스 섹션 찾기\n        $danceSections = $xpath->query(\"//tr[th[@colspan='28']]\");\n        \n        foreach ($danceSections as $section) {\n            $danceName = trim($section->textContent);\n            $dances[$danceName] = [];\n            \n            // 해당 댄스의 경쟁자 데이터 찾기\n            $nextSibling = $section->nextSibling;\n            while ($nextSibling) {\n                if ($nextSibling->nodeType === XML_ELEMENT_NODE && $nextSibling->tagName === 'tr') {\n                    $cells = $xpath->query(\".//td\", $nextSibling);\n                    if ($cells->length >= 3) {\n                        $tag = trim($cells->item(0)->textContent);\n                        $name = trim($cells->item(1)->textContent);\n                        $scores = [];\n                        \n                        // 심판별 점수 추출\n                        for ($i = 2; $i < $cells->length - 1; $i++) {\n                            $score = trim($cells->item($i)->textContent);\n                            if ($score !== '') {\n                                $scores[] = $score;\n                            }\n                        }\n                        \n                        // 최종 순위 (마지막 셀)\n                        $placing = trim($cells->item($cells->length - 1)->textContent);\n                        \n                        $dances[$danceName][] = [\n                            'tag' => $tag,\n                            'name' => $name,\n                            'scores' => $scores,\n                            'placing' => $placing\n                        ];\n                    }\n                } elseif ($nextSibling->nodeType === XML_ELEMENT_NODE && $nextSibling->tagName === 'table') {\n                    // 다음 댄스 섹션을 만나면 중단\n                    break;\n                }\n                $nextSibling = $nextSibling->nextSibling;\n            }\n        }\n        \n        return $dances;\n    }\n    \n    /**\n     * 종합 결과 HTML 생성\n     */\n    public function generateCombinedResult($summaryData, $detailedData, $eventId) {\n        $html = '<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <title>종합 결과 - ' . htmlspecialchars($summaryData['event_title']) . '</title>\n    <style>\n        body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background: #f5f5f5; }\n        .container { max-width: 1400px; margin: 0 auto; background: white; border-radius: 10px; box-shadow: 0 0 20px rgba(0,0,0,0.1); }\n        .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; text-align: center; border-radius: 10px 10px 0 0; }\n        .header h1 { margin: 0; font-size: 2.5em; }\n        .header p { margin: 10px 0 0 0; font-size: 1.2em; opacity: 0.9; }\n        .content { padding: 30px; }\n        .summary-section { margin-bottom: 40px; }\n        .detailed-section { margin-bottom: 40px; }\n        .section-title { font-size: 1.8em; color: #333; margin-bottom: 20px; padding-bottom: 10px; border-bottom: 3px solid #667eea; }\n        .summary-table { width: 100%; border-collapse: collapse; margin-bottom: 30px; }\n        .summary-table th, .summary-table td { padding: 15px; text-align: center; border: 1px solid #ddd; }\n        .summary-table th { background: #f8f9fa; font-weight: bold; color: #333; }\n        .summary-table tr:nth-child(even) { background: #f8f9fa; }\n        .summary-table tr:nth-child(odd) { background: white; }\n        .place-1 { background: linear-gradient(135deg, #FFD700, #FFA500) !important; color: white; font-weight: bold; }\n        .place-2 { background: linear-gradient(135deg, #C0C0C0, #A0A0A0) !important; color: white; font-weight: bold; }\n        .place-3 { background: linear-gradient(135deg, #CD7F32, #B8860B) !important; color: white; font-weight: bold; }\n        .dance-section { margin-bottom: 30px; }\n        .dance-title { font-size: 1.4em; color: #667eea; margin-bottom: 15px; padding: 10px; background: #f8f9fa; border-left: 5px solid #667eea; }\n        .dance-table { width: 100%; border-collapse: collapse; margin-bottom: 20px; }\n        .dance-table th, .dance-table td { padding: 10px; text-align: center; border: 1px solid #ddd; font-size: 0.9em; }\n        .dance-table th { background: #667eea; color: white; font-weight: bold; }\n        .dance-table tr:nth-child(even) { background: #f8f9fa; }\n        .dance-table tr:nth-child(odd) { background: white; }\n        .adjudicators { margin-top: 30px; padding: 20px; background: #f8f9fa; border-radius: 5px; }\n        .adjudicators h3 { margin-top: 0; color: #333; }\n        .adjudicator-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 10px; }\n        .adjudicator-item { padding: 10px; background: white; border-radius: 5px; border-left: 3px solid #667eea; }\n        .refresh-btn { position: fixed; top: 20px; right: 20px; background: #667eea; color: white; border: none; padding: 15px 25px; border-radius: 25px; cursor: pointer; font-size: 16px; box-shadow: 0 4px 15px rgba(0,0,0,0.2); }\n        .refresh-btn:hover { background: #5a6fd8; transform: translateY(-2px); }\n        .timestamp { text-align: center; color: #666; font-size: 0.9em; margin-top: 20px; }\n    </style>\n    <script>\n        function refreshResults() {\n            location.reload();\n        }\n        \n        // 30초마다 자동 새로고침\n        setInterval(refreshResults, 30000);\n    </script>\n</head>\n<body>\n    <button class=\"refresh-btn\" onclick=\"refreshResults()\">🔄 새로고침</button>\n    \n    <div class=\"container\">\n        <div class=\"header\">\n            <h1>' . htmlspecialchars($summaryData['event_title']) . '</h1>\n            <p>' . htmlspecialchars($summaryData['event_date']) . '</p>\n        </div>\n        \n        <div class=\"content\">\n            <div class=\"summary-section\">\n                <h2 class=\"section-title\">📊 최종 순위</h2>\n                <table class=\"summary-table\">\n                    <thead>\n                        <tr>\n                            <th>순위</th>\n                            <th>번호</th>\n                            <th>선수명</th>\n                            <th>점수</th>\n                        </tr>\n                    </thead>\n                    <tbody>';\n        \n        foreach ($summaryData['competitors'] as $competitor) {\n            $placeClass = '';\n            if ($competitor['place'] == 1) $placeClass = 'place-1';\n            elseif ($competitor['place'] == 2) $placeClass = 'place-2';\n            elseif ($competitor['place'] == 3) $placeClass = 'place-3';\n            \n            $html .= '<tr class=\"' . $placeClass . '\">\n                <td>' . $competitor['place'] . '</td>\n                <td>' . $competitor['tag'] . '</td>\n                <td>' . htmlspecialchars($competitor['name']) . '</td>\n                <td>' . $competitor['final_score'] . '</td>\n            </tr>';\n        }\n        \n        $html .= '</tbody>\n                </table>\n            </div>\n            \n            <div class=\"detailed-section\">\n                <h2 class=\"section-title\">💃 댄스별 상세 결과</h2>';\n        \n        foreach ($detailedData as $danceName => $danceResults) {\n            $html .= '<div class=\"dance-section\">\n                <h3 class=\"dance-title\">' . htmlspecialchars($danceName) . '</h3>\n                <table class=\"dance-table\">\n                    <thead>\n                        <tr>\n                            <th>번호</th>\n                            <th>선수명</th>';\n            \n            // 심판 컬럼 헤더 생성\n            for ($i = 0; $i < 15; $i++) {\n                $html .= '<th>' . chr(65 + $i) . '</th>';\n            }\n            \n            $html .= '<th>순위</th>\n                        </tr>\n                    </thead>\n                    <tbody>';\n            \n            foreach ($danceResults as $result) {\n                $html .= '<tr>\n                    <td>' . $result['tag'] . '</td>\n                    <td>' . htmlspecialchars($result['name']) . '</td>';\n                \n                // 심판별 점수\n                for ($i = 0; $i < 15; $i++) {\n                    $score = isset($result['scores'][$i]) ? $result['scores'][$i] : '';\n                    $html .= '<td>' . $score . '</td>';\n                }\n                \n                $html .= '<td><strong>' . $result['placing'] . '</strong></td>\n                </tr>';\n            }\n            \n            $html .= '</tbody>\n                </table>\n            </div>';\n        }\n        \n        $html .= '</div>\n            \n            <div class=\"adjudicators\">\n                <h3>👨‍⚖️ 심판진</h3>\n                <div class=\"adjudicator-grid\">';\n        \n        foreach ($summaryData['adjudicators'] as $adjudicator) {\n            $html .= '<div class=\"adjudicator-item\">\n                <strong>' . $adjudicator['letter'] . '</strong> ' . htmlspecialchars($adjudicator['name']) . '\n            </div>';\n        }\n        \n        $html .= '</div>\n            </div>\n            \n            <div class=\"timestamp\">\n                마지막 업데이트: ' . date('Y-m-d H:i:s') . '\n            </div>\n        </div>\n    </div>\n</body>\n</html>';\n        \n        return $html;\n    }\n    \n    /**\n     * 결과 파일을 저장\n     */\n    public function saveCombinedResult($html, $eventId) {\n        $filename = \"combined_result_{$eventId}.html\";\n        \n        // 1. 원본 위치에 저장 (results/results 폴더)\n        $originalPath = $this->resultsPath . \"/\" . $filename;\n        file_put_contents($originalPath, $html);\n        \n        // 2. 웹에서 접근 가능한 위치에도 저장 (comp 폴더)\n        $webPath = __DIR__ . \"/\" . $filename;\n        file_put_contents($webPath, $html);\n        \n        return [\n            'original' => $originalPath,\n            'web' => $webPath,\n            'web_url' => \"https://www.danceoffice.net/comp/\" . $filename\n        ];\n    }\n    \n    /**\n     * 모든 결과 쌍을 처리하고 종합 결과 생성\n     */\n    public function processAllResults() {\n        $pairs = $this->findResultPairs();\n        $processed = [];\n        \n        foreach ($pairs as $pair) {\n            try {\n                $summaryData = $this->parseResultFile($pair['summary']);\n                $detailedData = $this->parseDetailedFile($pair['detailed']);\n                $combinedHtml = $this->generateCombinedResult($summaryData, $detailedData, $pair['event_id']);\n                $savedFile = $this->saveCombinedResult($combinedHtml, $pair['event_id']);\n                \n                $processed[] = [\n                    'event_id' => $pair['event_id'],\n                    'summary_file' => $pair['summary'],\n                    'detailed_file' => $pair['detailed'],\n                    'combined_file' => $savedFile['original'],\n                    'web_file' => $savedFile['web'],\n                    'web_url' => $savedFile['web_url'],\n                    'event_title' => $summaryData['event_title']\n                ];\n            } catch (Exception $e) {\n                error_log(\"Error processing result pair {$pair['event_id']}: \" . $e->getMessage());\n            }\n        }\n        \n        return $processed;\n    }\n}\n\n// 사용 예시\nif (isset($_GET['action'])) {\n    $monitor = new ResultMonitor();\n    \n    switch ($_GET['action']) {\n        case 'process':\n            $results = $monitor->processAllResults();\n            echo json_encode(['success' => true, 'processed' => $results]);\n            break;\n            \n        case 'check':\n            $newFiles = $monitor->checkForNewResults();\n            echo json_encode(['success' => true, 'new_files' => $newFiles]);\n            break;\n            \n        case 'list':\n            $pairs = $monitor->findResultPairs();\n            echo json_encode(['success' => true, 'pairs' => $pairs]);\n            break;\n            \n        default:\n            echo json_encode(['success' => false, 'message' => 'Invalid action']);\n    }\n}\n?>\n","size_bytes":17399},"comp/result_watcher copy.php":{"content":"<?php\n/**\n * 댄스스코어 결과 파일 실시간 모니터링 스크립트\n * 파일 시스템을 모니터링하고 새로운 결과 파일이 생성되면 자동으로 처리\n */\n\nclass ResultWatcher {\n    private $resultsPath;\n    private $lastCheckTime;\n    private $logFile;\n    private $isRunning;\n    \n    public function __construct($resultsPath = \"Y:/results/results\") {\n        $this->resultsPath = $resultsPath;\n        $this->lastCheckTime = time();\n        $this->logFile = __DIR__ . \"/watcher.log\";\n        $this->isRunning = false;\n    }\n    \n    /**\n     * 로그 메시지 기록\n     */\n    private function log($message, $level = 'INFO') {\n        $timestamp = date('Y-m-d H:i:s');\n        $logMessage = \"[{$timestamp}] [{$level}] {$message}\" . PHP_EOL;\n        file_put_contents($this->logFile, $logMessage, FILE_APPEND | LOCK_EX);\n    }\n    \n    /**\n     * 파일 변경 감지\n     */\n    public function watch() {\n        $this->isRunning = true;\n        $this->log(\"결과 파일 모니터링을 시작합니다.\");\n        \n        while ($this->isRunning) {\n            try {\n                $this->checkForChanges();\n                sleep(5); // 5초마다 확인\n            } catch (Exception $e) {\n                $this->log(\"모니터링 중 오류 발생: \" . $e->getMessage(), 'ERROR');\n                sleep(10);\n            }\n        }\n        \n        $this->log(\"모니터링이 중지되었습니다.\");\n    }\n    \n    /**\n     * 파일 변경사항 확인\n     */\n    private function checkForChanges() {\n        $files = glob($this->resultsPath . \"/*.html\");\n        $newFiles = [];\n        \n        foreach ($files as $file) {\n            $mtime = filemtime($file);\n            if ($mtime > $this->lastCheckTime) {\n                $newFiles[] = $file;\n            }\n        }\n        \n        if (!empty($newFiles)) {\n            $this->log(count($newFiles) . \"개의 새 파일이 발견되었습니다.\");\n            $this->processNewFiles($newFiles);\n        }\n        \n        $this->lastCheckTime = time();\n    }\n    \n    /**\n     * 새 파일 처리\n     */\n    private function processNewFiles($files) {\n        require_once 'result_monitor.php';\n        \n        $monitor = new ResultMonitor($this->resultsPath);\n        \n        // 결과 쌍 찾기\n        $pairs = $monitor->findResultPairs();\n        \n        foreach ($pairs as $pair) {\n            try {\n                $this->log(\"결과 처리 시작: {$pair['event_id']}\");\n                \n                $summaryData = $monitor->parseResultFile($pair['summary']);\n                $detailedData = $monitor->parseDetailedFile($pair['detailed']);\n                $combinedHtml = $monitor->generateCombinedResult($summaryData, $detailedData, $pair['event_id']);\n                $savedFile = $monitor->saveCombinedResult($combinedHtml, $pair['event_id']);\n                \n                $this->log(\"결과 처리 완료: {$pair['event_id']} -> {$savedFile}\");\n                \n                // 웹소켓을 통한 실시간 알림 (선택사항)\n                $this->notifyWebSocket($pair['event_id'], $savedFile);\n                \n            } catch (Exception $e) {\n                $this->log(\"결과 처리 실패: {$pair['event_id']} - \" . $e->getMessage(), 'ERROR');\n            }\n        }\n    }\n    \n    /**\n     * 웹소켓 알림 (선택사항)\n     */\n    private function notifyWebSocket($eventId, $filePath) {\n        // 웹소켓 서버가 있다면 여기서 알림 전송\n        // 예: WebSocket::send(\"new_result\", ['event_id' => $eventId, 'file' => $filePath]);\n    }\n    \n    /**\n     * 모니터링 중지\n     */\n    public function stop() {\n        $this->isRunning = false;\n    }\n    \n    /**\n     * 데몬 모드로 실행\n     */\n    public function runAsDaemon() {\n        // Windows에서는 데몬 모드가 제한적이므로 일반 실행\n        $this->watch();\n    }\n}\n\n// CLI에서 실행될 때\nif (php_sapi_name() === 'cli') {\n    $watcher = new ResultWatcher();\n    \n    // 시그널 핸들러 (Windows에서는 제한적)\n    if (function_exists('pcntl_signal')) {\n        pcntl_signal(SIGTERM, function() use ($watcher) {\n            $watcher->stop();\n        });\n        pcntl_signal(SIGINT, function() use ($watcher) {\n            $watcher->stop();\n        });\n    }\n    \n    echo \"결과 파일 모니터링을 시작합니다...\\n\";\n    echo \"중지하려면 Ctrl+C를 누르세요.\\n\";\n    \n    $watcher->runAsDaemon();\n} else {\n    // 웹에서 실행될 때\n    if (isset($_GET['action'])) {\n        $watcher = new ResultWatcher();\n        \n        switch ($_GET['action']) {\n            case 'start':\n                // 백그라운드에서 실행\n                if (strtoupper(substr(PHP_OS, 0, 3)) === 'WIN') {\n                    // Windows\n                    $command = \"php \" . __FILE__ . \" > nul 2>&1 &\";\n                    pclose(popen(\"start /B \" . $command, \"r\"));\n                } else {\n                    // Linux/Unix\n                    $command = \"php \" . __FILE__ . \" > /dev/null 2>&1 &\";\n                    exec($command);\n                }\n                echo json_encode(['success' => true, 'message' => '모니터링이 시작되었습니다.']);\n                break;\n                \n            case 'stop':\n                // 프로세스 종료 (Windows에서는 제한적)\n                echo json_encode(['success' => true, 'message' => '모니터링을 중지하려면 프로세스를 종료하세요.']);\n                break;\n                \n            case 'status':\n                $logFile = __DIR__ . \"/watcher.log\";\n                if (file_exists($logFile)) {\n                    $logs = file_get_contents($logFile);\n                    $lines = explode(\"\\n\", $logs);\n                    $recentLogs = array_slice($lines, -20); // 최근 20줄\n                    echo json_encode(['success' => true, 'logs' => $recentLogs]);\n                } else {\n                    echo json_encode(['success' => false, 'message' => '로그 파일이 없습니다.']);\n                }\n                break;\n                \n            default:\n                echo json_encode(['success' => false, 'message' => '잘못된 액션입니다.']);\n        }\n    }\n}\n?>\n","size_bytes":6271},"comp/result_watcher.php":{"content":"<?php\n/**\n * 댄스스코어 결과 파일 실시간 모니터링 스크립트\n * 파일 시스템을 모니터링하고 새로운 결과 파일이 생성되면 자동으로 처리\n */\n\nclass ResultWatcher {\n    private $resultsPath;\n    private $lastCheckTime;\n    private $logFile;\n    private $isRunning;\n    \n    public function __construct($resultsPath = __DIR__ . \"/../results/results\") {\n        $this->resultsPath = $resultsPath;\n        $this->lastCheckTime = time();\n        $this->logFile = __DIR__ . \"/watcher.log\";\n        $this->isRunning = false;\n    }\n    \n    /**\n     * 로그 메시지 기록\n     */\n    private function log($message, $level = 'INFO') {\n        $timestamp = date('Y-m-d H:i:s');\n        $logMessage = \"[{$timestamp}] [{$level}] {$message}\" . PHP_EOL;\n        file_put_contents($this->logFile, $logMessage, FILE_APPEND | LOCK_EX);\n    }\n    \n    /**\n     * 파일 변경 감지\n     */\n    public function watch() {\n        $this->isRunning = true;\n        $this->log(\"결과 파일 모니터링을 시작합니다.\");\n        \n        while ($this->isRunning) {\n            try {\n                $this->checkForChanges();\n                sleep(5); // 5초마다 확인\n            } catch (Exception $e) {\n                $this->log(\"모니터링 중 오류 발생: \" . $e->getMessage(), 'ERROR');\n                sleep(10);\n            }\n        }\n        \n        $this->log(\"모니터링이 중지되었습니다.\");\n    }\n    \n    /**\n     * 파일 변경사항 확인\n     */\n    private function checkForChanges() {\n        $files = glob($this->resultsPath . \"/*.html\");\n        $newFiles = [];\n        \n        foreach ($files as $file) {\n            $mtime = filemtime($file);\n            if ($mtime > $this->lastCheckTime) {\n                $newFiles[] = $file;\n            }\n        }\n        \n        if (!empty($newFiles)) {\n            $this->log(count($newFiles) . \"개의 새 파일이 발견되었습니다.\");\n            $this->processNewFiles($newFiles);\n        }\n        \n        $this->lastCheckTime = time();\n    }\n    \n    /**\n     * 새 파일 처리\n     */\n    private function processNewFiles($files) {\n        require_once 'result_monitor.php';\n        \n        $monitor = new ResultMonitor($this->resultsPath);\n        \n        // 결과 쌍 찾기\n        $pairs = $monitor->findResultPairs();\n        \n        foreach ($pairs as $pair) {\n            try {\n                $this->log(\"결과 처리 시작: {$pair['event_id']}\");\n                \n                $summaryData = $monitor->parseResultFile($pair['summary']);\n                $detailedData = $monitor->parseDetailedFile($pair['detailed']);\n                $combinedHtml = $monitor->generateCombinedResult($summaryData, $detailedData, $pair['event_id']);\n                $savedFile = $monitor->saveCombinedResult($combinedHtml, $pair['event_id']);\n                \n                $this->log(\"결과 처리 완료: {$pair['event_id']} -> {$savedFile}\");\n                \n                // 웹소켓을 통한 실시간 알림 (선택사항)\n                $this->notifyWebSocket($pair['event_id'], $savedFile);\n                \n            } catch (Exception $e) {\n                $this->log(\"결과 처리 실패: {$pair['event_id']} - \" . $e->getMessage(), 'ERROR');\n            }\n        }\n    }\n    \n    /**\n     * 웹소켓 알림 (선택사항)\n     */\n    private function notifyWebSocket($eventId, $filePath) {\n        // 웹소켓 서버가 있다면 여기서 알림 전송\n        // 예: WebSocket::send(\"new_result\", ['event_id' => $eventId, 'file' => $filePath]);\n    }\n    \n    /**\n     * 모니터링 중지\n     */\n    public function stop() {\n        $this->isRunning = false;\n    }\n    \n    /**\n     * 데몬 모드로 실행\n     */\n    public function runAsDaemon() {\n        // Windows에서는 데몬 모드가 제한적이므로 일반 실행\n        $this->watch();\n    }\n}\n\n// CLI에서 실행될 때\nif (php_sapi_name() === 'cli') {\n    $watcher = new ResultWatcher();\n    \n    // 시그널 핸들러 (Windows에서는 제한적)\n    if (function_exists('pcntl_signal')) {\n        pcntl_signal(SIGTERM, function() use ($watcher) {\n            $watcher->stop();\n        });\n        pcntl_signal(SIGINT, function() use ($watcher) {\n            $watcher->stop();\n        });\n    }\n    \n    echo \"결과 파일 모니터링을 시작합니다...\\n\";\n    echo \"중지하려면 Ctrl+C를 누르세요.\\n\";\n    \n    $watcher->runAsDaemon();\n} else {\n    // 웹에서 실행될 때\n    if (isset($_GET['action'])) {\n        $watcher = new ResultWatcher();\n        \n        switch ($_GET['action']) {\n            case 'start':\n                // 백그라운드에서 실행\n                if (strtoupper(substr(PHP_OS, 0, 3)) === 'WIN') {\n                    // Windows\n                    $command = \"php \" . __FILE__ . \" > nul 2>&1 &\";\n                    pclose(popen(\"start /B \" . $command, \"r\"));\n                } else {\n                    // Linux/Unix\n                    $command = \"php \" . __FILE__ . \" > /dev/null 2>&1 &\";\n                    exec($command);\n                }\n                echo json_encode(['success' => true, 'message' => '모니터링이 시작되었습니다.']);\n                break;\n                \n            case 'stop':\n                // 프로세스 종료 (Windows에서는 제한적)\n                echo json_encode(['success' => true, 'message' => '모니터링을 중지하려면 프로세스를 종료하세요.']);\n                break;\n                \n            case 'status':\n                $logFile = __DIR__ . \"/watcher.log\";\n                if (file_exists($logFile)) {\n                    $logs = file_get_contents($logFile);\n                    $lines = explode(\"\\n\", $logs);\n                    $recentLogs = array_slice($lines, -20); // 최근 20줄\n                    echo json_encode(['success' => true, 'logs' => $recentLogs]);\n                } else {\n                    echo json_encode(['success' => false, 'message' => '로그 파일이 없습니다.']);\n                }\n                break;\n                \n            default:\n                echo json_encode(['success' => false, 'message' => '잘못된 액션입니다.']);\n        }\n    }\n}\n?>\n","size_bytes":6282},"comp/save_event_info.php":{"content":"<?php\nheader('Content-Type: application/json; charset=utf-8');\n$data = json_decode(file_get_contents('php://input'), true);\n$comp_id = $data['comp_id'] ?? '';\n$event_no = $data['eventNo'] ?? '';\n$from_event = $data['fromEvent'] ?? '';\n$to_event = $data['toEvent'] ?? '';\n$recall = $data['recall'] ?? '';\n$heats = $data['heats'] ?? '';\n\n// 정규화: BOM 제거 및 허용 문자만 유지\n$comp_id = preg_replace('/\\x{FEFF}/u', '', $comp_id);\n$event_no = preg_replace('/\\x{FEFF}/u', '', $event_no);\n$from_event = preg_replace('/\\x{FEFF}/u', '', $from_event);\n$to_event = preg_replace('/\\x{FEFF}/u', '', $to_event);\n$recall = preg_replace('/\\x{FEFF}/u', '', $recall);\n$heats = preg_replace('/\\x{FEFF}/u', '', $heats);\n\n$comp_id = preg_replace('/[^0-9\\-]/', '', $comp_id);\n$event_no = preg_replace('/\\D+/', '', $event_no);\n$from_event = preg_replace('/\\D+/', '', $from_event);\n$to_event = preg_replace('/\\D+/', '', $to_event);\n\n$comp_id = trim($comp_id);\n$event_no = trim($event_no);\n$from_event = trim($from_event);\n$to_event = trim($to_event);\n$recall = trim($recall);\n$heats = trim($heats);\n\nif (!$comp_id || !$event_no) {\n    echo json_encode(['success' => false, 'error' => 'comp_id 또는 eventNo 누락']);\n    exit;\n}\n\nif (!preg_match('/^\\d{8}-\\d+$/', $comp_id)) {\n    echo json_encode(['success' => false, 'error' => '잘못된 대회 ID']);\n    exit;\n}\n\n$data_dir = __DIR__ . \"/data/$comp_id\";\n$event_info_file = \"$data_dir/event_info.json\";\n\n// 기존 이벤트 정보 로드\n$event_info = [];\nif (file_exists($event_info_file)) {\n    $content = file_get_contents($event_info_file);\n    $event_info = json_decode($content, true) ?: [];\n}\n\n// 현재 이벤트 정보 업데이트\n$event_info[$event_no] = [\n    'from_event' => $from_event,\n    'to_event' => $to_event,\n    'recall' => $recall,\n    'heats' => $heats,\n    'updated_at' => date('Y-m-d H:i:s')\n];\n\n// 파일 저장\nif (file_put_contents($event_info_file, json_encode($event_info, JSON_UNESCAPED_UNICODE | JSON_PRETTY_PRINT)) === false) {\n    echo json_encode(['success' => false, 'error' => '파일 저장 실패']);\n    exit;\n}\n\necho json_encode(['success' => true]);\n?>\n","size_bytes":2143},"comp/save_hits.php":{"content":"<?php\nheader('Content-Type: application/json; charset=utf-8');\n$data = json_decode(file_get_contents('php://input'), true);\n$comp_id = $data['comp_id'] ?? '';\n$event_no = $data['eventNo'] ?? '';\n// comp_id/event_no 정규화: BOM 제거 및 허용 문자만 유지\n$comp_id = preg_replace('/\\x{FEFF}/u', '', $comp_id);\n$event_no = preg_replace('/\\x{FEFF}/u', '', $event_no);\n$comp_id = preg_replace('/[^0-9\\-]/', '', $comp_id);\n$event_no = preg_replace('/\\D+/', '', $event_no);\n$comp_id = trim($comp_id);\n$event_no = trim($event_no);\n$hits = $data['hits'] ?? '';\nif (!$comp_id || !$event_no || !$hits || !is_array($hits)) {\n    echo json_encode(['success'=>false, 'error'=>'데이터 부족']);\n    exit;\n}\n// comp_id 형식 검증\nif (!preg_match('/^\\d{8}-\\d+$/', $comp_id)) {\n    echo json_encode(['success'=>false, 'error'=>'잘못된 대회 ID']);\n    exit;\n}\n$data_dir = __DIR__ . \"/data/$comp_id\";\nif (!is_dir($data_dir)) {\n    @mkdir($data_dir, 0777, true);\n}\n$file = \"$data_dir/players_hits_{$event_no}.json\";\nif (file_put_contents($file, json_encode($hits, JSON_UNESCAPED_UNICODE|JSON_PRETTY_PRINT)) === false) {\n    echo json_encode(['success'=>false, 'error'=>'저장 실패']);\n} else {\n    echo json_encode(['success'=>true]);\n}","size_bytes":1241},"comp/save_players.php":{"content":"<?php\n// POST: {\"eventNo\": \"1\", \"players\": [\"101\", \"102\", ...]}\n$data = json_decode(file_get_contents(\"php://input\"), true);\n$comp_id = $_GET['comp_id'] ?? '';\n$eventNo = $data['eventNo'] ?? '';\n$detailNo = $data['detailNo'] ?? '';\n\n// 정규화: BOM 제거 및 허용 문자만 유지\n$comp_id = preg_replace('/\\x{FEFF}/u', '', $comp_id);\n$eventNo = preg_replace('/\\x{FEFF}/u', '', $eventNo);\n$detailNo = preg_replace('/\\x{FEFF}/u', '', $detailNo);\n$comp_id = preg_replace('/[^0-9\\-]/', '', $comp_id);\n$eventNo = preg_replace('/\\D+/', '', $eventNo);\n$detailNo = preg_replace('/[^0-9\\-]/', '', $detailNo);\n$comp_id = trim($comp_id);\n$eventNo = trim($eventNo);\n$detailNo = trim($detailNo);\n$players = $data['players'] ?? [];\n\nif (!$comp_id || !$eventNo) {\n    echo json_encode(['success'=>false, 'error'=>'comp_id 또는 eventNo 누락']); exit;\n}\nif (!preg_match('/^\\d{8}-\\d+$/', $comp_id)) {\n    echo json_encode(['success'=>false, 'error'=>'잘못된 대회 ID']); exit;\n}\n\n$data_dir = __DIR__ . \"/data/$comp_id\";\nif (!is_dir($data_dir)) @mkdir($data_dir, 0777, true);\n\n// 세부번호가 있으면 세부번호별 파일 사용, 없으면 원본 이벤트 번호 사용\n$file = $detailNo ? \"$data_dir/players_{$detailNo}.txt\" : \"$data_dir/players_{$eventNo}.txt\";\n\n$content = implode(\"\\n\", $players);\nif (file_put_contents($file, $content)!==false) {\n    echo json_encode(['success'=>true]);\n} else {\n    echo json_encode(['success'=>false, 'error'=>'파일 저장 실패']);\n}\n?>","size_bytes":1483},"comp/save_round_info.php":{"content":"<?php\nheader('Content-Type: application/json; charset=utf-8');\n\n$comp_id = $_GET['comp_id'] ?? '';\n$comp_id = preg_replace('/[^\\d-]/', '', $comp_id);\n\nif (!$comp_id) {\n    echo json_encode(['success' => false, 'error' => 'comp_id 누락']);\n    exit;\n}\n\n$data_dir = __DIR__ . \"/data/$comp_id\";\nif (!is_dir($data_dir)) {\n    @mkdir($data_dir, 0777, true);\n}\n\n$runorder_file = \"$data_dir/RunOrder_Tablet.txt\";\n$round_info_file = \"$data_dir/round_info.json\";\n\nif (!file_exists($runorder_file)) {\n    echo json_encode(['success' => false, 'error' => 'RunOrder 파일을 찾을 수 없습니다']);\n    exit;\n}\n\n// RunOrder 파일 읽기\n$events = [];\n$lines = file($runorder_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\nforeach ($lines as $line) {\n    // Remove BOM from line\n    $line = preg_replace('/\\x{FEFF}/u', '', $line);\n    $line = str_replace([\"\\xEF\\xBB\\xBF\", \"\\xFEFF\", \"\\uFEFF\"], '', $line);\n    $line = preg_replace('/[\\x00-\\x1F\\x7F-\\x9F]/', '', $line);\n    \n    if (preg_match('/^bom/', $line)) continue;\n    $cols = array_map('trim', explode(',', $line));\n    $dance_abbr = [];\n    for ($i=6; $i<=10; $i++) {\n        if (isset($cols[$i]) && trim($cols[$i])!=='') $dance_abbr[] = $cols[$i];\n    }\n    // 경기 이벤트만 처리\n    if (count($dance_abbr) > 0) {\n        $events[] = [\n            'raw_no' => preg_replace('/\\x{FEFF}/u', '', $cols[0] ?? ''), // Remove BOM from raw_no\n            'name' => $cols[1] ?? '',\n            'round_type' => $cols[2] ?? '',\n            'round_num' => $cols[3] ?? '',\n        ];\n    }\n}\n\n// 라운드 정보 계산 (RunOrder_Tablet.txt 기반)\nfunction calculateRoundInfo($events) {\n    $name_groups = [];\n    foreach ($events as $idx => $evt) {\n        $name = $evt['name'];\n        if (!isset($name_groups[$name])) {\n            $name_groups[$name] = [];\n        }\n        $name_groups[$name][] = ['idx' => $idx, 'event' => $evt];\n    }\n    \n    $round_info = [];\n    foreach ($name_groups as $name => $group) {\n        $total_events = count($group);\n        \n        // Sort by event number to get correct order\n        usort($group, function($a, $b) {\n            return intval($a['event']['raw_no']) - intval($b['event']['raw_no']);\n        });\n        \n        foreach ($group as $pos => $item) {\n            $event_no = $item['event']['raw_no'];\n            $stage_text = '';\n            \n            if ($total_events === 1) {\n                $stage_text = 'Final';\n            } else if ($total_events === 2) {\n                if ($pos === 0) $stage_text = 'Semi-Final';\n                else $stage_text = 'Final';\n            } else if ($total_events === 3) {\n                if ($pos === 0) $stage_text = 'Round 1';\n                else if ($pos === 1) $stage_text = 'Semi-Final';\n                else $stage_text = 'Final';\n            } else if ($total_events === 4) {\n                if ($pos === 0) $stage_text = 'Round 1';\n                else if ($pos === 1) $stage_text = 'Round 2';\n                else if ($pos === 2) $stage_text = 'Semi-Final';\n                else $stage_text = 'Final';\n            } else if ($total_events === 5) {\n                if ($pos === 0) $stage_text = 'Round 1';\n                else if ($pos === 1) $stage_text = 'Round 2';\n                else if ($pos === 2) $stage_text = 'Round 3';\n                else if ($pos === 3) $stage_text = 'Semi-Final';\n                else $stage_text = 'Final';\n            } else {\n                $stage_text = ($pos + 1) . '/' . $total_events;\n            }\n            \n            $round_info[$event_no] = $stage_text;\n        }\n    }\n    \n    return $round_info;\n}\n\n$round_info = calculateRoundInfo($events);\n\n// 라운드 정보를 파일에 저장\n$save_data = [\n    'events' => $events,\n    'round_info' => $round_info,\n    'updated_at' => date('Y-m-d H:i:s')\n];\n\nif (file_put_contents($round_info_file, json_encode($save_data, JSON_UNESCAPED_UNICODE | JSON_PRETTY_PRINT)) === false) {\n    echo json_encode(['success' => false, 'error' => '라운드 정보 저장 실패']);\n} else {\n    echo json_encode(['success' => true, 'message' => '라운드 정보가 저장되었습니다']);\n}\n?>\n","size_bytes":4143},"comp/save_runorder_info.php":{"content":"<?php\nheader('Content-Type: application/json');\n\n$input = json_decode(file_get_contents('php://input'), true);\n$comp_id = $input['comp_id'] ?? '';\n$event_no = $input['eventNo'] ?? '';\n$recall = $input['recall'] ?? '';\n$heats = $input['heats'] ?? '';\n\n// 디버그: 입력 데이터 확인\nerror_log(\"Save request: comp_id='$comp_id', event_no='$event_no', recall='$recall', heats='$heats'\");\n\nif (!$comp_id || !$event_no) {\n    echo json_encode(['success' => false, 'error' => '필수 파라미터가 없습니다.']);\n    exit;\n}\n\n$data_dir = __DIR__ . \"/data/$comp_id\";\n$runorder_file = \"$data_dir/RunOrder_Tablet.txt\";\n\nif (!file_exists($runorder_file)) {\n    echo json_encode(['success' => false, 'error' => 'RunOrder_Tablet.txt 파일이 없습니다.']);\n    exit;\n}\n\n// 파일 읽기\n$lines = file($runorder_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n$updated = false;\n\nforeach ($lines as $idx => $line) {\n    $cols = explode(',', $line);\n    if (count($cols) >= 13) {\n        // 이벤트 번호와 세부번호 모두 비교\n        $current_base_no = preg_replace('/\\x{FEFF}/u', '', $cols[0] ?? '');\n        $current_base_no = preg_replace('/\\D+/', '', $current_base_no);\n        $current_detail_no = trim($cols[13] ?? '');\n        \n        // 현재 라인의 실제 이벤트 번호 (세부번호가 있으면 세부번호, 없으면 기본번호)\n        $current_event_no = !empty($current_detail_no) ? $current_detail_no : $current_base_no;\n        \n        // 디버그: 28번 이벤트 매칭 확인\n        if ($current_base_no === '28') {\n            error_log(\"Found event 28: base_no='$current_base_no', detail_no='$current_detail_no', current_event_no='$current_event_no', target='$event_no'\");\n        }\n        \n        // 디버그: 이벤트 번호 매칭 확인\n        error_log(\"Event matching: base_no='$current_base_no', detail_no='$current_detail_no', current_event_no='$current_event_no', target='$event_no'\");\n        \n        if ($current_event_no === $event_no) {\n            // Recall 업데이트 (5번째 컬럼, 인덱스 4)\n            $cols[4] = $recall;\n            \n            // Heats 업데이트 (6번째 컬럼, 인덱스 5)\n            // 컬럼이 부족하면 추가\n            while (count($cols) < 6) {\n                $cols[] = '';\n            }\n            $cols[5] = $heats;\n            \n            $lines[$idx] = implode(',', $cols);\n            $updated = true;\n            error_log(\"Updated event $event_no: recall=$recall, heats=$heats\");\n            error_log(\"Updated line: \" . $lines[$idx]);\n            break;\n        }\n    }\n}\n\nif ($updated) {\n    // 파일 저장\n    $result = file_put_contents($runorder_file, implode(\"\\n\", $lines) . \"\\n\");\n    if ($result !== false) {\n        // 저장 후 검증\n        $verify_lines = file($runorder_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n        $verification_passed = false;\n        \n        foreach ($verify_lines as $line) {\n            $cols = explode(',', $line);\n            if (count($cols) >= 13) {\n                $current_base_no = preg_replace('/\\x{FEFF}/u', '', $cols[0] ?? '');\n                $current_base_no = preg_replace('/\\D+/', '', $current_base_no);\n                $current_detail_no = trim($cols[13] ?? '');\n                $current_event_no = !empty($current_detail_no) ? $current_detail_no : $current_base_no;\n                \n                if ($current_event_no === $event_no) {\n                    $saved_recall = $cols[4] ?? '';\n                    $saved_heats = $cols[5] ?? '';\n                    error_log(\"Verification: Event $event_no, saved recall=$saved_recall, saved heats=$saved_heats\");\n                    $verification_passed = true;\n                    break;\n                }\n            }\n        }\n        \n        echo json_encode([\n            'success' => true, \n            'verified' => $verification_passed,\n            'message' => '이벤트 정보가 저장되었습니다.'\n        ]);\n    } else {\n        echo json_encode(['success' => false, 'error' => '파일 저장 실패']);\n    }\n} else {\n    echo json_encode(['success' => false, 'error' => '해당 이벤트를 찾을 수 없습니다.']);\n}\n?>\n","size_bytes":4200},"comp/scoring_dashboard.php":{"content":"<?php\nsession_start();\n\n$comp_id = $_GET['comp_id'] ?? '';\n$comp_id = preg_replace('/\\x{FEFF}/u', '', $comp_id);\n$comp_id = preg_replace('/[^\\d-]/', '', $comp_id);\n\n// Language setting\n$lang = $_GET['lang'] ?? 'ko';\nif (!in_array($lang, ['ko', 'en', 'zh', 'ja'])) {\n    $lang = 'ko';\n}\n\n// Language texts\n$texts = [\n    'ko' => [\n        'title' => '심사위원 채점 대시보드',\n        'judge_info' => '심사위원',\n        'logout' => '로그아웃',\n        'competition' => '대회',\n        'no_events' => '등록된 이벤트가 없습니다',\n        'contact_admin' => '대회 관리자에게 문의하세요.',\n        'scoring_complete' => '채점 완료',\n        'scoring_pending' => '채점 대기',\n        'round' => '라운드',\n        'dances' => '종목',\n        'score' => '채점하기',\n        'view_results' => '결과보기',\n        'switch_lang' => 'English',\n        'not_assigned' => '배정되지 않음',\n        'panel_info' => '패널',\n        'scoring_not_allowed' => '채점 불가'\n    ],\n    'en' => [\n        'title' => 'Judge Scoring Dashboard',\n        'judge_info' => 'Judge',\n        'logout' => 'Logout',\n        'competition' => 'Competition',\n        'no_events' => 'No events registered',\n        'contact_admin' => 'Please contact the competition administrator.',\n        'scoring_complete' => 'Scoring Complete',\n        'scoring_pending' => 'Pending',\n        'round' => 'Round',\n        'dances' => 'Dances',\n        'score' => 'Score',\n        'view_results' => 'View Results',\n        'switch_lang' => '한국어',\n        'not_assigned' => 'Not Assigned',\n        'panel_info' => 'Panel',\n        'scoring_not_allowed' => 'Not Allowed'\n    ],\n    'zh' => [\n        'title' => '评委评分仪表板',\n        'judge_info' => '评委',\n        'logout' => '退出登录',\n        'competition' => '比赛',\n        'no_events' => '没有注册的赛事',\n        'contact_admin' => '请联系比赛管理员。',\n        'scoring_complete' => '评分完成',\n        'scoring_pending' => '待评分',\n        'round' => '轮次',\n        'dances' => '舞种',\n        'score' => '评分',\n        'view_results' => '查看结果',\n        'switch_lang' => 'English',\n        'not_assigned' => '未分配',\n        'panel_info' => '面板',\n        'scoring_not_allowed' => '不允许评分'\n    ],\n    'ja' => [\n        'title' => '審査員採点ダッシュボード',\n        'judge_info' => '審査員',\n        'logout' => 'ログアウト',\n        'competition' => '大会',\n        'no_events' => '登録されたイベントがありません',\n        'contact_admin' => '大会管理者にお問い合わせください。',\n        'scoring_complete' => '採点完了',\n        'scoring_pending' => '採点待ち',\n        'round' => 'ラウンド',\n        'dances' => '種目',\n        'score' => '採点',\n        'view_results' => '結果表示',\n        'switch_lang' => 'English',\n        'not_assigned' => '未割り当て',\n        'panel_info' => 'パネル',\n        'scoring_not_allowed' => '採点不可'\n    ]\n];\n\n$t = $texts[$lang];\n\n// Check if judge is logged in\nif (!isset($_SESSION['scoring_logged_in']) || !$_SESSION['scoring_logged_in'] || $_SESSION['scoring_comp_id'] !== $comp_id) {\n    header(\"Location: scoring_login.php?comp_id=\" . urlencode($comp_id));\n    exit;\n}\n\n// Load competition info\n$data_dir = __DIR__ . \"/data/$comp_id\";\n$info_file = \"$data_dir/info.json\";\n\nif (!file_exists($info_file)) {\n    echo \"<h1>대회 정보를 찾을 수 없습니다.</h1>\";\n    exit;\n}\n\n$info = json_decode(file_get_contents($info_file), true);\n\n// Load events\n$runorder_file = \"$data_dir/RunOrder_Tablet.txt\";\n$events = [];\n$multievent_groups = []; // 멀티 이벤트 그룹 관리\n\nif (file_exists($runorder_file)) {\n    $lines = file($runorder_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    foreach ($lines as $line) {\n        if (preg_match('/^bom/', $line)) continue;\n        $cols = array_map('trim', explode(',', $line));\n        \n        // Check if it's a competition event (has dances)\n        $has_dance = false;\n        for ($i = 6; $i <= 10; $i++) {\n            if (isset($cols[$i]) && $cols[$i] !== '') {\n                $has_dance = true;\n                break;\n            }\n        }\n        \n        if ($has_dance) {\n            // Remove BOM from event number\n            $base_no_raw = preg_replace('/\\x{FEFF}/u', '', $cols[0]);\n            $base_no_raw = str_replace([\"\\xEF\\xBB\\xBF\", \"\\xFEFF\", \"\\uFEFF\"], '', $base_no_raw);\n            \n            // 세부번호는 14번째 컬럼(인덱스 13)에서 가져오기\n            $detail_no = trim($cols[13] ?? '');\n            $event_no = !empty($detail_no) ? $detail_no : $base_no_raw;\n            $base_event_no = preg_replace('/\\D+/', '', $base_no_raw); // 숫자만 추출\n            \n            // 디버그: 이벤트 파싱 확인\n            error_log(\"Event parsing - base_no_raw: '{$base_no_raw}', detail_no: '{$detail_no}', event_no: '{$event_no}', base_event_no: '{$base_event_no}'\");\n            \n            $event_data = [\n                'no' => $event_no,\n                'base_no' => $base_event_no,\n                'detail_no' => $detail_no,\n                'name' => $cols[1],\n                'round_type' => $cols[2],\n                'round_num' => $cols[3],\n                'round_display' => $cols[2], // 원본 라운드 정보를 직접 사용\n                'panel_code' => $cols[11] ?? '',\n                'dances' => []\n            ];\n            \n            for ($i = 6; $i <= 10; $i++) {\n                if (!empty($cols[$i])) {\n                    // 원본 숫자 코드를 그대로 사용 (파일명과 일치시키기 위해)\n                    $event_data['dances'][] = $cols[$i];\n                    \n                    // 디버그: 종목 코드 확인\n                    error_log(\"Event {$event_data['no']}: dance code {$cols[$i]} added\");\n                }\n            }\n            \n            // 멀티 이벤트 그룹에 추가\n            if (!isset($multievent_groups[$base_event_no])) {\n                $multievent_groups[$base_event_no] = [];\n            }\n            $multievent_groups[$base_event_no][] = $event_data;\n            \n            $events[] = $event_data;\n        }\n    }\n}\n\n// 멀티 이벤트 그룹 정리 (세부번호가 있는 경우만)\n$multievent_events = [];\nforeach ($multievent_groups as $base_no => $group) {\n    if (count($group) > 1) {\n        // 세부번호가 있는 멀티 이벤트\n        $multievent_events[$base_no] = $group;\n    }\n}\n\n// Load round info from RunOrder_Tablet.txt (primary source)\n$round_info = [];\n\n// Load dance name mapping\n$dance_mapping = [];\n$dance_name_file = \"$data_dir/DanceName.txt\";\nif (file_exists($dance_name_file)) {\n    $lines = file($dance_name_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    foreach ($lines as $line) {\n        $line = preg_replace('/\\x{FEFF}/u', '', $line);\n        $line = str_replace([\"\\xEF\\xBB\\xBF\", \"\\xFEFF\", \"\\uFEFF\"], '', $line);\n        $line = preg_replace('/[\\x00-\\x1F\\x7F-\\x9F]/', '', $line);\n        \n        if (preg_match('/^bom/', $line)) continue;\n        $cols = array_map('trim', explode(',', $line));\n        if (count($cols) >= 3 && is_numeric($cols[0])) {\n            $dance_mapping[$cols[0]] = $cols[1]; // 숫자 -> 댄스명\n        }\n    }\n}\n\n// 하드코딩된 댄스 매핑 (백업)\n$dance_mapping = [\n    '1' => 'Waltz',\n    '2' => 'Tango', \n    '3' => 'Viennese Waltz',\n    '4' => 'Slow Foxtrot',\n    '5' => 'Quickstep',\n    '6' => 'Cha Cha Cha',\n    '7' => 'Samba',\n    '8' => 'Rumba',\n    '9' => 'Paso Doble',\n    '10' => 'Jive',\n    '11' => 'Freestyle',\n    '12' => 'Swing',\n    '13' => 'Argentine Tango',\n    '14' => 'Handicap',\n    '15' => 'Formation Team'\n];\n\n// 댄스 변환 함수\nfunction convertDanceNumber($dance_number, $dance_mapping) {\n    $dance_number = trim($dance_number);\n    return $dance_mapping[$dance_number] ?? $dance_number;\n}\n\n// 디버그: 댄스 매핑 확인\nerror_log(\"Dance mapping loaded: \" . print_r($dance_mapping, true));\n\n\n// Load panel list and check judge's panels\n$panel_list = [];\n$panel_file = \"$data_dir/panel_list.json\";\nif (file_exists($panel_file)) {\n    $panel_data = json_decode(file_get_contents($panel_file), true);\n    if ($panel_data) {\n        $panel_list = $panel_data;\n    }\n}\n\n// Get current judge's panels\n$current_judge_id = $_SESSION['scoring_judge_id'] ?? '';\n$judge_panels = [];\nforeach ($panel_list as $panel) {\n    // 심사위원 ID를 문자열과 숫자 모두로 비교\n    if ($panel['adj_code'] === $current_judge_id || \n        $panel['adj_code'] === (string)$current_judge_id || \n        (string)$panel['adj_code'] === $current_judge_id) {\n        $judge_panels[] = $panel['panel_code'];\n    }\n}\n\n// 디버그 정보 추가\nerror_log(\"Current judge ID: '{$current_judge_id}' (type: \" . gettype($current_judge_id) . \")\");\nerror_log(\"Panel list loaded: \" . count($panel_list) . \" panels\");\nerror_log(\"Judge panels: \" . implode(',', $judge_panels));\n\n// 패널 리스트의 심사위원 ID들도 로그로 확인\n$all_judge_ids = array_unique(array_column($panel_list, 'adj_code'));\nerror_log(\"All judge IDs in panel: \" . implode(',', $all_judge_ids));\n\n// Calculate round info from RunOrder_Tablet.txt data\nfunction calculateRoundDisplay($event_data, $all_events) {\n    $event_name = $event_data['name'];\n    $event_no = $event_data['no'];\n    \n    // Find all events with same name\n    $same_name_events = array_filter($all_events, function($e) use ($event_name) {\n        return $e['name'] === $event_name;\n    });\n    \n    $total_events = count($same_name_events);\n    if ($total_events <= 1) {\n        return 'Final';\n    }\n    \n    // Sort by event number to get position\n    $sorted_events = array_values($same_name_events);\n    usort($sorted_events, function($a, $b) {\n        return intval($a['no']) - intval($b['no']);\n    });\n    \n    $position = 0;\n    foreach ($sorted_events as $idx => $evt) {\n        if ($evt['no'] === $event_no) {\n            $position = $idx;\n            break;\n        }\n    }\n    \n    // Calculate round display based on position and total\n    if ($total_events === 2) {\n        return $position === 0 ? 'Semi-Final' : 'Final';\n    } else if ($total_events === 3) {\n        if ($position === 0) return 'Round 1';\n        else if ($position === 1) return 'Semi-Final';\n        else return 'Final';\n    } else if ($total_events === 4) {\n        if ($position === 0) return 'Round 1';\n        else if ($position === 1) return 'Round 2';\n        else if ($position === 2) return 'Semi-Final';\n        else return 'Final';\n    } else if ($total_events === 5) {\n        if ($position === 0) return 'Round 1';\n        else if ($position === 1) return 'Round 2';\n        else if ($position === 2) return 'Round 3';\n        else if ($position === 3) return 'Semi-Final';\n        else return 'Final';\n    } else {\n        return ($position + 1) . '/' . $total_events;\n    }\n}\n\n// Merge round info into events and check scoring eligibility\nforeach ($events as $idx => &$event) {\n    // Use original round_display from RunOrder_Tablet.txt (already set during parsing)\n    // Only calculate if round_display is empty\n    if (empty($event['round_display'])) {\n        $event['round_display'] = calculateRoundDisplay($event, $events);\n    }\n    \n    // Check if judge can score this event (panel match)\n    $panel_code = $event['panel_code'] ?? '';\n    \n    // 정확한 패널 매칭 로직\n    if (empty($judge_panels)) {\n        // 패널 정보가 없는 경우 모든 이벤트 채점 가능\n        $event['can_score'] = true;\n        $reason = \"no_panel_info\";\n    } else {\n        // 패널 코드가 비어있거나 'N/A'인 경우, 또는 심사위원 패널에 정확히 포함된 경우만 채점 가능\n        $event['can_score'] = empty($panel_code) || $panel_code === 'N/A' || in_array($panel_code, $judge_panels);\n        $reason = $event['can_score'] ? \"panel_match\" : \"no_panel_match\";\n    }\n    \n    $event['panel_status'] = $event['can_score'] ? 'eligible' : 'not_eligible';\n    \n    // 디버그 정보 추가\n    error_log(\"Event {$event['no']}: panel_code='{$panel_code}', judge_panels=\" . implode(',', $judge_panels) . \", can_score=\" . ($event['can_score'] ? 'true' : 'false') . \", reason={$reason}\");\n}\nunset($event); // Break the reference\n\n// Check which events have scores\n$events_with_scores = [];\n$judge_id = $_SESSION['scoring_judge_id'] ?? '';\n\nforeach ($events as $event) {\n    $event_no = $event['no'];\n    $has_scores = false;\n    \n    // 1. 기본 점수 파일 확인\n    $scores_file = \"$data_dir/scores_{$event_no}.json\";\n    if (file_exists($scores_file)) {\n        $has_scores = true;\n    } else {\n        // 2. 개별 .adj 파일 확인 (모든 라운드/이벤트에 적용)\n        $all_dances_scored = true;\n        \n        foreach ($event['dances'] as $dance) {\n            $adj_file = \"$data_dir/{$event_no}_{$dance}_{$judge_id}.adj\";\n            if (!file_exists($adj_file)) {\n                $all_dances_scored = false;\n                break;\n            }\n        }\n        \n        $has_scores = $all_dances_scored;\n        \n        // 디버그: 개별 종목 파일 확인 로그\n        error_log(\"Event {$event_no}: checking .adj files for judge {$judge_id}\");\n        foreach ($event['dances'] as $dance) {\n            $adj_file = \"$data_dir/{$event_no}_{$dance}_{$judge_id}.adj\";\n            $exists = file_exists($adj_file) ? 'EXISTS' : 'MISSING';\n            error_log(\"  - {$adj_file}: {$exists}\");\n        }\n        error_log(\"  - Result: \" . ($has_scores ? 'COMPLETED' : 'INCOMPLETE'));\n    }\n    \n    $events_with_scores[$event_no] = $has_scores;\n}\n\nfunction h($s) { return htmlspecialchars($s ?? ''); }\n?>\n<!DOCTYPE html>\n<html lang=\"<?=h($lang)?>\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title><?=h($t['title'])?> | <?=h($info['title'])?></title>\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\n    <style>\n        * {\n            box-sizing: border-box;\n        }\n        \n        body { \n            background: #f5f7fa; \n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; \n            margin: 0; \n            padding: 10px;\n            font-size: 16px;\n            line-height: 1.4;\n        }\n        \n        .container { \n            max-width: 100%; \n            margin: 0 auto; \n            background: #fff; \n            border-radius: 8px; \n            padding: 15px; \n            box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n        }\n        \n        .header {\n            margin-bottom: 20px;\n            padding-bottom: 15px;\n            border-bottom: 1px solid #e9ecef;\n            margin-top: 50px;\n        }\n        \n        h1 { \n            color: #333; \n            margin: 0 0 10px 0; \n            font-size: 1.4em;\n            font-weight: 700;\n        }\n        \n        .judge-info {\n            background: #e3f2fd;\n            padding: 8px 12px;\n            border-radius: 6px;\n            color: #1976d2;\n            font-weight: 600;\n            font-size: 0.9em;\n            margin-bottom: 10px;\n        }\n        \n        .logout-btn {\n            background: #dc3545;\n            color: #fff;\n            border: none;\n            padding: 8px 16px;\n            border-radius: 6px;\n            cursor: pointer;\n            text-decoration: none;\n            font-size: 12px;\n            font-weight: 600;\n            display: inline-block;\n            text-align: center;\n            transition: all 0.2s;\n        }\n        \n        .logout-btn:active {\n            background: #c82333;\n            transform: translateY(1px);\n        }\n        \n        .filter-btn {\n            background: #28a745;\n            color: #fff;\n            border: none;\n            padding: 8px 16px;\n            border-radius: 6px;\n            cursor: pointer;\n            text-decoration: none;\n            font-size: 12px;\n            font-weight: 600;\n            display: inline-block;\n            text-align: center;\n            transition: all 0.2s;\n        }\n        \n        .filter-btn:active {\n            background: #218838;\n            transform: translateY(1px);\n        }\n        \n        .filter-btn.active {\n            background: #6c757d;\n        }\n        \n        .filter-btn.active:active {\n            background: #5a6268;\n        }\n        \n        .comp-info {\n            background: #f8f9fa; \n            padding: 12px; \n            border-radius: 6px; \n            margin-bottom: 20px; \n            text-align: center;\n            font-size: 0.9em;\n        }\n        \n        .events-grid {\n            display: flex;\n            flex-direction: column;\n            gap: 12px;\n            margin-bottom: 20px;\n        }\n        \n        .event-card {\n            background: #fff;\n            border: 2px solid #e9ecef;\n            border-radius: 8px;\n            padding: 15px;\n            transition: all 0.2s;\n            cursor: pointer;\n        }\n        \n        /* 멀티 이벤트 카드 스타일 */\n        .multievent-card {\n            background: #fff;\n            border: 2px solid #e9ecef;\n            border-radius: 8px;\n            padding: 15px;\n            transition: all 0.2s;\n            cursor: pointer;\n        }\n        \n        .multievent-header {\n            display: flex;\n            align-items: center;\n            margin-bottom: 15px;\n            padding-bottom: 10px;\n            border-bottom: 1px solid #e9ecef;\n        }\n        \n        .multievent-number {\n            font-size: 1.8em;\n            font-weight: 700;\n            color: #667eea;\n            margin-right: 15px;\n            line-height: 1;\n        }\n        \n        .multievent-title {\n            font-size: 1.1em;\n            font-weight: 600;\n            color: #333;\n            flex: 1;\n        }\n        \n        .sub-events {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n            gap: 10px;\n            margin-bottom: 15px;\n        }\n        \n        .sub-event {\n            background: #f8f9fa;\n            border: 1px solid #dee2e6;\n            border-radius: 6px;\n            padding: 10px;\n            text-align: center;\n        }\n        \n        .sub-event-number {\n            font-size: 1.2em;\n            font-weight: 700;\n            color: #495057;\n            margin-bottom: 5px;\n        }\n        \n        .sub-event-name {\n            font-size: 0.9em;\n            color: #6c757d;\n            margin-bottom: 8px;\n        }\n        \n        .sub-event-dances {\n            font-size: 0.8em;\n            color: #868e96;\n            font-style: italic;\n        }\n        \n        .event-card:active {\n            transform: translateY(1px);\n            box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n        }\n        \n        .event-card.scored {\n            border-color: #28a745;\n            background: #f8fff9;\n        }\n        \n        .status-badge {\n            display: inline-block;\n            padding: 4px 8px;\n            border-radius: 4px;\n            font-size: 11px;\n            font-weight: 600;\n            margin-bottom: 8px;\n        }\n        \n        .status-pending {\n            background: #fff3cd;\n            color: #856404;\n        }\n        \n        .status-completed {\n            background: #d4edda;\n            color: #155724;\n        }\n        \n        .status-not-assigned {\n            background: #f8d7da;\n            color: #721c24;\n        }\n        \n        .event-card.not-eligible {\n            border-color: #dc3545;\n            background: #fff5f5;\n            opacity: 0.7;\n        }\n        \n        .btn-disabled {\n            background: #6c757d !important;\n            color: #fff !important;\n            cursor: not-allowed !important;\n            opacity: 0.6;\n        }\n        \n        .btn-disabled:active {\n            transform: none !important;\n        }\n        \n        .panel-info {\n            font-size: 0.8em;\n            color: #666;\n            margin-bottom: 8px;\n            padding: 4px 8px;\n            background: #f8f9fa;\n            border-radius: 4px;\n            display: inline-block;\n        }\n        \n        .event-number {\n            font-size: 1.8em;\n            font-weight: 700;\n            color: #667eea;\n            margin-bottom: 4px;\n            line-height: 1;\n        }\n        \n        .event-title {\n            font-size: 1.1em;\n            font-weight: 600;\n            color: #333;\n            margin-bottom: 8px;\n            line-height: 1.3;\n        }\n        \n        .event-details {\n            color: #666;\n            font-size: 0.85em;\n            margin-bottom: 12px;\n            line-height: 1.4;\n        }\n        \n        .event-actions {\n            display: flex;\n            flex-direction: column;\n            gap: 8px;\n        }\n        \n        .btn {\n            padding: 12px 16px;\n            border: none;\n            border-radius: 6px;\n            cursor: pointer;\n            text-decoration: none;\n            font-size: 14px;\n            font-weight: 600;\n            transition: all 0.2s;\n            text-align: center;\n            display: block;\n        }\n        \n        .btn:active {\n            transform: translateY(1px);\n        }\n        \n        .btn-primary {\n            background: #667eea;\n            color: #fff;\n        }\n        \n        .btn-primary:active {\n            background: #5a6fd8;\n        }\n        \n        .btn-info {\n            background: #17a2b8;\n            color: #fff;\n        }\n        \n        .btn-info:active {\n            background: #138496;\n        }\n        \n        \n        .top-controls {\n            position: absolute;\n            top: 15px;\n            right: 15px;\n            display: flex;\n            gap: 10px;\n            align-items: center;\n        }\n        \n        .lang-switch {\n            background: #667eea;\n            color: #fff;\n            border: none;\n            padding: 8px 12px;\n            border-radius: 6px;\n            font-size: 12px;\n            font-weight: 600;\n            cursor: pointer;\n            text-decoration: none;\n            transition: all 0.2s;\n            appearance: none;\n            -webkit-appearance: none;\n            -moz-appearance: none;\n            background-image: url(\"data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='white' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6,9 12,15 18,9'%3e%3c/polyline%3e%3c/svg%3e\");\n            background-repeat: no-repeat;\n            background-position: right 8px center;\n            background-size: 12px;\n            padding-right: 30px;\n        }\n        \n        .lang-switch:active {\n            background-color: #5a6fd8;\n            transform: translateY(1px);\n        }\n        \n        .lang-switch option {\n            background: #667eea;\n            color: #fff;\n            padding: 8px;\n        }\n        \n        .container {\n            position: relative;\n        }\n        \n        .empty-state {\n            text-align: center;\n            padding: 40px 20px;\n            color: #666;\n        }\n        \n        .empty-state h3 {\n            margin: 0 0 10px 0;\n            color: #333;\n            font-size: 1.2em;\n        }\n        \n        /* 태블릿 환경 (768px 이상) */\n        @media (min-width: 768px) {\n            body {\n                padding: 20px;\n            }\n            \n            .container {\n                padding: 25px;\n                border-radius: 12px;\n            }\n            \n            .header {\n                margin-bottom: 25px;\n                margin-top: 60px;\n            }\n            \n            h1 {\n                font-size: 1.6em;\n                margin-bottom: 0;\n            }\n            \n            .judge-info {\n                margin-bottom: 0;\n                font-size: 0.95em;\n            }\n            \n            .top-controls {\n                top: 25px;\n                right: 25px;\n            }\n            \n            .logout-btn {\n                padding: 10px 18px;\n                font-size: 13px;\n            }\n            \n            .events-grid {\n                display: grid;\n                grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n                gap: 15px;\n            }\n            \n            .event-actions {\n                flex-direction: row;\n                gap: 8px;\n            }\n            \n            .btn {\n                flex: 1;\n                padding: 10px 12px;\n                font-size: 13px;\n            }\n            \n            .lang-switch {\n                top: 25px;\n                right: 25px;\n                padding: 10px 32px 10px 14px;\n                font-size: 13px;\n            }\n        }\n        \n        /* 큰 태블릿/데스크톱 (1024px 이상) */\n        @media (min-width: 1024px) {\n            .container {\n                max-width: 1200px;\n                padding: 30px;\n            }\n            \n            .events-grid {\n                grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n                gap: 20px;\n            }\n            \n            .event-card {\n                padding: 20px;\n            }\n            \n            .event-number {\n                font-size: 2em;\n            }\n            \n            .event-title {\n                font-size: 1.2em;\n            }\n            \n            .event-details {\n                font-size: 0.9em;\n            }\n            \n            .top-controls {\n                top: 30px;\n                right: 30px;\n            }\n            \n            .lang-switch {\n                padding: 10px 36px 10px 16px;\n                font-size: 14px;\n            }\n            \n            .logout-btn {\n                padding: 10px 20px;\n                font-size: 14px;\n            }\n            \n            .lang-switch:hover {\n                background: #5a6fd8;\n            }\n        }\n    </style>\n</head>\n<body>\n<div class=\"container\">\n    <div class=\"top-controls\">\n        <button id=\"filterToggle\" class=\"filter-btn\" onclick=\"toggleEventFilter()\">간단히</button>\n        <select class=\"lang-switch\" onchange=\"window.location.href='?comp_id=<?=h($comp_id)?>&lang=' + this.value\">\n            <option value=\"ko\" <?=$lang === 'ko' ? 'selected' : ''?>>한국어</option>\n            <option value=\"en\" <?=$lang === 'en' ? 'selected' : ''?>>English</option>\n            <option value=\"zh\" <?=$lang === 'zh' ? 'selected' : ''?>>中文</option>\n            <option value=\"ja\" <?=$lang === 'ja' ? 'selected' : ''?>>日本語</option>\n        </select>\n        <a href=\"scoring_logout.php?comp_id=<?=h($comp_id)?>\" class=\"logout-btn\"><?=h($t['logout'])?></a>\n    </div>\n    \n    <div class=\"header\">\n        <div>\n            <h1><?=h($t['title'])?></h1>\n            <div class=\"judge-info\">\n                <?=h($_SESSION['scoring_judge_name'])?> (<?=h($_SESSION['scoring_judge_country'])?>) - <?=h($t['judge_info'])?> #<?=h($_SESSION['scoring_judge_id'])?>\n            </div>\n        </div>\n    </div>\n    \n    <div class=\"comp-info\" style=\"background: #f8f9fa; padding: 15px; border-radius: 8px; margin-bottom: 30px; text-align: center;\">\n        <strong><?=h($info['title'])?></strong><br>\n        <?=h($info['date'])?> | <?=h($info['place'])?>\n        \n        <!-- 디버그 정보 추가 -->\n        <div style=\"margin-top: 10px; font-size: 12px; color: #666; text-align: left;\">\n            <strong>디버그 정보:</strong><br>\n            심사위원 ID: <?=h($_SESSION['scoring_judge_id'] ?? 'N/A')?><br>\n            심사위원 이름: <?=h($_SESSION['scoring_judge_name'] ?? 'N/A')?><br>\n            패널 개수: <?=count($judge_panels)?><br>\n            심사위원 패널: <?=implode(', ', $judge_panels)?><br>\n            이벤트 총 개수: <?=count($events)?><br>\n            멀티 이벤트 개수: <?=count($multievent_events)?><br>\n            댄스 매핑: <?=implode(', ', array_slice($dance_mapping, 0, 5))?>... (<?=count($dance_mapping)?>개)<br>\n            첫 번째 이벤트 종목: <?=h(implode(', ', $events[0]['dances'] ?? []))?><br>\n            댄스 매핑 테스트: 8 -> <?=h($dance_mapping['8'] ?? 'NOT_FOUND')?>, 6 -> <?=h($dance_mapping['6'] ?? 'NOT_FOUND')?><br>\n            이벤트 18 종목: <?=h(implode(', ', $events[17]['dances'] ?? []))?><br>\n            convertDanceNumber 테스트: <?=h(convertDanceNumber('8', $dance_mapping))?>\n        </div>\n    </div>\n    \n    <?php if (empty($events)): ?>\n        <div class=\"empty-state\">\n            <h3><?=h($t['no_events'])?></h3>\n            <p><?=h($t['contact_admin'])?></p>\n        </div>\n    <?php else: ?>\n        <div class=\"events-grid\">\n            <?php \n            // 모든 이벤트를 번호순으로 정렬하여 표시\n            $all_events = [];\n            \n            // 멀티 이벤트들을 기본 번호로 그룹화\n            foreach ($multievent_events as $base_no => $group) {\n                $all_events[] = [\n                    'type' => 'multievent',\n                    'base_no' => $base_no,\n                    'group' => $group,\n                    'sort_key' => intval($base_no)\n                ];\n            }\n            \n            // 일반 이벤트들 추가 (멀티 이벤트가 아닌 것들)\n            $displayed_events = [];\n            foreach ($multievent_events as $group) {\n                foreach ($group as $event) {\n                    $displayed_events[] = $event['no'];\n                }\n            }\n            \n            foreach ($events as $event) {\n                if (!in_array($event['no'], $displayed_events)) {\n                    $all_events[] = [\n                        'type' => 'single',\n                        'event' => $event,\n                        'sort_key' => intval($event['no'])\n                    ];\n                }\n            }\n            \n            // 번호순으로 정렬\n            usort($all_events, function($a, $b) {\n                return $a['sort_key'] - $b['sort_key'];\n            });\n            \n            // 이벤트들 렌더링\n            foreach ($all_events as $event_item):\n                if ($event_item['type'] === 'multievent'):\n                    $base_no = $event_item['base_no'];\n                    $group = $event_item['group'];\n                    $first_event = $group[0];\n                    // 멀티 이벤트의 패널 매칭 로직\n                    $panel_code = $first_event['panel_code'] ?? '';\n                    if (empty($judge_panels)) {\n                        $can_score = true;\n                    } else {\n                        $can_score = empty($panel_code) || $panel_code === 'N/A' || in_array($panel_code, $judge_panels);\n                    }\n                    $has_scores = true;\n                    foreach ($group as $event) {\n                        if (!$events_with_scores[$event['no']]) {\n                            $has_scores = false;\n                            break;\n                        }\n                    }\n            ?>\n            <div class=\"multievent-card <?=$has_scores ? 'scored' : ''?> <?=!$can_score ? 'not-eligible' : ''?>\" \n                 data-status=\"<?=$has_scores ? 'completed' : ($can_score ? 'pending' : 'not-assigned')?>\">\n                <div class=\"status-badge <?=$has_scores ? 'status-completed' : ($can_score ? 'status-pending' : 'status-not-assigned')?>\">\n                    <?php if ($has_scores): ?>\n                        <?=h($t['scoring_complete'])?>\n                    <?php elseif ($can_score): ?>\n                        <?=h($t['scoring_pending'])?>\n                    <?php else: ?>\n                        <?=h($t['not_assigned'])?>\n                    <?php endif; ?>\n                </div>\n                \n                <div class=\"multievent-header\">\n                    <div class=\"multievent-number\">#<?=h($base_no)?></div>\n                </div>\n                \n                <div class=\"sub-events\">\n                    <?php foreach ($group as $event): ?>\n                    <div class=\"sub-event\">\n                        <div class=\"sub-event-number\">#<?=h($event['no'])?></div>\n                        <div class=\"sub-event-name\"><?=h($event['name'])?></div>\n                        <div class=\"sub-event-dances\"><?php \n                            $dance_names = [];\n                            foreach ($event['dances'] as $dance) {\n                                $dance_names[] = convertDanceNumber($dance, $dance_mapping);\n                            }\n                            echo h(implode(', ', $dance_names));\n                        ?></div>\n                    </div>\n                    <?php endforeach; ?>\n                </div>\n                \n                <div class=\"panel-info\">\n                    <?=h($t['panel_info'])?>: <?=h($first_event['panel_code'] ?: 'N/A')?>\n                </div>\n                \n                <div class=\"event-details\">\n                    <?=h($t['round'])?>: <?=h($first_event['round_display'] ?: $first_event['round_type'] . ' ' . $first_event['round_num'])?><br>\n                    <strong>멀티 이벤트 결승전</strong>\n                </div>\n                \n                <div class=\"event-actions\">\n                    <?php if ($can_score): ?>\n                        <a href=\"multievent_scoring.php?comp_id=<?=h($comp_id)?>&event_group=<?=h($base_no)?>&lang=<?=h($lang)?>\" \n                           class=\"btn btn-primary\" \n                           target=\"_blank\">\n                            <?=h($t['score'])?>\n                        </a>\n                    <?php else: ?>\n                        <button class=\"btn btn-disabled\" disabled>\n                            <?=h($t['scoring_not_allowed'])?>\n                        </button>\n                    <?php endif; ?>\n                </div>\n            </div>\n            <?php else: // 단일 이벤트 ?>\n            <?php \n                $event = $event_item['event'];\n            ?>\n            <div class=\"event-card <?=$events_with_scores[$event['no']] ? 'scored' : ''?> <?=!$event['can_score'] ? 'not-eligible' : ''?>\" \n                 data-status=\"<?=$events_with_scores[$event['no']] ? 'completed' : ($event['can_score'] ? 'pending' : 'not-assigned')?>\">\n                <div class=\"status-badge <?=$events_with_scores[$event['no']] ? 'status-completed' : ($event['can_score'] ? 'status-pending' : 'status-not-assigned')?>\">\n                    <?php if ($events_with_scores[$event['no']]): ?>\n                        <?=h($t['scoring_complete'])?>\n                    <?php elseif ($event['can_score']): ?>\n                        <?=h($t['scoring_pending'])?>\n                    <?php else: ?>\n                        <?=h($t['not_assigned'])?>\n                    <?php endif; ?>\n                </div>\n                \n                <div class=\"event-number\">#<?=h($event['no'])?></div>\n                <div class=\"event-title\"><?=h($event['name'])?></div>\n                \n                <div class=\"panel-info\">\n                    <?=h($t['panel_info'])?>: <?=h($event['panel_code'] ?: 'N/A')?>\n                </div>\n                \n                <div class=\"event-details\">\n                    <?=h($t['round'])?>: <?=h($event['round_display'] ?: $event['round_type'] . ' ' . $event['round_num'])?><br>\n                    <?=h($t['dances'])?>: <?php \n                        $dance_names = [];\n                        foreach ($event['dances'] as $dance) {\n                            $dance_names[] = convertDanceNumber($dance, $dance_mapping);\n                        }\n                        echo h(implode(', ', $dance_names));\n                    ?>\n                </div>\n                \n                <div class=\"event-actions\">\n                    <?php if ($event['can_score']): ?>\n                        <a href=\"judge_scoring.php?comp_id=<?=h($comp_id)?>&event_no=<?=h($event['no'])?>&lang=<?=h($lang)?>\" \n                           class=\"btn btn-primary\" \n                           target=\"_blank\">\n                            <?=h($t['score'])?>\n                        </a>\n                    <?php else: ?>\n                        <button class=\"btn btn-disabled\" disabled>\n                            <?=h($t['scoring_not_allowed'])?>\n                        </button>\n                    <?php endif; ?>\n                </div>\n            </div>\n            <?php endif; ?>\n            <?php endforeach; ?>\n        </div>\n    <?php endif; ?>\n</div>\n\n<footer style=\"text-align: center; margin-top: 30px; color: #666; font-size: 0.9em; padding: 20px;\">\n    2025 danceoffice.net | Powered by Seyoung Lee\n</footer>\n\n<script>\nlet showAllEvents = true;\n\nfunction toggleEventFilter() {\n    const filterBtn = document.getElementById('filterToggle');\n    const eventCards = document.querySelectorAll('.event-card');\n    \n    showAllEvents = !showAllEvents;\n    \n    if (showAllEvents) {\n        // Show all events\n        filterBtn.textContent = '간단히';\n        filterBtn.classList.remove('active');\n        eventCards.forEach(card => {\n            card.style.display = 'block';\n        });\n    } else {\n        // Hide completed and not-assigned events\n        filterBtn.textContent = 'All';\n        filterBtn.classList.add('active');\n        eventCards.forEach(card => {\n            const status = card.getAttribute('data-status');\n            if (status === 'completed' || status === 'not-assigned') {\n                card.style.display = 'none';\n            } else {\n                card.style.display = 'block';\n            }\n        });\n    }\n}\n</script>\n</body>\n</html>\n","size_bytes":37856},"comp/scoring_login.php":{"content":"<?php\nsession_start();\n\n$comp_id = $_GET['comp_id'] ?? '';\n$comp_id = preg_replace('/\\x{FEFF}/u', '', $comp_id);\n$comp_id = preg_replace('/[^\\d-]/', '', $comp_id);\n\n// Language setting\n$lang = $_GET['lang'] ?? 'ko';\nif (!in_array($lang, ['ko', 'en', 'zh', 'ja'])) {\n    $lang = 'ko';\n}\n\n// Language texts\n$texts = [\n    'ko' => [\n        'title' => '심사위원 채점 로그인',\n        'password_label' => '심사위원 비밀번호',\n        'password_placeholder' => '3-4자리 숫자 입력',\n        'login' => '로그인',\n        'password_required' => '비밀번호를 입력해주세요.',\n        'invalid_password' => '잘못된 비밀번호입니다.',\n        'switch_lang' => 'English'\n    ],\n    'en' => [\n        'title' => 'Judge Scoring Login',\n        'password_label' => 'Judge Password',\n        'password_placeholder' => 'Enter 3-4 digit number',\n        'login' => 'Login',\n        'password_required' => 'Please enter password.',\n        'invalid_password' => 'Invalid password.',\n        'switch_lang' => '한국어'\n    ],\n    'zh' => [\n        'title' => '评委评分登录',\n        'password_label' => '评委密码',\n        'password_placeholder' => '请输入3-4位数字',\n        'login' => '登录',\n        'password_required' => '请输入密码。',\n        'invalid_password' => '密码错误。',\n        'switch_lang' => 'English'\n    ],\n    'ja' => [\n        'title' => '審査員採点ログイン',\n        'password_label' => '審査員パスワード',\n        'password_placeholder' => '3-4桁の数字を入力',\n        'login' => 'ログイン',\n        'password_required' => 'パスワードを入力してください。',\n        'invalid_password' => 'パスワードが間違っています。',\n        'switch_lang' => 'English'\n    ]\n];\n\n$t = $texts[$lang];\n\nif (!$comp_id) {\n    echo \"<h1>잘못된 대회 ID입니다.</h1>\";\n    exit;\n}\n\n// Load competition info\n$data_dir = __DIR__ . \"/data/$comp_id\";\n$info_file = \"$data_dir/info.json\";\n\nif (!file_exists($info_file)) {\n    echo \"<h1>대회 정보를 찾을 수 없습니다.</h1>\";\n    exit;\n}\n\n$info = json_decode(file_get_contents($info_file), true);\n\n// Load adjudicators to get passwords\n$adjudicators_file = \"$data_dir/adjudicators.txt\";\n$adjudicators = [];\n\nif (file_exists($adjudicators_file)) {\n    $lines = file($adjudicators_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    foreach ($lines as $line) {\n        if (preg_match('/^bom/', $line)) continue;\n        $cols = array_map('trim', explode(',', $line));\n        if (count($cols) >= 4) {\n            $adjudicators[] = [\n                'id' => $cols[0],\n                'name' => $cols[1],\n                'country' => $cols[2],\n                'password' => $cols[3]\n            ];\n        }\n    }\n}\n\n$error_message = '';\n\n// Handle login\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $input_password = $_POST['password'] ?? '';\n    $input_password = preg_replace('/\\D+/', '', $input_password); // 숫자만 추출\n    \n    if (empty($input_password)) {\n        $error_message = $t['password_required'];\n    } else {\n        // Check if password matches any adjudicator\n        $found_adjudicator = null;\n        foreach ($adjudicators as $adjudicator) {\n            if ($adjudicator['password'] === $input_password) {\n                $found_adjudicator = $adjudicator;\n                break;\n            }\n        }\n        \n        if ($found_adjudicator) {\n            // Store adjudicator info in session\n            $_SESSION['scoring_logged_in'] = true;\n            $_SESSION['scoring_judge_id'] = $found_adjudicator['id'];\n            $_SESSION['scoring_judge_name'] = $found_adjudicator['name'];\n            $_SESSION['scoring_judge_country'] = $found_adjudicator['country'];\n            $_SESSION['scoring_comp_id'] = $comp_id;\n            \n            // Redirect to scoring dashboard\n            header(\"Location: scoring_dashboard.php?comp_id=\" . urlencode($comp_id) . \"&lang=\" . urlencode($lang));\n            exit;\n        } else {\n            $error_message = $t['invalid_password'];\n        }\n    }\n}\n\nfunction h($s) { return htmlspecialchars($s ?? ''); }\n?>\n<!DOCTYPE html>\n<html lang=\"<?=h($lang)?>\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title><?=h($t['title'])?> | <?=h($info['title'])?></title>\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\n    <style>\n        * {\n            box-sizing: border-box;\n        }\n        \n        body { \n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; \n            margin: 0; \n            padding: 20px;\n            min-height: 100vh;\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            justify-content: center;\n        }\n        \n        .login-container { \n            background: #fff; \n            border-radius: 12px; \n            padding: 30px 25px; \n            box-shadow: 0 8px 25px rgba(0,0,0,0.15);\n            width: 100%;\n            max-width: 420px;\n            text-align: center;\n            margin: 0 0 20px 0;\n        }\n        \n        h1 { \n            color: #333; \n            margin-bottom: 8px; \n            font-size: 1.5em;\n            font-weight: 700;\n        }\n        \n        .comp-info {\n            color: #666;\n            margin-bottom: 25px;\n            font-size: 0.85em;\n            line-height: 1.4;\n        }\n        \n        .form-group {\n            margin-bottom: 18px;\n            text-align: left;\n        }\n        \n        label {\n            display: block;\n            margin-bottom: 6px;\n            color: #333;\n            font-weight: 600;\n            font-size: 14px;\n        }\n        \n        input[type=\"password\"] {\n            width: 100%;\n            padding: 14px 16px;\n            border: 2px solid #ddd;\n            border-radius: 8px;\n            font-size: 16px;\n            box-sizing: border-box;\n            transition: border-color 0.3s;\n            background: #fafafa;\n        }\n        \n        input[type=\"password\"]:focus {\n            outline: none;\n            border-color: #667eea;\n            background: #fff;\n        }\n        \n        .login-btn {\n            width: 100%;\n            background: #667eea;\n            color: #fff;\n            border: none;\n            padding: 14px;\n            border-radius: 8px;\n            font-size: 16px;\n            font-weight: 600;\n            cursor: pointer;\n            transition: all 0.2s;\n            margin-bottom: 15px;\n        }\n        \n        .login-btn:active {\n            background: #5a6fd8;\n            transform: translateY(1px);\n        }\n        \n        .error {\n            background: #f8d7da;\n            color: #721c24;\n            padding: 12px;\n            border-radius: 6px;\n            margin-bottom: 18px;\n            border: 1px solid #f5c6cb;\n            font-size: 14px;\n        }\n        \n        \n        .lang-switch {\n            position: absolute;\n            top: 15px;\n            right: 15px;\n            background: #667eea;\n            color: #fff;\n            border: none;\n            padding: 8px 30px 8px 12px;\n            border-radius: 6px;\n            font-size: 12px;\n            font-weight: 600;\n            cursor: pointer;\n            text-decoration: none;\n            transition: all 0.2s;\n            appearance: none;\n            -webkit-appearance: none;\n            -moz-appearance: none;\n            background-image: url(\"data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='white' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6,9 12,15 18,9'%3e%3c/polyline%3e%3c/svg%3e\");\n            background-repeat: no-repeat;\n            background-position: right 8px center;\n            background-size: 12px;\n        }\n        \n        .lang-switch:active {\n            background-color: #5a6fd8;\n            transform: translateY(1px);\n        }\n        \n        .lang-switch option {\n            background: #667eea;\n            color: #fff;\n            padding: 8px;\n        }\n        \n        .login-container {\n            position: relative;\n        }\n        \n        /* 태블릿 환경 (768px 이상) */\n        @media (min-width: 768px) {\n            body {\n                padding: 20px;\n            }\n            \n            .login-container {\n                padding: 35px 30px;\n                border-radius: 15px;\n                max-width: 450px;\n                margin: 0 0 25px 0;\n            }\n            \n            h1 {\n                font-size: 1.8em;\n                margin-bottom: 10px;\n            }\n            \n            .comp-info {\n                font-size: 0.9em;\n                margin-bottom: 30px;\n            }\n            \n            .form-group {\n                margin-bottom: 20px;\n            }\n            \n            input[type=\"password\"] {\n                padding: 12px 15px;\n                font-size: 16px;\n            }\n            \n            .login-btn {\n                padding: 12px;\n                font-size: 16px;\n            }\n            \n            .lang-switch {\n                top: 20px;\n                right: 20px;\n                padding: 10px 32px 10px 14px;\n                font-size: 13px;\n            }\n        }\n        \n        /* 큰 태블릿/데스크톱 (1024px 이상) */\n        @media (min-width: 1024px) {\n            .login-container {\n                padding: 40px 35px;\n                max-width: 480px;\n                margin: 0 0 30px 0;\n            }\n            \n            .login-btn:hover {\n                background: #5a6fd8;\n            }\n            \n            \n            .lang-switch {\n                top: 30px;\n                right: 30px;\n                padding: 10px 36px 10px 16px;\n                font-size: 14px;\n            }\n            \n            .lang-switch:hover {\n                background: #5a6fd8;\n            }\n        }\n    </style>\n</head>\n<body>\n<div class=\"login-container\">\n    <select class=\"lang-switch\" onchange=\"window.location.href='?comp_id=<?=h($comp_id)?>&lang=' + this.value\">\n        <option value=\"ko\" <?=$lang === 'ko' ? 'selected' : ''?>>한국어</option>\n        <option value=\"en\" <?=$lang === 'en' ? 'selected' : ''?>>English</option>\n        <option value=\"zh\" <?=$lang === 'zh' ? 'selected' : ''?>>中文</option>\n        <option value=\"ja\" <?=$lang === 'ja' ? 'selected' : ''?>>日本語</option>\n    </select>\n    \n    <h1><?=h($t['title'])?></h1>\n    <div class=\"comp-info\">\n        <strong><?=h($info['title'])?></strong><br>\n        <?=h($info['date'])?> | <?=h($info['place'])?>\n    </div>\n    \n    <?php if ($error_message): ?>\n        <div class=\"error\"><?=h($error_message)?></div>\n    <?php endif; ?>\n    \n    <form method=\"post\">\n        <div class=\"form-group\">\n            <label for=\"password\"><?=h($t['password_label'])?></label>\n            <input type=\"password\" \n                   id=\"password\" \n                   name=\"password\" \n                   placeholder=\"<?=h($t['password_placeholder'])?>\" \n                   maxlength=\"4\"\n                   pattern=\"[0-9]{3,4}\"\n                   required>\n        </div>\n        <button type=\"submit\" class=\"login-btn\"><?=h($t['login'])?></button>\n    </form>\n    \n</div>\n\n<footer style=\"text-align: center; margin-top: 20px; color: rgba(255,255,255,0.8); font-size: 0.9em; width: 100%;\">\n    2025 danceoffice.net | Powered by Seyoung Lee\n</footer>\n\n<script>\n// Only allow numbers\ndocument.getElementById('password').addEventListener('input', function(e) {\n    this.value = this.value.replace(/[^0-9]/g, '');\n});\n\n// Auto-focus\ndocument.getElementById('password').focus();\n</script>\n</body>\n</html>\n","size_bytes":11855},"comp/scoring_logout.php":{"content":"<?php\nsession_start();\n\n$comp_id = $_GET['comp_id'] ?? '';\n$comp_id = preg_replace('/\\x{FEFF}/u', '', $comp_id);\n$comp_id = preg_replace('/[^\\d-]/', '', $comp_id);\n\n// Clear scoring session\nunset($_SESSION['scoring_logged_in']);\nunset($_SESSION['scoring_judge_id']);\nunset($_SESSION['scoring_judge_name']);\nunset($_SESSION['scoring_judge_country']);\nunset($_SESSION['scoring_comp_id']);\n\n// Redirect to login page\nheader(\"Location: scoring_login.php?comp_id=\" . urlencode($comp_id));\nexit;\n?>\n","size_bytes":493},"comp/select_judges.php":{"content":"<?php\nsession_start();\nrequire_once 'auth.php';\nrequire_once 'judge_manager.php';\n\n// 오너 권한만 접근 가능\nrequirePermission('manage_users');\n\n$user = $_SESSION['user'];\n$comp_id = $_GET['comp_id'] ?? '';\n\nif (!$comp_id) {\n    die(\"대회 ID가 필요합니다.\");\n}\n\n// 대회 정보 로드\n$data_dir = __DIR__ . '/data';\n$comp_path = \"$data_dir/$comp_id\";\n$info_file = \"$comp_path/info.json\";\n\nif (!file_exists($info_file)) {\n    die(\"대회 정보를 찾을 수 없습니다.\");\n}\n\n$comp_info = json_decode(file_get_contents($info_file), true);\n\n// 심사위원 선택 처리\nif ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['select_judges'])) {\n    $selected_judges = $_POST['judges'] ?? [];\n    $comp_info['selected_judges'] = $selected_judges;\n    file_put_contents($info_file, json_encode($comp_info, JSON_UNESCAPED_UNICODE|JSON_PRETTY_PRINT));\n    $message = \"심사위원이 선택되었습니다.\";\n}\n\n$judges = loadJudges();\n$selected_judges = $comp_info['selected_judges'] ?? [];\n\nfunction h($s) { return htmlspecialchars($s ?? ''); }\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>심사위원 선택 | danceoffice.net</title>\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded\" rel=\"stylesheet\" />\n    <style>\n        body {\n            background: #181B20;\n            min-height: 100vh;\n            font-size: 14px;\n            line-height: 1.5;\n            margin: 0;\n            padding: 0;\n            font-family: 'Noto Sans KR', sans-serif;\n        }\n        \n        .container {\n            max-width: 1200px;\n            margin: 0 auto;\n            padding: 20px;\n        }\n        \n        .header {\n            background: linear-gradient(135deg, #1a1d21 0%, #181B20 100%);\n            border-radius: 15px;\n            padding: 25px;\n            margin-bottom: 20px;\n            box-shadow: 0 8px 25px rgba(3, 199, 90, 0.15);\n            border: 2px solid #03C75A;\n            text-align: center;\n        }\n        \n        .header h1 {\n            color: #03C75A;\n            font-size: 24px;\n            margin: 0 0 10px 0;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 10px;\n        }\n        \n        .comp-info {\n            background: #181B20;\n            border-radius: 8px;\n            padding: 15px;\n            margin-bottom: 20px;\n            border: 1px solid #31343a;\n        }\n        \n        .comp-info h4 {\n            color: #03C75A;\n            margin: 0 0 10px 0;\n        }\n        \n        .judges-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n            gap: 15px;\n        }\n        \n        .judge-card {\n            background: #222;\n            border-radius: 12px;\n            padding: 15px;\n            border: 2px solid #31343a;\n            transition: all 0.3s ease;\n            cursor: pointer;\n        }\n        \n        .judge-card:hover {\n            border-color: #03C75A;\n        }\n        \n        .judge-card.selected {\n            border-color: #03C75A;\n            background: rgba(3, 199, 90, 0.1);\n        }\n        \n        .judge-photo {\n            width: 60px;\n            height: 60px;\n            border-radius: 50%;\n            object-fit: cover;\n            margin: 0 auto 10px auto;\n            display: block;\n            border: 2px solid #03C75A;\n        }\n        \n        .judge-name {\n            color: #03C75A;\n            font-size: 14px;\n            font-weight: 600;\n            text-align: center;\n            margin-bottom: 8px;\n        }\n        \n        .judge-info {\n            color: #F5F7FA;\n            font-size: 11px;\n            margin-bottom: 5px;\n            text-align: center;\n        }\n        \n        .btn {\n            background: linear-gradient(90deg, #03C75A 70%, #00BFAE 100%);\n            color: #222;\n            border: none;\n            padding: 12px 24px;\n            border-radius: 20px;\n            font-weight: 600;\n            font-size: 14px;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            margin-top: 20px;\n        }\n        \n        .btn:hover {\n            background: linear-gradient(90deg, #00BFAE 60%, #03C75A 100%);\n            color: white;\n            transform: translateY(-2px);\n        }\n        \n        .message {\n            color: #03C75A;\n            background: rgba(3, 199, 90, 0.1);\n            padding: 10px;\n            border-radius: 8px;\n            margin-bottom: 15px;\n            font-size: 13px;\n        }\n        \n        .selected-count {\n            background: #03C75A;\n            color: #222;\n            padding: 8px 16px;\n            border-radius: 20px;\n            font-weight: 600;\n            margin-bottom: 20px;\n            display: inline-block;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <header class=\"header\">\n            <h1>\n                <span class=\"material-symbols-rounded\">gavel</span>\n                심사위원 선택\n            </h1>\n            <div class=\"comp-info\">\n                <h4><?= h($comp_info['title']) ?></h4>\n                <p><?= h($comp_info['date']) ?> | <?= h($comp_info['place']) ?></p>\n            </div>\n        </header>\n        \n        <?php if (isset($message)): ?>\n            <div class=\"message\"><?= h($message) ?></div>\n        <?php endif; ?>\n        \n        <form method=\"post\">\n            <div class=\"selected-count\" id=\"selectedCount\">\n                선택된 심사위원: 0명\n            </div>\n            \n            <div class=\"judges-grid\">\n                <?php foreach ($judges as $judge): ?>\n                    <div class=\"judge-card\" onclick=\"toggleJudge('<?= h($judge['id']) ?>')\">\n                        <input type=\"checkbox\" \n                               name=\"judges[]\" \n                               value=\"<?= h($judge['id']) ?>\" \n                               id=\"judge_<?= h($judge['id']) ?>\"\n                               <?= in_array($judge['id'], $selected_judges) ? 'checked' : '' ?>\n                               style=\"display: none;\">\n                        \n                        <?php if ($judge['photo'] && file_exists(__DIR__ . '/judges_photos/' . $judge['photo'])): ?>\n                            <img src=\"judges_photos/<?= h($judge['photo']) ?>\" class=\"judge-photo\" alt=\"<?= h($judge['name']) ?>\">\n                        <?php else: ?>\n                            <div class=\"judge-photo\" style=\"background: #31343a; display: flex; align-items: center; justify-content: center; color: #8A8D93;\">\n                                <span class=\"material-symbols-rounded\">person</span>\n                            </div>\n                        <?php endif; ?>\n                        \n                        <div class=\"judge-name\"><?= h($judge['name']) ?></div>\n                        <div class=\"judge-info\"><?= h($judge['organization']) ?></div>\n                        <div class=\"judge-info\"><?= h($judge['region']) ?> | <?= h($judge['specialty']) ?></div>\n                    </div>\n                <?php endforeach; ?>\n            </div>\n            \n            <div style=\"text-align: center;\">\n                <button type=\"submit\" name=\"select_judges\" class=\"btn\">\n                    <span class=\"material-symbols-rounded\">save</span>\n                    심사위원 선택 완료\n                </button>\n            </div>\n        </form>\n    </div>\n    \n    <script>\n        function toggleJudge(judgeId) {\n            const checkbox = document.getElementById('judge_' + judgeId);\n            const card = checkbox.closest('.judge-card');\n            \n            checkbox.checked = !checkbox.checked;\n            card.classList.toggle('selected', checkbox.checked);\n            updateSelectedCount();\n        }\n        \n        function updateSelectedCount() {\n            const checkboxes = document.querySelectorAll('input[name=\"judges[]\"]:checked');\n            const countElement = document.getElementById('selectedCount');\n            countElement.textContent = '선택된 심사위원: ' + checkboxes.length + '명';\n        }\n        \n        // 초기 선택 상태 설정\n        document.addEventListener('DOMContentLoaded', function() {\n            const checkboxes = document.querySelectorAll('input[name=\"judges[]\"]');\n            checkboxes.forEach(checkbox => {\n                const card = checkbox.closest('.judge-card');\n                if (checkbox.checked) {\n                    card.classList.add('selected');\n                }\n            });\n            updateSelectedCount();\n        });\n    </script>\n</body>\n</html>\n\n\n\n\n\n\n","size_bytes":8787},"comp/senior_dashboard.php":{"content":"<?php\nsession_start();\nrequire_once 'auth.php';\n\n// 권한 확인\nrequirePermission('view_all_comps');\n\n$user = $_SESSION['user'];\n\n// 대회 목록 로드\n$data_dir = __DIR__ . '/data';\nfunction load_competitions($data_dir) {\n    $comps = [];\n    if (!is_dir($data_dir)) return $comps;\n    foreach (glob($data_dir . \"/*/info.json\") as $info_file) {\n        $comp_id = basename(dirname($info_file));\n        $info = json_decode(file_get_contents($info_file), true);\n        if ($info) {\n            $info['id'] = $comp_id;\n            $comps[] = $info;\n        }\n    }\n    usort($comps, function($a, $b) {\n        return ($b['created'] ?? 0) <=> ($a['created'] ?? 0);\n    });\n    return $comps;\n}\n\n$all_comps = load_competitions($data_dir);\n\n// 현재 사용자가 담당하는 대회만 필터링\n$comps = array_filter($all_comps, function($comp) use ($user) {\n    return isset($comp['assigned_admin']) && $comp['assigned_admin'] === $user['username'];\n});\n\nfunction h($s) { return htmlspecialchars($s ?? ''); }\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>선임관리자 대시보드 | danceoffice.net</title>\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded\" rel=\"stylesheet\" />\n    <style>\n        /* PC 버전 스타일 */\n        @media (min-width: 1024px) {\n            body {\n                background: #181B20;\n                min-height: 100vh;\n                font-size: 14px;\n                line-height: 1.5;\n                margin: 0;\n                padding: 0;\n                font-family: 'Noto Sans KR', sans-serif;\n            }\n            \n            .dashboard-container {\n                max-width: 1200px;\n                margin: 0 auto;\n                padding: 20px;\n            }\n            \n            .dashboard-header {\n                background: linear-gradient(135deg, #1a1d21 0%, #181B20 100%);\n                border-radius: 15px;\n                padding: 25px;\n                margin-bottom: 20px;\n                box-shadow: 0 8px 25px rgba(3, 199, 90, 0.15);\n                border: 2px solid #03C75A;\n                position: relative;\n                overflow: hidden;\n                text-align: center;\n            }\n            \n            .dashboard-header::before {\n                content: '';\n                position: absolute;\n                top: -50%;\n                right: -50%;\n                width: 200%;\n                height: 200%;\n                background: radial-gradient(circle, rgba(3, 199, 90, 0.08) 0%, transparent 70%);\n                animation: float 6s ease-in-out infinite;\n            }\n            \n            @keyframes float {\n                0%, 100% { transform: translateY(0px) rotate(0deg); }\n                50% { transform: translateY(-15px) rotate(180deg); }\n            }\n            \n            .dashboard-title {\n                color: #03C75A;\n                font-size: 24px;\n                margin: 0 0 10px 0;\n                position: relative;\n                z-index: 2;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                gap: 10px;\n            }\n            \n            .dashboard-subtitle {\n                color: #00BFAE;\n                font-size: 16px;\n                margin: 0;\n                position: relative;\n                z-index: 2;\n            }\n            \n            .user-info {\n                background: rgba(3, 199, 90, 0.1);\n                border-radius: 10px;\n                padding: 15px;\n                margin: 20px 0;\n                position: relative;\n                z-index: 2;\n            }\n            \n            .user-info strong {\n                color: #03C75A;\n            }\n            \n            .dashboard-nav {\n                display: flex;\n                gap: 15px;\n                margin-top: 20px;\n                position: relative;\n                z-index: 2;\n                justify-content: center;\n            }\n            \n            .dashboard-nav a {\n                color: white;\n                text-decoration: none;\n                font-weight: 600;\n                font-size: 14px;\n                padding: 10px 20px;\n                border-radius: 20px;\n                background: rgba(3, 199, 90, 0.1);\n                backdrop-filter: blur(10px);\n                transition: all 0.3s ease;\n                display: flex;\n                align-items: center;\n                gap: 5px;\n            }\n            \n            .dashboard-nav a:hover {\n                background: #03C75A;\n                color: #222;\n                transform: translateY(-2px);\n            }\n            \n            .comps-list {\n                background: #222;\n                border-radius: 15px;\n                padding: 25px;\n                box-shadow: 0 8px 25px rgba(3, 199, 90, 0.08);\n                border: 1px solid #31343a;\n            }\n            \n            .comps-list h3 {\n                color: #03C75A;\n                font-size: 18px;\n                margin: 0 0 20px 0;\n                display: flex;\n                align-items: center;\n                gap: 10px;\n            }\n            \n            .comps-table {\n                width: 100%;\n                border-collapse: collapse;\n                background: #181B20;\n                border-radius: 8px;\n                overflow: hidden;\n            }\n            \n            .comps-table th {\n                background: #1E2126;\n                color: #03C75A;\n                font-weight: 600;\n                font-size: 13px;\n                padding: 15px 10px;\n                text-align: center;\n                border-bottom: 1px solid #31343a;\n            }\n            \n            .comps-table td {\n                color: #F5F7FA;\n                font-size: 13px;\n                padding: 15px 10px;\n                text-align: center;\n                border-bottom: 1px solid #31343a;\n            }\n            \n            .comps-table tr:last-child td {\n                border-bottom: none;\n            }\n            \n            .dash-btn {\n                background: linear-gradient(90deg, #03C75A 70%, #00BFAE 100%);\n                color: #222;\n                text-decoration: none;\n                padding: 8px 16px;\n                border-radius: 16px;\n                font-size: 12px;\n                font-weight: 600;\n                transition: all 0.3s ease;\n                display: inline-flex;\n                align-items: center;\n                gap: 5px;\n            }\n            \n            .dash-btn:hover {\n                background: linear-gradient(90deg, #00BFAE 60%, #03C75A 100%);\n                color: white;\n                transform: translateY(-2px);\n            }\n            \n            .logout-btn {\n                background: linear-gradient(90deg, #ff4444 70%, #cc0000 100%);\n                color: white;\n                text-decoration: none;\n                padding: 8px 16px;\n                border-radius: 16px;\n                font-size: 12px;\n                font-weight: 600;\n                transition: all 0.3s ease;\n                display: inline-flex;\n                align-items: center;\n                gap: 5px;\n            }\n            \n            .logout-btn:hover {\n                background: linear-gradient(90deg, #cc0000 60%, #ff4444 100%);\n                transform: translateY(-2px);\n            }\n            \n            .none-msg {\n                text-align: center;\n                color: #8A8D93;\n                font-size: 14px;\n                padding: 40px 20px;\n            }\n            \n            .dashboard-footer {\n                text-align: center;\n                color: #03C75A;\n                padding: 20px;\n                font-size: 12px;\n                margin-top: 20px;\n            }\n        }\n        \n        /* 모바일 버전 스타일 */\n        @media (max-width: 1023px) {\n            body {\n                background: #181B20;\n                min-height: 100vh;\n                font-size: 14px;\n                line-height: 1.5;\n                margin: 0;\n                padding: 0;\n                font-family: 'Noto Sans KR', sans-serif;\n            }\n            \n            .dashboard-container {\n                padding: 10px;\n            }\n            \n            .dashboard-header {\n                background: rgba(26, 29, 33, 0.9);\n                backdrop-filter: blur(20px);\n                border-radius: 15px;\n                padding: 20px;\n                margin-bottom: 15px;\n                box-shadow: 0 8px 25px rgba(3, 199, 90, 0.15);\n                border: 2px solid #03C75A;\n                text-align: center;\n            }\n            \n            .dashboard-title {\n                color: #03C75A;\n                font-size: 20px;\n                margin: 0 0 8px 0;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                gap: 8px;\n            }\n            \n            .dashboard-subtitle {\n                color: #00BFAE;\n                font-size: 14px;\n                margin: 0;\n            }\n            \n            .user-info {\n                background: rgba(3, 199, 90, 0.1);\n                border-radius: 8px;\n                padding: 12px;\n                margin: 15px 0;\n                font-size: 12px;\n            }\n            \n            .dashboard-nav {\n                display: flex;\n                gap: 10px;\n                margin-top: 15px;\n                flex-wrap: wrap;\n                justify-content: center;\n            }\n            \n            .dashboard-nav a {\n                color: white;\n                text-decoration: none;\n                font-weight: 600;\n                font-size: 13px;\n                padding: 8px 16px;\n                border-radius: 16px;\n                background: rgba(3, 199, 90, 0.2);\n                backdrop-filter: blur(10px);\n                transition: all 0.3s ease;\n                display: flex;\n                align-items: center;\n                gap: 5px;\n            }\n            \n            .dashboard-nav a:hover {\n                background: #03C75A;\n                color: #222;\n            }\n            \n            .comps-list {\n                background: rgba(34, 34, 34, 0.95);\n                backdrop-filter: blur(20px);\n                border-radius: 15px;\n                padding: 20px;\n                box-shadow: 0 8px 25px rgba(3, 199, 90, 0.08);\n                border: 1px solid #31343a;\n            }\n            \n            .comps-list h3 {\n                color: #03C75A;\n                font-size: 16px;\n                margin: 0 0 15px 0;\n                display: flex;\n                align-items: center;\n                gap: 8px;\n            }\n            \n            .comps-table {\n                width: 100%;\n                border-collapse: collapse;\n                background: #181B20;\n                border-radius: 8px;\n                overflow: hidden;\n                font-size: 12px;\n            }\n            \n            .comps-table th {\n                background: #1E2126;\n                color: #03C75A;\n                font-weight: 600;\n                font-size: 11px;\n                padding: 12px 8px;\n                text-align: center;\n                border-bottom: 1px solid #31343a;\n            }\n            \n            .comps-table td {\n                color: #F5F7FA;\n                font-size: 11px;\n                padding: 12px 8px;\n                text-align: center;\n                border-bottom: 1px solid #31343a;\n            }\n            \n            .dash-btn {\n                background: linear-gradient(90deg, #03C75A 70%, #00BFAE 100%);\n                color: #222;\n                text-decoration: none;\n                padding: 6px 12px;\n                border-radius: 12px;\n                font-size: 10px;\n                font-weight: 600;\n                transition: all 0.3s ease;\n                display: inline-flex;\n                align-items: center;\n                gap: 4px;\n            }\n            \n            .logout-btn {\n                background: linear-gradient(90deg, #ff4444 70%, #cc0000 100%);\n                color: white;\n                text-decoration: none;\n                padding: 6px 12px;\n                border-radius: 12px;\n                font-size: 10px;\n                font-weight: 600;\n                transition: all 0.3s ease;\n                display: inline-flex;\n                align-items: center;\n                gap: 4px;\n            }\n            \n            .none-msg {\n                text-align: center;\n                color: #8A8D93;\n                font-size: 13px;\n                padding: 30px 15px;\n            }\n            \n            .dashboard-footer {\n                text-align: center;\n                color: #03C75A;\n                padding: 15px;\n                font-size: 11px;\n                margin-top: 15px;\n            }\n        }\n        \n        /* 공통 스타일 */\n        .material-symbols-rounded {\n            font-variation-settings: 'FILL' 1, 'wght' 400, 'GRAD' 0, 'opsz' 24;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"dashboard-container\">\n        <header class=\"dashboard-header\">\n            <h1 class=\"dashboard-title\">\n                <span class=\"material-symbols-rounded\">admin_panel_settings</span>\n                선임관리자 대시보드\n            </h1>\n            <p class=\"dashboard-subtitle\">danceoffice.net 대회 관리 시스템</p>\n            \n            <div class=\"user-info\">\n                <strong><?= h($user['username']) ?></strong> - <?= getRoleDisplayName($user['role']) ?>\n            </div>\n            \n            <nav class=\"dashboard-nav\">\n                <a href=\"/\">\n                    <span class=\"material-symbols-rounded\">home</span>\n                    메인으로\n                </a>\n                <a href=\"/manage/\">\n                    <span class=\"material-symbols-rounded\">admin_panel_settings</span>\n                    관리자 페이지\n                </a>\n                <a href=\"/results/\">\n                    <span class=\"material-symbols-rounded\">sports_score</span>\n                    경기 결과\n                </a>\n                <a href=\"logout.php\" class=\"logout-btn\">\n                    <span class=\"material-symbols-rounded\">logout</span>\n                    로그아웃\n                </a>\n            </nav>\n        </header>\n        \n        <div class=\"comps-list\">\n            <h3>\n                <span class=\"material-symbols-rounded\">list</span>\n                담당 대회 목록\n            </h3>\n            <?php if (empty($comps)): ?>\n                <div class=\"none-msg\">등록된 대회가 없습니다.</div>\n            <?php else: ?>\n                <table class=\"comps-table\">\n                    <thead>\n                        <tr>\n                            <th>대회명</th>\n                            <th>일자</th>\n                            <th>장소</th>\n                            <th>주최</th>\n                            <th>관리</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <?php foreach ($comps as $comp): ?>\n                            <tr>\n                                <td><?= h($comp['title']) ?></td>\n                                <td><?= h($comp['date']) ?></td>\n                                <td><?= h($comp['place']) ?></td>\n                                <td><?= h($comp['host']) ?></td>\n                                <td>\n                                    <a class=\"dash-btn\" href=\"dashboard.php?comp_id=<?= urlencode($comp['id']) ?>\">\n                                        <span class=\"material-symbols-rounded\">dashboard</span>\n                                        대시보드\n                                    </a>\n                                </td>\n                            </tr>\n                        <?php endforeach; ?>\n                    </tbody>\n                </table>\n            <?php endif; ?>\n        </div>\n        \n        <footer class=\"dashboard-footer\">\n            &copy; 2025 danceoffice.net | Powered by Seyoung Lee\n        </footer>\n    </div>\n</body>\n</html>\n","size_bytes":16461},"comp/simple_fullscreen.php":{"content":"<?php\n/**\n * 간단한 전체화면 모니터링 시스템\n * iframe 문제 해결을 위한 단순화된 버전\n */\n\nrequire_once 'result_monitor.php';\n\n$monitor = new ResultMonitor();\n$pairs = $monitor->findResultPairs();\n\n$currentEvent = isset($_GET['event']) ? $_GET['event'] : (count($pairs) > 0 ? $pairs[0]['event_id'] : '');\n$mode = isset($_GET['mode']) ? $_GET['mode'] : 'results';\n$autoRotate = isset($_GET['auto']) ? $_GET['auto'] : 'true';\n\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>전체화면 모니터링</title>\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n        \n        html, body {\n            width: 100%;\n            height: 100%;\n            overflow: hidden;\n        }\n        \n        body {\n            font-family: 'Arial', sans-serif;\n            background: #000;\n            color: #fff;\n        }\n        \n        .screen {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100vw;\n            height: 100vh;\n            display: none;\n        }\n        \n        .screen.active {\n            display: block;\n        }\n        \n        /* 대기화면 */\n        .waiting-screen {\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            text-align: center;\n            animation: pulse 2s infinite;\n        }\n        \n        .waiting-screen h1 {\n            font-size: 4em;\n            margin-bottom: 30px;\n            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);\n        }\n        \n        .waiting-screen p {\n            font-size: 2em;\n            opacity: 0.9;\n        }\n        \n        /* 로고 화면 */\n        .logo-screen {\n            background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            text-align: center;\n        }\n        \n        .logo-screen img {\n            max-width: 80%;\n            max-height: 60%;\n            margin-bottom: 30px;\n        }\n        \n        .logo-screen h1 {\n            font-size: 3em;\n            margin-bottom: 20px;\n        }\n        \n        .logo-screen p {\n            font-size: 1.5em;\n            opacity: 0.9;\n        }\n        \n        /* 결과 화면 */\n        .results-screen {\n            background: #f5f5f5;\n            color: #333;\n        }\n        \n        .results-content {\n            width: 100%;\n            height: 100%;\n            border: none;\n            display: block;\n        }\n        \n        /* 제어 패널 */\n        .control-panel {\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            z-index: 1000;\n            background: rgba(0,0,0,0.8);\n            padding: 15px;\n            border-radius: 10px;\n            display: flex;\n            gap: 10px;\n            opacity: 0;\n            transition: opacity 0.3s;\n        }\n        \n        .control-panel:hover {\n            opacity: 1;\n        }\n        \n        .control-btn {\n            background: #667eea;\n            color: white;\n            border: none;\n            padding: 10px 15px;\n            border-radius: 5px;\n            cursor: pointer;\n            font-size: 14px;\n            transition: background 0.3s;\n        }\n        \n        .control-btn:hover {\n            background: #5a6fd8;\n        }\n        \n        .control-btn.active {\n            background: #28a745;\n        }\n        \n        .control-btn.danger {\n            background: #dc3545;\n        }\n        \n        /* 상태 표시 */\n        .status-bar {\n            position: fixed;\n            bottom: 20px;\n            left: 20px;\n            background: rgba(0,0,0,0.8);\n            color: white;\n            padding: 10px 15px;\n            border-radius: 5px;\n            font-size: 14px;\n        }\n        \n        /* 애니메이션 */\n        @keyframes pulse {\n            0% { transform: scale(1); }\n            50% { transform: scale(1.05); }\n            100% { transform: scale(1); }\n        }\n        \n        @keyframes fadeIn {\n            from { opacity: 0; transform: translateY(20px); }\n            to { opacity: 1; transform: translateY(0); }\n        }\n        \n        .fade-in {\n            animation: fadeIn 0.5s ease-in-out;\n        }\n        \n        /* 반응형 */\n        @media (max-width: 768px) {\n            .waiting-screen h1 { font-size: 2.5em; }\n            .waiting-screen p { font-size: 1.5em; }\n            .logo-screen h1 { font-size: 2em; }\n            .logo-screen p { font-size: 1.2em; }\n        }\n    </style>\n</head>\n<body>\n    <!-- 대기화면 -->\n    <div id=\"waitingScreen\" class=\"screen waiting-screen\">\n        <h1>🏆 댄스스포츠 대회</h1>\n        <p>결과를 기다려주세요...</p>\n    </div>\n    \n    <!-- 로고 화면 -->\n    <div id=\"logoScreen\" class=\"screen logo-screen\">\n        <img src=\"assets/danceoffice-logo.png\" alt=\"DanceOffice 로고\" onerror=\"this.style.display='none'\">\n        <h1>DanceOffice</h1>\n        <p>댄스스포츠 관리 시스템</p>\n    </div>\n    \n    <!-- 결과 화면 -->\n    <div id=\"resultsScreen\" class=\"screen results-screen\">\n        <?php if ($currentEvent && $mode === 'results'): ?>\n            <iframe src=\"combined_result_<?php echo htmlspecialchars($currentEvent); ?>.html\" \n                    class=\"results-content\" id=\"resultFrame\"></iframe>\n        <?php else: ?>\n            <div style=\"display: flex; justify-content: center; align-items: center; height: 100vh; font-size: 2em; color: #666;\">\n                결과를 불러오는 중...\n            </div>\n        <?php endif; ?>\n    </div>\n    \n    <!-- 제어 패널 -->\n    <div class=\"control-panel\" id=\"controlPanel\">\n        <button class=\"control-btn\" onclick=\"showMode('waiting')\">⏳ 대기화면</button>\n        <button class=\"control-btn\" onclick=\"showMode('logo')\">🏢 로고</button>\n        <button class=\"control-btn\" onclick=\"showMode('results')\">📊 결과</button>\n        <button class=\"control-btn\" onclick=\"toggleAutoRotate()\">🔄 자동순환</button>\n        <button class=\"control-btn\" onclick=\"previousEvent()\">⬅️ 이전</button>\n        <button class=\"control-btn\" onclick=\"nextEvent()\">다음 ➡️</button>\n        <button class=\"control-btn danger\" onclick=\"exitFullscreen()\">❌ 종료</button>\n    </div>\n    \n    <!-- 상태 표시 -->\n    <div class=\"status-bar\" id=\"statusBar\">\n        현재 모드: <span id=\"currentMode\"><?php echo $mode; ?></span> | \n        이벤트: <span id=\"currentEvent\"><?php echo $currentEvent; ?></span> | \n        자동순환: <span id=\"autoStatus\"><?php echo $autoRotate === 'true' ? 'ON' : 'OFF'; ?></span>\n    </div>\n\n    <script>\n        let currentMode = '<?php echo $mode; ?>';\n        let currentEvent = '<?php echo $currentEvent; ?>';\n        let autoRotate = <?php echo $autoRotate === 'true' ? 'true' : 'false'; ?>;\n        let eventIndex = 0;\n        let events = <?php echo json_encode(array_column($pairs, 'event_id')); ?>;\n        let rotationInterval;\n        \n        // 현재 이벤트 인덱스 찾기\n        eventIndex = events.indexOf(currentEvent);\n        if (eventIndex === -1) eventIndex = 0;\n        \n        // 모드 전환 함수\n        function showMode(mode) {\n            // 모든 화면 숨기기\n            document.querySelectorAll('.screen').forEach(screen => {\n                screen.classList.remove('active');\n            });\n            \n            // 선택된 모드 표시\n            currentMode = mode;\n            document.getElementById('currentMode').textContent = mode;\n            \n            switch(mode) {\n                case 'waiting':\n                    document.getElementById('waitingScreen').classList.add('active');\n                    break;\n                case 'logo':\n                    document.getElementById('logoScreen').classList.add('active');\n                    break;\n                case 'results':\n                    document.getElementById('resultsScreen').classList.add('active');\n                    loadCurrentEvent();\n                    break;\n            }\n            \n            // 제어 버튼 활성화 상태 업데이트\n            updateControlButtons();\n        }\n        \n        // 이벤트 로드 함수\n        function loadCurrentEvent() {\n            if (events.length > 0 && eventIndex >= 0 && eventIndex < events.length) {\n                currentEvent = events[eventIndex];\n                document.getElementById('currentEvent').textContent = currentEvent;\n                \n                const iframe = document.getElementById('resultFrame');\n                if (iframe) {\n                    iframe.src = `combined_result_${currentEvent}.html`;\n                }\n            }\n        }\n        \n        // 이전 이벤트\n        function previousEvent() {\n            if (events.length > 0) {\n                eventIndex = (eventIndex - 1 + events.length) % events.length;\n                loadCurrentEvent();\n            }\n        }\n        \n        // 다음 이벤트\n        function nextEvent() {\n            if (events.length > 0) {\n                eventIndex = (eventIndex + 1) % events.length;\n                loadCurrentEvent();\n            }\n        }\n        \n        // 자동 순환 토글\n        function toggleAutoRotate() {\n            autoRotate = !autoRotate;\n            document.getElementById('autoStatus').textContent = autoRotate ? 'ON' : 'OFF';\n            \n            if (autoRotate) {\n                startAutoRotation();\n            } else {\n                stopAutoRotation();\n            }\n        }\n        \n        // 자동 순환 시작\n        function startAutoRotation() {\n            if (rotationInterval) clearInterval(rotationInterval);\n            \n            rotationInterval = setInterval(() => {\n                if (currentMode === 'results' && events.length > 0) {\n                    nextEvent();\n                }\n            }, 10000); // 10초마다 순환\n        }\n        \n        // 자동 순환 중지\n        function stopAutoRotation() {\n            if (rotationInterval) {\n                clearInterval(rotationInterval);\n                rotationInterval = null;\n            }\n        }\n        \n        // 제어 버튼 상태 업데이트\n        function updateControlButtons() {\n            const buttons = document.querySelectorAll('.control-btn');\n            buttons.forEach(btn => btn.classList.remove('active'));\n            \n            // 현재 모드 버튼 활성화\n            const modeButtons = {\n                'waiting': buttons[0],\n                'logo': buttons[1],\n                'results': buttons[2]\n            };\n            \n            if (modeButtons[currentMode]) {\n                modeButtons[currentMode].classList.add('active');\n            }\n        }\n        \n        // 전체화면 종료\n        function exitFullscreen() {\n            if (document.exitFullscreen) {\n                document.exitFullscreen();\n            } else if (document.webkitExitFullscreen) {\n                document.webkitExitFullscreen();\n            } else if (document.mozCancelFullScreen) {\n                document.mozCancelFullScreen();\n            } else if (document.msExitFullscreen) {\n                document.msExitFullscreen();\n            }\n        }\n        \n        // 키보드 단축키\n        document.addEventListener('keydown', function(e) {\n            switch(e.key) {\n                case 'F11':\n                    e.preventDefault();\n                    if (!document.fullscreenElement) {\n                        document.documentElement.requestFullscreen();\n                    } else {\n                        exitFullscreen();\n                    }\n                    break;\n                case 'ArrowLeft':\n                    previousEvent();\n                    break;\n                case 'ArrowRight':\n                    nextEvent();\n                    break;\n                case ' ':\n                    e.preventDefault();\n                    toggleAutoRotate();\n                    break;\n                case '1':\n                    showMode('waiting');\n                    break;\n                case '2':\n                    showMode('logo');\n                    break;\n                case '3':\n                    showMode('results');\n                    break;\n                case 'Escape':\n                    exitFullscreen();\n                    break;\n            }\n        });\n        \n        // 초기화\n        document.addEventListener('DOMContentLoaded', function() {\n            showMode(currentMode);\n            \n            if (autoRotate) {\n                startAutoRotation();\n            }\n            \n            // 3초 후 제어 패널 숨기기\n            setTimeout(() => {\n                document.getElementById('controlPanel').style.opacity = '0';\n            }, 3000);\n        });\n        \n        // 마우스 움직임 감지로 제어 패널 표시\n        let mouseTimer;\n        document.addEventListener('mousemove', function() {\n            document.getElementById('controlPanel').style.opacity = '1';\n            clearTimeout(mouseTimer);\n            mouseTimer = setTimeout(() => {\n                document.getElementById('controlPanel').style.opacity = '0';\n            }, 3000);\n        });\n    </script>\n</body>\n</html>\n\n\n\n\n","size_bytes":13677},"comp/simple_router.php":{"content":"<?php\nsession_start();\n\necho \"<h1>Simple Router Test - Step 2</h1>\";\n\n$event_no = $_GET['event_no'] ?? '8';\n$comp_id = $_GET['comp_id'] ?? '20250907-001';\n\necho \"<p>Event No: \" . htmlspecialchars($event_no) . \"</p>\";\necho \"<p>Comp ID: \" . htmlspecialchars($comp_id) . \"</p>\";\n\n// functions.php 파일 포함 시도\necho \"<p>Attempting to include functions.php...</p>\";\ntry {\n    require_once __DIR__ . '/scoring/shared/functions.php';\n    echo \"<p style='color: green;'>functions.php included successfully!</p>\";\n} catch (Exception $e) {\n    echo \"<p style='color: red;'>Error including functions.php: \" . htmlspecialchars($e->getMessage()) . \"</p>\";\n    die();\n}\n\n// 이벤트 데이터 로드 시도\necho \"<p>Attempting to load event data...</p>\";\ntry {\n    $event_data = loadEventData($comp_id, $event_no);\n    if ($event_data) {\n        echo \"<p style='color: green;'>Event Data Loaded: \" . htmlspecialchars($event_data['name']) . \"</p>\";\n    } else {\n        echo \"<p style='color: red;'>Failed to load event data.</p>\";\n    }\n} catch (Exception $e) {\n    echo \"<p style='color: red;'>Error loading event data: \" . htmlspecialchars($e->getMessage()) . \"</p>\";\n}\n\n// 선수 데이터 로드 시도\necho \"<p>Attempting to load players data...</p>\";\ntry {\n    $players = loadPlayersData($comp_id, $event_no);\n    if ($players) {\n        echo \"<p style='color: green;'>Players Data Loaded: \" . count($players) . \" players</p>\";\n    } else {\n        echo \"<p style='color: red;'>Failed to load players data.</p>\";\n    }\n} catch (Exception $e) {\n    echo \"<p style='color: red;'>Error loading players data: \" . htmlspecialchars($e->getMessage()) . \"</p>\";\n}\n\ndie(\"Script stopped after loading basic data.\");\n?>\n","size_bytes":1710},"comp/smart_fullscreen.php":{"content":"<?php\n/**\n * 스마트 전체화면 모니터링 시스템\n * 대회 순서에 따른 자동 전환 및 대기화면 표시\n */\n\nrequire_once 'event_schedule_manager.php';\nrequire_once 'result_monitor.php';\n\n$scheduleManager = new EventScheduleManager();\n$monitor = new ResultMonitor();\n\n$currentEvent = isset($_GET['event']) ? $_GET['event'] : '';\n$mode = isset($_GET['mode']) ? $_GET['mode'] : 'waiting';\n$autoRotate = isset($_GET['auto']) ? $_GET['auto'] : 'true';\n\n// 현재 이벤트 정보 가져오기\n$currentEventInfo = $scheduleManager->getCurrentEvent($currentEvent);\n$nextEventInfo = $scheduleManager->getNextEvent($currentEvent);\n$schedule = $scheduleManager->getSchedule();\n\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>스마트 전체화면 모니터링</title>\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n        \n        html, body {\n            width: 100%;\n            height: 100%;\n            overflow: hidden;\n        }\n        \n        body {\n            font-family: 'Arial', sans-serif;\n            background: #000;\n            color: #fff;\n        }\n        \n        .screen {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100vw;\n            height: 100vh;\n            display: none;\n        }\n        \n        .screen.active {\n            display: block;\n        }\n        \n        /* 대기화면 */\n        .waiting-screen {\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            text-align: center;\n            animation: pulse 2s infinite;\n        }\n        \n        .waiting-screen h1 {\n            font-size: 4em;\n            margin-bottom: 30px;\n            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);\n        }\n        \n        .waiting-screen .event-info {\n            background: rgba(255,255,255,0.1);\n            padding: 30px;\n            border-radius: 15px;\n            margin: 20px 0;\n            backdrop-filter: blur(10px);\n        }\n        \n        .waiting-screen .event-name {\n            font-size: 2.5em;\n            margin-bottom: 15px;\n            font-weight: bold;\n        }\n        \n        .waiting-screen .event-id {\n            font-size: 1.5em;\n            opacity: 0.8;\n        }\n        \n        .waiting-screen .next-event {\n            margin-top: 30px;\n            font-size: 1.2em;\n            opacity: 0.7;\n        }\n        \n        .event-status {\n            background: rgba(255,255,255,0.1);\n            padding: 20px;\n            border-radius: 10px;\n            margin: 20px 0;\n            backdrop-filter: blur(10px);\n        }\n        \n        .status-item {\n            display: flex;\n            justify-content: space-between;\n            margin-bottom: 10px;\n        }\n        \n        .status-item:last-child {\n            margin-bottom: 0;\n        }\n        \n        .status-label {\n            font-weight: bold;\n            opacity: 0.8;\n        }\n        \n        .status-value {\n            color: #ffeb3b;\n            font-weight: bold;\n        }\n        \n        /* 로고 화면 */\n        .logo-screen {\n            background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            text-align: center;\n        }\n        \n        .logo-screen img {\n            max-width: 80%;\n            max-height: 60%;\n            margin-bottom: 30px;\n        }\n        \n        .logo-screen h1 {\n            font-size: 3em;\n            margin-bottom: 20px;\n        }\n        \n        .logo-screen p {\n            font-size: 1.5em;\n            opacity: 0.9;\n        }\n        \n        /* 결과 화면 */\n        .results-screen {\n            background: #f5f5f5;\n            color: #333;\n        }\n        \n        .results-content {\n            width: 100%;\n            height: 100%;\n            border: none;\n            display: block;\n        }\n        \n        /* 제어 패널 */\n        .control-panel {\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            z-index: 1000;\n            background: rgba(0,0,0,0.8);\n            padding: 15px;\n            border-radius: 10px;\n            display: flex;\n            gap: 10px;\n            opacity: 0;\n            transition: opacity 0.3s;\n        }\n        \n        .control-panel:hover {\n            opacity: 1;\n        }\n        \n        .control-btn {\n            background: #667eea;\n            color: white;\n            border: none;\n            padding: 10px 15px;\n            border-radius: 5px;\n            cursor: pointer;\n            font-size: 14px;\n            transition: background 0.3s;\n        }\n        \n        .control-btn:hover {\n            background: #5a6fd8;\n        }\n        \n        .control-btn.active {\n            background: #28a745;\n        }\n        \n        .control-btn.danger {\n            background: #dc3545;\n        }\n        \n        /* 상태 표시 */\n        .status-bar {\n            position: fixed;\n            bottom: 20px;\n            left: 20px;\n            background: rgba(0,0,0,0.8);\n            color: white;\n            padding: 10px 15px;\n            border-radius: 5px;\n            font-size: 14px;\n        }\n        \n        /* 진행률 표시 */\n        .progress-bar {\n            position: fixed;\n            bottom: 0;\n            left: 0;\n            width: 100%;\n            height: 4px;\n            background: rgba(255,255,255,0.2);\n        }\n        \n        .progress-fill {\n            height: 100%;\n            background: linear-gradient(90deg, #667eea, #764ba2);\n            transition: width 0.3s ease;\n        }\n        \n        /* 애니메이션 */\n        @keyframes pulse {\n            0% { transform: scale(1); }\n            50% { transform: scale(1.05); }\n            100% { transform: scale(1); }\n        }\n        \n        @keyframes fadeIn {\n            from { opacity: 0; transform: translateY(20px); }\n            to { opacity: 1; transform: translateY(0); }\n        }\n        \n        .fade-in {\n            animation: fadeIn 0.5s ease-in-out;\n        }\n        \n        /* 반응형 */\n        @media (max-width: 768px) {\n            .waiting-screen h1 { font-size: 2.5em; }\n            .waiting-screen .event-name { font-size: 1.8em; }\n            .waiting-screen .event-id { font-size: 1.2em; }\n            .logo-screen h1 { font-size: 2em; }\n            .logo-screen p { font-size: 1.2em; }\n        }\n    </style>\n</head>\n<body>\n    <!-- 대기화면 -->\n    <div id=\"waitingScreen\" class=\"screen waiting-screen\">\n        <h1>🏆 2025 경기도지사배 전국장애인댄스스포츠선수권대회</h1>\n        \n        <?php if ($currentEventInfo): ?>\n        <div class=\"event-info\">\n            <div class=\"event-name\"><?php echo htmlspecialchars($currentEventInfo['event_name']); ?></div>\n            <div class=\"event-id\">이벤트 ID: <?php echo htmlspecialchars($currentEventInfo['event_id']); ?></div>\n        </div>\n        <?php endif; ?>\n        \n        <p>결과를 기다려주세요...</p>\n        \n        <div class=\"event-status\" id=\"eventStatus\">\n            <div class=\"status-item\">\n                <span class=\"status-label\">현재 상태:</span>\n                <span class=\"status-value\" id=\"currentStatus\">대기 중</span>\n            </div>\n            <div class=\"status-item\">\n                <span class=\"status-label\">결과 파일:</span>\n                <span class=\"status-value\" id=\"fileStatus\">확인 중...</span>\n            </div>\n        </div>\n        \n        <?php if ($nextEventInfo): ?>\n        <div class=\"next-event\">\n            다음: <?php echo htmlspecialchars($nextEventInfo['event_name']); ?>\n        </div>\n        <?php endif; ?>\n    </div>\n    \n    <!-- 로고 화면 -->\n    <div id=\"logoScreen\" class=\"screen logo-screen\">\n        <img src=\"assets/danceoffice-logo.png\" alt=\"DanceOffice 로고\" onerror=\"this.style.display='none'\">\n        <h1>DanceOffice</h1>\n        <p>댄스스포츠 관리 시스템</p>\n    </div>\n    \n    <!-- 결과 화면 -->\n    <div id=\"resultsScreen\" class=\"screen results-screen\">\n        <?php if ($currentEvent && $mode === 'results'): ?>\n            <iframe src=\"combined_result_<?php echo htmlspecialchars($currentEvent); ?>.html\" \n                    class=\"results-content\" id=\"resultFrame\"></iframe>\n        <?php else: ?>\n            <div style=\"display: flex; justify-content: center; align-items: center; height: 100vh; font-size: 2em; color: #666;\">\n                결과를 불러오는 중...\n            </div>\n        <?php endif; ?>\n    </div>\n    \n    <!-- 제어 패널 -->\n    <div class=\"control-panel\" id=\"controlPanel\">\n        <button class=\"control-btn\" onclick=\"showMode('waiting')\">⏳ 대기화면</button>\n        <button class=\"control-btn\" onclick=\"showMode('logo')\">🏢 로고</button>\n        <button class=\"control-btn\" onclick=\"showMode('results')\">📊 결과</button>\n        <button class=\"control-btn\" onclick=\"toggleAutoRotate()\">🔄 자동순환</button>\n        <button class=\"control-btn\" onclick=\"previousEvent()\">⬅️ 이전</button>\n        <button class=\"control-btn\" onclick=\"nextEvent()\">다음 ➡️</button>\n        <button class=\"control-btn danger\" onclick=\"exitFullscreen()\">❌ 종료</button>\n    </div>\n    \n    <!-- 상태 표시 -->\n    <div class=\"status-bar\" id=\"statusBar\">\n        현재 모드: <span id=\"currentMode\"><?php echo $mode; ?></span> | \n        이벤트: <span id=\"currentEvent\"><?php echo $currentEvent; ?></span> | \n        자동순환: <span id=\"autoStatus\"><?php echo $autoRotate === 'true' ? 'ON' : 'OFF'; ?></span>\n    </div>\n    \n    <!-- 진행률 표시 -->\n    <div class=\"progress-bar\">\n        <div class=\"progress-fill\" id=\"progressFill\" style=\"width: 0%\"></div>\n    </div>\n\n    <script>\n        let currentMode = '<?php echo $mode; ?>';\n        let currentEvent = '<?php echo $currentEvent; ?>';\n        let autoRotate = <?php echo $autoRotate === 'true' ? 'true' : 'false'; ?>;\n        let eventIndex = <?php echo $scheduleManager->getCurrentEventIndex($currentEvent); ?>;\n        let events = <?php echo json_encode(array_column($schedule, 'event_id')); ?>;\n        let eventNames = <?php echo json_encode(array_column($schedule, 'event_name')); ?>;\n        let showResults = <?php echo json_encode(array_column($schedule, 'show_result')); ?>;\n        let rotationInterval;\n        let progressInterval;\n        \n        // 모드 전환 함수\n        function showMode(mode) {\n            // 모든 화면 숨기기\n            document.querySelectorAll('.screen').forEach(screen => {\n                screen.classList.remove('active');\n            });\n            \n            // 선택된 모드 표시\n            currentMode = mode;\n            document.getElementById('currentMode').textContent = mode;\n            \n            switch(mode) {\n                case 'waiting':\n                    document.getElementById('waitingScreen').classList.add('active');\n                    break;\n                case 'logo':\n                    document.getElementById('logoScreen').classList.add('active');\n                    break;\n                case 'results':\n                    document.getElementById('resultsScreen').classList.add('active');\n                    loadCurrentEvent();\n                    break;\n            }\n            \n            // 제어 버튼 활성화 상태 업데이트\n            updateControlButtons();\n        }\n        \n        // 이벤트 로드 함수\n        function loadCurrentEvent() {\n            if (events.length > 0 && eventIndex >= 0 && eventIndex < events.length) {\n                currentEvent = events[eventIndex];\n                document.getElementById('currentEvent').textContent = currentEvent;\n                \n                const iframe = document.getElementById('resultFrame');\n                if (iframe) {\n                    iframe.src = `combined_result_${currentEvent}.html`;\n                }\n            }\n        }\n        \n        // 이전 이벤트\n        function previousEvent() {\n            if (events.length > 0) {\n                eventIndex = (eventIndex - 1 + events.length) % events.length;\n                loadCurrentEvent();\n            }\n        }\n        \n        // 다음 이벤트\n        function nextEvent() {\n            if (events.length > 0) {\n                eventIndex = (eventIndex + 1) % events.length;\n                loadCurrentEvent();\n            }\n        }\n        \n        // 자동 순환 토글\n        function toggleAutoRotate() {\n            autoRotate = !autoRotate;\n            document.getElementById('autoStatus').textContent = autoRotate ? 'ON' : 'OFF';\n            \n            if (autoRotate) {\n                startAutoRotation();\n            } else {\n                stopAutoRotation();\n            }\n        }\n        \n        // 자동 순환 시작\n        function startAutoRotation() {\n            if (rotationInterval) clearInterval(rotationInterval);\n            \n            rotationInterval = setInterval(() => {\n                if (currentMode === 'waiting' && events.length > 0) {\n                    // 대기화면에서 결과가 있는 이벤트로 자동 전환\n                    if (showResults[eventIndex]) {\n                        checkResultFileAndShow();\n                    } else {\n                        nextEvent();\n                    }\n                } else if (currentMode === 'results') {\n                    // 결과 화면에서 다음 이벤트로 전환\n                    nextEvent();\n                    if (showResults[eventIndex]) {\n                        checkResultFileAndShow();\n                    } else {\n                        showMode('waiting');\n                    }\n                }\n            }, 10000); // 10초마다 순환\n        }\n        \n        // 결과 파일 존재 여부 확인 후 표시\n        function checkResultFileAndShow() {\n            if (events.length > 0 && eventIndex >= 0 && eventIndex < events.length) {\n                const eventId = events[eventIndex];\n                \n                // 상태 업데이트\n                updateEventStatus('결과 파일 확인 중...', '확인 중...');\n                \n                // 결과 파일 존재 여부 확인\n                fetch(`check_result_file.php?event=${eventId}`)\n                    .then(response => response.json())\n                    .then(data => {\n                        if (data.exists) {\n                            updateEventStatus('결과 준비 완료', '존재함');\n                            showMode('results');\n                            startProgress();\n                        } else {\n                            // 결과 파일이 없으면 대기화면 유지\n                            updateEventStatus('결과 대기 중', '없음');\n                            console.log(`결과 파일이 없습니다: ${eventId}`);\n                            showMode('waiting');\n                        }\n                    })\n                    .catch(error => {\n                        console.error('결과 파일 확인 오류:', error);\n                        updateEventStatus('오류 발생', '확인 실패');\n                        showMode('waiting');\n                    });\n            }\n        }\n        \n        // 이벤트 상태 업데이트\n        function updateEventStatus(currentStatus, fileStatus) {\n            const currentStatusElement = document.getElementById('currentStatus');\n            const fileStatusElement = document.getElementById('fileStatus');\n            \n            if (currentStatusElement) {\n                currentStatusElement.textContent = currentStatus;\n            }\n            if (fileStatusElement) {\n                fileStatusElement.textContent = fileStatus;\n            }\n        }\n        \n        // 자동 순환 중지\n        function stopAutoRotation() {\n            if (rotationInterval) {\n                clearInterval(rotationInterval);\n                rotationInterval = null;\n            }\n            stopProgress();\n        }\n        \n        // 진행률 시작\n        function startProgress() {\n            if (progressInterval) clearInterval(progressInterval);\n            \n            let progress = 0;\n            const duration = 10000; // 10초\n            const increment = 100 / (duration / 100);\n            \n            progressInterval = setInterval(() => {\n                progress += increment;\n                document.getElementById('progressFill').style.width = progress + '%';\n                \n                if (progress >= 100) {\n                    clearInterval(progressInterval);\n                }\n            }, 100);\n        }\n        \n        // 진행률 중지\n        function stopProgress() {\n            if (progressInterval) {\n                clearInterval(progressInterval);\n                progressInterval = null;\n            }\n            document.getElementById('progressFill').style.width = '0%';\n        }\n        \n        // 제어 버튼 상태 업데이트\n        function updateControlButtons() {\n            const buttons = document.querySelectorAll('.control-btn');\n            buttons.forEach(btn => btn.classList.remove('active'));\n            \n            // 현재 모드 버튼 활성화\n            const modeButtons = {\n                'waiting': buttons[0],\n                'logo': buttons[1],\n                'results': buttons[2]\n            };\n            \n            if (modeButtons[currentMode]) {\n                modeButtons[currentMode].classList.add('active');\n            }\n        }\n        \n        // 전체화면 종료\n        function exitFullscreen() {\n            if (document.exitFullscreen) {\n                document.exitFullscreen();\n            } else if (document.webkitExitFullscreen) {\n                document.webkitExitFullscreen();\n            } else if (document.mozCancelFullScreen) {\n                document.mozCancelFullScreen();\n            } else if (document.msExitFullscreen) {\n                document.msExitFullscreen();\n            }\n        }\n        \n        // 키보드 단축키\n        document.addEventListener('keydown', function(e) {\n            switch(e.key) {\n                case 'F11':\n                    e.preventDefault();\n                    if (!document.fullscreenElement) {\n                        document.documentElement.requestFullscreen();\n                    } else {\n                        exitFullscreen();\n                    }\n                    break;\n                case 'ArrowLeft':\n                    previousEvent();\n                    break;\n                case 'ArrowRight':\n                    nextEvent();\n                    break;\n                case ' ':\n                    e.preventDefault();\n                    toggleAutoRotate();\n                    break;\n                case '1':\n                    showMode('waiting');\n                    break;\n                case '2':\n                    showMode('logo');\n                    break;\n                case '3':\n                    showMode('results');\n                    break;\n                case 'Escape':\n                    exitFullscreen();\n                    break;\n            }\n        });\n        \n        // 초기화\n        document.addEventListener('DOMContentLoaded', function() {\n            showMode(currentMode);\n            \n            if (autoRotate) {\n                startAutoRotation();\n            }\n            \n            // 3초 후 제어 패널 숨기기\n            setTimeout(() => {\n                document.getElementById('controlPanel').style.opacity = '0';\n            }, 3000);\n            \n            // 결과 파일 모니터링 시작 (5초마다 확인)\n            startResultFileMonitoring();\n        });\n        \n        // 결과 파일 모니터링\n        function startResultFileMonitoring() {\n            setInterval(() => {\n                if (currentMode === 'waiting' && events.length > 0) {\n                    const eventId = events[eventIndex];\n                    if (showResults[eventIndex]) {\n                        checkResultFileAndShow();\n                    }\n                }\n            }, 5000); // 5초마다 확인\n        }\n        \n        // 마우스 움직임 감지로 제어 패널 표시\n        let mouseTimer;\n        document.addEventListener('mousemove', function() {\n            document.getElementById('controlPanel').style.opacity = '1';\n            clearTimeout(mouseTimer);\n            mouseTimer = setTimeout(() => {\n                document.getElementById('controlPanel').style.opacity = '0';\n            }, 3000);\n        });\n    </script>\n</body>\n</html>\n","size_bytes":21107},"comp/test_results.php":{"content":"<?php\n/**\n * results/ 폴더의 기존 파일들로 테스트하는 페이지\n */\n\nrequire_once 'result_monitor.php';\n\n$monitor = new ResultMonitor();\n\necho \"<!DOCTYPE html>\n<html lang='ko'>\n<head>\n    <meta charset='UTF-8'>\n    <meta name='viewport' content='width=device-width, initial-scale=1.0'>\n    <title>Results 폴더 테스트</title>\n    <style>\n        body { font-family: Arial, sans-serif; margin: 20px; background: #f5f5f5; }\n        .container { max-width: 1200px; margin: 0 auto; background: white; padding: 20px; border-radius: 10px; box-shadow: 0 0 20px rgba(0,0,0,0.1); }\n        .section { margin-bottom: 30px; padding: 20px; border: 1px solid #ddd; border-radius: 5px; }\n        .section h2 { color: #333; margin-top: 0; }\n        .file-list { max-height: 300px; overflow-y: auto; }\n        .file-item { padding: 10px; margin: 5px 0; background: #f8f9fa; border-radius: 3px; }\n        .btn { background: #007bff; color: white; border: none; padding: 10px 20px; border-radius: 5px; cursor: pointer; margin: 5px; }\n        .btn:hover { background: #0056b3; }\n        .success { color: #28a745; }\n        .error { color: #dc3545; }\n        .info { color: #17a2b8; }\n        pre { background: #f8f9fa; padding: 15px; border-radius: 5px; overflow-x: auto; }\n    </style>\n</head>\n<body>\n    <div class='container'>\n        <h1>🔍 Results 폴더 테스트</h1>\n        <p>현재 Y:/results 폴더의 파일들을 분석하고 종합 결과를 생성합니다.</p>\";\n\n// 1. 폴더 존재 확인\necho \"<div class='section'>\n        <h2>📁 폴더 상태</h2>\";\n\n$resultsPath = __DIR__ . \"/../results\";\n$resultsResultsPath = __DIR__ . \"/../results/results\";\n\nif (is_dir($resultsPath)) {\n    echo \"<p class='success'>✅ results 폴더가 존재합니다.</p>\";\n} else {\n    echo \"<p class='error'>❌ results 폴더가 존재하지 않습니다.</p>\";\n    echo \"</div></div></body></html>\";\n    exit;\n}\n\nif (is_dir($resultsResultsPath)) {\n    echo \"<p class='success'>✅ results/results 폴더가 존재합니다.</p>\";\n} else {\n    echo \"<p class='error'>❌ results/results 폴더가 존재하지 않습니다.</p>\";\n}\n\necho \"</div>\";\n\n// 2. 파일 쌍 찾기\necho \"<div class='section'>\n        <h2>🔍 결과 파일 쌍 찾기</h2>\";\n\ntry {\n    $pairs = $monitor->findResultPairs();\n    echo \"<p class='info'>📊 총 \" . count($pairs) . \"개의 결과 파일 쌍을 찾았습니다.</p>\";\n    \n    if (count($pairs) > 0) {\n        echo \"<div class='file-list'>\";\n        foreach ($pairs as $pair) {\n            echo \"<div class='file-item'>\n                    <strong>이벤트 ID:</strong> {$pair['event_id']}<br>\n                    <strong>요약 파일:</strong> \" . basename($pair['summary']) . \"<br>\n                    <strong>상세 파일:</strong> \" . basename($pair['detailed']) . \"\n                  </div>\";\n        }\n        echo \"</div>\";\n    } else {\n        echo \"<p class='error'>❌ 결과 파일 쌍을 찾을 수 없습니다.</p>\";\n    }\n} catch (Exception $e) {\n    echo \"<p class='error'>❌ 오류: \" . $e->getMessage() . \"</p>\";\n}\n\necho \"</div>\";\n\n// 3. 샘플 파일 파싱 테스트\necho \"<div class='section'>\n        <h2>🧪 파일 파싱 테스트</h2>\";\n\nif (count($pairs) > 0) {\n    $testPair = $pairs[0]; // 첫 번째 쌍으로 테스트\n    \n    try {\n        echo \"<p class='info'>테스트 파일: {$testPair['event_id']}</p>\";\n        \n        // 요약 파일 파싱\n        echo \"<h3>📄 요약 파일 파싱 결과</h3>\";\n        $summaryData = $monitor->parseResultFile($testPair['summary']);\n        echo \"<pre>\";\n        echo \"이벤트 제목: \" . $summaryData['event_title'] . \"\\n\";\n        echo \"이벤트 날짜: \" . $summaryData['event_date'] . \"\\n\";\n        echo \"경쟁자 수: \" . count($summaryData['competitors']) . \"\\n\";\n        echo \"심판 수: \" . count($summaryData['adjudicators']) . \"\\n\";\n        echo \"\\n경쟁자 목록:\\n\";\n        foreach ($summaryData['competitors'] as $competitor) {\n            echo \"- 순위: {$competitor['place']}, 번호: {$competitor['tag']}, 이름: {$competitor['name']}, 점수: {$competitor['final_score']}\\n\";\n        }\n        echo \"</pre>\";\n        \n        // 상세 파일 파싱\n        echo \"<h3>📊 상세 파일 파싱 결과</h3>\";\n        $detailedData = $monitor->parseDetailedFile($testPair['detailed']);\n        echo \"<pre>\";\n        echo \"댄스 종류: \" . implode(\", \", array_keys($detailedData)) . \"\\n\";\n        foreach ($detailedData as $danceName => $danceResults) {\n            echo \"\\n{$danceName}:\\n\";\n            foreach ($danceResults as $result) {\n                echo \"- 번호: {$result['tag']}, 이름: {$result['name']}, 순위: {$result['placing']}\\n\";\n            }\n        }\n        echo \"</pre>\";\n        \n    } catch (Exception $e) {\n        echo \"<p class='error'>❌ 파싱 오류: \" . $e->getMessage() . \"</p>\";\n    }\n} else {\n    echo \"<p class='error'>❌ 테스트할 파일 쌍이 없습니다.</p>\";\n}\n\necho \"</div>\";\n\n// 4. 종합 결과 생성 테스트\necho \"<div class='section'>\n        <h2>🎨 종합 결과 생성 테스트</h2>\";\n\nif (count($pairs) > 0) {\n    $testPair = $pairs[0];\n    \n    try {\n        echo \"<p class='info'>종합 결과를 생성합니다...</p>\";\n        \n        $summaryData = $monitor->parseResultFile($testPair['summary']);\n        $detailedData = $monitor->parseDetailedFile($testPair['detailed']);\n        $combinedHtml = $monitor->generateCombinedResult($summaryData, $detailedData, $testPair['event_id']);\n        \n        $savedFile = $monitor->saveCombinedResult($combinedHtml, $testPair['event_id']);\n        \n        echo \"<p class='success'>✅ 종합 결과가 생성되었습니다!</p>\";\n        echo \"<p><strong>저장 위치:</strong> \" . $savedFile . \"</p>\";\n        echo \"<p><a href='combined_result_{$testPair['event_id']}.html' target='_blank' class='btn'>🎯 종합 결과 보기</a></p>\";\n        \n    } catch (Exception $e) {\n        echo \"<p class='error'>❌ 종합 결과 생성 오류: \" . $e->getMessage() . \"</p>\";\n    }\n} else {\n    echo \"<p class='error'>❌ 테스트할 파일 쌍이 없습니다.</p>\";\n}\n\necho \"</div>\";\n\n// 5. 모든 결과 처리\necho \"<div class='section'>\n        <h2>⚡ 모든 결과 처리</h2>\n        <p>모든 결과 파일 쌍을 처리하여 종합 결과를 생성합니다.</p>\n        <button onclick='processAllResults()' class='btn'>🚀 모든 결과 처리</button>\n        <div id='processResult'></div>\n      </div>\";\n\necho \"</div>\n\n<script>\nasync function processAllResults() {\n    const resultDiv = document.getElementById('processResult');\n    resultDiv.innerHTML = '<p class=\\\"info\\\">처리 중...</p>';\n    \n    try {\n        const response = await fetch('result_monitor.php?action=process');\n        const data = await response.json();\n        \n        if (data.success) {\n            const processed = data.processed || [];\n            let html = '<p class=\\\"success\\\">✅ ' + processed.length + '개의 결과가 처리되었습니다!</p>';\n            html += '<ul>';\n            processed.forEach(result => {\n                html += '<li>';\n                html += '<a href=\\\"combined_result_' + result.event_id + '.html\\\" target=\\\"_blank\\\">' + result.event_title + ' (' + result.event_id + ')</a>';\n                if (result.web_url) {\n                    html += ' <a href=\\\"' + result.web_url + '\\\" target=\\\"_blank\\\" style=\\\"color: #667eea; text-decoration: none;\\\">🌐 웹에서 보기</a>';\n                }\n                html += '</li>';\n            });\n            html += '</ul>';\n            resultDiv.innerHTML = html;\n        } else {\n            resultDiv.innerHTML = '<p class=\\\"error\\\">❌ 처리 실패: ' + (data.message || '알 수 없는 오류') + '</p>';\n        }\n    } catch (error) {\n        resultDiv.innerHTML = '<p class=\\\"error\\\">❌ 오류: ' + error.message + '</p>';\n    }\n}\n</script>\n\n</body>\n</html>\";\n?>\n","size_bytes":7923},"comp/test_scoring.php":{"content":"<?php\n// 에러 리포팅 활성화\nerror_reporting(E_ALL);\nini_set('display_errors', 1);\n\necho \"<h1>채점 시스템 테스트</h1>\";\n\n$comp_id = $_GET['comp_id'] ?? '';\n$event_no = $_GET['event_no'] ?? '';\n\necho \"<p>comp_id: \" . htmlspecialchars($comp_id) . \"</p>\";\necho \"<p>event_no: \" . htmlspecialchars($event_no) . \"</p>\";\n\n// 세션 확인\nsession_start();\necho \"<p>세션 로그인 상태: \" . (isset($_SESSION['scoring_logged_in']) ? 'YES' : 'NO') . \"</p>\";\necho \"<p>심사위원 ID: \" . ($_SESSION['scoring_judge_id'] ?? 'N/A') . \"</p>\";\n\n// 파일 존재 확인\n$data_dir = __DIR__ . \"/data/$comp_id\";\necho \"<p>데이터 디렉토리: \" . $data_dir . \"</p>\";\necho \"<p>디렉토리 존재: \" . (is_dir($data_dir) ? 'YES' : 'NO') . \"</p>\";\n\n$runorder_file = \"$data_dir/RunOrder_Tablet.txt\";\necho \"<p>RunOrder 파일: \" . $runorder_file . \"</p>\";\necho \"<p>파일 존재: \" . (file_exists($runorder_file) ? 'YES' : 'NO') . \"</p>\";\n\n$players_file = \"$data_dir/players_$event_no.txt\";\necho \"<p>선수 파일: \" . $players_file . \"</p>\";\necho \"<p>파일 존재: \" . (file_exists($players_file) ? 'YES' : 'NO') . \"</p>\";\n\necho \"<p><a href='judge_scoring.php?comp_id=$comp_id&event_no=$event_no&lang=ko'>원래 채점 페이지로 이동</a></p>\";\n?>\n\n\n\n\n\n\n","size_bytes":1259},"comp/test_scoring_types.php":{"content":"<?php\n/**\n * 5가지 심사 방식 테스트 페이지\n */\n\n// HTML 이스케이프 함수\nfunction h($s) { \n    return htmlspecialchars($s ?? ''); \n}\n\n$comp_id = '20250907-001';\n$lang = 'ko';\n\n$scoring_types = [\n    '8' => ['name' => '멀티이벤트 결승전 (기존)', 'type' => 'multievent_final'],\n    '9' => ['name' => '멀티이벤트 준결승 (기존)', 'type' => 'multievent_preliminary'],\n    '10' => ['name' => '프리스타일 심사', 'type' => 'freestyle'],\n    '11' => ['name' => '포메이션 심사', 'type' => 'formation'],\n    '12' => ['name' => '멀티이벤트 결승전 (준결승 없음)', 'type' => 'multievent_final_only']\n];\n?>\n\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>심사 방식 테스트</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            max-width: 800px;\n            margin: 0 auto;\n            padding: 20px;\n            background: #f5f5f5;\n        }\n        .container {\n            background: white;\n            padding: 30px;\n            border-radius: 10px;\n            box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n        }\n        h1 {\n            color: #333;\n            text-align: center;\n            margin-bottom: 30px;\n        }\n        .scoring-type {\n            background: #f8f9fa;\n            border: 2px solid #e9ecef;\n            border-radius: 8px;\n            padding: 20px;\n            margin: 15px 0;\n            transition: all 0.3s ease;\n        }\n        .scoring-type:hover {\n            border-color: #667eea;\n            transform: translateY(-2px);\n            box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n        }\n        .scoring-type h3 {\n            margin: 0 0 10px 0;\n            color: #333;\n        }\n        .scoring-type p {\n            margin: 0 0 15px 0;\n            color: #666;\n        }\n        .test-btn {\n            background: #667eea;\n            color: white;\n            border: none;\n            padding: 10px 20px;\n            border-radius: 5px;\n            cursor: pointer;\n            text-decoration: none;\n            display: inline-block;\n            font-weight: bold;\n        }\n        .test-btn:hover {\n            background: #5a6fd8;\n        }\n        .type-badge {\n            background: #e3f2fd;\n            color: #1976d2;\n            padding: 4px 8px;\n            border-radius: 4px;\n            font-size: 12px;\n            font-weight: bold;\n            margin-left: 10px;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <h1>🎭 5가지 심사 방식 테스트</h1>\n        \n        <?php foreach ($scoring_types as $event_no => $info): ?>\n        <div class=\"scoring-type\">\n            <h3>\n                이벤트 #<?= $event_no ?>: <?= $info['name'] ?>\n                <span class=\"type-badge\"><?= $info['type'] ?></span>\n            </h3>\n            <p>\n                <?php if ($info['type'] === 'multievent_final'): ?>\n                    기존에 작업한 결승전 시스템 - 터치 기반 순위 시스템, 드래그 앤 드롭 지원\n                <?php elseif ($info['type'] === 'multievent_preliminary'): ?>\n                    기존에 작업한 준결승 시스템 - Instagram 스타일 댄스별 채점\n                <?php elseif ($info['type'] === 'freestyle'): ?>\n                    프리스타일 심사 - 창의성, 기술성, 표현력, 음악성 종합 평가\n                <?php elseif ($info['type'] === 'formation'): ?>\n                    포메이션 심사 - 팀 단위 포메이션 패턴 평가\n                <?php elseif ($info['type'] === 'multievent_final_only'): ?>\n                    멀티이벤트 결승전 (준결승 없음) - 바로 결승전으로 진행\n                <?php endif; ?>\n            </p>\n            <a href=\"judge_scoring_router.php?comp_id=<?= h($comp_id) ?>&event_no=<?= $event_no ?>&lang=<?= h($lang) ?>\" \n               class=\"test-btn\" target=\"_blank\">\n                테스트하기\n            </a>\n        </div>\n        <?php endforeach; ?>\n        \n        <div style=\"text-align: center; margin-top: 30px; padding: 20px; background: #e8f5e8; border-radius: 8px;\">\n            <h3>📝 테스트 방법</h3>\n            <p>1. 각 심사 방식을 클릭하여 테스트 페이지로 이동</p>\n            <p>2. 각 시스템의 기능을 확인하고 테스트</p>\n            <p>3. 데이터 저장 및 복원 기능 확인</p>\n            <p>4. 모바일/태블릿 반응형 디자인 확인</p>\n        </div>\n    </div>\n</body>\n</html>\n","size_bytes":4610},"comp/test_simple.php":{"content":"<?php\n// 간단한 테스트 페이지\necho \"<h1>5가지 심사 방식 테스트</h1>\";\n\n$comp_id = '20250907-001';\n$lang = 'ko';\n\n$scoring_types = [\n    '8' => '멀티이벤트 결승전 (기존)',\n    '9' => '멀티이벤트 준결승 (기존)', \n    '10' => '프리스타일 심사',\n    '11' => '포메이션 심사',\n    '12' => '멀티이벤트 결승전 (준결승 없음)'\n];\n\nforeach ($scoring_types as $event_no => $name) {\n    echo \"<p>\";\n    echo \"<strong>이벤트 #{$event_no}: {$name}</strong><br>\";\n    echo \"<a href='judge_scoring_router.php?comp_id={$comp_id}&event_no={$event_no}&lang={$lang}' target='_blank'>테스트하기</a>\";\n    echo \"</p><hr>\";\n}\n?>\n\n\n\n\n\n\n","size_bytes":683},"comp/test_touch.php":{"content":"<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>터치 테스트</title>\n    <style>\n        .player-card {\n            background: #fff;\n            border: 2px solid #ddd;\n            border-radius: 6px;\n            padding: 20px;\n            text-align: center;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            margin: 10px;\n            display: inline-block;\n            min-width: 80px;\n            user-select: none;\n        }\n        .player-card.selected {\n            border-color: #4CAF50;\n            background: #e8f5e8;\n        }\n        .player-card:hover {\n            border-color: #4CAF50;\n            transform: translateY(-2px);\n        }\n    </style>\n</head>\n<body>\n    <h1>터치 테스트</h1>\n    <p>선수 번호를 클릭하거나 터치해보세요:</p>\n    \n    <div class=\"player-card\" data-player=\"11\" onclick=\"toggleCard(this)\">\n        <div class=\"player-number\">11</div>\n        <input type=\"checkbox\" class=\"recall-checkbox\" style=\"display: none;\">\n    </div>\n    \n    <div class=\"player-card\" data-player=\"12\" onclick=\"toggleCard(this)\">\n        <div class=\"player-number\">12</div>\n        <input type=\"checkbox\" class=\"recall-checkbox\" style=\"display: none;\">\n    </div>\n    \n    <div class=\"player-card\" data-player=\"13\" onclick=\"toggleCard(this)\">\n        <div class=\"player-number\">13</div>\n        <input type=\"checkbox\" class=\"recall-checkbox\" style=\"display: none;\">\n    </div>\n    \n    <div class=\"player-card\" data-player=\"14\" onclick=\"toggleCard(this)\">\n        <div class=\"player-number\">14</div>\n        <input type=\"checkbox\" class=\"recall-checkbox\" style=\"display: none;\">\n    </div>\n    \n    <div class=\"player-card\" data-player=\"15\" onclick=\"toggleCard(this)\">\n        <div class=\"player-number\">15</div>\n        <input type=\"checkbox\" class=\"recall-checkbox\" style=\"display: none;\">\n    </div>\n    \n    <div id=\"status\">선택된 선수: 0명</div>\n    \n    <script>\n        function toggleCard(card) {\n            console.log('Card clicked:', card);\n            const checkbox = card.querySelector('.recall-checkbox');\n            checkbox.checked = !checkbox.checked;\n            \n            if (checkbox.checked) {\n                card.classList.add('selected');\n            } else {\n                card.classList.remove('selected');\n            }\n            \n            updateStatus();\n        }\n        \n        function updateStatus() {\n            const selected = document.querySelectorAll('.recall-checkbox:checked').length;\n            document.getElementById('status').textContent = `선택된 선수: ${selected}명`;\n        }\n        \n        // 터치 이벤트도 추가\n        document.querySelectorAll('.player-card').forEach(card => {\n            card.addEventListener('touchstart', function(e) {\n                e.preventDefault();\n                this.style.transform = 'scale(0.95)';\n            });\n            \n            card.addEventListener('touchend', function(e) {\n                e.preventDefault();\n                this.style.transform = '';\n                toggleCard(this);\n            });\n        });\n    </script>\n</body>\n</html>\n\n\n\n\n\n\n","size_bytes":3254},"comp/test_upload.php":{"content":"<?php\necho \"File upload test - \" . date('Y-m-d H:i:s');\necho \"<br>Current directory: \" . __DIR__;\necho \"<br>File exists: \" . (file_exists(__DIR__ . '/judge_scoring.php') ? 'YES' : 'NO');\necho \"<br>File size: \" . filesize(__DIR__ . '/judge_scoring.php') . \" bytes\";\n?>\n\n\n\n","size_bytes":271},"comp/update_event_status.php":{"content":"<?php\n/**\n * 이벤트 상태 업데이트 API\n */\n\nheader('Content-Type: application/json');\n\n$eventId = $_POST['event_id'] ?? '';\n$showResult = $_POST['show_result'] === 'true';\n\nif (!$eventId) {\n    echo json_encode(['success' => false, 'message' => '이벤트 ID가 필요합니다.']);\n    exit;\n}\n\n// 이벤트 상태 파일 경로\n$statusFile = __DIR__ . '/uploads/event_status.json';\n\n// 기존 상태 로드\n$status = [];\nif (file_exists($statusFile)) {\n    $status = json_decode(file_get_contents($statusFile), true) ?: [];\n}\n\n// 상태 업데이트\n$status[$eventId] = $showResult;\n\n// 파일 저장\nif (file_put_contents($statusFile, json_encode($status, JSON_PRETTY_PRINT))) {\n    echo json_encode(['success' => true, 'message' => '상태가 업데이트되었습니다.']);\n} else {\n    echo json_encode(['success' => false, 'message' => '파일 저장에 실패했습니다.']);\n}\n?>\n\n\n\n\n","size_bytes":903},"comp/view_scores.php":{"content":"<?php\n$comp_id = $_GET['comp_id'] ?? '';\n$event_no = $_GET['event_no'] ?? '';\n\n// Remove BOM and normalize\n$comp_id = preg_replace('/\\x{FEFF}/u', '', $comp_id);\n$event_no = preg_replace('/\\x{FEFF}/u', '', $event_no);\n\n$comp_id = preg_replace('/[^\\d-]/', '', $comp_id);\n$event_no = preg_replace('/\\D+/', '', $event_no);\n\n// Language setting\n$lang = $_GET['lang'] ?? 'ko';\nif (!in_array($lang, ['ko', 'en', 'zh', 'ja'])) {\n    $lang = 'ko';\n}\n\nif (!$comp_id || !$event_no) {\n    echo \"<h1>잘못된 대회 ID 또는 이벤트 번호입니다.</h1>\";\n    exit;\n}\n\n// Load scores\n$scores_file = __DIR__ . \"/data/$comp_id/scores_$event_no.json\";\n$scores_data = null;\n$recall_data = null;\n\nif (file_exists($scores_file)) {\n    $content = file_get_contents($scores_file);\n    $scores_data = json_decode($content, true);\n} else {\n    // Look for .adj files (recall round)\n    $adj_files = glob(\"$data_dir/{$event_no}_*.adj\");\n    $recall_data = [];\n    \n    foreach ($adj_files as $file) {\n        $filename = basename($file);\n        if (preg_match('/^(\\d+)_(.+)_(\\d+)\\.adj$/', $filename, $matches)) {\n            $file_dance = $matches[2];\n            $file_judge_id = $matches[3];\n            \n            // Read file content\n            $lines = file($file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n            $players = [];\n            \n            foreach ($lines as $line) {\n                $line = trim($line, '\"');\n                if ($line && is_numeric($line)) {\n                    $players[] = $line;\n                }\n            }\n            \n            if (!isset($recall_data[$file_dance])) {\n                $recall_data[$file_dance] = [];\n            }\n            \n            $recall_data[$file_dance][$file_judge_id] = $players;\n        }\n    }\n}\n\n// Load event data\n$data_dir = __DIR__ . \"/data/$comp_id\";\n$runorder_file = \"$data_dir/RunOrder_Tablet.txt\";\n$event_data = null;\n\nif (file_exists($runorder_file)) {\n    $lines = file($runorder_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    foreach ($lines as $line) {\n        if (preg_match('/^bom/', $line)) continue;\n        $cols = array_map('trim', explode(',', $line));\n        if (($cols[0] ?? '') === $event_no) {\n            $event_data = [\n                'no' => $cols[0],\n                'name' => $cols[1],\n                'round_type' => $cols[2],\n                'round_num' => $cols[3],\n                'dances' => []\n            ];\n            for ($i = 6; $i <= 10; $i++) {\n                if (!empty($cols[$i])) $event_data['dances'][] = $cols[$i];\n            }\n            break;\n        }\n    }\n}\n\nfunction h($s) { return htmlspecialchars($s ?? ''); }\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>채점 결과 | <?=h($event_data['name'] ?? '이벤트')?></title>\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\n    <style>\n        body { background:#1a1a1a; font-family:sans-serif; margin:0; padding:20px;}\n        .container { max-width:1200px; margin:0 auto; background:#fff; border-radius:12px; padding:30px; box-shadow:0 4px 20px rgba(0,0,0,0.3);}\n        h1 { color:#003399; margin-bottom:20px; text-align:center;}\n        .event-info { background:#f0f4ff; padding:15px; border-radius:8px; margin-bottom:20px; text-align:center;}\n        .event-info h2 { margin:0 0 10px 0; color:#0d2c96;}\n        .event-info p { margin:5px 0; color:#333;}\n        .results-section { margin-bottom:30px;}\n        .results-header { background:#03C75A; color:#fff; padding:10px 15px; border-radius:6px 6px 0 0; font-weight:bold;}\n        .results-table { width:100%; border-collapse:collapse; background:#fff; border:1px solid #ddd;}\n        .results-table th, .results-table td { padding:12px 8px; text-align:center; border:1px solid #ddd;}\n        .results-table th { background:#f8f9fa; font-weight:bold; color:#333;}\n        .results-table tr:nth-child(even) { background:#f8f9fa;}\n        .place-1 { background:#FFD700; font-weight:bold; color:#000;}\n        .place-2 { background:#C0C0C0; font-weight:bold; color:#000;}\n        .place-3 { background:#CD7F32; font-weight:bold; color:#fff;}\n        .adjudicator-section { margin-bottom:30px;}\n        .adjudicator-header { background:#003399; color:#fff; padding:10px 15px; border-radius:6px 6px 0 0; font-weight:bold;}\n        .adjudicator-table { width:100%; border-collapse:collapse; background:#fff; border:1px solid #ddd; font-size:14px;}\n        .adjudicator-table th, .adjudicator-table td { padding:8px 4px; text-align:center; border:1px solid #ddd;}\n        .adjudicator-table th { background:#f8f9fa; font-weight:bold; color:#333;}\n        .adjudicator-table tr:nth-child(even) { background:#f8f9fa;}\n        .no-data { text-align:center; padding:40px; color:#666; font-size:18px;}\n        .back-btn { background:#6c757d; color:#fff; border:none; padding:10px 20px; font-size:14px; border-radius:6px; cursor:pointer; text-decoration:none; display:inline-block; margin-bottom:20px;}\n        .back-btn:hover { background:#5a6268;}\n        .stats { background:#e7f3ff; border:1px solid #b3d9ff; padding:15px; border-radius:6px; margin-bottom:20px;}\n        .stats h3 { margin:0 0 10px 0; color:#003399;}\n        .stats p { margin:5px 0; color:#333;}\n    </style>\n</head>\n<body>\n<div class=\"container\">\n    <a href=\"live_panel.php?comp_id=<?=h($comp_id)?>\" class=\"back-btn\">← 라이브 패널로 돌아가기</a>\n    \n    <h1>채점 결과</h1>\n    \n    <?php if ($event_data): ?>\n    <div class=\"event-info\">\n        <h2><?=h($event_data['name'])?></h2>\n        <p><strong>이벤트 번호:</strong> <?=h($event_data['no'])?></p>\n        <p><strong>라운드:</strong> <?=h($event_data['round_type'])?> <?=h($event_data['round_num'])?></p>\n        <p><strong>종목:</strong> <?=h(implode(', ', $event_data['dances']))?></p>\n    </div>\n    <?php endif; ?>\n\n    <?php if ($scores_data): ?>\n        <div class=\"stats\">\n            <h3>채점 정보 (결승전)</h3>\n            <p><strong>채점 시간:</strong> <?=h($scores_data['calculated_at'])?></p>\n            <p><strong>심사위원 수:</strong> <?=h($scores_data['num_adjudicators'])?>명</p>\n            <p><strong>출전 선수:</strong> <?=h($scores_data['num_couples'])?>명</p>\n        </div>\n    <?php elseif ($recall_data): ?>\n        <div class=\"stats\">\n            <h3>Recall 정보 (예선/준결)</h3>\n            <p><strong>채점된 댄스:</strong> <?=count($recall_data)?>개</p>\n            <?php \n            $total_judges = 0;\n            foreach ($recall_data as $dance => $judges) {\n                $total_judges = max($total_judges, count($judges));\n            }\n            ?>\n            <p><strong>심사위원 수:</strong> <?=$total_judges?>명</p>\n        </div>\n    <?php endif; ?>\n\n        <div class=\"results-section\">\n            <div class=\"results-header\">\n                최종 결과 (Skating System 적용)\n            </div>\n            <table class=\"results-table\">\n                <thead>\n                    <tr>\n                        <th style=\"width:80px;\">순위</th>\n                        <th style=\"width:100px;\">선수 번호</th>\n                        <th style=\"width:200px;\">선수 정보</th>\n                        <th style=\"width:150px;\">총 점수</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <?php \n                    $results = $scores_data['results']['results'];\n                    $couples = $scores_data['results']['couples'];\n                    $sortedResults = $results;\n                    asort($sortedResults);\n                    $place = 1;\n                    foreach ($sortedResults as $coupleId => $finalPlace): \n                        $totalMarks = $couples[$coupleId]['total_marks'];\n                        $placeClass = '';\n                        if ($finalPlace == 1) $placeClass = 'place-1';\n                        elseif ($finalPlace == 2) $placeClass = 'place-2';\n                        elseif ($finalPlace == 3) $placeClass = 'place-3';\n                    ?>\n                    <tr>\n                        <td class=\"<?=$placeClass?>\"><strong><?=$finalPlace?></strong></td>\n                        <td><strong><?=h($coupleId)?></strong></td>\n                        <td>선수 #<?=h($coupleId)?></td>\n                        <td><?=h($totalMarks)?></td>\n                    </tr>\n                    <?php $place++; endforeach; ?>\n                </tbody>\n            </table>\n        </div>\n\n        <div class=\"adjudicator-section\">\n            <div class=\"adjudicator-header\">\n                심사위원별 상세 점수\n            </div>\n            <table class=\"adjudicator-table\">\n                <thead>\n                    <tr>\n                        <th style=\"width:100px;\">선수 번호</th>\n                        <?php foreach ($scores_data['adjudicator_marks'] as $adjudicatorId => $marks): ?>\n                        <th style=\"width:60px;\">심사위원 <?=h($adjudicatorId)?></th>\n                        <?php endforeach; ?>\n                        <th style=\"width:80px;\">총점</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <?php foreach ($sortedResults as $coupleId => $finalPlace): ?>\n                    <tr>\n                        <td><strong><?=h($coupleId)?></strong></td>\n                        <?php foreach ($scores_data['adjudicator_marks'] as $adjudicatorId => $marks): ?>\n                        <td><?=h($marks[$coupleId] ?? '-')?></td>\n                        <?php endforeach; ?>\n                        <td><strong><?=h($couples[$coupleId]['total_marks'])?></strong></td>\n                    </tr>\n                    <?php endforeach; ?>\n                </tbody>\n            </table>\n        </div>\n\n        <div style=\"text-align:center; margin-top:30px;\">\n            <a href=\"judge_scoring.php?comp_id=<?=h($comp_id)?>&event_no=<?=h($event_no)?>\" \n               style=\"background:#003399; color:#fff; border:none; padding:12px 24px; font-size:16px; font-weight:bold; border-radius:8px; cursor:pointer; text-decoration:none; display:inline-block;\">\n               점수 수정하기\n            </a>\n        </div>\n\n    <?php elseif ($recall_data): ?>\n        <!-- Recall Data Display -->\n        <?php foreach ($recall_data as $dance => $judges): ?>\n        <div class=\"results-section\">\n            <div class=\"results-header\">\n                <?=h($dance)?> - Recall 결과\n            </div>\n            <table class=\"results-table\">\n                <thead>\n                    <tr>\n                        <th style=\"width:100px;\">심사위원</th>\n                        <th>선택된 선수</th>\n                        <th style=\"width:80px;\">선택 수</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <?php foreach ($judges as $judge_id => $selected_players): ?>\n                    <tr>\n                        <td><strong>심사위원 #<?=h($judge_id)?></strong></td>\n                        <td style=\"text-align:left;\">\n                            <?php if (!empty($selected_players)): ?>\n                                <?=h(implode(', ', $selected_players))?>\n                            <?php else: ?>\n                                <span style=\"color:#999;\">선택 없음</span>\n                            <?php endif; ?>\n                        </td>\n                        <td><?=count($selected_players)?>명</td>\n                    </tr>\n                    <?php endforeach; ?>\n                </tbody>\n            </table>\n        </div>\n        <?php endforeach; ?>\n        \n        <div style=\"text-align:center; margin-top:30px;\">\n            <a href=\"judge_scoring.php?comp_id=<?=h($comp_id)?>&event_no=<?=h($event_no)?>\" \n               style=\"background:#003399; color:#fff; border:none; padding:12px 24px; font-size:16px; font-weight:bold; border-radius:8px; cursor:pointer; text-decoration:none; display:inline-block;\">\n               점수 수정하기\n            </a>\n        </div>\n\n    <?php else: ?>\n        <div class=\"no-data\">\n            <p>아직 채점이 완료되지 않았습니다.</p>\n            <a href=\"judge_scoring.php?comp_id=<?=h($comp_id)?>&event_no=<?=h($event_no)?>\" \n               style=\"background:#03C75A; color:#fff; border:none; padding:12px 24px; font-size:16px; font-weight:bold; border-radius:8px; cursor:pointer; text-decoration:none; display:inline-block; margin-top:20px;\">\n               채점 시작하기\n            </a>\n        </div>\n    <?php endif; ?>\n</div>\n\n<footer style=\"text-align: center; margin-top: 30px; color: #666; font-size: 0.9em; padding: 20px; border-top: 1px solid #eee;\">\n    2025 danceoffice.net | Powered by Seyoung Lee\n</footer>\n</body>\n</html>\n","size_bytes":12833},"comp/working_router.php":{"content":"<?php\n/**\n * 작동하는 라우터 - debug_router2.php 기반\n */\n\nsession_start();\n\n// 공통 함수들 포함\nrequire_once __DIR__ . '/scoring/shared/functions.php';\nrequire_once __DIR__ . '/scoring/shared/components.php';\n\n// 기본 설정\n$comp_id = $_GET['comp_id'] ?? '';\n$event_no = $_GET['event_no'] ?? '';\n$lang = $_GET['lang'] ?? 'ko';\n\n// 이벤트 데이터 로드\n$event_data = loadEventData($comp_id, $event_no);\nif (!$event_data) {\n    die('<div class=\"error\">이벤트 데이터를 찾을 수 없습니다.</div>');\n}\n\n// 선수 데이터 로드\n$players = loadPlayersData($comp_id, $event_no);\nif (empty($players)) {\n    die('<div class=\"error\">선수 데이터를 찾을 수 없습니다.</div>');\n}\n\n// 댄스 매핑 로드\n$dance_mapping = loadDanceMapping($comp_id);\n\n// 라운드 정보 로드\n$round_info = loadRoundInfo($comp_id);\n\n// 결승전 여부 확인\n$is_final = isFinalRound($event_no, $round_info, $event_data);\n\n// 언어 텍스트 로드\n$t = getLanguageTexts($lang);\n\n// 심사위원 정보 (임시로 설정)\n$judge_id = $_SESSION['scoring_judge_id'] ?? '8';\n$judge_name = $_SESSION['scoring_judge_name'] ?? 'Test Judge';\n$judge_country = $_SESSION['scoring_judge_country'] ?? 'Korea';\n\n// 이벤트별 데이터 준비\n$recall_count = intval($event_data['recall_count'] ?? 0);\n$round_display = $event_data['round_type'] ?? '';\n\n// 심사 방식 결정\n$scoring_type = 'multievent_preliminary'; // 기본값\n\n// 이벤트별 심사 방식 매핑\n$scoring_type_mapping = [\n    '8' => 'multievent_final',           // 기존 결승전\n    '9' => 'multievent_preliminary',     // 기존 준결승\n    '10' => 'freestyle',                 // 프리스타일\n    '11' => 'formation',                 // 포메이션\n    '12' => 'multievent_final_only'      // 멀티이벤트 결승전(준결승 없음)\n];\n\n// 이벤트 번호에 따른 심사 방식 결정\nif (isset($scoring_type_mapping[$event_no])) {\n    $scoring_type = $scoring_type_mapping[$event_no];\n} elseif ($is_final || $event_no === '8') {\n    $scoring_type = 'multievent_final';\n}\n\n// 심사 방식별 데이터 준비\n$hits_data = null;\n$existing_selections = [];\n$saved_rankings = [];\n\nif ($scoring_type === 'multievent_preliminary') {\n    // 예선/준결승용 데이터\n    $data_dir = __DIR__ . \"/data/$comp_id\";\n    $hits_file = \"$data_dir/players_hits_$event_no.json\";\n    if (file_exists($hits_file)) {\n        $hits_data = json_decode(file_get_contents($hits_file), true);\n    }\n    $existing_selections = loadExistingSelections($comp_id, $event_no, $judge_id, $event_data['dances']);\n} elseif (in_array($scoring_type, ['multievent_final', 'multievent_final_only'])) {\n    // 결승전용 데이터\n    $data_dir = __DIR__ . \"/data/$comp_id\";\n    foreach ($event_data['dances'] as $dance) {\n        $adj_file = \"$data_dir/{$event_no}_{$dance}_{$judge_id}.adj\";\n        if (file_exists($adj_file)) {\n            $lines = file($adj_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n            $dance_rankings = [];\n            foreach ($lines as $line) {\n                $line = cleanInput($line);\n                $parts = explode(',', $line);\n                if (count($parts) >= 2) {\n                    $dance_rankings[] = [trim($parts[0]), trim($parts[1])];\n                }\n            }\n            if (!empty($dance_rankings)) {\n                $saved_rankings[$dance] = $dance_rankings;\n            }\n        }\n    }\n}\n\n// 저장된 점수 표시용\n$saved_scores = [];\nif (in_array($scoring_type, ['multievent_final', 'multievent_final_only'])) {\n    $saved_scores = array_keys($saved_rankings);\n} elseif ($scoring_type === 'multievent_preliminary') {\n    $saved_scores = array_keys($existing_selections);\n}\n\n// 댄스 이름 변환\n$dance_names = getDanceNames($event_data['dances'], $dance_mapping);\n?>\n\n<!DOCTYPE html>\n<html lang=\"<?=h($lang)?>\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title><?=h($t['title'])?></title>\n    \n    <!-- 공통 스타일 포함 -->\n    <?php include __DIR__ . '/scoring/shared/styles.php'; ?>\n</head>\n<body>\n    <div class=\"scoring-container\">\n        <!-- 심사위원 정보 헤더 -->\n        <?php renderJudgeInfoHeader($judge_id, $judge_name, $judge_country, $recall_count, $is_final, $event_no); ?>\n        \n        <!-- 이벤트 정보 헤더 -->\n        <?php renderEventInfoHeader($event_data, $round_display, $dance_names, count($players), $hits_data, $saved_scores); ?>\n        \n        <!-- 메시지 컨테이너 -->\n        <?php renderMessageContainer(); ?>\n        \n        <!-- 폼 시작 -->\n        <?php renderFormStart($comp_id, $event_no, $is_final, $recall_count); ?>\n        \n        <!-- 심사 시스템 로드 -->\n        <?php \n        echo \"<!-- DEBUG: scoring_type = \" . $scoring_type . \" -->\";\n        echo \"<!-- DEBUG: event_no = \" . $event_no . \" -->\";\n        echo \"<!-- DEBUG: is_final = \" . ($is_final ? 'TRUE' : 'FALSE') . \" -->\";\n        \n        $scoring_file = __DIR__ . \"/scoring/types/{$scoring_type}.php\";\n        echo \"<!-- DEBUG: scoring_file = \" . $scoring_file . \" -->\";\n        echo \"<!-- DEBUG: file_exists = \" . (file_exists($scoring_file) ? 'TRUE' : 'FALSE') . \" -->\";\n        \n        echo \"<div style='background: lightblue; padding: 10px; margin: 10px; border: 2px solid blue;'>\";\n        echo \"<h3>DEBUG: About to include scoring file</h3>\";\n        echo \"<p>File: \" . htmlspecialchars($scoring_file) . \"</p>\";\n        echo \"<p>Exists: \" . (file_exists($scoring_file) ? 'YES' : 'NO') . \"</p>\";\n        echo \"</div>\";\n        \n        if (file_exists($scoring_file)) {\n            echo \"<div style='background: lightgreen; padding: 10px; margin: 10px; border: 2px solid green;'>\";\n            echo \"<h3>DEBUG: Including file now...</h3>\";\n            echo \"</div>\";\n            \n            try {\n                include $scoring_file;\n                echo \"<div style='background: lightgreen; padding: 10px; margin: 10px; border: 2px solid green;'>\";\n                echo \"<h3>DEBUG: File included successfully!</h3>\";\n                echo \"</div>\";\n            } catch (Exception $e) {\n                echo \"<div style='background: lightcoral; padding: 10px; margin: 10px; border: 2px solid red;'>\";\n                echo \"<h3>DEBUG: Error including file: \" . htmlspecialchars($e->getMessage()) . \"</h3>\";\n                echo \"</div>\";\n            }\n        } else {\n            echo '<div class=\"error\">지원하지 않는 심사 방식입니다: ' . h($scoring_type) . '</div>';\n        }\n        ?>\n        \n        <!-- 폼 종료 -->\n        <?php renderFormEnd(); ?>\n        \n        <!-- 하단 네비게이션 -->\n        <?php renderBottomNavigation($comp_id, $lang); ?>\n        \n        <!-- 푸터 -->\n        <?php renderFooter(); ?>\n    </div>\n    \n    <!-- 공통 JavaScript 포함 -->\n    <?php renderCommonJavaScript($comp_id, $lang); ?>\n</body>\n</html>\n","size_bytes":6957},"comprehensive/index.php":{"content":"<?php\n// 종합결과 페이지 - 댄스스코어와 자체 시스템 통합\nrequire_once __DIR__ . '/../data/scheduler.php';\n\n$scheduler = new CompetitionScheduler();\n\n// 현재 주간 대회들\n$currentWeek = date('Y-m-d', strtotime('monday this week'));\n$nextWeek = date('Y-m-d', strtotime('monday next week'));\n$lastWeek = date('Y-m-d', strtotime('monday last week'));\n\n$lastWeekCompetitions = $scheduler->getCompetitionsByDateRange($lastWeek, date('Y-m-d', strtotime('sunday last week')));\n$currentWeekCompetitions = $scheduler->getCompetitionsByDateRange($currentWeek, date('Y-m-d', strtotime('sunday this week')));\n$nextWeekCompetitions = $scheduler->getCompetitionsByDateRange($nextWeek, date('Y-m-d', strtotime('sunday next week')));\n\n// 연도별 대회 목록\n$currentYear = date('Y');\n$availableYears = [];\n$allCompetitions = $scheduler->getAllCompetitions();\nforeach ($allCompetitions as $comp) {\n    $year = date('Y', strtotime($comp['date']));\n    if (!in_array($year, $availableYears)) {\n        $availableYears[] = $year;\n    }\n}\nrsort($availableYears); // 최신 연도부터\n\n// 특정 연도 선택\n$selectedYear = $_GET['year'] ?? $currentYear;\n$yearCompetitions = $scheduler->getCompetitionsByYear($selectedYear);\n\n// 특정 대회 선택\n$selectedComp = null;\nif (isset($_GET['comp'])) {\n    $selectedComp = $scheduler->getCompetitionById($_GET['comp']);\n}\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>종합결과 - danceoffice.net</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <link rel=\"stylesheet\" href=\"/assets/style.css\">\n    <style>\n        /* PC 버전 스타일 */\n        @media (min-width: 1024px) {\n            body {\n                background: #181B20;\n                min-height: 100vh;\n                font-size: 14px;\n                line-height: 1.5;\n            }\n            \n            .main-container {\n                display: grid;\n                grid-template-columns: 200px 1fr 180px;\n                grid-template-rows: auto 1fr auto;\n                grid-template-areas: \n                    \"sidebar-left header sidebar-right\"\n                    \"sidebar-left main sidebar-right\"\n                    \"footer footer footer\";\n                min-height: 100vh;\n                gap: 15px;\n                padding: 15px;\n                max-width: 1200px;\n                margin: 0 auto;\n            }\n            \n            .sidebar-left {\n                grid-area: sidebar-left;\n                display: flex;\n                flex-direction: column;\n                gap: 15px;\n            }\n            \n            .sidebar-left .logo-nav {\n                background: linear-gradient(135deg, #1a1d21 0%, #181B20 100%);\n                border-radius: 15px;\n                padding: 20px;\n                box-shadow: 0 8px 25px rgba(3, 199, 90, 0.15);\n                border: 2px solid #03C75A;\n                text-align: center;\n            }\n            \n            .sidebar-left .main-logo {\n                height: 50px;\n                margin-bottom: 20px;\n                filter: drop-shadow(0 3px 6px rgba(0,0,0,0.2));\n            }\n            \n            .sidebar-left .main-nav {\n                display: flex;\n                flex-direction: column;\n                gap: 10px;\n            }\n            \n            .sidebar-left .main-nav a {\n                color: white;\n                text-decoration: none;\n                font-weight: 600;\n                font-size: 14px;\n                padding: 12px 20px;\n                border-radius: 20px;\n                transition: all 0.3s ease;\n                background: rgba(3, 199, 90, 0.1);\n                backdrop-filter: blur(10px);\n                text-align: center;\n            }\n            \n            .sidebar-left .main-nav a:hover,\n            .sidebar-left .main-nav a.active {\n                background: #03C75A;\n                color: #222;\n                transform: translateY(-2px);\n                box-shadow: 0 4px 12px rgba(3, 199, 90, 0.3);\n            }\n            \n            .ad-side {\n                grid-area: sidebar-right;\n                display: flex;\n                flex-direction: column;\n                gap: 15px;\n            }\n            \n            .ad-side img {\n                width: 100%;\n                border-radius: 12px;\n                box-shadow: 0 4px 12px rgba(0,0,0,0.1);\n                transition: transform 0.3s ease;\n            }\n            \n            .ad-side img:hover {\n                transform: scale(1.03);\n            }\n            \n            .main-header {\n                grid-area: header;\n                background: linear-gradient(135deg, #1a1d21 0%, #181B20 100%);\n                border-radius: 15px;\n                padding: 20px;\n                box-shadow: 0 8px 25px rgba(3, 199, 90, 0.15);\n                border: 2px solid #03C75A;\n                text-align: center;\n            }\n            \n            .main-header h1 {\n                color: #03C75A;\n                font-size: 24px;\n                margin: 0;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                gap: 12px;\n            }\n            \n            main {\n                grid-area: main;\n                display: flex;\n                flex-direction: column;\n                gap: 20px;\n            }\n            \n            .results-grid {\n                display: grid;\n                grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n                gap: 20px;\n            }\n            \n            .result-card {\n                background: #222;\n                border-radius: 15px;\n                padding: 20px;\n                box-shadow: 0 8px 25px rgba(3, 199, 90, 0.08);\n                border: 1px solid #31343a;\n                transition: transform 0.3s ease;\n            }\n            \n            .result-card:hover {\n                transform: translateY(-3px);\n                box-shadow: 0 12px 30px rgba(3, 199, 90, 0.15);\n            }\n            \n            .result-card h3 {\n                color: #03C75A;\n                font-size: 18px;\n                margin-bottom: 15px;\n                display: flex;\n                align-items: center;\n                gap: 8px;\n            }\n            \n            .result-links {\n                display: flex;\n                gap: 10px;\n                flex-wrap: wrap;\n            }\n            \n            .result-links a {\n                background: linear-gradient(90deg, #03C75A 70%, #00BFAE 100%);\n                color: #222;\n                padding: 8px 16px;\n                border-radius: 15px;\n                text-decoration: none;\n                font-weight: 600;\n                font-size: 12px;\n                transition: all 0.3s ease;\n            }\n            \n            .result-links a:hover {\n                background: linear-gradient(90deg, #00BFAE 60%, #03C75A 100%);\n                color: white;\n                transform: translateY(-2px);\n            }\n            \n            .main-footer {\n                grid-area: footer;\n                text-align: center;\n                color: #03C75A;\n                padding: 15px;\n                background: #222;\n                border-radius: 12px;\n                box-shadow: 0 4px 12px rgba(3, 199, 90, 0.08);\n                border: 1px solid #31343a;\n                font-size: 13px;\n            }\n        }\n        \n        /* 모바일 버전 스타일 */\n        @media (max-width: 1023px) {\n            body {\n                background: #181B20;\n                min-height: 100vh;\n                margin: 0;\n                padding: 0;\n                padding-bottom: 80px;\n            }\n            \n            .main-container {\n                display: flex;\n                flex-direction: column;\n                min-height: 100vh;\n            }\n            \n            .sidebar-left {\n                display: none;\n            }\n            \n            .ad-side {\n                display: none;\n            }\n            \n            .main-header {\n                background: rgba(26, 29, 33, 0.9);\n                backdrop-filter: blur(20px);\n                padding: 20px;\n                position: sticky;\n                top: 0;\n                z-index: 100;\n                border-bottom: 2px solid #03C75A;\n            }\n            \n            .main-header h1 {\n                color: #03C75A;\n                font-size: 20px;\n                margin: 0;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                gap: 8px;\n            }\n            \n            main {\n                flex: 1;\n                padding: 20px;\n                display: flex;\n                flex-direction: column;\n                gap: 20px;\n            }\n            \n            .results-grid {\n                display: flex;\n                flex-direction: column;\n                gap: 15px;\n            }\n            \n            .result-card {\n                background: rgba(34, 34, 34, 0.95);\n                border-radius: 20px;\n                padding: 20px;\n                box-shadow: 0 10px 30px rgba(3, 199, 90, 0.1);\n                backdrop-filter: blur(20px);\n                border: 1px solid #31343a;\n            }\n            \n            .result-card h3 {\n                color: #03C75A;\n                font-size: 16px;\n                margin-bottom: 15px;\n            }\n            \n            .result-links {\n                display: flex;\n                gap: 8px;\n                flex-wrap: wrap;\n            }\n            \n            .result-links a {\n                background: linear-gradient(90deg, #03C75A 70%, #00BFAE 100%);\n                color: #222;\n                padding: 10px 16px;\n                border-radius: 15px;\n                text-decoration: none;\n                font-weight: 600;\n                font-size: 12px;\n                transition: all 0.3s ease;\n            }\n            \n            .result-links a:hover {\n                background: linear-gradient(90deg, #00BFAE 60%, #03C75A 100%);\n                color: white;\n            }\n            \n            .main-footer {\n                text-align: center;\n                color: #03C75A;\n                padding: 20px;\n                background: rgba(34, 34, 34, 0.9);\n                backdrop-filter: blur(20px);\n                border-top: 2px solid #03C75A;\n            }\n            \n            /* 하단 네비게이션 */\n            .bottom-nav {\n                position: fixed;\n                bottom: 0;\n                left: 0;\n                right: 0;\n                background: rgba(26, 29, 33, 0.95);\n                backdrop-filter: blur(20px);\n                border-top: 2px solid #03C75A;\n                padding: 10px 0;\n                z-index: 1000;\n                display: flex;\n                justify-content: space-around;\n                align-items: center;\n            }\n            \n            .bottom-nav a {\n                color: white;\n                text-decoration: none;\n                font-weight: 600;\n                font-size: 12px;\n                padding: 8px 12px;\n                border-radius: 15px;\n                background: rgba(3, 199, 90, 0.1);\n                backdrop-filter: blur(10px);\n                transition: all 0.3s ease;\n                text-align: center;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                gap: 4px;\n                min-width: 60px;\n            }\n            \n            .bottom-nav a:hover,\n            .bottom-nav a.active {\n                background: #03C75A;\n                color: #222;\n                transform: translateY(-2px);\n            }\n            \n            .bottom-nav .nav-icon {\n                font-size: 20px;\n            }\n        }\n        \n        .material-symbols-rounded {\n            font-variation-settings: 'FILL' 1, 'wght' 400, 'GRAD' 0, 'opsz' 24;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"main-container\">\n        <aside class=\"sidebar-left\">\n            <div class=\"logo-nav\">\n                <img src=\"/assets/danceoffice-logo.png\" alt=\"Danceoffice Logo\" class=\"main-logo\">\n                <nav class=\"main-nav\">\n                    <a href=\"/\">홈</a>\n                    <a href=\"/results/\">경기 결과</a>\n                    <a href=\"/comprehensive/\" class=\"active\">종합결과</a>\n                    <a href=\"/notice/\">공지사항</a>\n                    <a href=\"/manage/\">관리자</a>\n                </nav>\n            </div>\n        </aside>\n        \n        <header class=\"main-header\">\n            <h1><span class=\"material-symbols-rounded\">analytics</span> 종합결과</h1>\n        </header>\n        \n        <aside class=\"ad-side\">\n            <!-- 광고 영역 -->\n        </aside>\n        \n        <main>\n            <!-- 주간 대회 현황 -->\n            <section class=\"weekly-section\">\n                <h2><span class=\"material-symbols-rounded\">calendar_view_week</span> 주간 대회 현황</h2>\n                \n                <!-- 지난주 대회 -->\n                <?php if (!empty($lastWeekCompetitions)): ?>\n                <div class=\"week-group\">\n                    <h3><span class=\"material-symbols-rounded\">history</span> 지난주 대회</h3>\n                    <div class=\"competitions-grid\">\n                        <?php foreach ($lastWeekCompetitions as $comp): ?>\n                        <div class=\"competition-card completed\">\n                            <div class=\"comp-header\">\n                                <h4><?= htmlspecialchars($comp['title']) ?></h4>\n                                <div class=\"comp-date\"><?= date('m.d', strtotime($comp['date'])) ?></div>\n                            </div>\n                            <div class=\"comp-details\">\n                                <p><span class=\"material-symbols-rounded\">location_on</span> <?= htmlspecialchars($comp['place']) ?></p>\n                            </div>\n                            <div class=\"comp-actions\">\n                                <a href=\"/results/?comp=<?= $comp['id'] ?>\" class=\"button\">결과 보기</a>\n                            </div>\n                        </div>\n                        <?php endforeach; ?>\n                    </div>\n                </div>\n                <?php endif; ?>\n                \n                <!-- 이번주 대회 -->\n                <?php if (!empty($currentWeekCompetitions)): ?>\n                <div class=\"week-group\">\n                    <h3><span class=\"material-symbols-rounded\">event</span> 이번주 대회</h3>\n                    <div class=\"competitions-grid\">\n                        <?php foreach ($currentWeekCompetitions as $comp): ?>\n                        <div class=\"competition-card <?= $comp['status'] === 'ongoing' ? 'ongoing' : 'upcoming' ?>\">\n                            <div class=\"comp-header\">\n                                <h4><?= htmlspecialchars($comp['title']) ?></h4>\n                                <div class=\"comp-date\"><?= date('m.d', strtotime($comp['date'])) ?></div>\n                            </div>\n                            <div class=\"comp-details\">\n                                <p><span class=\"material-symbols-rounded\">location_on</span> <?= htmlspecialchars($comp['place']) ?></p>\n                                <p><span class=\"material-symbols-rounded\">info</span> <?= ucfirst($comp['status']) ?></p>\n                            </div>\n                            <div class=\"comp-actions\">\n                                <?php if ($comp['status'] === 'completed'): ?>\n                                    <a href=\"/results/?comp=<?= $comp['id'] ?>\" class=\"button\">결과 보기</a>\n                                <?php else: ?>\n                                    <a href=\"/comprehensive/?comp=<?= $comp['id'] ?>\" class=\"button\">대회 정보</a>\n                                <?php endif; ?>\n                            </div>\n                        </div>\n                        <?php endforeach; ?>\n                    </div>\n                </div>\n                <?php endif; ?>\n                \n                <!-- 다음주 대회 -->\n                <?php if (!empty($nextWeekCompetitions)): ?>\n                <div class=\"week-group\">\n                    <h3><span class=\"material-symbols-rounded\">schedule</span> 다음주 대회</h3>\n                    <div class=\"competitions-grid\">\n                        <?php foreach ($nextWeekCompetitions as $comp): ?>\n                        <div class=\"competition-card upcoming\">\n                            <div class=\"comp-header\">\n                                <h4><?= htmlspecialchars($comp['title']) ?></h4>\n                                <div class=\"comp-date\"><?= date('m.d', strtotime($comp['date'])) ?></div>\n                            </div>\n                            <div class=\"comp-details\">\n                                <p><span class=\"material-symbols-rounded\">location_on</span> <?= htmlspecialchars($comp['place']) ?></p>\n                            </div>\n                            <div class=\"comp-actions\">\n                                <a href=\"/comprehensive/?comp=<?= $comp['id'] ?>\" class=\"button\">대회 정보</a>\n                            </div>\n                        </div>\n                        <?php endforeach; ?>\n                    </div>\n                </div>\n                <?php endif; ?>\n            </section>\n            \n            <!-- 연도별 대회 목록 -->\n            <section class=\"yearly-section\">\n                <h2><span class=\"material-symbols-rounded\">calendar_month</span> 연도별 대회 목록</h2>\n                \n                <!-- 연도 선택 -->\n                <div class=\"year-selector\">\n                    <?php foreach ($availableYears as $year): ?>\n                        <a href=\"?year=<?= $year ?>\" class=\"year-button <?= $selectedYear == $year ? 'active' : '' ?>\">\n                            <?= $year ?>년\n                        </a>\n                    <?php endforeach; ?>\n                </div>\n                \n                <!-- 선택된 연도의 대회들 -->\n                <div class=\"year-competitions\">\n                    <?php if (empty($yearCompetitions)): ?>\n                        <div class=\"no-competitions\">\n                            <span class=\"material-symbols-rounded\">info</span>\n                            <p><?= $selectedYear ?>년에는 등록된 대회가 없습니다.</p>\n                        </div>\n                    <?php else: ?>\n                        <div class=\"competitions-timeline\">\n                            <?php foreach ($yearCompetitions as $comp): ?>\n                            <div class=\"timeline-item\">\n                                <div class=\"timeline-date\"><?= date('m.d', strtotime($comp['date'])) ?></div>\n                                <div class=\"timeline-content\">\n                                    <h4><?= htmlspecialchars($comp['title']) ?></h4>\n                                    <p><?= htmlspecialchars($comp['place']) ?></p>\n                                    <div class=\"timeline-actions\">\n                                        <?php if ($comp['status'] === 'completed'): ?>\n                                            <a href=\"/results/?comp=<?= $comp['id'] ?>\" class=\"button small\">결과 보기</a>\n                                        <?php else: ?>\n                                            <a href=\"/comprehensive/?comp=<?= $comp['id'] ?>\" class=\"button small\">정보 보기</a>\n                                        <?php endif; ?>\n                                    </div>\n                                </div>\n                            </div>\n                            <?php endforeach; ?>\n                        </div>\n                    <?php endif; ?>\n                </div>\n            </section>\n        </main>\n        \n        <footer class=\"main-footer\">\n            &copy; 2025 danceoffice.net | Powered by Seyoung Lee\n        </footer>\n    </div>\n    \n    <!-- 모바일 하단 네비게이션 -->\n    <nav class=\"bottom-nav\">\n        <a href=\"/\">\n            <span class=\"nav-icon material-symbols-rounded\">home</span>\n            <span>홈</span>\n        </a>\n        <a href=\"/results/\">\n            <span class=\"nav-icon material-symbols-rounded\">sports_score</span>\n            <span>경기결과</span>\n        </a>\n        <a href=\"/comprehensive/\" class=\"active\">\n            <span class=\"nav-icon material-symbols-rounded\">analytics</span>\n            <span>종합결과</span>\n        </a>\n        <a href=\"/notice/\">\n            <span class=\"nav-icon material-symbols-rounded\">campaign</span>\n            <span>공지사항</span>\n        </a>\n        <a href=\"/manage/\">\n            <span class=\"nav-icon material-symbols-rounded\">settings</span>\n            <span>관리자</span>\n        </a>\n    </nav>\n    \n    <!-- 구글 머티리얼 아이콘 로드 -->\n    <link href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded\" rel=\"stylesheet\" />\n</body>\n</html>\n","size_bytes":21328},"data/scheduler.php":{"content":"<?php\n/**\n * 대회 스케줄러 시스템\n * 댄스스코어와 자체 시스템을 통합한 대회 관리\n */\n\nclass CompetitionScheduler {\n    private $scheduleFile;\n    private $competitions;\n    private $compDataDir;\n    \n    public function __construct() {\n        $this->scheduleFile = __DIR__ . '/competitions.json';\n        $this->compDataDir = __DIR__ . '/../comp/data';\n        $this->loadCompetitions();\n    }\n    \n    private function loadCompetitions() {\n        // 기존 competitions.json에서 로드\n        if (file_exists($this->scheduleFile)) {\n            $this->competitions = json_decode(file_get_contents($this->scheduleFile), true) ?: [];\n        } else {\n            $this->competitions = [];\n        }\n        \n        // comp/data에서 실제 대회 정보 추가\n        $this->loadCompetitionsFromCompData();\n    }\n    \n    private function loadCompetitionsFromCompData() {\n        if (!is_dir($this->compDataDir)) return;\n        \n        foreach (glob($this->compDataDir . \"/*/info.json\") as $info_file) {\n            $comp_id = basename(dirname($info_file));\n            $info = json_decode(file_get_contents($info_file), true);\n            \n            if ($info) {\n                // 이미 존재하는지 확인 (our_system_id로)\n                $exists = false;\n                foreach ($this->competitions as $existing) {\n                    if (isset($existing['our_system_id']) && $existing['our_system_id'] === $comp_id) {\n                        $exists = true;\n                        break;\n                    }\n                }\n                \n                if (!$exists) {\n                    // comp/data의 정보를 스케줄러 형식으로 변환\n                    $competition = [\n                        'id' => 'comp_' . $comp_id,\n                        'name' => $info['title'],\n                        'title' => $info['title'],\n                        'subtitle' => '',\n                        'date' => $info['date'],\n                        'location' => $info['place'],\n                        'place' => $info['place'],\n                        'host' => $info['host'],\n                        'country' => $info['country'] ?? 'KR',\n                        'description' => $info['host'] . ' 주최',\n                        'status' => $this->getCompetitionStatus($info['date']),\n                        'our_system_id' => $comp_id,\n                        'comp_data_path' => dirname($info_file),\n                        'created_at' => date('Y-m-d H:i:s', $info['created']),\n                        'updated_at' => date('Y-m-d H:i:s', $info['created'])\n                    ];\n                    \n                    $this->competitions[] = $competition;\n                }\n            }\n        }\n    }\n    \n    public function saveCompetitions() {\n        file_put_contents($this->scheduleFile, json_encode($this->competitions, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE));\n    }\n    \n    public function addCompetition($data) {\n        $competition = [\n            'id' => uniqid('comp_'),\n            'title' => $data['title'],\n            'subtitle' => $data['subtitle'] ?? '',\n            'date' => $data['date'],\n            'place' => $data['place'],\n            'status' => $data['status'] ?? 'upcoming', // upcoming, ongoing, completed\n            'dancescore_id' => $data['dancescore_id'] ?? null,\n            'our_system_id' => $data['our_system_id'] ?? null,\n            'results_url' => $data['results_url'] ?? null,\n            'created_at' => date('Y-m-d H:i:s'),\n            'updated_at' => date('Y-m-d H:i:s')\n        ];\n        \n        $this->competitions[] = $competition;\n        $this->saveCompetitions();\n        return $competition['id'];\n    }\n    \n    public function updateCompetition($id, $data) {\n        foreach ($this->competitions as &$comp) {\n            if ($comp['id'] === $id) {\n                $comp = array_merge($comp, $data);\n                $comp['updated_at'] = date('Y-m-d H:i:s');\n                $this->saveCompetitions();\n                return true;\n            }\n        }\n        return false;\n    }\n    \n    public function getCompetitionsByDateRange($startDate, $endDate) {\n        return array_filter($this->competitions, function($comp) use ($startDate, $endDate) {\n            return $comp['date'] >= $startDate && $comp['date'] <= $endDate;\n        });\n    }\n    \n    public function getUpcomingCompetitions($limit = 3) {\n        $today = date('Y-m-d');\n        $upcoming = array_filter($this->competitions, function($comp) use ($today) {\n            return $comp['date'] >= $today && $comp['status'] === 'upcoming';\n        });\n        \n        usort($upcoming, function($a, $b) {\n            return strtotime($a['date']) - strtotime($b['date']);\n        });\n        \n        return array_slice($upcoming, 0, $limit);\n    }\n    \n    public function getRecentCompetitions($limit = 3) {\n        $today = date('Y-m-d');\n        $recent = array_filter($this->competitions, function($comp) use ($today) {\n            return $comp['date'] < $today && $comp['status'] === 'completed';\n        });\n        \n        usort($recent, function($a, $b) {\n            return strtotime($b['date']) - strtotime($a['date']);\n        });\n        \n        return array_slice($recent, 0, $limit);\n    }\n    \n    public function getRecentResultsCompetitions() {\n        $today = date('Y-m-d');\n        $yesterday = date('Y-m-d', strtotime('-1 day'));\n        $seven_days_ago = date('Y-m-d', strtotime('-7 days'));\n        \n        // 대회 전날부터 7일간의 대회들 (완료되었거나 진행 중인 대회)\n        $recent = array_filter($this->competitions, function($comp) use ($yesterday, $seven_days_ago) {\n            $comp_date = $comp['date'];\n            return $comp_date >= $seven_days_ago && \n                   $comp_date <= $yesterday && \n                   ($comp['status'] === 'completed' || $comp['status'] === 'ongoing');\n        });\n        \n        // 날짜 기준으로 최신순 정렬\n        usort($recent, function($a, $b) {\n            return strtotime($b['date']) - strtotime($a['date']);\n        });\n        \n        return $recent;\n    }\n    \n    public function getCompetitionsByYear($year) {\n        return array_filter($this->competitions, function($comp) use ($year) {\n            return date('Y', strtotime($comp['date'])) == $year;\n        });\n    }\n    \n    public function getCompetitionById($id) {\n        foreach ($this->competitions as $comp) {\n            if ($comp['id'] === $id) {\n                return $comp;\n            }\n        }\n        return null;\n    }\n    \n    public function getAllCompetitions() {\n        return $this->competitions;\n    }\n    \n    public function getCompetitionStatus($date) {\n        $today = date('Y-m-d');\n        $compDate = date('Y-m-d', strtotime($date));\n        \n        if ($compDate < $today) {\n            return 'completed';\n        } elseif ($compDate == $today) {\n            return 'ongoing';\n        } else {\n            return 'upcoming';\n        }\n    }\n}\n\n// 사용 예시\nif (isset($_GET['action'])) {\n    $scheduler = new CompetitionScheduler();\n    \n    switch ($_GET['action']) {\n        case 'add':\n            if ($_POST) {\n                $id = $scheduler->addCompetition($_POST);\n                echo json_encode(['success' => true, 'id' => $id]);\n            }\n            break;\n            \n        case 'update':\n            if ($_POST && isset($_POST['id'])) {\n                $success = $scheduler->updateCompetition($_POST['id'], $_POST);\n                echo json_encode(['success' => $success]);\n            }\n            break;\n            \n        case 'upcoming':\n            $competitions = $scheduler->getUpcomingCompetitions();\n            echo json_encode($competitions);\n            break;\n            \n        case 'recent':\n            $competitions = $scheduler->getRecentCompetitions();\n            echo json_encode($competitions);\n            break;\n            \n        case 'year':\n            $year = $_GET['year'] ?? date('Y');\n            $competitions = $scheduler->getCompetitionsByYear($year);\n            echo json_encode($competitions);\n            break;\n    }\n}\n?>\n","size_bytes":8219},"manage/index.php":{"content":"<?php\nsession_start();\n\n// 다국어 시스템 로드\nrequire_once __DIR__ . '/../lang/Language.php';\n$lang = Language::getInstance();\n\n// NoticeManager 로드\nrequire_once __DIR__ . '/../data/NoticeManager.php';\n\n// 관리자 인증 확인\nif (!isset($_SESSION['admin'])) {\n    if ($_POST['pw'] ?? '' === 'adminpw') {\n        $_SESSION['admin'] = true;\n    } else {\n        ?>\n        <!DOCTYPE html>\n        <html lang=\"<?= $lang->getCurrentLang() ?>\">\n        <head>\n            <meta charset=\"UTF-8\">\n            <title><?= t('admin_login') ?> | DanceOffice</title>\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n            <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n            <link href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@24,400,0,0\" rel=\"stylesheet\">\n            <style>\n                * {\n                    margin: 0;\n                    padding: 0;\n                    box-sizing: border-box;\n                }\n\n                body {\n                    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n                    background: linear-gradient(135deg, #0f172a 0%, #1e293b 50%, #334155 100%);\n                    color: #e2e8f0;\n                    min-height: 100vh;\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                }\n\n                .login-container {\n                    background: rgba(30, 41, 59, 0.8);\n                    backdrop-filter: blur(20px);\n                    border: 1px solid rgba(59, 130, 246, 0.2);\n                    border-radius: 20px;\n                    padding: 40px;\n                    max-width: 400px;\n                    width: 90%;\n                    text-align: center;\n                    position: relative;\n                    overflow: hidden;\n                }\n\n                .login-container::before {\n                    content: '';\n                    position: absolute;\n                    top: 0;\n                    left: 0;\n                    right: 0;\n                    bottom: 0;\n                    background: radial-gradient(circle at 30% 20%, rgba(59, 130, 246, 0.1) 0%, transparent 50%);\n                    pointer-events: none;\n                }\n\n                .login-content {\n                    position: relative;\n                    z-index: 2;\n                }\n\n                .login-title {\n                    font-size: 28px;\n                    font-weight: 700;\n                    color: #f1f5f9;\n                    margin-bottom: 8px;\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    gap: 12px;\n                }\n\n                .login-title .material-symbols-rounded {\n                    color: #3b82f6;\n                    font-size: 32px;\n                }\n\n                .login-subtitle {\n                    color: #94a3b8;\n                    font-size: 16px;\n                    margin-bottom: 32px;\n                }\n\n                .form-group {\n                    margin-bottom: 24px;\n                    text-align: left;\n                }\n\n                .form-group label {\n                    display: block;\n                    color: #f1f5f9;\n                    font-size: 14px;\n                    font-weight: 500;\n                    margin-bottom: 8px;\n                }\n\n                .form-group input {\n                    width: 100%;\n                    padding: 14px 16px;\n                    border: 1px solid rgba(59, 130, 246, 0.2);\n                    border-radius: 12px;\n                    background: rgba(15, 23, 42, 0.6);\n                    color: #f1f5f9;\n                    font-size: 14px;\n                    transition: all 0.3s ease;\n                }\n\n                .form-group input:focus {\n                    outline: none;\n                    border-color: #3b82f6;\n                    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n                }\n\n                .btn {\n                    background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);\n                    color: white;\n                    border: none;\n                    padding: 14px 32px;\n                    border-radius: 12px;\n                    font-weight: 600;\n                    font-size: 14px;\n                    cursor: pointer;\n                    transition: all 0.3s ease;\n                    width: 100%;\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    gap: 8px;\n                }\n\n                .btn:hover {\n                    transform: translateY(-2px);\n                    box-shadow: 0 8px 25px rgba(59, 130, 246, 0.3);\n                }\n\n                .btn .material-symbols-rounded {\n                    font-size: 18px;\n                }\n            </style>\n        </head>\n        <body>\n            <div class=\"login-container\">\n                <div class=\"login-content\">\n                    <h1 class=\"login-title\">\n                        <span class=\"material-symbols-rounded\">admin_panel_settings</span>\n                        <?= t('admin_login') ?>\n                    </h1>\n                    <p class=\"login-subtitle\"><?= t('admin_subtitle') ?></p>\n                    \n                    <form method=\"post\">\n                        <div class=\"form-group\">\n                            <label for=\"pw\"><?= t('admin_password') ?></label>\n                            <input type=\"password\" id=\"pw\" name=\"pw\" placeholder=\"<?= t('admin_password_placeholder') ?>\" required>\n                        </div>\n                        <button type=\"submit\" class=\"btn\">\n                            <span class=\"material-symbols-rounded\">login</span>\n                            <?= t('admin_login_btn') ?>\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </body>\n        </html>\n        <?php\n        exit;\n    }\n}\n\n// 광고 위치별 정보\n$positions = [\n    'top'    => ['label' => t('banner_top'),    'size' => '728x90px',    'desc' => t('banner_top_desc'),    'img' => 'top.jpg',    'link' => 'top.link'],\n    'bottom' => ['label' => t('banner_bottom'), 'size' => '728x90px',    'desc' => t('banner_bottom_desc'), 'img' => 'bottom.jpg', 'link' => 'bottom.link'],\n    'left'   => ['label' => t('banner_left'),   'size' => '160x600px',   'desc' => t('banner_left_desc'),   'img' => 'left.jpg',   'link' => 'left.link'],\n    'right'  => ['label' => t('banner_right'),  'size' => '160x600px',   'desc' => t('banner_right_desc'),  'img' => 'right.jpg',  'link' => 'right.link'],\n    'main'   => ['label' => t('banner_main'),   'size' => '300x250px ' . t('or') . ' 728x90px', 'desc' => t('banner_main_desc'),   'img' => 'main.jpg',   'link' => 'main.link'],\n];\n\n# 디렉토리 경로\n$base_ads_dir = __DIR__ . \"/../data/ads/\";\n$schedule_file = __DIR__ . \"/../data/schedule.txt\";\n\n// NoticeManager 초기화\ntry {\n    $noticeManager = new NoticeManager();\n} catch (Exception $e) {\n    error_log(\"NoticeManager 초기화 실패: \" . $e->getMessage());\n}\n\n// 공지사항 처리\nif (isset($_POST['notice_action']) && isset($noticeManager)) {\n    try {\n        switch ($_POST['notice_action']) {\n            case 'create':\n                $imagePath = null;\n                if (isset($_FILES['notice_image']) && $_FILES['notice_image']['size'] > 0) {\n                    $imagePath = $noticeManager->uploadImage($_FILES['notice_image']);\n                }\n                $noticeManager->createNotice(\n                    $_POST['notice_title'],\n                    $_POST['notice_content'],\n                    $imagePath,\n                    isset($_POST['is_pinned'])\n                );\n                break;\n            case 'edit':\n                $imagePath = $_POST['existing_image'] ?? null;\n                if (isset($_FILES['notice_image']) && $_FILES['notice_image']['size'] > 0) {\n                    $imagePath = $noticeManager->uploadImage($_FILES['notice_image']);\n                }\n                $noticeManager->updateNotice(\n                    $_POST['notice_id'],\n                    $_POST['notice_title'],\n                    $_POST['notice_content'],\n                    $imagePath,\n                    isset($_POST['is_pinned'])\n                );\n                break;\n            case 'delete':\n                $noticeManager->deleteNotice($_POST['notice_id']);\n                break;\n            case 'toggle_pin':\n                $noticeManager->togglePin($_POST['notice_id']);\n                break;\n        }\n    } catch (Exception $e) {\n        $notice_error = $e->getMessage();\n    }\n    if (!isset($notice_error)) {\n        header(\"Location: /manage/\");\n        exit;\n    }\n}\n\n// 일정 삭제 처리\nif (isset($_GET['delete_schedule'])) {\n    if (file_exists($schedule_file)) unlink($schedule_file);\n    header(\"Location: /manage/\");\n    exit;\n}\n\n// 광고 삭제 처리\nif (isset($_GET['delete']) && isset($_GET['pos']) && isset($positions[$_GET['pos']])) {\n    $pos = $_GET['pos'];\n    $type = $_GET['delete'];\n    if ($type === 'img') {\n        $file = $base_ads_dir . $positions[$pos]['img'];\n        if (file_exists($file)) unlink($file);\n    } elseif ($type === 'link') {\n        $file = $base_ads_dir . $positions[$pos]['link'];\n        if (file_exists($file)) unlink($file);\n    }\n    header(\"Location: /manage/\");\n    exit;\n}\n\n// 광고 업로드/링크 등록\nif ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['pos'])) {\n    $pos = $_POST['pos'];\n    if (isset($_FILES['banner']) && $_FILES['banner']['size'] > 0) {\n        $target = $base_ads_dir . $positions[$pos]['img'];\n        move_uploaded_file($_FILES['banner']['tmp_name'], $target);\n    }\n    if (isset($_POST['banner_link'])) {\n        $linkfile = $base_ads_dir . $positions[$pos]['link'];\n        file_put_contents($linkfile, trim($_POST['banner_link']));\n    }\n    echo \"<script>location.href='/manage/';</script>\";\n    exit;\n}\n\n// 기존 파일 기반 공지사항 시스템 제거됨 - 데이터베이스 기반으로 교체\n\n// 대회일정 등록/수정\nif ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['schedule'])) {\n    file_put_contents($schedule_file, trim($_POST['schedule']));\n    echo \"<script>location.href='/manage/';</script>\";\n    exit;\n}\n\n// 공지사항 및 통계 로드\ntry {\n    $notices = isset($noticeManager) ? $noticeManager->getAllNotices() : [];\n    $notice_stats = isset($noticeManager) ? $noticeManager->getNoticeStats() : null;\n} catch (Exception $e) {\n    $notices = [];\n    $notice_stats = null;\n    error_log(\"공지사항 로드 실패: \" . $e->getMessage());\n}\n\n$current_schedule = file_exists($schedule_file) ? file_get_contents($schedule_file) : \"\";\n?>\n<!DOCTYPE html>\n<html lang=\"<?= $lang->getCurrentLang() ?>\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title><?= t('admin_title') ?> | DanceOffice</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@24,400,0,0\" rel=\"stylesheet\">\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n\n        body {\n            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n            background: linear-gradient(135deg, #0f172a 0%, #1e293b 50%, #334155 100%);\n            color: #e2e8f0;\n            min-height: 100vh;\n        }\n\n        .container {\n            max-width: 1200px;\n            margin: 0 auto;\n            padding: 20px;\n        }\n\n        /* 상단 헤더 */\n        .admin-header {\n            background: rgba(30, 41, 59, 0.8);\n            backdrop-filter: blur(20px);\n            border: 1px solid rgba(59, 130, 246, 0.2);\n            border-radius: 20px;\n            padding: 32px;\n            margin-bottom: 32px;\n            position: relative;\n            overflow: hidden;\n        }\n\n        .admin-header::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            background: radial-gradient(circle at 30% 20%, rgba(59, 130, 246, 0.1) 0%, transparent 50%);\n            pointer-events: none;\n        }\n\n        .admin-header-content {\n            position: relative;\n            z-index: 2;\n        }\n\n        .admin-title {\n            font-size: 32px;\n            font-weight: 700;\n            color: #f1f5f9;\n            margin-bottom: 8px;\n            display: flex;\n            align-items: center;\n            gap: 12px;\n        }\n\n        .admin-title .material-symbols-rounded {\n            color: #3b82f6;\n            font-size: 36px;\n        }\n\n        .admin-subtitle {\n            color: #94a3b8;\n            font-size: 16px;\n            margin-bottom: 24px;\n        }\n\n        .admin-nav {\n            display: flex;\n            gap: 16px;\n            flex-wrap: wrap;\n        }\n\n        .admin-nav a {\n            display: flex;\n            align-items: center;\n            gap: 8px;\n            padding: 12px 20px;\n            background: rgba(59, 130, 246, 0.1);\n            color: #3b82f6;\n            text-decoration: none;\n            border-radius: 12px;\n            font-weight: 500;\n            transition: all 0.3s ease;\n            border: 1px solid rgba(59, 130, 246, 0.2);\n        }\n\n        .admin-nav a:hover {\n            background: rgba(59, 130, 246, 0.2);\n            transform: translateY(-2px);\n        }\n\n        .admin-nav .material-symbols-rounded {\n            font-size: 18px;\n        }\n\n        /* 언어 선택기 */\n        .language-selector {\n            position: absolute;\n            top: 32px;\n            right: 32px;\n            z-index: 3;\n        }\n\n        .language-dropdown {\n            position: relative;\n            display: inline-block;\n        }\n\n        .language-btn {\n            display: flex;\n            align-items: center;\n            gap: 8px;\n            padding: 8px 16px;\n            background: rgba(59, 130, 246, 0.1);\n            color: #3b82f6;\n            border: 1px solid rgba(59, 130, 246, 0.2);\n            border-radius: 12px;\n            cursor: pointer;\n            transition: all 0.3s ease;\n        }\n\n        .language-btn:hover {\n            background: rgba(59, 130, 246, 0.2);\n        }\n\n        .language-menu {\n            position: absolute;\n            top: 100%;\n            right: 0;\n            margin-top: 8px;\n            background: rgba(30, 41, 59, 0.95);\n            backdrop-filter: blur(20px);\n            border: 1px solid rgba(59, 130, 246, 0.2);\n            border-radius: 12px;\n            padding: 8px;\n            min-width: 160px;\n            display: none;\n            z-index: 1000;\n        }\n\n        .language-menu.show {\n            display: block;\n        }\n\n        .language-menu a {\n            display: flex;\n            align-items: center;\n            gap: 8px;\n            padding: 8px 12px;\n            color: #e2e8f0;\n            text-decoration: none;\n            border-radius: 8px;\n            transition: all 0.3s ease;\n            font-size: 14px;\n        }\n\n        .language-menu a:hover {\n            background: rgba(59, 130, 246, 0.1);\n            color: #3b82f6;\n        }\n\n        .language-menu a.active {\n            background: rgba(59, 130, 246, 0.2);\n            color: #3b82f6;\n        }\n\n        /* 카드 그리드 */\n        .cards-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));\n            gap: 24px;\n            margin-bottom: 32px;\n        }\n\n        .admin-card {\n            background: rgba(30, 41, 59, 0.6);\n            backdrop-filter: blur(20px);\n            border: 1px solid rgba(59, 130, 246, 0.2);\n            border-radius: 16px;\n            padding: 24px;\n        }\n\n        .card-title {\n            font-size: 20px;\n            font-weight: 600;\n            color: #f1f5f9;\n            margin-bottom: 16px;\n            display: flex;\n            align-items: center;\n            gap: 12px;\n        }\n\n        .card-title .material-symbols-rounded {\n            color: #3b82f6;\n            font-size: 24px;\n        }\n\n        .preview-box {\n            background: rgba(15, 23, 42, 0.6);\n            border: 1px solid rgba(59, 130, 246, 0.1);\n            border-radius: 12px;\n            padding: 16px;\n            margin-bottom: 16px;\n            min-height: 80px;\n        }\n\n        .preview-box strong {\n            color: #3b82f6;\n            font-weight: 600;\n        }\n\n        .form-group {\n            margin-bottom: 16px;\n        }\n\n        .form-group label {\n            display: block;\n            color: #f1f5f9;\n            font-size: 14px;\n            font-weight: 500;\n            margin-bottom: 8px;\n        }\n\n        .form-group input,\n        .form-group textarea {\n            width: 100%;\n            padding: 12px 16px;\n            border: 1px solid rgba(59, 130, 246, 0.2);\n            border-radius: 12px;\n            background: rgba(15, 23, 42, 0.6);\n            color: #f1f5f9;\n            font-size: 14px;\n            transition: all 0.3s ease;\n            font-family: inherit;\n        }\n\n        .form-group textarea {\n            min-height: 100px;\n            resize: vertical;\n        }\n\n        .form-group input:focus,\n        .form-group textarea:focus {\n            outline: none;\n            border-color: #3b82f6;\n            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n        }\n\n        .btn {\n            display: inline-flex;\n            align-items: center;\n            gap: 8px;\n            padding: 12px 20px;\n            background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);\n            color: white;\n            border: none;\n            border-radius: 12px;\n            font-weight: 500;\n            font-size: 14px;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            text-decoration: none;\n        }\n\n        .btn:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 8px 25px rgba(59, 130, 246, 0.3);\n        }\n\n        .btn-danger {\n            background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);\n        }\n\n        .btn-danger:hover {\n            box-shadow: 0 8px 25px rgba(239, 68, 68, 0.3);\n        }\n\n        .btn-small {\n            padding: 8px 16px;\n            font-size: 13px;\n        }\n\n        .btn .material-symbols-rounded {\n            font-size: 18px;\n        }\n\n        .action-buttons {\n            display: flex;\n            gap: 12px;\n            margin-top: 16px;\n            flex-wrap: wrap;\n        }\n\n        /* 배너 그리드 */\n        .banner-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\n            gap: 24px;\n        }\n\n        .banner-card {\n            background: rgba(30, 41, 59, 0.6);\n            backdrop-filter: blur(20px);\n            border: 1px solid rgba(59, 130, 246, 0.2);\n            border-radius: 16px;\n            padding: 24px;\n        }\n\n        .banner-info {\n            background: rgba(15, 23, 42, 0.6);\n            border: 1px solid rgba(59, 130, 246, 0.1);\n            border-radius: 12px;\n            padding: 12px;\n            margin-bottom: 16px;\n            font-size: 13px;\n            color: #94a3b8;\n        }\n\n        .banner-thumb {\n            max-width: 100%;\n            height: auto;\n            border-radius: 12px;\n            margin: 12px 0;\n            box-shadow: 0 4px 12px rgba(0,0,0,0.3);\n        }\n\n        .file-info {\n            background: rgba(15, 23, 42, 0.6);\n            border: 1px solid rgba(59, 130, 246, 0.1);\n            border-radius: 8px;\n            padding: 12px;\n            margin: 12px 0;\n            font-size: 13px;\n            color: #94a3b8;\n        }\n\n        .file-info strong {\n            color: #3b82f6;\n        }\n\n        .file-info code {\n            background: rgba(59, 130, 246, 0.1);\n            color: #3b82f6;\n            padding: 2px 6px;\n            border-radius: 4px;\n            font-size: 12px;\n        }\n\n        /* 모바일 대응 */\n        @media (max-width: 768px) {\n            .container {\n                padding: 16px;\n            }\n\n            .admin-header {\n                padding: 24px 20px;\n            }\n\n            .admin-title {\n                font-size: 24px;\n            }\n\n            .admin-nav {\n                flex-direction: column;\n                gap: 12px;\n            }\n\n            .cards-grid {\n                grid-template-columns: 1fr;\n                gap: 20px;\n            }\n\n            .banner-grid {\n                grid-template-columns: 1fr;\n                gap: 20px;\n            }\n\n            .language-selector {\n                position: relative;\n                top: auto;\n                right: auto;\n                margin-top: 16px;\n                text-align: center;\n            }\n\n            .language-menu {\n                right: 50%;\n                transform: translateX(50%);\n            }\n\n            .action-buttons {\n                flex-direction: column;\n            }\n\n            .action-buttons .btn {\n                justify-content: center;\n            }\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <header class=\"admin-header\">\n            <div class=\"admin-header-content\">\n                <h1 class=\"admin-title\">\n                    <span class=\"material-symbols-rounded\">admin_panel_settings</span>\n                    <?= t('admin_title') ?>\n                </h1>\n                <p class=\"admin-subtitle\"><?= t('admin_subtitle') ?></p>\n                \n                <nav class=\"admin-nav\">\n                    <a href=\"/\">\n                        <span class=\"material-symbols-rounded\">home</span>\n                        <?= t('admin_nav_home') ?>\n                    </a>\n                    <a href=\"/results.php\">\n                        <span class=\"material-symbols-rounded\">military_tech</span>\n                        <?= t('admin_nav_results') ?>\n                    </a>\n                    <a href=\"/comp/\">\n                        <span class=\"material-symbols-rounded\">sports</span>\n                        <?= t('admin_nav_competitions') ?>\n                    </a>\n                    <a href=\"/comp/admin_event.php\">\n                        <span class=\"material-symbols-rounded\">score</span>\n                        <?= t('admin_nav_judging') ?>\n                    </a>\n                </nav>\n            </div>\n\n            <!-- 언어 선택기 -->\n            <div class=\"language-selector\">\n                <div class=\"language-dropdown\">\n                    <div class=\"language-btn\" onclick=\"toggleLanguageMenu()\">\n                        <span><?= $lang->getLangFlag() ?></span>\n                        <span><?= $lang->getLangName() ?></span>\n                        <span class=\"material-symbols-rounded\">expand_more</span>\n                    </div>\n                    <div class=\"language-menu\" id=\"languageMenu\">\n                        <?php foreach ($lang->getAvailableLanguages() as $code => $info): ?>\n                            <a href=\"<?= $lang->getLanguageUrl($code) ?>\" class=\"<?= $lang->getCurrentLang() === $code ? 'active' : '' ?>\">\n                                <span><?= $info['flag'] ?></span>\n                                <span><?= $info['name'] ?></span>\n                            </a>\n                        <?php endforeach; ?>\n                    </div>\n                </div>\n            </div>\n        </header>\n\n        <main>\n            <!-- 공지사항 관리 -->\n            <div class=\"admin-card\" style=\"margin-bottom: 32px;\">\n                <h2 class=\"card-title\">\n                    <span class=\"material-symbols-rounded\">campaign</span>\n                    <?= t('notice_management') ?>\n                    \n                    <?php if ($notice_stats): ?>\n                        <span style=\"font-size: 14px; color: #94a3b8; font-weight: 400;\">\n                            (<?= t('total') ?>: <?= $notice_stats['total'] ?>, <?= t('pinned') ?>: <?= $notice_stats['pinned'] ?>)\n                        </span>\n                    <?php endif; ?>\n                </h2>\n                \n                <?php if (isset($notice_error)): ?>\n                    <div style=\"background: rgba(239, 68, 68, 0.1); border: 1px solid rgba(239, 68, 68, 0.2); color: #fca5a5; padding: 12px; border-radius: 8px; margin-bottom: 16px;\">\n                        <strong><?= t('error') ?>:</strong> <?= htmlspecialchars($notice_error) ?>\n                    </div>\n                <?php endif; ?>\n                \n                <!-- 새 공지사항 작성 -->\n                <div class=\"preview-box\" style=\"margin-bottom: 24px;\">\n                    <strong><?= t('create_notice') ?></strong>\n                    <form method=\"post\" enctype=\"multipart/form-data\" style=\"margin-top: 16px;\">\n                        <input type=\"hidden\" name=\"notice_action\" value=\"create\">\n                        \n                        <div class=\"form-group\">\n                            <label for=\"notice_title\"><?= t('notice_title') ?></label>\n                            <input type=\"text\" id=\"notice_title\" name=\"notice_title\" placeholder=\"<?= t('notice_title_placeholder') ?>\" required>\n                        </div>\n                        \n                        <div class=\"form-group\">\n                            <label for=\"notice_content\"><?= t('notice_content') ?></label>\n                            <textarea id=\"notice_content\" name=\"notice_content\" placeholder=\"<?= t('notice_content_placeholder') ?>\" required></textarea>\n                        </div>\n                        \n                        <div class=\"form-group\">\n                            <label for=\"notice_image\"><?= t('notice_image') ?> (<?= t('optional') ?>)</label>\n                            <input type=\"file\" id=\"notice_image\" name=\"notice_image\" accept=\"image/*\">\n                            <small style=\"color: #94a3b8; display: block; margin-top: 4px;\">\n                                <?= t('notice_image_help') ?>\n                            </small>\n                        </div>\n                        \n                        <div class=\"form-group\">\n                            <label style=\"display: flex; align-items: center; gap: 8px; cursor: pointer;\">\n                                <input type=\"checkbox\" name=\"is_pinned\" style=\"width: auto;\">\n                                <span><?= t('notice_pin') ?></span>\n                            </label>\n                        </div>\n                        \n                        <button type=\"submit\" class=\"btn\">\n                            <span class=\"material-symbols-rounded\">add</span>\n                            <?= t('notice_create') ?>\n                        </button>\n                    </form>\n                </div>\n                \n                <!-- 기존 공지사항 목록 -->\n                <div style=\"max-height: 600px; overflow-y: auto;\">\n                    <strong style=\"color: #f1f5f9; margin-bottom: 16px; display: block;\"><?= t('existing_notices') ?></strong>\n                    \n                    <?php if (empty($notices)): ?>\n                        <div class=\"preview-box\" style=\"text-align: center; color: #94a3b8;\">\n                            <span class=\"material-symbols-rounded\" style=\"font-size: 48px; margin-bottom: 12px; display: block; opacity: 0.5;\">campaign</span>\n                            <?= t('no_notices') ?>\n                        </div>\n                    <?php else: ?>\n                        <?php foreach ($notices as $notice): ?>\n                            <div class=\"notice-item\" style=\"background: rgba(15, 23, 42, 0.6); border: 1px solid rgba(59, 130, 246, 0.1); border-radius: 12px; padding: 16px; margin-bottom: 16px;\">\n                                <div style=\"display: flex; justify-content: between; align-items: flex-start; margin-bottom: 12px;\">\n                                    <div style=\"flex: 1;\">\n                                        <h4 style=\"color: #f1f5f9; font-size: 16px; font-weight: 600; margin: 0 0 4px 0; display: flex; align-items: center; gap: 8px;\">\n                                            <?php if ($notice['is_pinned']): ?>\n                                                <span class=\"material-symbols-rounded\" style=\"color: #f59e0b; font-size: 18px;\">push_pin</span>\n                                            <?php endif; ?>\n                                            <?= htmlspecialchars($notice['title']) ?>\n                                        </h4>\n                                        <p style=\"color: #94a3b8; font-size: 12px; margin: 0;\">\n                                            <?= date('Y-m-d H:i', strtotime($notice['created_at'])) ?>\n                                            <?php if ($notice['updated_at'] !== $notice['created_at']): ?>\n                                                (<?= t('updated') ?>: <?= date('Y-m-d H:i', strtotime($notice['updated_at'])) ?>)\n                                            <?php endif; ?>\n                                        </p>\n                                    </div>\n                                </div>\n                                \n                                <div style=\"color: #e2e8f0; margin-bottom: 12px; line-height: 1.5;\">\n                                    <?= nl2br(htmlspecialchars($notice['content'])) ?>\n                                </div>\n                                \n                                <?php if ($notice['image_path']): ?>\n                                    <div style=\"margin-bottom: 12px;\">\n                                        <img src=\"/<?= $notice['image_path'] ?>\" alt=\"<?= htmlspecialchars($notice['title']) ?>\" \n                                             style=\"max-width: 100%; height: auto; border-radius: 8px; max-height: 200px;\">\n                                    </div>\n                                <?php endif; ?>\n                                \n                                <div class=\"action-buttons\">\n                                    <form method=\"post\" style=\"display: inline;\">\n                                        <input type=\"hidden\" name=\"notice_action\" value=\"toggle_pin\">\n                                        <input type=\"hidden\" name=\"notice_id\" value=\"<?= $notice['id'] ?>\">\n                                        <button type=\"submit\" class=\"btn btn-small\" style=\"background: <?= $notice['is_pinned'] ? 'linear-gradient(135deg, #f59e0b 0%, #d97706 100%)' : 'rgba(59, 130, 246, 0.1)' ?>; color: <?= $notice['is_pinned'] ? 'white' : '#3b82f6' ?>;\">\n                                            <span class=\"material-symbols-rounded\">push_pin</span>\n                                            <?= $notice['is_pinned'] ? t('notice_unpin') : t('notice_pin') ?>\n                                        </button>\n                                    </form>\n                                    \n                                    <button onclick=\"editNotice(<?= $notice['id'] ?>, '<?= addslashes($notice['title']) ?>', '<?= addslashes($notice['content']) ?>', '<?= $notice['image_path'] ?>', <?= $notice['is_pinned'] ? 'true' : 'false' ?>)\" class=\"btn btn-small\">\n                                        <span class=\"material-symbols-rounded\">edit</span>\n                                        <?= t('edit') ?>\n                                    </button>\n                                    \n                                    <form method=\"post\" style=\"display: inline;\" onsubmit=\"return confirm('<?= t('notice_delete_confirm') ?>')\">\n                                        <input type=\"hidden\" name=\"notice_action\" value=\"delete\">\n                                        <input type=\"hidden\" name=\"notice_id\" value=\"<?= $notice['id'] ?>\">\n                                        <button type=\"submit\" class=\"btn btn-danger btn-small\">\n                                            <span class=\"material-symbols-rounded\">delete</span>\n                                            <?= t('delete') ?>\n                                        </button>\n                                    </form>\n                                </div>\n                            </div>\n                        <?php endforeach; ?>\n                    <?php endif; ?>\n                </div>\n            </div>\n\n            <!-- 일정 관리 -->\n            <div class=\"cards-grid\">\n                <div class=\"admin-card\">\n\n                <!-- 일정 관리 -->\n                <div class=\"admin-card\">\n                    <h2 class=\"card-title\">\n                        <span class=\"material-symbols-rounded\">event</span>\n                        <?= t('schedule_management') ?>\n                    </h2>\n                    \n                    <div class=\"preview-box\">\n                        <strong><?= t('current_schedule') ?></strong><br>\n                        <?= $current_schedule ? nl2br(htmlspecialchars($current_schedule)) : t('no_schedule') ?>\n                        \n                        <?php if ($current_schedule): ?>\n                            <div class=\"action-buttons\">\n                                <a href=\"/manage/?delete_schedule=1\" class=\"btn btn-danger btn-small\"\n                                   onclick=\"return confirm('<?= t('schedule_delete_confirm') ?>')\">\n                                    <span class=\"material-symbols-rounded\">delete</span>\n                                    <?= t('schedule_delete') ?>\n                                </a>\n                            </div>\n                        <?php endif; ?>\n                    </div>\n                    \n                    <form method=\"post\">\n                        <div class=\"form-group\">\n                            <label for=\"schedule\"><?= t('schedule_content') ?></label>\n                            <textarea id=\"schedule\" name=\"schedule\" placeholder=\"<?= t('schedule_placeholder') ?>\"><?= htmlspecialchars($current_schedule) ?></textarea>\n                        </div>\n                        <button type=\"submit\" class=\"btn\">\n                            <span class=\"material-symbols-rounded\">save</span>\n                            <?= t('schedule_save') ?>\n                        </button>\n                    </form>\n                </div>\n            </div>\n\n            <!-- 배너 관리 -->\n            <div class=\"admin-card\" style=\"margin-bottom: 32px;\">\n                <h2 class=\"card-title\">\n                    <span class=\"material-symbols-rounded\">image</span>\n                    <?= t('banner_management') ?>\n                </h2>\n                \n                <div class=\"banner-grid\">\n                    <?php foreach($positions as $pos => $data): ?>\n                        <div class=\"banner-card\">\n                            <h3 class=\"card-title\" style=\"font-size: 18px; margin-bottom: 12px;\">\n                                <span class=\"material-symbols-rounded\">ad_units</span>\n                                <?= $data['label'] ?> <?= t('banner_management') ?>\n                                <span style=\"font-size: 12px; color: #94a3b8; font-weight: 400;\">\n                                    (<?= t('banner_recommended_size') ?>: <?= $data['size'] ?>)\n                                </span>\n                            </h3>\n                            \n                            <div class=\"banner-info\">\n                                <?= $data['desc'] ?>\n                            </div>\n                            \n                            <?php\n                            $img_file_web = \"/ads/\" . $data['img'];\n                            $img_file_real = $base_ads_dir . $data['img'];\n                            $link_file = $base_ads_dir . $data['link'];\n                            $link = file_exists($link_file) ? file_get_contents($link_file) : \"\";\n                            ?>\n                            \n                            <?php if (file_exists($img_file_real)): ?>\n                                <div>\n                                    <img src=\"<?= $img_file_web ?>\" class=\"banner-thumb\" alt=\"<?= $data['label'] ?> 배너\">\n                                    <div class=\"action-buttons\">\n                                        <a href=\"/manage/?delete=img&pos=<?= $pos ?>\" class=\"btn btn-danger btn-small\"\n                                           onclick=\"return confirm('<?= t('banner_delete_image_confirm') ?>')\">\n                                            <span class=\"material-symbols-rounded\">delete</span>\n                                            <?= t('banner_image_delete') ?>\n                                        </a>\n                                        <?php if ($link): ?>\n                                            <a href=\"<?= htmlspecialchars($link) ?>\" target=\"_blank\" class=\"btn btn-small\">\n                                                <span class=\"material-symbols-rounded\">open_in_new</span>\n                                                <?= t('banner_view_link') ?>\n                                            </a>\n                                        <?php endif; ?>\n                                    </div>\n                                </div>\n                            <?php endif; ?>\n                            \n                            <?php if (file_exists($link_file)): ?>\n                                <div class=\"file-info\">\n                                    <strong><?= t('banner_current_link') ?></strong> <code><?= htmlspecialchars($link) ?></code>\n                                    <div class=\"action-buttons\">\n                                        <a href=\"/manage/?delete=link&pos=<?= $pos ?>\" class=\"btn btn-danger btn-small\"\n                                           onclick=\"return confirm('<?= t('banner_delete_link_confirm') ?>')\">\n                                            <span class=\"material-symbols-rounded\">delete</span>\n                                            <?= t('banner_link_delete') ?>\n                                        </a>\n                                    </div>\n                                </div>\n                            <?php endif; ?>\n                            \n                            <form method=\"post\" enctype=\"multipart/form-data\">\n                                <input type=\"hidden\" name=\"pos\" value=\"<?= $pos ?>\">\n                                <div class=\"form-group\">\n                                    <label for=\"banner_<?= $pos ?>\"><?= t('banner_upload') ?></label>\n                                    <input type=\"file\" id=\"banner_<?= $pos ?>\" name=\"banner\" accept=\"image/*\">\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"link_<?= $pos ?>\"><?= t('banner_link') ?></label>\n                                    <input type=\"text\" id=\"link_<?= $pos ?>\" name=\"banner_link\" \n                                           value=\"<?= htmlspecialchars($link) ?>\" \n                                           placeholder=\"<?= t('banner_link_placeholder') ?>\">\n                                </div>\n                                <button type=\"submit\" class=\"btn\">\n                                    <span class=\"material-symbols-rounded\">upload</span>\n                                    <?= t('banner_upload_save') ?>\n                                </button>\n                            </form>\n                        </div>\n                    <?php endforeach; ?>\n                </div>\n            </div>\n        </main>\n    </div>\n\n    <!-- 편집 모달 -->\n    <div id=\"editModal\" style=\"display: none; position: fixed; top: 0; left: 0; right: 0; bottom: 0; background: rgba(0,0,0,0.8); z-index: 9999; padding: 20px;\">\n        <div style=\"max-width: 600px; margin: 50px auto; background: rgba(30, 41, 59, 0.95); backdrop-filter: blur(20px); border: 1px solid rgba(59, 130, 246, 0.2); border-radius: 16px; padding: 24px; max-height: 80vh; overflow-y: auto;\">\n            <h3 style=\"color: #f1f5f9; margin: 0 0 20px 0; display: flex; align-items: center; gap: 12px;\">\n                <span class=\"material-symbols-rounded\" style=\"color: #3b82f6;\">edit</span>\n                <?= t('edit_notice') ?>\n            </h3>\n            \n            <form method=\"post\" enctype=\"multipart/form-data\" id=\"editForm\">\n                <input type=\"hidden\" name=\"notice_action\" value=\"edit\">\n                <input type=\"hidden\" name=\"notice_id\" id=\"edit_notice_id\">\n                <input type=\"hidden\" name=\"existing_image\" id=\"edit_existing_image\">\n                \n                <div class=\"form-group\">\n                    <label for=\"edit_notice_title\"><?= t('notice_title') ?></label>\n                    <input type=\"text\" id=\"edit_notice_title\" name=\"notice_title\" placeholder=\"<?= t('notice_title_placeholder') ?>\" required>\n                </div>\n                \n                <div class=\"form-group\">\n                    <label for=\"edit_notice_content\"><?= t('notice_content') ?></label>\n                    <textarea id=\"edit_notice_content\" name=\"notice_content\" placeholder=\"<?= t('notice_content_placeholder') ?>\" required></textarea>\n                </div>\n                \n                <div class=\"form-group\">\n                    <label for=\"edit_notice_image\"><?= t('notice_image') ?> (<?= t('optional') ?>)</label>\n                    <input type=\"file\" id=\"edit_notice_image\" name=\"notice_image\" accept=\"image/*\">\n                    <div id=\"current_image_preview\" style=\"margin-top: 8px;\"></div>\n                </div>\n                \n                <div class=\"form-group\">\n                    <label style=\"display: flex; align-items: center; gap: 8px; cursor: pointer;\">\n                        <input type=\"checkbox\" name=\"is_pinned\" id=\"edit_is_pinned\" style=\"width: auto;\">\n                        <span><?= t('notice_pin') ?></span>\n                    </label>\n                </div>\n                \n                <div class=\"action-buttons\">\n                    <button type=\"submit\" class=\"btn\">\n                        <span class=\"material-symbols-rounded\">save</span>\n                        <?= t('save_changes') ?>\n                    </button>\n                    <button type=\"button\" onclick=\"closeEditModal()\" class=\"btn\" style=\"background: rgba(148, 163, 184, 0.1); color: #94a3b8;\">\n                        <span class=\"material-symbols-rounded\">close</span>\n                        <?= t('cancel') ?>\n                    </button>\n                </div>\n            </form>\n        </div>\n    </div>\n\n    <script>\n        function toggleLanguageMenu() {\n            const menu = document.getElementById('languageMenu');\n            menu.classList.toggle('show');\n        }\n\n        // 언어 메뉴 외부 클릭 시 닫기\n        document.addEventListener('click', function(event) {\n            const dropdown = document.querySelector('.language-dropdown');\n            const menu = document.getElementById('languageMenu');\n            \n            if (!dropdown.contains(event.target)) {\n                menu.classList.remove('show');\n            }\n        });\n\n        // 공지사항 편집 함수\n        function editNotice(id, title, content, imagePath, isPinned) {\n            document.getElementById('edit_notice_id').value = id;\n            document.getElementById('edit_notice_title').value = title;\n            document.getElementById('edit_notice_content').value = content;\n            document.getElementById('edit_existing_image').value = imagePath || '';\n            document.getElementById('edit_is_pinned').checked = isPinned;\n            \n            // 현재 이미지 미리보기\n            const preview = document.getElementById('current_image_preview');\n            if (imagePath) {\n                preview.innerHTML = '<img src=\"/' + imagePath + '\" style=\"max-width: 200px; height: auto; border-radius: 8px; display: block; margin-top: 8px;\"><small style=\"color: #94a3b8; margin-top: 4px; display: block;\"><?= t('current_image') ?></small>';\n            } else {\n                preview.innerHTML = '<small style=\"color: #94a3b8;\"><?= t('no_current_image') ?></small>';\n            }\n            \n            document.getElementById('editModal').style.display = 'block';\n        }\n\n        function closeEditModal() {\n            document.getElementById('editModal').style.display = 'none';\n        }\n\n        // ESC 키로 모달 닫기\n        document.addEventListener('keydown', function(event) {\n            if (event.key === 'Escape') {\n                closeEditModal();\n            }\n        });\n\n        // 모달 배경 클릭 시 닫기\n        document.getElementById('editModal').addEventListener('click', function(event) {\n            if (event.target === this) {\n                closeEditModal();\n            }\n        });\n    </script>\n</body>\n</html>","size_bytes":45494},"notice/index.php":{"content":"<?php\n$notice_file = __DIR__ . \"/../data/notice.txt\";\n$schedule_file = __DIR__ . \"/../data/schedule.txt\";\n\n$notice = file_exists($notice_file) ? nl2br(htmlspecialchars(file_get_contents($notice_file))) : \"등록된 공지가 없습니다.\";\n$schedule = file_exists($schedule_file) ? nl2br(htmlspecialchars(file_get_contents($schedule_file))) : \"등록된 대회일정이 없습니다.\";\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>공지/현장 안내</title>\n    <link rel=\"stylesheet\" href=\"/assets/style.css\">\n</head>\n<body>\n    <header>\n        <h1>공지/현장 안내</h1>\n        <nav>\n            <a href=\"/\">메인으로</a>\n            <a href=\"/manage/\">관리자</a>\n        </nav>\n    </header>\n    <main>\n        <section>\n            <h2>공지사항</h2>\n            <div style=\"background:#f2f2f2; padding:1em; border-radius:5px;\">\n                <?= $notice ?>\n            </div>\n        </section>\n        <section>\n            <h2>대회 일정</h2>\n            <div style=\"background:#f2f2f2; padding:1em; border-radius:5px;\">\n                <?= $schedule ?>\n            </div>\n        </section>\n    </main>\n    <footer>\n        &copy; 2025 danceoffice.net\n    </footer>\n</body>\n</html>","size_bytes":1247},"results/index.php":{"content":"﻿<?php\n// 전체 결과 목록 파일 경로\n$all_results_file = __DIR__ . '/index_results.html';\nheader('Content-Type: text/html; charset=UTF-8');\n$results_html = \"<div class='result-error'><span class='material-symbols-rounded'>error</span> 전체 결과 파일을 찾을 수 없습니다.</div>\";\nif (file_exists($all_results_file)) {\n    $raw = file_get_contents($all_results_file);\n    if ($raw !== false) {\n        $results_html = $raw;\n    } else {\n        $results_html = \"<div class='result-error'><span class='material-symbols-rounded'>error</span> 파일을 읽을 수 없습니다.</div>\";\n    }\n}\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>경기 결과 - danceoffice.net</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <link rel=\"stylesheet\" href=\"/assets/style.css\">\n    <style>\n        /* PC 버전 스타일 */\n        @media (min-width: 1024px) {\n            body {\n                background: #181B20;\n                min-height: 100vh;\n                font-size: 14px;\n                line-height: 1.5;\n            }\n            \n            .main-container {\n                display: grid;\n                grid-template-columns: 200px 1fr 180px;\n                grid-template-rows: auto 1fr auto;\n                grid-template-areas: \n                    \"sidebar-left header sidebar-right\"\n                    \"sidebar-left main sidebar-right\"\n                    \"footer footer footer\";\n                min-height: 100vh;\n                gap: 15px;\n                padding: 15px;\n                max-width: 1200px;\n                margin: 0 auto;\n            }\n            \n            .sidebar-left {\n                grid-area: sidebar-left;\n                display: flex;\n                flex-direction: column;\n                gap: 15px;\n            }\n            \n            .sidebar-left .logo-nav {\n                background: linear-gradient(135deg, #1a1d21 0%, #181B20 100%);\n                border-radius: 15px;\n                padding: 20px;\n                box-shadow: 0 8px 25px rgba(3, 199, 90, 0.15);\n                border: 2px solid #03C75A;\n                text-align: center;\n            }\n            \n            .sidebar-left .main-logo {\n                height: 50px;\n                margin-bottom: 20px;\n                filter: drop-shadow(0 3px 6px rgba(0,0,0,0.2));\n            }\n            \n            .sidebar-left .main-nav {\n                display: flex;\n                flex-direction: column;\n                gap: 10px;\n            }\n            \n            .sidebar-left .main-nav a {\n                color: white;\n                text-decoration: none;\n                font-weight: 600;\n                font-size: 14px;\n                padding: 12px 20px;\n                border-radius: 20px;\n                transition: all 0.3s ease;\n                background: rgba(3, 199, 90, 0.1);\n                backdrop-filter: blur(10px);\n                text-align: center;\n            }\n            \n            .sidebar-left .main-nav a:hover,\n            .sidebar-left .main-nav a.active {\n                background: #03C75A;\n                color: #222;\n                transform: translateY(-2px);\n                box-shadow: 0 4px 12px rgba(3, 199, 90, 0.3);\n            }\n            \n            .ad-side {\n                grid-area: sidebar-right;\n                display: flex;\n                flex-direction: column;\n                gap: 15px;\n            }\n            \n            .main-header {\n                grid-area: header;\n                background: linear-gradient(135deg, #1a1d21 0%, #181B20 100%);\n                border-radius: 15px;\n                padding: 20px;\n                box-shadow: 0 8px 25px rgba(3, 199, 90, 0.15);\n                border: 2px solid #03C75A;\n                text-align: center;\n            }\n            \n            .main-header h1 {\n                color: #03C75A;\n                font-size: 24px;\n                margin: 0;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                gap: 12px;\n            }\n            \n            main {\n                grid-area: main;\n                display: flex;\n                flex-direction: column;\n                gap: 20px;\n            }\n            \n            .results-section {\n                background: #222;\n                border-radius: 15px;\n                padding: 25px;\n                box-shadow: 0 8px 25px rgba(3, 199, 90, 0.08);\n                border: 1px solid #31343a;\n            }\n            \n            .results-section h2 {\n                color: #03C75A;\n                font-size: 20px;\n                margin-bottom: 20px;\n                display: flex;\n                align-items: center;\n                gap: 12px;\n            }\n            \n            .main-footer {\n                grid-area: footer;\n                text-align: center;\n                color: #03C75A;\n                padding: 15px;\n                background: #222;\n                border-radius: 12px;\n                box-shadow: 0 4px 12px rgba(3, 199, 90, 0.08);\n                border: 1px solid #31343a;\n                font-size: 13px;\n            }\n        }\n        \n        /* 모바일 버전 스타일 */\n        @media (max-width: 1023px) {\n            body {\n                background: #181B20;\n                min-height: 100vh;\n                margin: 0;\n                padding: 0;\n                padding-bottom: 80px;\n            }\n            \n            .main-container {\n                display: flex;\n                flex-direction: column;\n                min-height: 100vh;\n            }\n            \n            .sidebar-left {\n                display: none;\n            }\n            \n            .ad-side {\n                display: none;\n            }\n            \n            .main-header {\n                background: rgba(26, 29, 33, 0.9);\n                backdrop-filter: blur(20px);\n                padding: 20px;\n                position: sticky;\n                top: 0;\n                z-index: 100;\n                border-bottom: 2px solid #03C75A;\n            }\n            \n            .main-header h1 {\n                color: #03C75A;\n                font-size: 20px;\n                margin: 0;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                gap: 8px;\n            }\n            \n            main {\n                flex: 1;\n                padding: 20px;\n                display: flex;\n                flex-direction: column;\n                gap: 20px;\n            }\n            \n            .results-section {\n                background: rgba(34, 34, 34, 0.95);\n                border-radius: 20px;\n                padding: 25px;\n                box-shadow: 0 10px 30px rgba(3, 199, 90, 0.1);\n                backdrop-filter: blur(20px);\n                border: 1px solid #31343a;\n            }\n            \n            .results-section h2 {\n                color: #03C75A;\n                font-size: 18px;\n                margin-bottom: 20px;\n                display: flex;\n                align-items: center;\n                gap: 8px;\n            }\n            \n            .main-footer {\n                text-align: center;\n                color: #03C75A;\n                padding: 20px;\n                background: rgba(34, 34, 34, 0.9);\n                backdrop-filter: blur(20px);\n                border-top: 2px solid #03C75A;\n            }\n            \n            /* 하단 네비게이션 */\n            .bottom-nav {\n                position: fixed;\n                bottom: 0;\n                left: 0;\n                right: 0;\n                background: rgba(26, 29, 33, 0.95);\n                backdrop-filter: blur(20px);\n                border-top: 2px solid #03C75A;\n                padding: 10px 0;\n                z-index: 1000;\n                display: flex;\n                justify-content: space-around;\n                align-items: center;\n            }\n            \n            .bottom-nav a {\n                color: white;\n                text-decoration: none;\n                font-weight: 600;\n                font-size: 12px;\n                padding: 8px 12px;\n                border-radius: 15px;\n                background: rgba(3, 199, 90, 0.1);\n                backdrop-filter: blur(10px);\n                transition: all 0.3s ease;\n                text-align: center;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                gap: 4px;\n                min-width: 60px;\n            }\n            \n            .bottom-nav a:hover,\n            .bottom-nav a.active {\n                background: #03C75A;\n                color: #222;\n                transform: translateY(-2px);\n            }\n            \n            .bottom-nav .nav-icon {\n                font-size: 20px;\n            }\n        }\n        \n        .material-symbols-rounded {\n            font-variation-settings: 'FILL' 1, 'wght' 400, 'GRAD' 0, 'opsz' 24;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"main-container\">\n        <aside class=\"sidebar-left\">\n            <div class=\"logo-nav\">\n                <img src=\"/assets/danceoffice-logo.png\" alt=\"Danceoffice Logo\" class=\"main-logo\">\n                <nav class=\"main-nav\">\n                    <a href=\"/\">홈</a>\n                    <a href=\"/results/\" class=\"active\">경기 결과</a>\n                    <a href=\"/comprehensive/\">종합결과</a>\n                    <a href=\"/notice/\">공지사항</a>\n                    <a href=\"/manage/\">관리자</a>\n                </nav>\n            </div>\n        </aside>\n        \n        <header class=\"main-header\">\n            <h1><span class=\"material-symbols-rounded\">sports_score</span> 경기 결과</h1>\n        </header>\n        \n        <aside class=\"ad-side\">\n            <!-- 광고 영역 -->\n        </aside>\n        \n        <main>\n            <section class=\"results-section\">\n                <h2><span class=\"material-symbols-rounded\">sports_score</span> 전체 경기 결과</h2>\n                <div class=\"result-area\">\n                    <?php echo $results_html; ?>\n                </div>\n            </section>\n        </main>\n        \n        <footer class=\"main-footer\">\n            &copy; 2025 danceoffice.net | Powered by Seyoung Lee\n        </footer>\n    </div>\n    \n    <!-- 모바일 하단 네비게이션 -->\n    <nav class=\"bottom-nav\">\n        <a href=\"/\">\n            <span class=\"nav-icon material-symbols-rounded\">home</span>\n            <span>홈</span>\n        </a>\n        <a href=\"/results/\" class=\"active\">\n            <span class=\"nav-icon material-symbols-rounded\">sports_score</span>\n            <span>경기결과</span>\n        </a>\n        <a href=\"/comprehensive/\">\n            <span class=\"nav-icon material-symbols-rounded\">analytics</span>\n            <span>종합결과</span>\n        </a>\n        <a href=\"/notice/\">\n            <span class=\"nav-icon material-symbols-rounded\">campaign</span>\n            <span>공지사항</span>\n        </a>\n        <a href=\"/manage/\">\n            <span class=\"nav-icon material-symbols-rounded\">settings</span>\n            <span>관리자</span>\n        </a>\n    </nav>\n    \n    <!-- 구글 머티리얼 아이콘 로드 -->\n    <link href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded\" rel=\"stylesheet\" />\n</body>\n</html>","size_bytes":11533},"results/live.php":{"content":"<?php\n// 디버그/에러 출력을 임시로 켭니다 (배포시 끄세요)\nini_set('display_errors', 1);\nini_set('display_startup_errors', 1);\nerror_reporting(E_ALL);\n\n// 실시간 결과 파일 경로 (NAS에서 자동 복사된 최신 결과 파일)\n$recall_php_path = '/volume1/web/Recall/index.php';\n\n// 명시적 출력 인코딩\nheader('Content-Type: text/html; charset=UTF-8');\n\n$result_html = \"<div class='result-error'><span class='material-symbols-rounded'>error</span> 실시간 결과 파일을 찾을 수 없습니다.</div>\";\n\nif (file_exists($recall_php_path)) {\n    $raw = file_get_contents($recall_php_path);\n    if ($raw === false) {\n        $result_html = \"<div class='result-error'><span class='material-symbols-rounded'>error</span> 파일을 읽을 수 없습니다.</div>\";\n    } else {\n        // BOM 검사(UTF-8 BOM, UTF-16 LE/BE)\n        if (substr($raw, 0, 3) === \"\\xEF\\xBB\\xBF\") {\n            // UTF-8 BOM 제거\n            $result_html = substr($raw, 3);\n        } elseif (substr($raw, 0, 2) === \"\\xFF\\xFE\") {\n            // UTF-16 LE\n            if (function_exists('iconv')) {\n                $result_html = iconv(\"UTF-16LE\", \"UTF-8//IGNORE\", $raw);\n            } elseif (function_exists('mb_convert_encoding')) {\n                $result_html = mb_convert_encoding($raw, \"UTF-8\", \"UTF-16LE\");\n            } else {\n                $result_html = $raw;\n            }\n        } elseif (substr($raw, 0, 2) === \"\\xFE\\xFF\") {\n            // UTF-16 BE\n            if (function_exists('iconv')) {\n                $result_html = iconv(\"UTF-16BE\", \"UTF-8//IGNORE\", $raw);\n            } elseif (function_exists('mb_convert_encoding')) {\n                $result_html = mb_convert_encoding($raw, \"UTF-8\", \"UTF-16BE\");\n            } else {\n                $result_html = $raw;\n            }\n        } else {\n            // 인코딩 자동 감지 시도\n            $enc = null;\n            if (function_exists('mb_detect_encoding')) {\n                $enc = mb_detect_encoding($raw, ['UTF-8','CP949','EUC-KR','ISO-8859-1','ASCII'], true);\n            }\n            if ($enc) {\n                if ($enc === 'UTF-8') {\n                    $result_html = $raw;\n                } else {\n                    if (function_exists('iconv')) {\n                        $result_html = iconv($enc, \"UTF-8//IGNORE\", $raw);\n                    } elseif (function_exists('mb_convert_encoding')) {\n                        $result_html = mb_convert_encoding($raw, \"UTF-8\", $enc);\n                    } else {\n                        $result_html = $raw;\n                    }\n                }\n            } else {\n                // 최후의 수단: CP949->UTF-8, EUC-KR->UTF-8, 그냥 RAW 순으로 시도\n                if (function_exists('iconv')) {\n                    $try = @iconv(\"CP949\", \"UTF-8//IGNORE\", $raw);\n                    if ($try !== false && mb_detect_encoding($try, 'UTF-8', true)) {\n                        $result_html = $try;\n                    } else {\n                        $try2 = @iconv(\"EUC-KR\", \"UTF-8//IGNORE\", $raw);\n                        if ($try2 !== false && mb_detect_encoding($try2, 'UTF-8', true)) {\n                            $result_html = $try2;\n                        } else {\n                            $result_html = $raw;\n                        }\n                    }\n                } elseif (function_exists('mb_convert_encoding')) {\n                    $result_html = mb_convert_encoding($raw, \"UTF-8\", \"CP949\");\n                } else {\n                    $result_html = $raw;\n                }\n            }\n        }\n    }\n}\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>준결 예선 실시간 경기 결과 - danceoffice.net</title>\n    <meta http-equiv=\"refresh\" content=\"30\">\n    <link rel=\"stylesheet\" href=\"/assets/style.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded\" rel=\"stylesheet\" />\n</head>\n<body>\n    <header class=\"main-header\" style=\"margin-bottom: 5px;\">\n        <div class=\"logo-nav\">\n            <img src=\"/assets/danceoffice-logo.png\" alt=\"Danceoffice Logo\" class=\"main-logo\">\n            <nav class=\"main-nav\">\n                <a href=\"/\">홈</a>\n                <a href=\"/results/\">전체 결과</a>\n                <a href=\"/results/live.php\" class=\"active\">실시간 결과</a>\n                <a href=\"/notice/\">공지사항</a>\n                <a href=\"/manage/\">관리자</a>\n            </nav>\n        </div>\n    </header>\n    <main style=\"padding: 5px 10px; max-width: 1000px; margin: 0 auto;\">\n        <section class=\"results-section\" style=\"padding: 10px 15px; margin-bottom: 10px;\">\n            <h1 style=\"font-size: 20px; margin-bottom: 5px; color: #03C75A; text-align: center;\">1. 싱글 맨 프리스타일 - Semi</h1>\n            <h2 style=\"font-size: 16px; margin-bottom: 15px; color: #00BFAE; text-align: center;\">7커플이 3번 이벤트로 진출합니다.</h2>\n            <h3 style=\"font-size: 18px; margin-bottom: 10px; color: #03C75A;\">\n                <span class=\"material-symbols-rounded\">update</span>\n                다음 라운드 진출자 명단\n            </h3>\n            <div class=\"result-area\" style=\"margin-bottom: 10px;\">\n                <?php echo $result_html; ?>\n            </div>\n            <div class=\"result-refresh\" style=\"font-size: 12px; margin-bottom: 10px;\">\n                <span class=\"material-symbols-rounded\" style=\"vertical-align:middle;\">refresh</span>\n                <span>30초마다 자동 갱신됩니다. 최신 결과가 아닐 경우 새로고침(F5) 해주세요.</span>\n            </div>\n        </section>\n        <section style=\"text-align: center; margin-top: 20px;\">\n            <p class=\"result-desc\" style=\"font-size: 12px; color: #00BFAE;\">전체 결과는 <a href=\"/results/\">danceoffice.net</a>에서 확인하세요</p>\n        </section>\n    </main>\n    <footer class=\"main-footer\">\n        &copy; 2025 danceoffice.net | Powered by Seyoung Lee\n    </footer>\n</body>\n</html>","size_bytes":6026},"comp/recall/live_aggregation_api.php":{"content":"<?php\nheader('Content-Type: application/json; charset=utf-8');\nerror_reporting(E_ALL);\nini_set('display_errors', 1);\n\n// 명령행에서 실행되는 경우와 웹에서 실행되는 경우 모두 처리\nif (php_sapi_name() === 'cli') {\n    // 명령행에서 실행되는 경우\n    $comp_id = $argv[1] ?? '';\n    $event_no = $argv[2] ?? '';\n} else {\n    // 웹에서 실행되는 경우\n    $comp_id = $_GET['comp_id'] ?? '';\n    $event_no = $_GET['event_no'] ?? '';\n}\n\nerror_log(\"=== Live Aggregation API Called ===\");\nerror_log(\"GET parameters: \" . json_encode($_GET ?? []));\nerror_log(\"comp_id: '$comp_id', event_no: '$event_no'\");\n\nif (empty($comp_id) || empty($event_no)) {\n    error_log(\"Missing parameters - comp_id: '$comp_id', event_no: '$event_no'\");\n    echo json_encode(['success' => false, 'error' => 'Missing parameters']);\n    exit;\n}\n\n$data_dir = \"data/{$comp_id}\";\nerror_log(\"data_dir: $data_dir\");\n\n// 이벤트 정보 가져오기\nerror_log(\"Looking for event: $event_no\");\n$event_info = getEventInfo($data_dir, $event_no);\nif (!$event_info) {\n    error_log(\"Event not found: $event_no\");\n    echo json_encode(['success' => false, 'error' => 'Event not found']);\n    exit;\n}\nerror_log(\"Event found: \" . json_encode($event_info));\n\n// 댄스 목록 가져오기\n$dances = $event_info['dances'];\nif (empty($dances)) {\n    echo json_encode(['success' => false, 'error' => 'No dances found for this event']);\n    exit;\n}\n\n// 심사위원 목록 가져오기\n$judges = getJudgesForEvent($data_dir, $event_no);\nif (empty($judges)) {\n    echo json_encode(['success' => false, 'error' => 'No judges found for this event']);\n    exit;\n}\n\n// 선수 목록 가져오기\n$players = getPlayersForEvent($data_dir, $event_no);\nif (empty($players)) {\n    echo json_encode(['success' => false, 'error' => 'No players found for this event']);\n    exit;\n}\n\n// 전체 선수 정보 가져오기 (실제 선수명을 위해) - live_panel.php와 동일한 방식\n$all_players = [];\n$players_file = \"$data_dir/players.txt\";\nif (file_exists($players_file)) {\n    $lines = file($players_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    foreach ($lines as $line) {\n        $cols = array_map('trim', explode(',', $line));\n        if (count($cols) >= 3) {\n            $all_players[$cols[0]] = [\n                'male' => $cols[1] ?? '',\n                'female' => $cols[2] ?? '',\n            ];\n        }\n    }\n    error_log(\"Loaded player data from players.txt: \" . count($all_players) . \" players\");\n} else {\n    error_log(\"players.txt not found, using fallback names\");\n    // fallback: 등번호만 있는 경우 기본 이름 사용\n    foreach ($players as $player) {\n        $all_players[$player['number']] = [\n            'male' => \"선수\",\n            'female' => $player['number']\n        ];\n    }\n}\n\n// 집계 데이터 수집\n$aggregation_data = collectAggregationData($data_dir, $event_no, $dances, $judges, $players, $all_players);\n\necho json_encode([\n    'success' => true,\n    'event_info' => $event_info,\n    'judges' => $judges,\n    'players' => $players,\n    'all_players' => $all_players,\n    'aggregation' => $aggregation_data\n]);\n\nfunction getEventInfo($data_dir, $event_no) {\n    $runorder_file = \"$data_dir/RunOrder_Tablet.txt\";\n    if (!file_exists($runorder_file)) {\n        return null;\n    }\n    \n    $lines = file($runorder_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    \n    foreach ($lines as $line) {\n        $cols = explode(',', $line);\n        if (count($cols) >= 13) {\n            $file_event_no = preg_replace('/\\x{FEFF}/u', '', $cols[0] ?? '');\n            $file_event_no = preg_replace('/\\D+/', '', $file_event_no);\n            $detail_no = trim($cols[13] ?? '');\n            \n            $match_event_no = !empty($detail_no) ? $detail_no : $file_event_no;\n            \n            // 디버그 로그 추가\n            error_log(\"Event matching: file_event_no='$file_event_no', detail_no='$detail_no', match_event_no='$match_event_no', target='$event_no'\");\n            \n            if ($match_event_no === $event_no) {\n                $dances = [];\n                for ($i = 6; $i <= 10; $i++) {\n                    if (!empty($cols[$i]) && $cols[$i] !== '0') {\n                        $dances[] = $cols[$i];\n                    }\n                }\n                \n                return [\n                    'no' => $cols[0],\n                    'detail_no' => $detail_no,\n                    'name' => $cols[1],\n                    'round' => $cols[2],\n                    'dances' => $dances,\n                    'panel' => $cols[11] ?? ''\n                ];\n            }\n        }\n    }\n    \n    return null;\n}\n\nfunction getJudgesForEvent($data_dir, $event_no) {\n    $panel_file = \"$data_dir/panel_list.json\";\n    if (!file_exists($panel_file)) {\n        error_log(\"Panel file not found: $panel_file\");\n        return [];\n    }\n    \n    $panel_data = json_decode(file_get_contents($panel_file), true);\n    if (!$panel_data) {\n        error_log(\"Failed to parse panel file: $panel_file\");\n        return [];\n    }\n    \n    // 이벤트의 패널 코드 가져오기\n    $event_info = getEventInfo($data_dir, $event_no);\n    if (!$event_info || !isset($event_info['panel'])) {\n        error_log(\"No panel info for event: $event_no\");\n        return [];\n    }\n    \n    $panel_code = $event_info['panel'];\n    error_log(\"Looking for judges in panel: $panel_code\");\n    \n    // 해당 패널의 심사위원들 찾기\n    $judges = [];\n    foreach ($panel_data as $item) {\n        if (isset($item['panel_code']) && $item['panel_code'] === $panel_code) {\n            $judges[] = [\n                'code' => $item['adj_code'],\n                'name' => \"Judge {$item['adj_code']}\" // 실제 이름이 없으므로 코드로 대체\n            ];\n        }\n    }\n    \n    error_log(\"Found \" . count($judges) . \" judges for panel: $panel_code\");\n    return $judges;\n}\n\nfunction getPlayersForEvent($data_dir, $event_no) {\n    // live_panel.php와 동일한 방식으로 선수 정보 로드\n    $players_file = \"$data_dir/players_{$event_no}.txt\";\n    if (!file_exists($players_file)) {\n        // BOM 등 비정상 문자가 끼어 생성된 파일을 탐색하여 보정\n        foreach (glob($data_dir . \"/players_*.txt\") as $alt) {\n            $base = basename($alt);\n            $num = $base;\n            $num = preg_replace('/^players_/u', '', $num);\n            $num = preg_replace('/\\.txt$/u', '', $num);\n            $num = preg_replace('/\\x{FEFF}/u', '', $num); // BOM 제거\n            $num = preg_replace('/\\D+/', '', $num); // 숫자만 남김\n            \n            if ($num === (string)$event_no) {\n                $players_file = $alt;\n                break;\n            }\n        }\n    }\n    \n    if (!file_exists($players_file)) {\n        error_log(\"Players file not found for event: $event_no\");\n        return [];\n    }\n    \n    $lines = file($players_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    $players = [];\n    \n    foreach ($lines as $line) {\n        $line = trim($line);\n        if (empty($line)) continue;\n        \n        $parts = explode(',', $line);\n        if (count($parts) >= 2) {\n            $players[] = [\n                'number' => trim($parts[0]),\n                'name' => trim($parts[1])\n            ];\n        } else {\n            // 등번호만 있는 경우\n            $player_number = trim($line);\n            if (!empty($player_number)) {\n                $players[] = [\n                    'number' => $player_number,\n                    'name' => \"선수 {$player_number}\"\n                ];\n            }\n        }\n    }\n    \n    error_log(\"Loaded \" . count($players) . \" players for event: $event_no\");\n    return $players;\n}\n\nfunction collectAggregationData($data_dir, $event_no, $dances, $judges, $players, $all_players = []) {\n    $player_scores = [];\n    $judge_status = [];\n    \n    // 각 선수별 점수 초기화\n    foreach ($players as $player) {\n        $player_number = $player['number'];\n        $player_name = $player['name'];\n        \n        // 전체 선수 정보에서 실제 선수명 가져오기\n        if (isset($all_players[$player_number])) {\n            $male = $all_players[$player_number]['male'] ?? '';\n            $female = $all_players[$player_number]['female'] ?? '';\n            if ($male && $female) {\n                $player_name = \"{$male} / {$female}\";\n            } elseif ($male) {\n                $player_name = $male;\n            } elseif ($female) {\n                $player_name = $female;\n            }\n        }\n        \n        $player_scores[$player_number] = [\n            'name' => $player_name,\n            'total_recall' => 0,\n            'dance_scores' => []\n        ];\n    }\n    \n    // 각 심사위원별 상태 초기화\n    foreach ($judges as $judge) {\n        $judge_status[$judge['code']] = [\n            'name' => $judge['name'],\n            'completed_dances' => 0,\n            'total_dances' => count($dances),\n            'status' => 'waiting'\n        ];\n    }\n    \n    // 각 댄스별로 .adj 파일 확인\n    foreach ($dances as $dance) {\n        foreach ($judges as $judge) {\n            $adj_file = \"$data_dir/{$event_no}_{$dance}_{$judge['code']}.adj\";\n            \n            if (file_exists($adj_file)) {\n                $judge_status[$judge['code']]['completed_dances']++;\n                $judge_status[$judge['code']]['status'] = 'scoring';\n                \n                // .adj 파일에서 Recall 데이터 읽기\n                $recall_data = file($adj_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n                foreach ($recall_data as $line) {\n                    $player_number = trim($line, '\"');\n                    if (isset($player_scores[$player_number])) {\n                        $player_scores[$player_number]['total_recall']++;\n                        $player_scores[$player_number]['dance_scores'][$dance] = \n                            ($player_scores[$player_number]['dance_scores'][$dance] ?? 0) + 1;\n                    }\n                }\n            }\n        }\n    }\n    \n    // 심사위원 상태 업데이트\n    foreach ($judge_status as $code => &$status) {\n        if ($status['completed_dances'] === 0) {\n            $status['status'] = 'waiting';\n        } elseif ($status['completed_dances'] < $status['total_dances']) {\n            $status['status'] = 'scoring';\n        } else {\n            $status['status'] = 'completed';\n        }\n    }\n    \n    // 선수별 점수로 정렬\n    uasort($player_scores, function($a, $b) {\n        return $b['total_recall'] - $a['total_recall'];\n    });\n    \n    return [\n        'player_scores' => $player_scores,\n        'judge_status' => $judge_status,\n        'total_judges' => count($judges),\n        'completed_judges' => count(array_filter($judge_status, function($status) {\n            return $status['status'] === 'completed';\n        })),\n        'progress_rate' => round((count(array_filter($judge_status, function($status) {\n            return $status['status'] === 'completed';\n        })) / count($judges)) * 100, 1)\n    ];\n}\n?>\n","size_bytes":11123},"comp/result/result.php":{"content":"<?php\nsession_start();\n\n$data_dir = '/volume1/web/comp/data'; // 환경에 맞게 수정\n$event_file = $data_dir . '/events.txt';\n$adjudicator_file = $data_dir . '/Adjudicator.txt';\n\n// 대회명/날짜 불러오기\n$compinfo_file = $data_dir . '/competition_info.txt';\n$comp_title = \"\";\n$comp_date = \"\";\nif (file_exists($compinfo_file)) {\n    $lines = file($compinfo_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    $comp_title = isset($lines[0]) ? trim($lines[0]) : \"\";\n    $comp_date = isset($lines[1]) ? trim($lines[1]) : \"\";\n}\n\nfunction load_events($event_file) {\n    $events = [];\n    if (file_exists($event_file)) {\n        $lines = file($event_file);\n        foreach ($lines as $line) {\n            $cols = explode(',', trim($line), 2);\n            if (count($cols) >= 2) {\n                $events[] = [\n                    'code' => trim($cols[0]),\n                    'name' => trim($cols[1])\n                ];\n            }\n        }\n    }\n    return $events;\n}\nfunction load_adjudicators($adjudicator_file) {\n    $adjs = [];\n    if (file_exists($adjudicator_file)) {\n        $lines = file($adjudicator_file);\n        foreach ($lines as $line) {\n            $cols = explode(',', trim($line));\n            if (count($cols) >= 2) {\n                $adjs[trim($cols[0])] = trim($cols[1]);\n            }\n        }\n    }\n    return $adjs;\n}\nfunction load_players($event_code, $data_dir) {\n    $players = [];\n    $player_file = $data_dir . '/event_players/' . $event_code . '_players.txt';\n    if (file_exists($player_file)) {\n        $lines = file($player_file);\n        foreach ($lines as $line) {\n            $cols = array_map('trim', explode(',', $line));\n            if (count($cols) >= 2) {\n                $players[$cols[0]] = [\n                    'number' => $cols[0],\n                    'name' => $cols[1],\n                    'partner' => isset($cols[2]) ? $cols[2] : '',\n                ];\n            }\n        }\n    }\n    return $players;\n}\nfunction load_scores($event_code, $adjudicators, $data_dir) {\n    $scores = [];\n    foreach ($adjudicators as $adj_id => $adj_name) {\n        $score_file = $data_dir . \"/scores/score_{$event_code}_J{$adj_id}.txt\";\n        if (file_exists($score_file)) {\n            $lines = file($score_file);\n            foreach ($lines as $line) {\n                $cols = explode(',', trim($line));\n                if (count($cols) == 4) {\n                    list($num, $tech, $choreo, $diff) = $cols;\n                    if (!isset($scores[$num])) $scores[$num] = [];\n                    $scores[$num][$adj_id] = [\n                        'tech' => floatval($tech),\n                        'choreo' => floatval($choreo),\n                        'diff' => floatval($diff)\n                    ];\n                }\n            }\n        }\n    }\n    return $scores;\n}\n\n// 최고/최저 제외 평균\nfunction calc_final_score($score_arr) {\n    if (count($score_arr) < 3) return 0;\n    sort($score_arr, SORT_NUMERIC);\n    if (count($score_arr) > 3) {\n        $score_arr = array_slice($score_arr, 1, count($score_arr) - 2); // Min/Max 제외\n    }\n    return array_sum($score_arr) / count($score_arr);\n}\n\n// 총점: (기술+안무) * 난이도\nfunction calc_total_score($final_tech, $final_choreo, $final_diff) {\n    return ($final_tech + $final_choreo) * $final_diff;\n}\n\n// 데이터 로딩\n$events = load_events($event_file);\n$adjudicators = load_adjudicators($adjudicator_file);\n\n$selected_event = '';\n$event_name = '';\nif (isset($_GET['event'])) {\n    foreach ($events as $ev) {\n        if ($ev['code'] === $_GET['event']) {\n            $selected_event = $ev['code'];\n            $event_name = $ev['name'];\n            break;\n        }\n    }\n}\n\n$players = $selected_event ? load_players($selected_event, $data_dir) : [];\n$scores = ($selected_event && $adjudicators) ? load_scores($selected_event, $adjudicators, $data_dir) : [];\n\n// 선수별 점수 집계\n$player_results = [];\nif ($players && $scores) {\n    foreach ($players as $num => $player) {\n        $tech_scores = []; $choreo_scores = []; $diff_scores = [];\n        foreach ($adjudicators as $adj_id => $adj_name) {\n            $t = isset($scores[$num][$adj_id]) ? $scores[$num][$adj_id]['tech'] : null;\n            $c = isset($scores[$num][$adj_id]) ? $scores[$num][$adj_id]['choreo'] : null;\n            $d = isset($scores[$num][$adj_id]) ? $scores[$num][$adj_id]['diff'] : null;\n            if ($t !== null) $tech_scores[$adj_id] = $t;\n            if ($c !== null) $choreo_scores[$adj_id] = $c;\n            if ($d !== null) $diff_scores[$adj_id] = $d;\n        }\n        $final_tech = calc_final_score(array_values($tech_scores));\n        $final_choreo = calc_final_score(array_values($choreo_scores));\n        $final_diff = calc_final_score(array_values($diff_scores));\n        $total_score = calc_total_score($final_tech, $final_choreo, $final_diff);\n\n        $player_results[$num] = [\n            'number' => $player['number'],\n            'name' => $player['name'],\n            'partner' => $player['partner'],\n            'tech_scores' => $tech_scores,\n            'choreo_scores' => $choreo_scores,\n            'diff_scores' => $diff_scores,\n            'final_tech' => $final_tech,\n            'final_choreo' => $final_choreo,\n            'final_diff' => $final_diff,\n            'total_score' => $total_score,\n        ];\n    }\n    // 총점 순서로 정렬 & 순위 부여\n    uasort($player_results, function($a, $b) {\n        return $b['total_score'] <=> $a['total_score'];\n    });\n    $rank = 1;\n    foreach ($player_results as &$result) {\n        $result['rank'] = $rank++;\n    }\n    unset($result);\n}\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>채점 결과 | danceoffice.net</title>\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\n    <style>\n        body { background:#191b22; color:#222; }\n        .result-section {background:#fff; border-radius:14px; padding:2em 2em 2.5em 2em; max-width:1200px; margin:3em auto; box-shadow:0 4px 30px #0002;}\n        .result-title {font-size:1.7em; font-weight:700; color:#003399; margin-bottom:2em; text-align:center;}\n        .comp-title {font-size:1.18em; color:#03C75A; font-weight:700; margin-bottom:0.25em; text-align:center;}\n        .comp-date {font-size:1.03em; color:#0066b3; margin-bottom:1.2em; text-align:center;}\n        .score-table {width:100%; margin-bottom:2.1em; border-collapse:collapse; font-size:1.05em;}\n        .score-table th, .score-table td {padding:0.6em 0.4em; border:1px solid #c0c0c0; text-align:center;}\n        .score-table th {background:#e3edfa; color:#1b4a90;}\n        .score-table.ts th {background:#e3edfa;}\n        .score-table.cp th {background:#f8ebff;}\n        .score-table.dl th {background:#eafae4;}\n        .score-table.ts .final, .score-table.cp .final, .score-table.dl .final { font-weight:700;}\n        .score-table .min {background:#f9e5e5; color:#c02929;}\n        .score-table .max {background:#e2f7e2; color:#178a1a;}\n        .score-table .final {background:#f2f2fa;}\n        .score-table .row-num {font-weight:700;}\n        .score-table .avg {background:#fafafa; font-weight:700;}\n        .summary-table {width:100%; margin-top:2.5em; border-collapse:collapse; font-size:1.13em;}\n        .summary-table th, .summary-table td {padding:0.5em 0.3em; border:1px solid #bdbdbd; text-align:center;}\n        .summary-table th {background:#e3edfa; color:#003399;}\n        .summary-table .rank1 {background:#ffe966;}\n        .summary-table .rank2 {background:#cde4ff;}\n        .summary-table .rank3 {background:#fff0e2;}\n        .summary-table tr:last-child td {border-bottom:1.7px solid #aab;}\n        .print-btn {\n            display:inline-block; padding:0.5em 1.4em; font-size:1.1em; font-weight:700;\n            background:#003399; color:#fff; border:none; border-radius:28px; margin:0 0 2em 0; cursor:pointer;\n            transition:background 0.18s;\n        }\n        .print-btn:hover { background:#0057b7; }\n        @media (max-width:900px) {\n            .result-section {padding:1em 0.2em;}\n            .score-table th, .score-table td, .summary-table th, .summary-table td {font-size:0.98em;}\n        }\n        @media (max-width:600px) {\n            .result-title {font-size:1.1em;}\n            .score-table th, .score-table td, .summary-table th, .summary-table td {font-size:0.91em;}\n        }\n        /* 인쇄 스타일 */\n        @media print {\n            body { background:#fff !important; color:#000 !important; margin:0; }\n            .result-section { box-shadow:none !important; margin:0 !important; padding:0.4cm 0.4cm 0.1cm 0.4cm !important;}\n            .print-btn, .event-link, .event-list, nav, .no-print, .result-section > :not(.print-version) { display:none !important; }\n            .print-version { display:block !important; }\n            .print-version table { width:100%; border-collapse:collapse; font-size:0.91em; margin-bottom:0.7em;}\n            .print-version th, .print-version td { border:1px solid #888; padding:0.18em 0.09em; text-align:center; }\n            .print-version th { background:#e3edfa !important; color:#222 !important; }\n            .print-version .cp th { background:#f8ebff !important; }\n            .print-version .dl th { background:#eafae4 !important; }\n            .print-version .min { background:#f9e5e5 !important; }\n            .print-version .max { background:#e2f7e2 !important; }\n            .print-version .final { background:#f2f2fa !important; font-weight:700; }\n            .print-version .rank1 { background:#ffe966 !important; }\n            .print-version .rank2 { background:#cde4ff !important; }\n            .print-version .rank3 { background:#fff0e2 !important; }\n            .print-version h2 { margin:0 0 0.25em 0; font-size:1.09em; }\n            .print-version .desc { font-size:0.84em; color:#444; margin:0.1em 0 0 0;}\n            .print-version .comp-title, .print-version .comp-date { display:block !important; }\n            @page { size: A4 landscape; margin:0.6cm; }\n        }\n        @media screen {\n            .print-version { display:none; }\n        }\n    </style>\n    <script>\n    function printResult() { window.print(); }\n    </script>\n</head>\n<body>\n<main>\n<section class=\"result-section\">\n<?php if ($selected_event && $player_results): ?>\n    <button class=\"print-btn no-print\" onclick=\"printResult()\">🖨️ 인쇄</button>\n    <?php if ($comp_title): ?>\n        <div class=\"comp-title\"><?= htmlspecialchars($comp_title) ?></div>\n    <?php endif; ?>\n    <?php if ($comp_date): ?>\n        <div class=\"comp-date\"><?= htmlspecialchars($comp_date) ?></div>\n    <?php endif; ?>\n    <div class=\"result-title\"><?= htmlspecialchars($event_name) ?> 결과지</div>\n    <!-- 기술(TS) -->\n    <table class=\"score-table ts\">\n        <tr>\n            <th colspan=\"<?= 3+count($adjudicators) ?>\">기술 (TS)</th>\n        </tr>\n        <tr>\n            <th>번호</th>\n            <?php foreach($adjudicators as $adj_name): ?>\n                <th><?= htmlspecialchars($adj_name) ?></th>\n            <?php endforeach; ?>\n            <th class=\"min\">Min</th>\n            <th class=\"max\">Max</th>\n            <th class=\"final\">평균</th>\n        </tr>\n        <?php foreach($player_results as $player):\n            $scores = $player['tech_scores'];\n            $min = (count($scores) >= 1) ? min($scores) : '';\n            $max = (count($scores) >= 1) ? max($scores) : '';\n        ?>\n        <tr>\n            <td class=\"row-num\"><?= $player['number'] ?></td>\n            <?php foreach($adjudicators as $adj_id => $adj_name): ?>\n                <td><?= isset($scores[$adj_id]) ? number_format($scores[$adj_id], 2) : '-' ?></td>\n            <?php endforeach; ?>\n            <td class=\"min\"><?= $min !== '' ? number_format($min,2) : '' ?></td>\n            <td class=\"max\"><?= $max !== '' ? number_format($max,2) : '' ?></td>\n            <td class=\"final\"><?= number_format($player['final_tech'], 2) ?></td>\n        </tr>\n        <?php endforeach; ?>\n    </table>\n    <!-- 안무(CP) -->\n    <table class=\"score-table cp\">\n        <tr>\n            <th colspan=\"<?= 3+count($adjudicators) ?>\">안무 (CP)</th>\n        </tr>\n        <tr>\n            <th>번호</th>\n            <?php foreach($adjudicators as $adj_name): ?>\n                <th><?= htmlspecialchars($adj_name) ?></th>\n            <?php endforeach; ?>\n            <th class=\"min\">Min</th>\n            <th class=\"max\">Max</th>\n            <th class=\"final\">평균</th>\n        </tr>\n        <?php foreach($player_results as $player):\n            $scores = $player['choreo_scores'];\n            $min = (count($scores) >= 1) ? min($scores) : '';\n            $max = (count($scores) >= 1) ? max($scores) : '';\n        ?>\n        <tr>\n            <td class=\"row-num\"><?= $player['number'] ?></td>\n            <?php foreach($adjudicators as $adj_id => $adj_name): ?>\n                <td><?= isset($scores[$adj_id]) ? number_format($scores[$adj_id], 2) : '-' ?></td>\n            <?php endforeach; ?>\n            <td class=\"min\"><?= $min !== '' ? number_format($min,2) : '' ?></td>\n            <td class=\"max\"><?= $max !== '' ? number_format($max,2) : '' ?></td>\n            <td class=\"final\"><?= number_format($player['final_choreo'], 2) ?></td>\n        </tr>\n        <?php endforeach; ?>\n    </table>\n    <!-- 난이도(DL) -->\n    <table class=\"score-table dl\">\n        <tr>\n            <th colspan=\"<?= 3+count($adjudicators) ?>\">난이도 (DL)</th>\n        </tr>\n        <tr>\n            <th>번호</th>\n            <?php foreach($adjudicators as $adj_name): ?>\n                <th><?= htmlspecialchars($adj_name) ?></th>\n            <?php endforeach; ?>\n            <th class=\"min\">Min</th>\n            <th class=\"max\">Max</th>\n            <th class=\"final\">평균</th>\n        </tr>\n        <?php foreach($player_results as $player):\n            $scores = $player['diff_scores'];\n            $min = (count($scores) >= 1) ? min($scores) : '';\n            $max = (count($scores) >= 1) ? max($scores) : '';\n        ?>\n        <tr>\n            <td class=\"row-num\"><?= $player['number'] ?></td>\n            <?php foreach($adjudicators as $adj_id => $adj_name): ?>\n                <td><?= isset($scores[$adj_id]) ? number_format($scores[$adj_id], 2) : '-' ?></td>\n            <?php endforeach; ?>\n            <td class=\"min\"><?= $min !== '' ? number_format($min,2) : '' ?></td>\n            <td class=\"max\"><?= $max !== '' ? number_format($max,2) : '' ?></td>\n            <td class=\"final\"><?= number_format($player['final_diff'], 2) ?></td>\n        </tr>\n        <?php endforeach; ?>\n    </table>\n    <!-- 종합 집계표 -->\n    <table class=\"summary-table\">\n        <tr>\n            <th>번호</th>\n            <th>기술</th>\n            <th>안무</th>\n            <th>난이도</th>\n            <th>총점<br><span style=\"font-size:0.94em;\">(기술+안무)×난이도</span></th>\n            <th>순위</th>\n            <th>선수명</th>\n            <th>소속</th>\n        </tr>\n        <?php foreach($player_results as $player):\n            $rank_class = 'rank' . ($player['rank'] <= 3 ? $player['rank'] : '');\n        ?>\n        <tr class=\"<?= $rank_class ?>\">\n            <td><?= $player['number'] ?></td>\n            <td><?= number_format($player['final_tech'], 2) ?></td>\n            <td><?= number_format($player['final_choreo'], 2) ?></td>\n            <td><?= number_format($player['final_diff'], 2) ?></td>\n            <td><b><?= number_format($player['total_score'], 2) ?></b></td>\n            <td><?= $player['rank'] ?>위</td>\n            <td><?= htmlspecialchars($player['name']) ?></td>\n            <td><?= htmlspecialchars($player['partner']) ?></td>\n        </tr>\n        <?php endforeach; ?>\n    </table>\n    <div style=\"margin:1.2em 0 0 0; color:#555; font-size:0.97em;\">\n        ※ 각 항목 점수는 심사위원 5명 중 최고/최저점 제외 3명 평균입니다.<br>\n        ※ 총점 = <b>(기술점수 + 안무점수) × 난이도점수</b> 입니다.<br>\n        ※ 심사위원 점수가 없으면 '-'로 표시됩니다.\n    </div>\n    <!-- 인쇄 전용: 화면과 완전히 동일한 레이아웃을 1페이지에! -->\n    <div class=\"print-version\">\n        <?php if ($comp_title): ?>\n            <div class=\"comp-title\"><?= htmlspecialchars($comp_title) ?></div>\n        <?php endif; ?>\n        <?php if ($comp_date): ?>\n            <div class=\"comp-date\"><?= htmlspecialchars($comp_date) ?></div>\n        <?php endif; ?>\n        <h2><?= htmlspecialchars($event_name) ?> 결과지</h2>\n        <!-- 기술 -->\n        <table class=\"score-table ts\">\n            <tr>\n                <th colspan=\"<?= 3+count($adjudicators) ?>\">기술 (TS)</th>\n            </tr>\n            <tr>\n                <th>번호</th>\n                <?php foreach($adjudicators as $adj_name): ?>\n                    <th><?= htmlspecialchars($adj_name) ?></th>\n                <?php endforeach; ?>\n                <th class=\"min\">Min</th>\n                <th class=\"max\">Max</th>\n                <th class=\"final\">평균</th>\n            </tr>\n            <?php foreach($player_results as $player):\n                $scores = $player['tech_scores'];\n                $min = (count($scores) >= 1) ? min($scores) : '';\n                $max = (count($scores) >= 1) ? max($scores) : '';\n            ?>\n            <tr>\n                <td><?= $player['number'] ?></td>\n                <?php foreach($adjudicators as $adj_id => $adj_name): ?>\n                    <td><?= isset($scores[$adj_id]) ? number_format($scores[$adj_id], 2) : '-' ?></td>\n                <?php endforeach; ?>\n                <td class=\"min\"><?= $min !== '' ? number_format($min,2) : '' ?></td>\n                <td class=\"max\"><?= $max !== '' ? number_format($max,2) : '' ?></td>\n                <td class=\"final\"><?= number_format($player['final_tech'], 2) ?></td>\n            </tr>\n            <?php endforeach; ?>\n        </table>\n        <!-- 안무 -->\n        <table class=\"score-table cp\">\n            <tr>\n                <th colspan=\"<?= 3+count($adjudicators) ?>\">안무 (CP)</th>\n            </tr>\n            <tr>\n                <th>번호</th>\n                <?php foreach($adjudicators as $adj_name): ?>\n                    <th><?= htmlspecialchars($adj_name) ?></th>\n                <?php endforeach; ?>\n                <th class=\"min\">Min</th>\n                <th class=\"max\">Max</th>\n                <th class=\"final\">평균</th>\n            </tr>\n            <?php foreach($player_results as $player):\n                $scores = $player['choreo_scores'];\n                $min = (count($scores) >= 1) ? min($scores) : '';\n                $max = (count($scores) >= 1) ? max($scores) : '';\n            ?>\n            <tr>\n                <td><?= $player['number'] ?></td>\n                <?php foreach($adjudicators as $adj_id => $adj_name): ?>\n                    <td><?= isset($scores[$adj_id]) ? number_format($scores[$adj_id], 2) : '-' ?></td>\n                <?php endforeach; ?>\n                <td class=\"min\"><?= $min !== '' ? number_format($min,2) : '' ?></td>\n                <td class=\"max\"><?= $max !== '' ? number_format($max,2) : '' ?></td>\n                <td class=\"final\"><?= number_format($player['final_choreo'], 2) ?></td>\n            </tr>\n            <?php endforeach; ?>\n        </table>\n        <!-- 난이도 -->\n        <table class=\"score-table dl\">\n            <tr>\n                <th colspan=\"<?= 3+count($adjudicators) ?>\">난이도 (DL)</th>\n            </tr>\n            <tr>\n                <th>번호</th>\n                <?php foreach($adjudicators as $adj_name): ?>\n                    <th><?= htmlspecialchars($adj_name) ?></th>\n                <?php endforeach; ?>\n                <th class=\"min\">Min</th>\n                <th class=\"max\">Max</th>\n                <th class=\"final\">평균</th>\n            </tr>\n            <?php foreach($player_results as $player):\n                $scores = $player['diff_scores'];\n                $min = (count($scores) >= 1) ? min($scores) : '';\n                $max = (count($scores) >= 1) ? max($scores) : '';\n            ?>\n            <tr>\n                <td><?= $player['number'] ?></td>\n                <?php foreach($adjudicators as $adj_id => $adj_name): ?>\n                    <td><?= isset($scores[$adj_id]) ? number_format($scores[$adj_id], 2) : '-' ?></td>\n                <?php endforeach; ?>\n                <td class=\"min\"><?= $min !== '' ? number_format($min,2) : '' ?></td>\n                <td class=\"max\"><?= $max !== '' ? number_format($max,2) : '' ?></td>\n                <td class=\"final\"><?= number_format($player['final_diff'], 2) ?></td>\n            </tr>\n            <?php endforeach; ?>\n        </table>\n        <!-- 집계표 -->\n        <table class=\"summary-table\">\n            <tr>\n                <th>번호</th>\n                <th>기술</th>\n                <th>안무</th>\n                <th>난이도</th>\n                <th>총점<br><span style=\"font-size:0.94em;\">(기술+안무)×난이도</span></th>\n                <th>순위</th>\n                <th>선수명</th>\n                <th>소속</th>\n            </tr>\n            <?php foreach($player_results as $player):\n                $rank_class = 'rank' . ($player['rank'] <= 3 ? $player['rank'] : '');\n            ?>\n            <tr class=\"<?= $rank_class ?>\">\n                <td><?= $player['number'] ?></td>\n                <td><?= number_format($player['final_tech'], 2) ?></td>\n                <td><?= number_format($player['final_choreo'], 2) ?></td>\n                <td><?= number_format($player['final_diff'], 2) ?></td>\n                <td><b><?= number_format($player['total_score'], 2) ?></b></td>\n                <td><?= $player['rank'] ?>위</td>\n                <td><?= htmlspecialchars($player['name']) ?></td>\n                <td><?= htmlspecialchars($player['partner']) ?></td>\n            </tr>\n            <?php endforeach; ?>\n        </table>\n        <div class=\"desc\">\n            ※ 각 항목 점수는 심사위원 5명 중 최고/최저점 제외 3명 평균입니다.<br>\n            ※ 총점 = <b>(기술점수 + 안무점수) × 난이도점수</b>\n        </div>\n    </div>\n<?php elseif ($selected_event): ?>\n    <div style=\"margin:2em 0; padding:1.2em; background:#f6eaea; color:#e33; border-radius:8px;\">\n        참가자 또는 채점 데이터가 없습니다.\n    </div>\n<?php else: ?>\n    <?php if ($comp_title): ?>\n        <div class=\"comp-title\"><?= htmlspecialchars($comp_title) ?></div>\n    <?php endif; ?>\n    <?php if ($comp_date): ?>\n        <div class=\"comp-date\"><?= htmlspecialchars($comp_date) ?></div>\n    <?php endif; ?>\n    <div class=\"result-title\">채점 결과</div>\n    <div class=\"event-list\" style=\"text-align:center; margin-bottom:3em;\">\n        <?php if ($events): ?>\n            <?php foreach ($events as $ev): ?>\n                <a class=\"event-link\" style=\"display:inline-block;margin:0.4em 0.8em 0.4em 0;padding:.5em 1.2em; border-radius:24px;\n                background:#23262b; color:#03C75A; border:1px solid #3a3d44; text-decoration:none; font-weight:700;\"\n                   href=\"?event=<?= urlencode($ev['code']) ?>\">\n                    <?= htmlspecialchars($ev['name']) ?>\n                </a>\n            <?php endforeach; ?>\n        <?php else: ?>\n            <span style=\"color:#f55;\">등록된 종목이 없습니다.</span>\n        <?php endif; ?>\n    </div>\n    <div style=\"color:#999; text-align:center;\">종목을 선택해 주세요.</div>\n<?php endif; ?>\n</section>\n</main>\n</body>\n</html>","size_bytes":23561},"comp/scoring/get_scores.php":{"content":"<?php\nheader('Content-Type: application/json; charset=utf-8');\n\n$comp_id = $_GET['comp_id'] ?? '';\n$event_no = $_GET['event_no'] ?? '';\n$dance = $_GET['dance'] ?? ''; // Optional: specific dance\n$judge_id = $_GET['judge_id'] ?? ''; // Optional: specific judge\n\n// Remove BOM and normalize\n$comp_id = preg_replace('/\\x{FEFF}/u', '', $comp_id);\n$event_no = preg_replace('/\\x{FEFF}/u', '', $event_no);\n$comp_id = preg_replace('/[^\\d-]/', '', $comp_id);\n$event_no = preg_replace('/\\D+/', '', $event_no);\n\nif (!$comp_id || !$event_no) {\n    echo json_encode(['success' => false, 'error' => 'comp_id 또는 event_no 누락']);\n    exit;\n}\n\n$data_dir = __DIR__ . \"/../data/$comp_id\";\n\n// Check for JSON scores file first (final round)\n$scores_file = \"$data_dir/scores_$event_no.json\";\nif (file_exists($scores_file)) {\n    $content = file_get_contents($scores_file);\n    $scores_data = json_decode($content, true);\n    if (json_last_error() === JSON_ERROR_NONE) {\n        echo json_encode(['success' => true, 'scores' => $scores_data, 'type' => 'final']);\n        exit;\n    }\n}\n\n// Look for .adj files (recall round)\n$adj_files = glob(\"$data_dir/{$event_no}_*.adj\");\n$recall_data = [];\n\nforeach ($adj_files as $file) {\n    $filename = basename($file);\n    \n    // Parse filename: event_no_dance_judge_id.adj\n    if (preg_match('/^(\\d+)_(.+)_(\\d+)\\.adj$/', $filename, $matches)) {\n        $file_event_no = $matches[1];\n        $file_dance = $matches[2];\n        $file_judge_id = $matches[3];\n        \n        // Filter by dance and judge if specified\n        if ($dance && $file_dance !== $dance) continue;\n        if ($judge_id && $file_judge_id !== $judge_id) continue;\n        \n        // Read file content\n        $lines = file($file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n        $players = [];\n        \n        foreach ($lines as $line) {\n            $line = trim($line);\n            // Remove quotes if present\n            $line = trim($line, '\"');\n            if ($line && is_numeric($line)) {\n                $players[] = $line;\n            }\n        }\n        \n        if (!isset($recall_data[$file_dance])) {\n            $recall_data[$file_dance] = [];\n        }\n        \n        $recall_data[$file_dance][$file_judge_id] = $players;\n    }\n}\n\nif (!empty($recall_data)) {\n    echo json_encode([\n        'success' => true, \n        'scores' => $recall_data, \n        'type' => 'recall',\n        'files_found' => count($adj_files)\n    ]);\n} else {\n    echo json_encode(['success' => false, 'error' => '점수 파일을 찾을 수 없습니다']);\n}\n?>\n","size_bytes":2561},"comp/scoring/save_multievent_scores.php":{"content":"<?php\nsession_start();\n\n// Check if judge is logged in\nif (!isset($_SESSION['scoring_logged_in']) || !$_SESSION['scoring_logged_in']) {\n    echo json_encode(['success' => false, 'error' => '로그인이 필요합니다.']);\n    exit;\n}\n\n$comp_id = $_POST['comp_id'] ?? '';\n$event_no = $_POST['event_no'] ?? '';\n$dance = $_POST['dance'] ?? '';\n$judge_id = $_SESSION['scoring_judge_id'] ?? '';\n$type = $_POST['type'] ?? 'final';\n\nif (!$comp_id || !$event_no || !$dance || !$judge_id) {\n    echo json_encode(['success' => false, 'error' => '필수 매개변수가 누락되었습니다.']);\n    exit;\n}\n\n$data_dir = __DIR__ . \"/../data/$comp_id\";\nif (!is_dir($data_dir)) {\n    mkdir($data_dir, 0777, true);\n}\n\n// File format: {event_no}_{dance}_{judge_id}.adj\n$adj_file = \"$data_dir/{$event_no}_{$dance}_{$judge_id}.adj\";\n\nif ($type === 'recall') {\n    // Recall system: save selected players\n    $recall_marks_json = $_POST['recall_marks'] ?? '';\n    $recall_marks = json_decode($recall_marks_json, true);\n    \n    if (!$recall_marks || !isset($recall_marks[$dance])) {\n        echo json_encode(['success' => false, 'error' => 'Recall 데이터가 없습니다.']);\n        exit;\n    }\n    \n    $selected_players = $recall_marks[$dance];\n    $file_content = [];\n    \n    // Save in format: \"player\" (judge_scoring.php 호환)\n    foreach ($selected_players as $player) {\n        $file_content[] = \"\\\"$player\\\"\";\n    }\n    \n    $success = file_put_contents($adj_file, implode(\"\\n\", $file_content));\n} else {\n    // Final system: save rankings\n    $adjudicator_marks_json = $_POST['adjudicator_marks'] ?? '';\n    $adjudicator_marks = json_decode($adjudicator_marks_json, true);\n    \n    if (!$adjudicator_marks || !isset($adjudicator_marks[$judge_id])) {\n        echo json_encode(['success' => false, 'error' => '채점 데이터가 없습니다.']);\n        exit;\n    }\n    \n    $rankings = $adjudicator_marks[$judge_id];\n    $file_content = [];\n    \n    // Save in format: player,rank\n    foreach ($rankings as $player => $rank) {\n        $file_content[] = \"$player,$rank\";\n    }\n    \n    $success = file_put_contents($adj_file, implode(\"\\n\", $file_content));\n}\n\nif ($success !== false) {\n    echo json_encode([\n        'success' => true,\n        'message' => '점수가 저장되었습니다.',\n        'file' => basename($adj_file),\n        'type' => $type\n    ]);\n} else {\n    echo json_encode(['success' => false, 'error' => '파일 저장에 실패했습니다.']);\n}\n?>\n","size_bytes":2474},"comp/scoring/save_scores.php":{"content":"<?php\nheader('Content-Type: application/json; charset=utf-8');\n\nrequire_once 'skating_system.php';\n\n// Check if it's FormData (POST) or JSON input\n$input = [];\nif ($_SERVER['REQUEST_METHOD'] === 'POST' && !empty($_POST)) {\n    // FormData input\n    $input = $_POST;\n} else {\n    // JSON input\n    $input = json_decode(file_get_contents('php://input'), true) ?? [];\n}\n\n$comp_id = $input['comp_id'] ?? '';\n$event_no = $input['event_no'] ?? '';\n$type = $input['type'] ?? 'final'; // 'final' or 'recall'\n$is_final = $input['is_final'] ?? '0';\n$adjudicator_marks = $input['adjudicator_marks'] ?? [];\n$recall_marks = $input['recall_marks'] ?? [];\n\n// Get judge ID from session first\nsession_start();\n$judge_id = $_SESSION['scoring_judge_id'] ?? 'unknown';\n\n// Handle final round from FormData\nif ($is_final === '1' || $is_final === 1) {\n    $type = 'final';\n    // Convert FormData to adjudicator_marks format\n    if (isset($input['adjudicator_marks'])) {\n        // Check if it's JSON string\n        if (is_string($input['adjudicator_marks'])) {\n            $adjudicator_marks = json_decode($input['adjudicator_marks'], true);\n            error_log(\"Decoded adjudicator_marks: \" . print_r($adjudicator_marks, true));\n        } else {\n            $adjudicator_marks = $input['adjudicator_marks'];\n        }\n    } else if (isset($input['final_ranking'])) {\n        // Handle final_ranking format from touch-based system\n        $adjudicator_marks = [];\n        $adjudicator_marks[$judge_id] = [];\n        foreach ($input['final_ranking'] as $rank => $player) {\n            if (!empty($player)) {\n                $adjudicator_marks[$judge_id][$player] = intval($rank);\n            }\n        }\n    } else {\n        // Handle direct place inputs\n        $adjudicator_marks = [];\n        foreach ($input as $key => $value) {\n            if (strpos($key, 'adjudicator_marks[') === 0) {\n                // Parse the key to extract adjudicator and couple info\n                preg_match('/adjudicator_marks\\[(\\d+)\\]\\[(.+)\\]/', $key, $matches);\n                if (count($matches) === 3) {\n                    $adjudicator_id = $matches[1];\n                    $couple_id = $matches[2];\n                    if (!isset($adjudicator_marks[$adjudicator_id])) {\n                        $adjudicator_marks[$adjudicator_id] = [];\n                    }\n                    $adjudicator_marks[$adjudicator_id][$couple_id] = intval($value);\n                }\n            }\n        }\n    }\n}\n\n// Remove BOM and normalize\n$comp_id = preg_replace('/\\x{FEFF}/u', '', $comp_id);\n$event_no = preg_replace('/\\x{FEFF}/u', '', $event_no);\n$comp_id = preg_replace('/[^\\d-]/', '', $comp_id);\n$event_no = preg_replace('/[^0-9\\-]/', '', $event_no); // 하이픈 허용\n\nif (!$comp_id || !$event_no) {\n    echo json_encode(['success' => false, 'error' => '필수 데이터가 누락되었습니다']);\n    exit;\n}\n\n$data_dir = __DIR__ . \"/../data/$comp_id\";\nif (!is_dir($data_dir)) {\n    @mkdir($data_dir, 0777, true);\n}\n\n// Get judge ID from session (already started above)\n$judge_id = $_SESSION['scoring_judge_id'] ?? 'unknown';\n\nif ($type === 'final') {\n    // Final round - save individual dance scores\n    if (empty($adjudicator_marks)) {\n        echo json_encode(['success' => false, 'error' => '심사위원 점수가 없습니다']);\n        exit;\n    }\n    \n    // Get dance name from input\n    $dance = $input['dance'] ?? 'unknown';\n    \n    // Validate adjudicator marks format\n    $validated_marks = [];\n    foreach ($adjudicator_marks as $adjudicator_id => $marks) {\n        if (is_array($marks)) {\n            $validated_marks[$adjudicator_id] = [];\n            foreach ($marks as $couple_id => $place) {\n                if (is_numeric($place) && $place > 0) {\n                    $validated_marks[$adjudicator_id][$couple_id] = intval($place);\n                }\n            }\n        }\n    }\n    \n    if (empty($validated_marks)) {\n        echo json_encode(['success' => false, 'error' => '유효한 심사위원 점수가 없습니다']);\n        exit;\n    }\n    \n    // Save individual dance file: event_no_dance_judge_id.adj\n    $dance_file = \"{$event_no}_{$dance}_{$judge_id}.adj\";\n    $dance_filepath = \"$data_dir/$dance_file\";\n    \n    // Save as .adj file (one player per line with rank)\n    $content = '';\n    foreach ($validated_marks[$judge_id] as $player => $rank) {\n        $content .= \"$player,$rank\\n\";\n    }\n    \n    if (file_put_contents($dance_filepath, $content) === false) {\n        echo json_encode(['success' => false, 'error' => '파일 저장 실패']);\n        exit;\n    }\n    \n    // Check if all judges have submitted for this dance\n    $all_judges_submitted = checkAllJudgesSubmitted($data_dir, $event_no, $dance);\n    \n    if ($all_judges_submitted) {\n        // All judges submitted - calculate final results for this dance\n        $final_results = calculateFinalResultsForDance($data_dir, $event_no, $dance);\n        \n        echo json_encode([\n            'success' => true, \n            'message' => \"$dance 댄스 채점이 완료되었습니다\",\n            'dance_completed' => true,\n            'results' => $final_results\n        ]);\n    } else {\n        echo json_encode([\n            'success' => true, \n            'message' => \"$dance 댄스 점수가 저장되었습니다\",\n            'dance_completed' => false\n        ]);\n    }\n    \n} else if ($type === 'recall') {\n    // Recall round - save dance by dance\n    if (empty($recall_marks)) {\n        echo json_encode(['success' => false, 'error' => 'Recall 점수가 없습니다']);\n        exit;\n    }\n    \n    $saved_files = [];\n    $errors = [];\n    \n    foreach ($recall_marks as $dance => $selected_players) {\n        if (empty($selected_players)) {\n            $errors[] = \"$dance: 선택된 선수가 없습니다\";\n            continue;\n        }\n        \n        // Create filename: event_no_dance_judge_id.adj\n        $filename = \"{$event_no}_{$dance}_{$judge_id}.adj\";\n        $filepath = \"$data_dir/$filename\";\n        \n        // Save as .adj file (one player per line, quoted)\n        $content = '';\n        foreach ($selected_players as $player) {\n            $content .= '\"' . $player . '\"' . \"\\n\";\n        }\n        \n        if (file_put_contents($filepath, $content) === false) {\n            $errors[] = \"$dance: 파일 저장 실패\";\n        } else {\n            $saved_files[] = $filename;\n        }\n    }\n    \n    if (!empty($errors)) {\n        echo json_encode([\n            'success' => false, \n            'error' => implode(', ', $errors)\n        ]);\n    } else {\n        // Check if all dances are completed for this judge\n        $all_completed = checkAllRecallDancesCompleted($data_dir, $event_no, $judge_id);\n        \n        echo json_encode([\n            'success' => true, \n            'message' => 'Recall 점수가 저장되었습니다',\n            'saved_files' => $saved_files,\n            'all_completed' => $all_completed\n        ]);\n    }\n} else {\n    echo json_encode(['success' => false, 'error' => '잘못된 요청 타입입니다']);\n}\n\n// Helper function to check if all recall dances are completed for a judge\nfunction checkAllRecallDancesCompleted($data_dir, $event_no, $judge_id) {\n    // Get event data to find all dances\n    $runorder_file = \"$data_dir/RunOrder_Tablet.txt\";\n    if (!file_exists($runorder_file)) {\n        error_log(\"checkAllRecallDancesCompleted: RunOrder file not found\");\n        return false;\n    }\n    \n    $lines = file($runorder_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    $event_dances = [];\n    \n    foreach ($lines as $line) {\n        $line = preg_replace('/\\x{FEFF}/u', '', $line);\n        $cols = array_map('trim', explode(',', $line));\n        \n        if (preg_match('/^bom/', $line)) continue;\n        \n        $file_event_no = preg_replace('/\\x{FEFF}/u', '', $cols[0]);\n        $detail_no = trim($cols[13] ?? '');\n        $match_event_no = !empty($detail_no) ? $detail_no : preg_replace('/\\D+/', '', $file_event_no);\n        \n        if ($match_event_no === $event_no) {\n            // Get dances from columns 6-10\n            for ($i = 6; $i <= 10; $i++) {\n                if (!empty($cols[$i])) {\n                    $event_dances[] = $cols[$i];\n                }\n            }\n            break;\n        }\n    }\n    \n    error_log(\"checkAllRecallDancesCompleted: Event dances for $event_no: \" . json_encode($event_dances));\n    \n    if (empty($event_dances)) {\n        error_log(\"checkAllRecallDancesCompleted: No dances found for event $event_no\");\n        return false;\n    }\n    \n    // Check if all dance files exist for this judge\n    foreach ($event_dances as $dance) {\n        $adj_file = \"$data_dir/{$event_no}_{$dance}_{$judge_id}.adj\";\n        error_log(\"checkAllRecallDancesCompleted: Checking file: $adj_file\");\n        if (!file_exists($adj_file)) {\n            error_log(\"checkAllRecallDancesCompleted: File not found: $adj_file\");\n            return false;\n        }\n    }\n    \n    error_log(\"checkAllRecallDancesCompleted: All files found for event $event_no, judge $judge_id\");\n    return true;\n}\n\n// Helper function to check if all judges have submitted for a dance\nfunction checkAllJudgesSubmitted($data_dir, $event_no, $dance) {\n    // Get list of judges from adjudicators.txt\n    $adjudicators_file = \"$data_dir/adjudicators.txt\";\n    if (!file_exists($adjudicators_file)) {\n        return false;\n    }\n    \n    $judges = [];\n    $lines = file($adjudicators_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    foreach ($lines as $line) {\n        $cols = explode(',', $line);\n        if (count($cols) >= 2) {\n            $judges[] = trim($cols[1]); // Judge ID is in second column\n        }\n    }\n    \n    // Check if all judges have submitted\n    foreach ($judges as $judge_id) {\n        $dance_file = \"{$event_no}_{$dance}_{$judge_id}.adj\";\n        $dance_filepath = \"$data_dir/$dance_file\";\n        if (!file_exists($dance_filepath)) {\n            return false;\n        }\n    }\n    \n    return true;\n}\n\n// Helper function to calculate final results for a dance\nfunction calculateFinalResultsForDance($data_dir, $event_no, $dance) {\n    // Get all judge scores for this dance\n    $adjudicator_marks = [];\n    \n    $adjudicators_file = \"$data_dir/adjudicators.txt\";\n    if (file_exists($adjudicators_file)) {\n        $lines = file($adjudicators_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n        foreach ($lines as $line) {\n            $cols = explode(',', $line);\n            if (count($cols) >= 2) {\n                $judge_id = trim($cols[1]);\n                $dance_file = \"{$event_no}_{$dance}_{$judge_id}.adj\";\n                $dance_filepath = \"$data_dir/$dance_file\";\n                \n                if (file_exists($dance_filepath)) {\n                    $adjudicator_marks[$judge_id] = [];\n                    $content = file_get_contents($dance_filepath);\n                    $lines = explode(\"\\n\", trim($content));\n                    foreach ($lines as $line) {\n                        if (strpos($line, ',') !== false) {\n                            list($player, $rank) = explode(',', $line, 2);\n                            $adjudicator_marks[$judge_id][trim($player)] = intval(trim($rank));\n                        }\n                    }\n                }\n            }\n        }\n    }\n    \n    if (empty($adjudicator_marks)) {\n        return [];\n    }\n    \n    // Calculate results using Skating System\n    require_once 'skating_system.php';\n    $results = SkatingSystem::calculateSingleDance($adjudicator_marks);\n    \n    // Save final results for this dance\n    $final_file = \"{$event_no}_{$dance}_final.json\";\n    $final_filepath = \"$data_dir/$final_file\";\n    $final_data = [\n        'event_no' => $event_no,\n        'dance' => $dance,\n        'adjudicator_marks' => $adjudicator_marks,\n        'results' => $results,\n        'calculated_at' => date('Y-m-d H:i:s'),\n        'num_adjudicators' => count($adjudicator_marks),\n        'num_couples' => count($results['results'])\n    ];\n    \n    file_put_contents($final_filepath, json_encode($final_data, JSON_UNESCAPED_UNICODE | JSON_PRETTY_PRINT));\n    \n    return $results['results'];\n}\n?>\n","size_bytes":12174},"comp/scoring/skating_system.php":{"content":"<?php\n/**\n * Skating System for DanceSport Competition Scoring\n * Based on the official rules adopted by the Official Board of Ballroom Dancing\n */\n\nclass SkatingSystem {\n    \n    /**\n     * Calculate majority threshold\n     * @param int $numAdjudicators Number of adjudicators\n     * @return int Majority threshold\n     */\n    public static function getMajority($numAdjudicators) {\n        return floor($numAdjudicators / 2) + 1;\n    }\n    \n    /**\n     * Calculate results for a single dance\n     * @param array $adjudicatorMarks Array of adjudicator marks [adjudicator_id => [couple_id => place]]\n     * @return array Results with places and detailed calculations\n     */\n    public static function calculateSingleDance($adjudicatorMarks) {\n        $couples = [];\n        $numAdjudicators = count($adjudicatorMarks);\n        $majority = self::getMajority($numAdjudicators);\n        \n        // Get all couples\n        foreach ($adjudicatorMarks as $adjudicator => $marks) {\n            foreach ($marks as $coupleId => $place) {\n                if (!isset($couples[$coupleId])) {\n                    $couples[$coupleId] = [\n                        'id' => $coupleId,\n                        'places' => [],\n                        'place_counts' => [],\n                        'total_marks' => 0\n                    ];\n                }\n            }\n        }\n        \n        // Collect all places for each couple\n        foreach ($adjudicatorMarks as $adjudicator => $marks) {\n            foreach ($marks as $coupleId => $place) {\n                $couples[$coupleId]['places'][] = $place;\n                $couples[$coupleId]['total_marks'] += $place;\n            }\n        }\n        \n        // Count places for each couple\n        foreach ($couples as $coupleId => &$couple) {\n            $placeCounts = array_count_values($couple['places']);\n            for ($i = 1; $i <= count($couples); $i++) {\n                $couple['place_counts'][$i] = isset($placeCounts[$i]) ? $placeCounts[$i] : 0;\n            }\n        }\n        \n        // Calculate places using Skating System rules\n        $results = [];\n        $remainingCouples = array_keys($couples);\n        $currentPlace = 1;\n        \n        while (!empty($remainingCouples)) {\n            $placeResult = self::determinePlace($remainingCouples, $couples, $majority, $currentPlace);\n            \n            if (count($placeResult['couples']) == 1) {\n                // Single couple gets this place\n                $results[$placeResult['couples'][0]] = $currentPlace;\n                $remainingCouples = array_diff($remainingCouples, $placeResult['couples']);\n                $currentPlace++;\n            } else {\n                // Tie - multiple couples share this place\n                foreach ($placeResult['couples'] as $coupleId) {\n                    $results[$coupleId] = $currentPlace;\n                }\n                $remainingCouples = array_diff($remainingCouples, $placeResult['couples']);\n                $currentPlace += count($placeResult['couples']);\n            }\n        }\n        \n        return [\n            'results' => $results,\n            'couples' => $couples,\n            'majority' => $majority,\n            'num_adjudicators' => $numAdjudicators\n        ];\n    }\n    \n    /**\n     * Determine which couples get a specific place\n     * @param array $remainingCouples Couples still to be placed\n     * @param array $couples Couple data\n     * @param int $majority Majority threshold\n     * @param int $targetPlace Place being determined\n     * @return array Couples that get this place\n     */\n    private static function determinePlace($remainingCouples, $couples, $majority, $targetPlace) {\n        $candidates = [];\n        \n        // Rule 1: Check for majority of 1st places\n        if ($targetPlace == 1) {\n            foreach ($remainingCouples as $coupleId) {\n                if ($couples[$coupleId]['place_counts'][1] >= $majority) {\n                    $candidates[] = $coupleId;\n                }\n            }\n            if (!empty($candidates)) {\n                return ['couples' => $candidates, 'rule' => 'majority_1st'];\n            }\n        }\n        \n        // Rule 2: Check for majority of 1st+2nd places\n        if ($targetPlace <= 2) {\n            foreach ($remainingCouples as $coupleId) {\n                $firstSecond = $couples[$coupleId]['place_counts'][1] + $couples[$coupleId]['place_counts'][2];\n                if ($firstSecond >= $majority) {\n                    $candidates[] = $coupleId;\n                }\n            }\n            if (!empty($candidates)) {\n                // If multiple couples, use total marks to break tie\n                usort($candidates, function($a, $b) use ($couples) {\n                    return $couples[$a]['total_marks'] - $couples[$b]['total_marks'];\n                });\n                \n                // Check if there's still a tie\n                $lowestTotal = $couples[$candidates[0]]['total_marks'];\n                $finalCandidates = [];\n                foreach ($candidates as $coupleId) {\n                    if ($couples[$coupleId]['total_marks'] == $lowestTotal) {\n                        $finalCandidates[] = $coupleId;\n                    }\n                }\n                \n                return ['couples' => $finalCandidates, 'rule' => 'majority_1st_2nd'];\n            }\n        }\n        \n        // Rule 3: Continue checking 1st+2nd+3rd, etc.\n        for ($place = 1; $place <= count($remainingCouples); $place++) {\n            $totalCount = 0;\n            foreach ($remainingCouples as $coupleId) {\n                for ($i = 1; $i <= $place; $i++) {\n                    $totalCount += $couples[$coupleId]['place_counts'][$i];\n                }\n            }\n            \n            if ($totalCount >= $majority) {\n                foreach ($remainingCouples as $coupleId) {\n                    $totalCount = 0;\n                    for ($i = 1; $i <= $place; $i++) {\n                        $totalCount += $couples[$coupleId]['place_counts'][$i];\n                    }\n                    if ($totalCount >= $majority) {\n                        $candidates[] = $coupleId;\n                    }\n                }\n                \n                if (!empty($candidates)) {\n                    // Use total marks to break tie\n                    usort($candidates, function($a, $b) use ($couples) {\n                        return $couples[$a]['total_marks'] - $couples[$b]['total_marks'];\n                    });\n                    \n                    $lowestTotal = $couples[$candidates[0]]['total_marks'];\n                    $finalCandidates = [];\n                    foreach ($candidates as $coupleId) {\n                        if ($couples[$coupleId]['total_marks'] == $lowestTotal) {\n                            $finalCandidates[] = $coupleId;\n                        }\n                    }\n                    \n                    return ['couples' => $finalCandidates, 'rule' => \"majority_1st_to_{$place}th\"];\n                }\n            }\n        }\n        \n        // Fallback: Use total marks\n        usort($remainingCouples, function($a, $b) use ($couples) {\n            return $couples[$a]['total_marks'] - $couples[$b]['total_marks'];\n        });\n        \n        $lowestTotal = $couples[$remainingCouples[0]]['total_marks'];\n        $finalCandidates = [];\n        foreach ($remainingCouples as $coupleId) {\n            if ($couples[$coupleId]['total_marks'] == $lowestTotal) {\n                $finalCandidates[] = $coupleId;\n            }\n        }\n        \n        return ['couples' => $finalCandidates, 'rule' => 'total_marks'];\n    }\n    \n    /**\n     * Calculate results for multiple dance event (Rule 11)\n     * @param array $danceResults Array of single dance results\n     * @param array $adjudicatorMarks All adjudicator marks for all dances\n     * @return array Final results\n     */\n    public static function calculateMultipleDance($danceResults, $adjudicatorMarks) {\n        $couples = [];\n        $numDances = count($danceResults);\n        $numAdjudicators = count($adjudicatorMarks[0] ?? []);\n        $totalMarks = $numDances * $numAdjudicators;\n        $majority = floor($totalMarks / 2) + 1;\n        \n        // Calculate final summary (sum of places)\n        foreach ($danceResults as $dance => $results) {\n            foreach ($results['results'] as $coupleId => $place) {\n                if (!isset($couples[$coupleId])) {\n                    $couples[$coupleId] = [\n                        'id' => $coupleId,\n                        'final_summary' => 0,\n                        'place_counts' => [],\n                        'total_marks' => 0\n                    ];\n                }\n                $couples[$coupleId]['final_summary'] += $place;\n            }\n        }\n        \n        // Sort by final summary\n        uasort($couples, function($a, $b) {\n            return $a['final_summary'] - $b['final_summary'];\n        });\n        \n        // Check for ties in final summary\n        $finalResults = [];\n        $currentPlace = 1;\n        $groupedCouples = [];\n        \n        $prevSummary = null;\n        $currentGroup = [];\n        \n        foreach ($couples as $coupleId => $couple) {\n            if ($prevSummary === null || $couple['final_summary'] == $prevSummary) {\n                $currentGroup[] = $coupleId;\n            } else {\n                if (count($currentGroup) > 1) {\n                    $groupedCouples[] = $currentGroup;\n                } else {\n                    $finalResults[$currentGroup[0]] = $currentPlace;\n                    $currentPlace++;\n                }\n                $currentGroup = [$coupleId];\n            }\n            $prevSummary = $couple['final_summary'];\n        }\n        \n        // Handle last group\n        if (count($currentGroup) > 1) {\n            $groupedCouples[] = $currentGroup;\n        } else {\n            $finalResults[$currentGroup[0]] = $currentPlace;\n        }\n        \n        // Apply Rule 11 for tied couples\n        foreach ($groupedCouples as $tiedCouples) {\n            $rule11Result = self::applyRule11($tiedCouples, $adjudicatorMarks, $majority);\n            foreach ($rule11Result as $coupleId => $place) {\n                $finalResults[$coupleId] = $currentPlace + $place - 1;\n            }\n            $currentPlace += count($tiedCouples);\n        }\n        \n        return [\n            'results' => $finalResults,\n            'couples' => $couples,\n            'majority' => $majority,\n            'total_marks' => $totalMarks\n        ];\n    }\n    \n    /**\n     * Apply Rule 11 for tied couples\n     * @param array $tiedCouples Couples that are tied\n     * @param array $adjudicatorMarks All adjudicator marks\n     * @param int $majority Majority threshold\n     * @return array Rule 11 results\n     */\n    private static function applyRule11($tiedCouples, $adjudicatorMarks, $majority) {\n        $couples = [];\n        \n        // Initialize couples\n        foreach ($tiedCouples as $coupleId) {\n            $couples[$coupleId] = [\n                'id' => $coupleId,\n                'place_counts' => [],\n                'total_marks' => 0\n            ];\n        }\n        \n        // Collect all marks across all dances\n        foreach ($adjudicatorMarks as $dance => $adjudicators) {\n            foreach ($adjudicators as $adjudicator => $marks) {\n                foreach ($marks as $coupleId => $place) {\n                    if (in_array($coupleId, $tiedCouples)) {\n                        $couples[$coupleId]['place_counts'][$place] = \n                            ($couples[$coupleId]['place_counts'][$place] ?? 0) + 1;\n                        $couples[$coupleId]['total_marks'] += $place;\n                    }\n                }\n            }\n        }\n        \n        // Apply same logic as single dance\n        $results = [];\n        $remainingCouples = $tiedCouples;\n        $currentPlace = 1;\n        \n        while (!empty($remainingCouples)) {\n            $placeResult = self::determinePlace($remainingCouples, $couples, $majority, $currentPlace);\n            \n            if (count($placeResult['couples']) == 1) {\n                $results[$placeResult['couples'][0]] = $currentPlace;\n                $remainingCouples = array_diff($remainingCouples, $placeResult['couples']);\n                $currentPlace++;\n            } else {\n                foreach ($placeResult['couples'] as $coupleId) {\n                    $results[$coupleId] = $currentPlace;\n                }\n                $remainingCouples = array_diff($remainingCouples, $placeResult['couples']);\n                $currentPlace += count($placeResult['couples']);\n            }\n        }\n        \n        return $results;\n    }\n}\n?>\n","size_bytes":12717},"comp/wizard/index.php":{"content":"<?php\nsession_start();\n\n// 단계 결정\n$step = isset($_GET['step']) ? intval($_GET['step']) : 1;\n$total_steps = 6;\n\n// 폼 데이터 저장 (실제 구현에서는 파일/DB로 저장 권장)\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $_SESSION['wizard'][$step] = $_POST;\n    // 마지막 단계까지 입력되면 완료 플래그 설정\n    if ($step >= $total_steps) {\n        $_SESSION['wizard_complete'] = true;\n        header(\"Location: ../index.php\");\n        exit;\n    } else {\n        header(\"Location: index.php?step=\" . ($step + 1));\n        exit;\n    }\n}\n\n// 입력했던 값 불러오기(수정시)\nfunction get_prev($key, $step) {\n    return isset($_SESSION['wizard'][$step][$key]) ? htmlspecialchars($_SESSION['wizard'][$step][$key]) : '';\n}\n\n// 단계별 안내 및 폼\nfunction render_step($step) {\n    switch ($step) {\n        case 1: // 대회 기본정보\n            ?>\n            <div class=\"wizard-title\">1. 대회 기본정보 입력</div>\n            <form method=\"post\">\n                <div><input name=\"comp_title\" placeholder=\"대회명\" value=\"<?= get_prev('comp_title', 1) ?>\" required></div>\n                <div><input type=\"date\" name=\"comp_date\" value=\"<?= get_prev('comp_date', 1) ?>\" required></div>\n                <div><input name=\"comp_place\" placeholder=\"장소\" value=\"<?= get_prev('comp_place', 1) ?>\"></div>\n                <div><input name=\"comp_host\" placeholder=\"주최/주관\" value=\"<?= get_prev('comp_host', 1) ?>\"></div>\n                <button type=\"submit\">다음 &gt;</button>\n            </form>\n            <?php\n            break;\n        case 2: // 심사위원 입력\n            ?>\n            <div class=\"wizard-title\">2. 심사위원 등록</div>\n            <form method=\"post\">\n                <div>\n                    <textarea name=\"adjudicators\" rows=\"5\" placeholder=\"ID,이름 형식으로 줄마다 입력\" required><?= get_prev('adjudicators', 2) ?></textarea>\n                    <div class=\"small\">예시: <br>J1,김심사<br>J2,이심사</div>\n                </div>\n                <button type=\"submit\">다음 &gt;</button>\n            </form>\n            <?php\n            break;\n        case 3: // 이벤트(종목) 입력\n            ?>\n            <div class=\"wizard-title\">3. 이벤트(종목) 등록</div>\n            <form method=\"post\">\n                <div>\n                    <textarea name=\"events\" rows=\"5\" placeholder=\"코드,이름 형식으로 줄마다 입력\" required><?= get_prev('events', 3) ?></textarea>\n                    <div class=\"small\">예시:<br>S1,솔로라틴<br>D1,듀오프리스타일</div>\n                </div>\n                <button type=\"submit\">다음 &gt;</button>\n            </form>\n            <?php\n            break;\n        case 4: // 선수명단 입력\n            ?>\n            <div class=\"wizard-title\">4. 선수 명단 입력</div>\n            <form method=\"post\">\n                <div>\n                    <textarea name=\"players\" rows=\"7\" placeholder=\"등번호,이름,파트너(없으면 공란) 형식\"><?= get_prev('players', 4) ?></textarea>\n                    <div class=\"small\">예시:<br>101,홍길동,김춘향<br>102,이몽룡,</div>\n                </div>\n                <button type=\"submit\">다음 &gt;</button>\n            </form>\n            <?php\n            break;\n        case 5: // 시간표\n            ?>\n            <div class=\"wizard-title\">5. 시간표(타임테이블) 입력</div>\n            <form method=\"post\">\n                <div>\n                    <textarea name=\"timetable\" rows=\"5\" placeholder=\"경기,시간,내용 등\"><?= get_prev('timetable', 5) ?></textarea>\n                    <div class=\"small\">예시:<br>솔로라틴,10:00,1라운드<br>듀오프리스타일,11:00,본선</div>\n                </div>\n                <button type=\"submit\">다음 &gt;</button>\n            </form>\n            <?php\n            break;\n        case 6: // 요약/최종확인\n            ?>\n            <div class=\"wizard-title\">6. 입력정보 최종 확인</div>\n            <form method=\"post\">\n                <div class=\"summary\">\n                    <b>대회명:</b> <?= get_prev('comp_title', 1) ?><br>\n                    <b>일자:</b> <?= get_prev('comp_date', 1) ?><br>\n                    <b>장소:</b> <?= get_prev('comp_place', 1) ?><br>\n                    <b>주최/주관:</b> <?= get_prev('comp_host', 1) ?><br>\n                    <b>심사위원:</b><br>\n                    <pre><?= htmlspecialchars(get_prev('adjudicators', 2)) ?></pre>\n                    <b>이벤트:</b><br>\n                    <pre><?= htmlspecialchars(get_prev('events', 3)) ?></pre>\n                    <b>선수명단:</b><br>\n                    <pre><?= htmlspecialchars(get_prev('players', 4)) ?></pre>\n                    <b>시간표:</b><br>\n                    <pre><?= htmlspecialchars(get_prev('timetable', 5)) ?></pre>\n                </div>\n                <button type=\"submit\" style=\"background:#03C75A;\">대회 준비 완료</button>\n            </form>\n            <?php\n            break;\n        default:\n            echo \"잘못된 단계입니다.\";\n    }\n}\n?>\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>대회 설정 마법사 | COMP</title>\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\n    <style>\n        body { background:#f0f3f8; font-family:sans-serif; margin:0;}\n        .wizard-main { max-width:430px; margin:3vh auto 0 auto; background:#fff; border-radius:14px; box-shadow:0 4px 18px #00339914; padding:2.1em 1.2em 2.2em 1.2em;}\n        .wizard-steps { margin-bottom:2em; text-align:center;}\n        .wizard-step { display:inline-block; width:26px; height:26px; line-height:26px; border-radius:50%; background:#eee; color:#888; text-align:center; margin-right:7px;}\n        .wizard-step.active { background:#03C75A; color:#fff; font-weight:700;}\n        .wizard-title { font-weight:700; margin-bottom:1.2em; text-align:center; font-size:1.08em;}\n        form > div { margin-bottom:1em;}\n        input, textarea { width:100%; padding:0.55em; border-radius:7px; border:1px solid #bbb; font-size:1em;}\n        textarea {resize:vertical;min-height:65px;}\n        button { padding:0.5em 2em; border-radius:8px; border:none; background:#03C75A; color:#fff; font-weight:700; font-size:1em;}\n        .small {font-size:0.93em; color:#888; margin:0.2em 0 0 0;}\n        .summary { font-size:0.97em; color:#333; background:#f7fafd; border-radius:8px; padding:1.1em; margin-bottom:1.3em;}\n        pre { background:#f0f3f8; padding:0.5em 0.7em; border-radius:7px; font-size:0.97em;}\n        @media (max-width:600px) {\n            .wizard-main { max-width:97vw; padding:1.1em 0.3em;}\n            .wizard-title { font-size:0.99em;}\n        }\n        footer {margin-top:2.2em;text-align:center;font-size:0.92em;color:#aaa;}\n    </style>\n</head>\n<body>\n<div class=\"wizard-main\">\n    <div class=\"wizard-steps\">\n        <?php for ($i=1; $i<=$total_steps; $i++): ?>\n            <span class=\"wizard-step<?= $step==$i?' active':'' ?>\"><?= $i ?></span>\n        <?php endfor; ?>\n    </div>\n    <?php render_step($step); ?>\n</div>\n<footer>\n    2025 danceoffice.net | Powered by Seyoung Lee\n</footer>\n</body>\n</html>","size_bytes":7250},"recall/recall/live_aggregation_api.php":{"content":"<?php\nheader('Content-Type: application/json; charset=utf-8');\nerror_reporting(E_ALL);\nini_set('display_errors', 1);\n\n// 명령행에서 실행되는 경우와 웹에서 실행되는 경우 모두 처리\nif (php_sapi_name() === 'cli') {\n    // 명령행에서 실행되는 경우\n    $comp_id = $argv[1] ?? '';\n    $event_no = $argv[2] ?? '';\n} else {\n    // 웹에서 실행되는 경우\n    $comp_id = $_GET['comp_id'] ?? '';\n    $event_no = $_GET['event_no'] ?? '';\n}\n\nerror_log(\"=== Live Aggregation API Called ===\");\nerror_log(\"GET parameters: \" . json_encode($_GET ?? []));\nerror_log(\"comp_id: '$comp_id', event_no: '$event_no'\");\n\nif (empty($comp_id) || empty($event_no)) {\n    error_log(\"Missing parameters - comp_id: '$comp_id', event_no: '$event_no'\");\n    echo json_encode(['success' => false, 'error' => 'Missing parameters']);\n    exit;\n}\n\n$data_dir = \"data/{$comp_id}\";\nerror_log(\"data_dir: $data_dir\");\n\n// 이벤트 정보 가져오기\nerror_log(\"Looking for event: $event_no\");\n$event_info = getEventInfo($data_dir, $event_no);\nif (!$event_info) {\n    error_log(\"Event not found: $event_no\");\n    echo json_encode(['success' => false, 'error' => 'Event not found']);\n    exit;\n}\nerror_log(\"Event found: \" . json_encode($event_info));\n\n// 댄스 목록 가져오기\n$dances = $event_info['dances'];\nif (empty($dances)) {\n    echo json_encode(['success' => false, 'error' => 'No dances found for this event']);\n    exit;\n}\n\n// 심사위원 목록 가져오기\n$judges = getJudgesForEvent($data_dir, $event_no);\nif (empty($judges)) {\n    echo json_encode(['success' => false, 'error' => 'No judges found for this event']);\n    exit;\n}\n\n// 선수 목록 가져오기\n$players = getPlayersForEvent($data_dir, $event_no);\nif (empty($players)) {\n    echo json_encode(['success' => false, 'error' => 'No players found for this event']);\n    exit;\n}\n\n// 전체 선수 정보 가져오기 (실제 선수명을 위해) - live_panel.php와 동일한 방식\n$all_players = [];\n$players_file = \"$data_dir/players.txt\";\nif (file_exists($players_file)) {\n    $lines = file($players_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    foreach ($lines as $line) {\n        $cols = array_map('trim', explode(',', $line));\n        if (count($cols) >= 3) {\n            $all_players[$cols[0]] = [\n                'male' => $cols[1] ?? '',\n                'female' => $cols[2] ?? '',\n            ];\n        }\n    }\n    error_log(\"Loaded player data from players.txt: \" . count($all_players) . \" players\");\n} else {\n    error_log(\"players.txt not found, using fallback names\");\n    // fallback: 등번호만 있는 경우 기본 이름 사용\n    foreach ($players as $player) {\n        $all_players[$player['number']] = [\n            'male' => \"선수\",\n            'female' => $player['number']\n        ];\n    }\n}\n\n// 집계 데이터 수집\n$aggregation_data = collectAggregationData($data_dir, $event_no, $dances, $judges, $players, $all_players);\n\necho json_encode([\n    'success' => true,\n    'event_info' => $event_info,\n    'judges' => $judges,\n    'players' => $players,\n    'all_players' => $all_players,\n    'aggregation' => $aggregation_data\n]);\n\nfunction getEventInfo($data_dir, $event_no) {\n    $runorder_file = \"$data_dir/RunOrder_Tablet.txt\";\n    if (!file_exists($runorder_file)) {\n        return null;\n    }\n    \n    $lines = file($runorder_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    \n    foreach ($lines as $line) {\n        $cols = explode(',', $line);\n        if (count($cols) >= 13) {\n            $file_event_no = preg_replace('/\\x{FEFF}/u', '', $cols[0] ?? '');\n            $file_event_no = preg_replace('/\\D+/', '', $file_event_no);\n            $detail_no = trim($cols[13] ?? '');\n            \n            $match_event_no = !empty($detail_no) ? $detail_no : $file_event_no;\n            \n            // 디버그 로그 추가\n            error_log(\"Event matching: file_event_no='$file_event_no', detail_no='$detail_no', match_event_no='$match_event_no', target='$event_no'\");\n            \n            if ($match_event_no === $event_no) {\n                $dances = [];\n                for ($i = 6; $i <= 10; $i++) {\n                    if (!empty($cols[$i]) && $cols[$i] !== '0') {\n                        $dances[] = $cols[$i];\n                    }\n                }\n                \n                return [\n                    'no' => $cols[0],\n                    'detail_no' => $detail_no,\n                    'name' => $cols[1],\n                    'round' => $cols[2],\n                    'dances' => $dances,\n                    'panel' => $cols[11] ?? ''\n                ];\n            }\n        }\n    }\n    \n    return null;\n}\n\nfunction getJudgesForEvent($data_dir, $event_no) {\n    $panel_file = \"$data_dir/panel_list.json\";\n    if (!file_exists($panel_file)) {\n        error_log(\"Panel file not found: $panel_file\");\n        return [];\n    }\n    \n    $panel_data = json_decode(file_get_contents($panel_file), true);\n    if (!$panel_data) {\n        error_log(\"Failed to parse panel file: $panel_file\");\n        return [];\n    }\n    \n    // 이벤트의 패널 코드 가져오기\n    $event_info = getEventInfo($data_dir, $event_no);\n    if (!$event_info || !isset($event_info['panel'])) {\n        error_log(\"No panel info for event: $event_no\");\n        return [];\n    }\n    \n    $panel_code = $event_info['panel'];\n    error_log(\"Looking for judges in panel: $panel_code\");\n    \n    // 해당 패널의 심사위원들 찾기\n    $judges = [];\n    foreach ($panel_data as $item) {\n        if (isset($item['panel_code']) && $item['panel_code'] === $panel_code) {\n            $judges[] = [\n                'code' => $item['adj_code'],\n                'name' => \"Judge {$item['adj_code']}\" // 실제 이름이 없으므로 코드로 대체\n            ];\n        }\n    }\n    \n    error_log(\"Found \" . count($judges) . \" judges for panel: $panel_code\");\n    return $judges;\n}\n\nfunction getPlayersForEvent($data_dir, $event_no) {\n    // live_panel.php와 동일한 방식으로 선수 정보 로드\n    $players_file = \"$data_dir/players_{$event_no}.txt\";\n    if (!file_exists($players_file)) {\n        // BOM 등 비정상 문자가 끼어 생성된 파일을 탐색하여 보정\n        foreach (glob($data_dir . \"/players_*.txt\") as $alt) {\n            $base = basename($alt);\n            $num = $base;\n            $num = preg_replace('/^players_/u', '', $num);\n            $num = preg_replace('/\\.txt$/u', '', $num);\n            $num = preg_replace('/\\x{FEFF}/u', '', $num); // BOM 제거\n            $num = preg_replace('/\\D+/', '', $num); // 숫자만 남김\n            \n            if ($num === (string)$event_no) {\n                $players_file = $alt;\n                break;\n            }\n        }\n    }\n    \n    if (!file_exists($players_file)) {\n        error_log(\"Players file not found for event: $event_no\");\n        return [];\n    }\n    \n    $lines = file($players_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    $players = [];\n    \n    foreach ($lines as $line) {\n        $line = trim($line);\n        if (empty($line)) continue;\n        \n        $parts = explode(',', $line);\n        if (count($parts) >= 2) {\n            $players[] = [\n                'number' => trim($parts[0]),\n                'name' => trim($parts[1])\n            ];\n        } else {\n            // 등번호만 있는 경우\n            $player_number = trim($line);\n            if (!empty($player_number)) {\n                $players[] = [\n                    'number' => $player_number,\n                    'name' => \"선수 {$player_number}\"\n                ];\n            }\n        }\n    }\n    \n    error_log(\"Loaded \" . count($players) . \" players for event: $event_no\");\n    return $players;\n}\n\nfunction collectAggregationData($data_dir, $event_no, $dances, $judges, $players, $all_players = []) {\n    $player_scores = [];\n    $judge_status = [];\n    \n    // 각 선수별 점수 초기화\n    foreach ($players as $player) {\n        $player_number = $player['number'];\n        $player_name = $player['name'];\n        \n        // 전체 선수 정보에서 실제 선수명 가져오기\n        if (isset($all_players[$player_number])) {\n            $male = $all_players[$player_number]['male'] ?? '';\n            $female = $all_players[$player_number]['female'] ?? '';\n            if ($male && $female) {\n                $player_name = \"{$male} / {$female}\";\n            } elseif ($male) {\n                $player_name = $male;\n            } elseif ($female) {\n                $player_name = $female;\n            }\n        }\n        \n        $player_scores[$player_number] = [\n            'name' => $player_name,\n            'total_recall' => 0,\n            'dance_scores' => []\n        ];\n    }\n    \n    // 각 심사위원별 상태 초기화\n    foreach ($judges as $judge) {\n        $judge_status[$judge['code']] = [\n            'name' => $judge['name'],\n            'completed_dances' => 0,\n            'total_dances' => count($dances),\n            'status' => 'waiting'\n        ];\n    }\n    \n    // 각 댄스별로 .adj 파일 확인\n    foreach ($dances as $dance) {\n        foreach ($judges as $judge) {\n            $adj_file = \"$data_dir/{$event_no}_{$dance}_{$judge['code']}.adj\";\n            \n            if (file_exists($adj_file)) {\n                $judge_status[$judge['code']]['completed_dances']++;\n                $judge_status[$judge['code']]['status'] = 'scoring';\n                \n                // .adj 파일에서 Recall 데이터 읽기\n                $recall_data = file($adj_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n                foreach ($recall_data as $line) {\n                    $player_number = trim($line, '\"');\n                    if (isset($player_scores[$player_number])) {\n                        $player_scores[$player_number]['total_recall']++;\n                        $player_scores[$player_number]['dance_scores'][$dance] = \n                            ($player_scores[$player_number]['dance_scores'][$dance] ?? 0) + 1;\n                    }\n                }\n            }\n        }\n    }\n    \n    // 심사위원 상태 업데이트\n    foreach ($judge_status as $code => &$status) {\n        if ($status['completed_dances'] === 0) {\n            $status['status'] = 'waiting';\n        } elseif ($status['completed_dances'] < $status['total_dances']) {\n            $status['status'] = 'scoring';\n        } else {\n            $status['status'] = 'completed';\n        }\n    }\n    \n    // 선수별 점수로 정렬\n    uasort($player_scores, function($a, $b) {\n        return $b['total_recall'] - $a['total_recall'];\n    });\n    \n    return [\n        'player_scores' => $player_scores,\n        'judge_status' => $judge_status,\n        'total_judges' => count($judges),\n        'completed_judges' => count(array_filter($judge_status, function($status) {\n            return $status['status'] === 'completed';\n        })),\n        'progress_rate' => round((count(array_filter($judge_status, function($status) {\n            return $status['status'] === 'completed';\n        })) / count($judges)) * 100, 1)\n    ];\n}\n?>\n","size_bytes":11123},"comp/scoring/shared/components.php":{"content":"<?php\n// 공통 컴포넌트들\n\nfunction renderBottomNavigation($comp_id, $lang) {\n    echo '<div class=\"bottom-nav\" style=\"position: fixed; bottom: 0; left: 0; right: 0; background: white; border-top: 1px solid #ddd; padding: 15px; display: flex; justify-content: space-around; z-index: 1000;\">';\n    echo '<button type=\"button\" id=\"dashboardBtn\" class=\"btn btn-primary\">🏠 대시보드</button>';\n    echo '<button type=\"button\" id=\"refreshBtn\" class=\"btn btn-success\">🔄 새로고침</button>';\n    echo '</div>';\n}\n?>","size_bytes":526},"comp/scoring/shared/functions.php":{"content":"<?php\n// 공통 함수들\n\nfunction h($string) {\n    return htmlspecialchars($string, ENT_QUOTES, 'UTF-8');\n}\n\nfunction renderFixedProgressBar($recall_count, $is_final, $event_no) {\n    if ($is_final) return;\n    \n    echo '<div id=\"fixedProgress\" class=\"fixed-progress\">';\n    echo '<div style=\"display: flex; align-items: center; justify-content: center;\">';\n    echo '<span style=\"margin-right: 10px;\">📊 Recall 진행: </span>';\n    echo '<span id=\"fixedRecallCount\" style=\"font-size: 24px; font-weight: bold;\">0</span>';\n    echo '<span style=\"margin-left: 5px;\">/ ' . $recall_count . '명</span>';\n    echo '</div>';\n    echo '</div>';\n}\n?>","size_bytes":648},"comp/scoring/shared/styles.php":{"content":"<?php\n// 공통 스타일들\n?>\n<style>\n/* 기본 스타일 */\nbody {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    margin: 0;\n    padding: 0;\n    background: #f5f5f5;\n}\n\n.container {\n    max-width: 1200px;\n    margin: 0 auto;\n    background: white;\n    min-height: 100vh;\n}\n\n.header {\n    background: #2c3e50;\n    color: white;\n    padding: 20px;\n    text-align: center;\n}\n\n.event-info {\n    background: #ecf0f1;\n    padding: 20px;\n    border-bottom: 1px solid #bdc3c7;\n}\n\n/* 버튼 스타일 */\n.btn {\n    padding: 10px 20px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    font-size: 16px;\n    font-weight: bold;\n    transition: all 0.3s;\n}\n\n.btn-primary {\n    background: #3498db;\n    color: white;\n}\n\n.btn-primary:hover {\n    background: #2980b9;\n}\n\n.btn-success {\n    background: #27ae60;\n    color: white;\n}\n\n.btn-success:hover {\n    background: #229954;\n}\n\n.btn-danger {\n    background: #e74c3c;\n    color: white;\n}\n\n.btn-danger:hover {\n    background: #c0392b;\n}\n</style>","size_bytes":1041},"comp/scoring/types/formation.php":{"content":"<?php\n/**\n * 포메이션 심사 시스템\n * 팀 단위, 포메이션 패턴 평가 시스템\n */\n\n// 공통 파일들 포함\nrequire_once __DIR__ . '/../shared/functions.php';\nrequire_once __DIR__ . '/../shared/styles.php';\nrequire_once __DIR__ . '/../shared/components.php';\n?>\n\n<!-- 포메이션 전용 스타일 -->\n<style>\n    .formation-container {\n        background: #fff;\n        border: 2px solid #e0e0e0;\n        border-radius: 8px;\n        box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n        padding: 20px;\n        margin-top: 10px;\n    }\n    \n    .formation-header {\n        text-align: center;\n        margin-bottom: 20px;\n        padding: 15px;\n        background: linear-gradient(135deg, #FF6B6B, #4ECDC4);\n        color: white;\n        border-radius: 8px;\n    }\n    \n    .formation-header h2 {\n        margin: 0 0 10px 0;\n        font-size: 24px;\n    }\n    \n    .formation-header p {\n        margin: 0;\n        opacity: 0.9;\n        font-size: 14px;\n    }\n    \n    .team-selection {\n        margin-bottom: 20px;\n    }\n    \n    .team-grid {\n        display: grid;\n        grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\n        gap: 15px;\n        margin-bottom: 20px;\n    }\n    \n    .team-card {\n        background: #f8f9fa;\n        border: 2px solid #e9ecef;\n        border-radius: 8px;\n        padding: 15px;\n        text-align: center;\n        cursor: pointer;\n        transition: all 0.3s ease;\n    }\n    \n    .team-card:hover {\n        border-color: #FF6B6B;\n        transform: translateY(-2px);\n        box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n    }\n    \n    .team-card.selected {\n        border-color: #FF6B6B;\n        background: linear-gradient(135deg, #ffe8e8, #f0f8ff);\n        transform: scale(1.05);\n    }\n    \n    .team-number {\n        font-size: 20px;\n        font-weight: bold;\n        color: #333;\n        margin-bottom: 5px;\n    }\n    \n    .team-members {\n        font-size: 12px;\n        color: #666;\n    }\n    \n    .pattern-selection {\n        margin-bottom: 20px;\n    }\n    \n    .pattern-grid {\n        display: grid;\n        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n        gap: 15px;\n        margin-bottom: 20px;\n    }\n    \n    .pattern-card {\n        background: #fff;\n        border: 2px solid #ddd;\n        border-radius: 8px;\n        padding: 15px;\n        text-align: center;\n        cursor: pointer;\n        transition: all 0.3s ease;\n    }\n    \n    .pattern-card:hover {\n        border-color: #4ECDC4;\n        transform: translateY(-2px);\n        box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n    }\n    \n    .pattern-card.selected {\n        border-color: #4ECDC4;\n        background: linear-gradient(135deg, #e8f8f5, #f0f8ff);\n    }\n    \n    .pattern-icon {\n        font-size: 24px;\n        margin-bottom: 10px;\n    }\n    \n    .pattern-name {\n        font-weight: bold;\n        color: #333;\n        margin-bottom: 5px;\n    }\n    \n    .pattern-description {\n        font-size: 12px;\n        color: #666;\n    }\n    \n    .evaluation-section {\n        background: #f8f9fa;\n        border-radius: 8px;\n        padding: 20px;\n        margin-bottom: 20px;\n    }\n    \n    .evaluation-criteria {\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n        gap: 15px;\n        margin-bottom: 20px;\n    }\n    \n    .criterion-item {\n        background: #fff;\n        border: 1px solid #ddd;\n        border-radius: 6px;\n        padding: 15px;\n        text-align: center;\n    }\n    \n    .criterion-title {\n        font-weight: bold;\n        color: #333;\n        margin-bottom: 10px;\n        font-size: 14px;\n    }\n    \n    .score-input {\n        width: 60px;\n        padding: 8px;\n        border: 2px solid #ddd;\n        border-radius: 4px;\n        text-align: center;\n        font-size: 16px;\n        font-weight: bold;\n    }\n    \n    .score-input:focus {\n        border-color: #4ECDC4;\n        outline: none;\n    }\n    \n    .overall-formation-score {\n        background: linear-gradient(135deg, #4ECDC4, #44A08D);\n        color: white;\n        padding: 20px;\n        border-radius: 8px;\n        text-align: center;\n        margin: 20px 0;\n    }\n    \n    .overall-formation-score h3 {\n        margin: 0 0 10px 0;\n        font-size: 20px;\n    }\n    \n    .overall-formation-score-value {\n        font-size: 36px;\n        font-weight: bold;\n        margin: 10px 0;\n    }\n    \n    .formation-comments {\n        margin-top: 20px;\n    }\n    \n    .formation-comments textarea {\n        width: 100%;\n        min-height: 100px;\n        padding: 15px;\n        border: 2px solid #ddd;\n        border-radius: 8px;\n        font-size: 14px;\n        resize: vertical;\n        font-family: inherit;\n    }\n    \n    .formation-comments textarea:focus {\n        border-color: #4ECDC4;\n        outline: none;\n    }\n    \n    .submit-formation {\n        text-align: center;\n        margin-top: 20px;\n    }\n    \n    .submit-formation-btn {\n        background: linear-gradient(135deg, #FF6B6B, #4ECDC4);\n        color: white;\n        border: none;\n        padding: 15px 30px;\n        font-size: 16px;\n        font-weight: bold;\n        border-radius: 8px;\n        cursor: pointer;\n        transition: all 0.3s ease;\n    }\n    \n    .submit-formation-btn:hover {\n        transform: translateY(-2px);\n        box-shadow: 0 4px 8px rgba(0,0,0,0.2);\n    }\n    \n    .submit-formation-btn:disabled {\n        background: #ccc;\n        cursor: not-allowed;\n        transform: none;\n        box-shadow: none;\n    }\n    \n    /* 모바일 반응형 */\n    @media (max-width: 768px) {\n        .team-grid, .pattern-grid {\n            grid-template-columns: 1fr;\n        }\n        \n        .evaluation-criteria {\n            grid-template-columns: repeat(2, 1fr);\n        }\n    }\n</style>\n\n<!-- 포메이션 심사 인터페이스 -->\n<div class=\"formation-container\">\n    <div class=\"formation-header\">\n        <h2>🎭 포메이션 심사</h2>\n        <p>팀의 포메이션 패턴과 전체적인 완성도를 평가해주세요</p>\n    </div>\n    \n    <!-- 팀 선택 -->\n    <div class=\"team-selection\">\n        <h3>팀 선택</h3>\n        <div class=\"team-grid\" id=\"teamGrid\">\n            <?php \n            // 팀 데이터 생성 (실제로는 데이터베이스에서 로드)\n            $teams = [];\n            for ($i = 1; $i <= 6; $i++) {\n                $teams[] = [\n                    'number' => $i,\n                    'members' => '팀원 ' . ($i * 4) . '명'\n                ];\n            }\n            foreach ($teams as $team): \n            ?>\n                <div class=\"team-card\" data-team=\"<?= $team['number'] ?>\" onclick=\"selectTeam(<?= $team['number'] ?>)\">\n                    <div class=\"team-number\">팀 <?= $team['number'] ?></div>\n                    <div class=\"team-members\"><?= $team['members'] ?></div>\n                </div>\n            <?php endforeach; ?>\n        </div>\n    </div>\n    \n    <!-- 포메이션 패턴 선택 -->\n    <div class=\"pattern-selection\">\n        <h3>포메이션 패턴</h3>\n        <div class=\"pattern-grid\" id=\"patternGrid\">\n            <div class=\"pattern-card\" data-pattern=\"line\" onclick=\"selectPattern('line')\">\n                <div class=\"pattern-icon\">📏</div>\n                <div class=\"pattern-name\">라인 포메이션</div>\n                <div class=\"pattern-description\">일직선 배열</div>\n            </div>\n            \n            <div class=\"pattern-card\" data-pattern=\"circle\" onclick=\"selectPattern('circle')\">\n                <div class=\"pattern-icon\">⭕</div>\n                <div class=\"pattern-name\">서클 포메이션</div>\n                <div class=\"pattern-description\">원형 배열</div>\n            </div>\n            \n            <div class=\"pattern-card\" data-pattern=\"diamond\" onclick=\"selectPattern('diamond')\">\n                <div class=\"pattern-icon\">💎</div>\n                <div class=\"pattern-name\">다이아몬드</div>\n                <div class=\"pattern-description\">마름모 배열</div>\n            </div>\n            \n            <div class=\"pattern-card\" data-pattern=\"triangle\" onclick=\"selectPattern('triangle')\">\n                <div class=\"pattern-icon\">🔺</div>\n                <div class=\"pattern-name\">트라이앵글</div>\n                <div class=\"pattern-description\">삼각형 배열</div>\n            </div>\n            \n            <div class=\"pattern-card\" data-pattern=\"square\" onclick=\"selectPattern('square')\">\n                <div class=\"pattern-icon\">⬜</div>\n                <div class=\"pattern-name\">스퀘어</div>\n                <div class=\"pattern-description\">사각형 배열</div>\n            </div>\n            \n            <div class=\"pattern-card\" data-pattern=\"free\" onclick=\"selectPattern('free')\">\n                <div class=\"pattern-icon\">🎨</div>\n                <div class=\"pattern-name\">자유 포메이션</div>\n                <div class=\"pattern-description\">창의적 배열</div>\n            </div>\n        </div>\n    </div>\n    \n    <!-- 평가 섹션 -->\n    <div class=\"evaluation-section\">\n        <h3>세부 평가</h3>\n        <div class=\"evaluation-criteria\">\n            <div class=\"criterion-item\">\n                <div class=\"criterion-title\">정확성</div>\n                <input type=\"number\" class=\"score-input\" id=\"accuracyScore\" min=\"1\" max=\"10\" value=\"5\" onchange=\"updateFormationScore()\">\n                <div style=\"font-size: 12px; color: #666;\">1-10점</div>\n            </div>\n            \n            <div class=\"criterion-item\">\n                <div class=\"criterion-title\">동기화</div>\n                <input type=\"number\" class=\"score-input\" id=\"synchronizationScore\" min=\"1\" max=\"10\" value=\"5\" onchange=\"updateFormationScore()\">\n                <div style=\"font-size: 12px; color: #666;\">1-10점</div>\n            </div>\n            \n            <div class=\"criterion-item\">\n                <div class=\"criterion-title\">창의성</div>\n                <input type=\"number\" class=\"score-input\" id=\"creativityScore\" min=\"1\" max=\"10\" value=\"5\" onchange=\"updateFormationScore()\">\n                <div style=\"font-size: 12px; color: #666;\">1-10점</div>\n            </div>\n            \n            <div class=\"criterion-item\">\n                <div class=\"criterion-title\">완성도</div>\n                <input type=\"number\" class=\"score-input\" id=\"completionScore\" min=\"1\" max=\"10\" value=\"5\" onchange=\"updateFormationScore()\">\n                <div style=\"font-size: 12px; color: #666;\">1-10점</div>\n            </div>\n            \n            <div class=\"criterion-item\">\n                <div class=\"criterion-title\">표현력</div>\n                <input type=\"number\" class=\"score-input\" id=\"expressionScore\" min=\"1\" max=\"10\" value=\"5\" onchange=\"updateFormationScore()\">\n                <div style=\"font-size: 12px; color: #666;\">1-10점</div>\n            </div>\n            \n            <div class=\"criterion-item\">\n                <div class=\"criterion-title\">음악성</div>\n                <input type=\"number\" class=\"score-input\" id=\"musicalityScore\" min=\"1\" max=\"10\" value=\"5\" onchange=\"updateFormationScore()\">\n                <div style=\"font-size: 12px; color: #666;\">1-10점</div>\n            </div>\n        </div>\n    </div>\n    \n    <!-- 전체 점수 -->\n    <div class=\"overall-formation-score\">\n        <h3>종합 점수</h3>\n        <div class=\"overall-formation-score-value\" id=\"overallFormationScore\">30</div>\n        <div style=\"font-size: 14px; opacity: 0.9;\">정확성 + 동기화 + 창의성 + 완성도 + 표현력 + 음악성</div>\n    </div>\n    \n    <!-- 코멘트 -->\n    <div class=\"formation-comments\">\n        <h3>심사 코멘트</h3>\n        <textarea id=\"formationComments\" placeholder=\"팀의 포메이션 패턴, 동기화, 창의성 등에 대한 평가를 자유롭게 작성해주세요...\"></textarea>\n    </div>\n    \n    <!-- 제출 버튼 -->\n    <div class=\"submit-formation\">\n        <button type=\"button\" class=\"submit-formation-btn\" id=\"submitFormation\" onclick=\"submitFormationScore()\">\n            포메이션 점수 제출\n        </button>\n    </div>\n</div>\n\n<!-- 포메이션 전용 JavaScript -->\n<script>\nlet selectedTeam = null;\nlet selectedPattern = null;\nlet currentScores = {\n    accuracy: 5,\n    synchronization: 5,\n    creativity: 5,\n    completion: 5,\n    expression: 5,\n    musicality: 5\n};\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    initializeFormationSystem();\n});\n\nfunction initializeFormationSystem() {\n    updateFormationScore();\n}\n\nfunction selectTeam(teamNumber) {\n    // 이전 선택 해제\n    document.querySelectorAll('.team-card').forEach(card => {\n        card.classList.remove('selected');\n    });\n    \n    // 새 선택\n    selectedTeam = teamNumber;\n    const teamCard = document.querySelector(`[data-team=\"${teamNumber}\"]`);\n    if (teamCard) {\n        teamCard.classList.add('selected');\n    }\n    \n    console.log('Selected team:', teamNumber);\n}\n\nfunction selectPattern(pattern) {\n    // 이전 선택 해제\n    document.querySelectorAll('.pattern-card').forEach(card => {\n        card.classList.remove('selected');\n    });\n    \n    // 새 선택\n    selectedPattern = pattern;\n    const patternCard = document.querySelector(`[data-pattern=\"${pattern}\"]`);\n    if (patternCard) {\n        patternCard.classList.add('selected');\n    }\n    \n    console.log('Selected pattern:', pattern);\n}\n\nfunction updateFormationScore() {\n    // 점수 업데이트\n    currentScores.accuracy = parseInt(document.getElementById('accuracyScore').value) || 0;\n    currentScores.synchronization = parseInt(document.getElementById('synchronizationScore').value) || 0;\n    currentScores.creativity = parseInt(document.getElementById('creativityScore').value) || 0;\n    currentScores.completion = parseInt(document.getElementById('completionScore').value) || 0;\n    currentScores.expression = parseInt(document.getElementById('expressionScore').value) || 0;\n    currentScores.musicality = parseInt(document.getElementById('musicalityScore').value) || 0;\n    \n    // 전체 점수 계산\n    const total = Object.values(currentScores).reduce((sum, score) => sum + score, 0);\n    \n    document.getElementById('overallFormationScore').textContent = total;\n    \n    // 점수에 따른 색상 변경\n    const overallElement = document.querySelector('.overall-formation-score');\n    if (total >= 50) {\n        overallElement.style.background = 'linear-gradient(135deg, #4ECDC4, #44A08D)';\n    } else if (total >= 35) {\n        overallElement.style.background = 'linear-gradient(135deg, #FF9800, #F57C00)';\n    } else {\n        overallElement.style.background = 'linear-gradient(135deg, #F44336, #D32F2F)';\n    }\n}\n\nfunction submitFormationScore() {\n    if (!selectedTeam) {\n        alert('팀을 선택해주세요.');\n        return;\n    }\n    \n    if (!selectedPattern) {\n        alert('포메이션 패턴을 선택해주세요.');\n        return;\n    }\n    \n    const comments = document.getElementById('formationComments').value.trim();\n    const totalScore = Object.values(currentScores).reduce((sum, score) => sum + score, 0);\n    \n    // 데이터 준비\n    const formationData = {\n        team: selectedTeam,\n        pattern: selectedPattern,\n        scores: currentScores,\n        totalScore: totalScore,\n        comments: comments,\n        timestamp: new Date().toISOString()\n    };\n    \n    // FormData 생성\n    const formData = new FormData();\n    formData.append('comp_id', '<?= h($comp_id) ?>');\n    formData.append('event_no', '<?= h($event_no) ?>');\n    formData.append('type', 'formation');\n    formData.append('judge_id', '<?= h($judge_id) ?>');\n    formData.append('formation_data', JSON.stringify(formationData));\n    \n    // 제출 버튼 비활성화\n    const submitBtn = document.getElementById('submitFormation');\n    submitBtn.disabled = true;\n    submitBtn.textContent = '제출 중...';\n    \n    // 서버로 전송\n    fetch('scoring/save_scores.php', {\n        method: 'POST',\n        body: formData\n    })\n    .then(response => response.json())\n    .then(result => {\n        if (result.success) {\n            alert(`팀 ${selectedTeam}의 포메이션 점수가 저장되었습니다.\\n패턴: ${selectedPattern}\\n종합 점수: ${totalScore}점`);\n            \n            // 다음 팀으로 이동하거나 완료 처리\n            moveToNextTeam();\n        } else {\n            alert('제출 실패: ' + (result.error || '알 수 없는 오류'));\n        }\n    })\n    .catch(error => {\n        console.error('Error:', error);\n        alert('제출 중 오류가 발생했습니다: ' + error);\n    })\n    .finally(() => {\n        submitBtn.disabled = false;\n        submitBtn.textContent = '포메이션 점수 제출';\n    });\n}\n\nfunction moveToNextTeam() {\n    // 현재 선택된 팀 카드 숨기기\n    if (selectedTeam) {\n        const teamCard = document.querySelector(`[data-team=\"${selectedTeam}\"]`);\n        if (teamCard) {\n            teamCard.style.display = 'none';\n        }\n    }\n    \n    // 선택 해제\n    selectedTeam = null;\n    selectedPattern = null;\n    document.querySelectorAll('.team-card, .pattern-card').forEach(card => {\n        card.classList.remove('selected');\n    });\n    \n    // 점수 초기화\n    resetFormationScores();\n    \n    // 코멘트 초기화\n    document.getElementById('formationComments').value = '';\n    \n    // 남은 팀이 있는지 확인\n    const remainingTeams = document.querySelectorAll('.team-card:not([style*=\"display: none\"])');\n    if (remainingTeams.length === 0) {\n        alert('모든 팀의 포메이션 심사가 완료되었습니다!');\n        // 대시보드로 리다이렉트\n        setTimeout(() => {\n            window.location.href = 'scoring_dashboard.php?comp_id=<?= h($comp_id) ?>&lang=<?= h($lang) ?>';\n        }, 2000);\n    }\n}\n\nfunction resetFormationScores() {\n    currentScores = {\n        accuracy: 5,\n        synchronization: 5,\n        creativity: 5,\n        completion: 5,\n        expression: 5,\n        musicality: 5\n    };\n    \n    // 점수 입력 초기화\n    document.getElementById('accuracyScore').value = 5;\n    document.getElementById('synchronizationScore').value = 5;\n    document.getElementById('creativityScore').value = 5;\n    document.getElementById('completionScore').value = 5;\n    document.getElementById('expressionScore').value = 5;\n    document.getElementById('musicalityScore').value = 5;\n    \n    updateFormationScore();\n}\n</script>\n\n\n\n\n\n\n","size_bytes":18435},"comp/scoring/types/formation_simple.php":{"content":"<?php\n/**\n * 간단한 포메이션 심사 테스트\n */\n\necho \"<!-- DEBUG: formation_simple.php loaded successfully -->\";\necho \"<div style='background: yellow; padding: 10px; margin: 10px; border: 2px solid red;'>\";\necho \"<h3>DEBUG: formation_simple.php is working!</h3>\";\necho \"<p>Event: \" . htmlspecialchars($event_data['name'] ?? 'No event name') . \"</p>\";\necho \"<p>Players: \" . count($players) . \"</p>\";\necho \"<p>Dances: \" . implode(', ', $event_data['dances'] ?? []) . \"</p>\";\necho \"<p>Scoring Type: \" . htmlspecialchars($scoring_type ?? 'No scoring type') . \"</p>\";\necho \"</div>\";\n\n// 간단한 포메이션 심사 시스템 UI\necho \"<div style='background: #f0f0f0; padding: 20px; margin: 10px; border: 2px solid #333;'>\";\necho \"<h2>포메이션 심사 시스템 (간단 버전)</h2>\";\necho \"<p>이벤트: \" . htmlspecialchars($event_data['name'] ?? 'Unknown') . \"</p>\";\necho \"<p>선수 수: \" . count($players) . \"명</p>\";\necho \"<p>댄스: \" . implode(', ', $event_data['dances'] ?? []) . \"</p>\";\n\n// 선수 목록 표시\necho \"<h3>선수 목록:</h3>\";\necho \"<ul>\";\nforeach ($players as $player) {\n    echo \"<li>선수 번호: \" . htmlspecialchars($player) . \"</li>\";\n}\necho \"</ul>\";\n\n// 포메이션 특별 안내\necho \"<div style='background: #e8f5e8; padding: 15px; margin: 10px; border: 2px solid #4CAF50; border-radius: 5px;'>\";\necho \"<h3>👥 포메이션 심사 안내</h3>\";\necho \"<p>• 포메이션은 팀의 일체감과 조화를 평가합니다</p>\";\necho \"<p>• 선들의 정확성과 동기화를 평가합니다</p>\";\necho \"<p>• 전체적인 시각적 효과와 예술성을 평가합니다</p>\";\necho \"<p>• 팀워크와 리더십을 종합적으로 평가합니다</p>\";\necho \"</div>\";\n\necho \"</div>\";\n?>\n\n\n\n\n\n\n","size_bytes":1744},"comp/scoring/types/freestyle.php":{"content":"<?php\n/**\n * 프리스타일 심사 시스템\n */\n\necho \"<!-- DEBUG: freestyle.php loaded successfully -->\";\necho \"<div style='background: yellow; padding: 10px; margin: 10px; border: 2px solid red;'>\";\necho \"<h3>DEBUG: freestyle.php is working!</h3>\";\necho \"<p>Event: \" . htmlspecialchars($event_data['name'] ?? 'No event name') . \"</p>\";\necho \"<p>Players: \" . count($players) . \"</p>\";\necho \"<p>Dances: \" . implode(', ', $event_data['dances'] ?? []) . \"</p>\";\necho \"<p>Scoring Type: \" . htmlspecialchars($scoring_type ?? 'No scoring type') . \"</p>\";\necho \"</div>\";\n\n// 간단한 프리스타일 심사 시스템 UI\necho \"<div style='background: #f0f0f0; padding: 20px; margin: 10px; border: 2px solid #333;'>\";\necho \"<h2>🎭 프리스타일 심사 시스템</h2>\";\necho \"<p>이벤트: \" . htmlspecialchars($event_data['name'] ?? 'Unknown') . \"</p>\";\necho \"<p>선수 수: \" . count($players) . \"명</p>\";\necho \"<p>댄스: \" . implode(', ', $event_data['dances'] ?? []) . \"</p>\";\n\n// 선수 목록 표시\necho \"<h3>선수 목록:</h3>\";\necho \"<ul>\";\nforeach ($players as $player) {\n    echo \"<li>선수 번호: \" . htmlspecialchars($player) . \"</li>\";\n}\necho \"</ul>\";\n\n// 프리스타일 특별 안내\necho \"<div style='background: #e8f4fd; padding: 15px; margin: 10px; border: 2px solid #2196F3; border-radius: 5px;'>\";\necho \"<h3>🎭 프리스타일 심사 안내</h3>\";\necho \"<p>• 프리스타일은 창의적이고 자유로운 표현을 평가합니다</p>\";\necho \"<p>• 음악에 맞춰 즉흥적으로 춤을 추는 능력을 평가합니다</p>\";\necho \"<p>• 기술적 완성도와 예술적 표현력을 종합적으로 평가합니다</p>\";\necho \"</div>\";\n\necho \"</div>\";\n?>","size_bytes":1689},"comp/scoring/types/multievent_final.php":{"content":"<?php\n/**\n * 멀티이벤트 결승전 심사 시스템\n * 터치 기반 순위 시스템\n */\n\n// 공통 파일들은 이미 메인에서 포함됨\n// require_once __DIR__ . '/../shared/functions.php';\n// require_once __DIR__ . '/../shared/styles.php';\n// require_once __DIR__ . '/../shared/components.php';\n\n// 변수들이 메인에서 전달되어야 함\n// $comp_id, $event_no, $event_data, $players, $dance_mapping, $saved_rankings, $is_final\n\n// 멀티 이벤트 개수 감지\n$event_count = count($event_data['dances'] ?? []);\n$layout_class = '';\n\n// 이벤트 개수에 따른 레이아웃 클래스 결정\nswitch($event_count) {\n    case 2:\n        $layout_class = 'multievent-2';\n        break;\n    case 3:\n        $layout_class = 'multievent-3';\n        break;\n    case 4:\n        $layout_class = 'multievent-4';\n        break;\n    case 5:\n        $layout_class = 'multievent-5';\n        break;\n    case 6:\n        $layout_class = 'multievent-6';\n        break;\n    default:\n        $layout_class = 'multievent-default';\n        break;\n}\n\necho \"<!-- DEBUG: multievent_final.php loaded successfully -->\";\necho \"<div style='background: yellow; padding: 10px; margin: 10px; border: 2px solid red;'>\";\necho \"<h3>DEBUG: multievent_final.php is working!</h3>\";\necho \"<p>Event: \" . htmlspecialchars($event_data['name'] ?? 'No event name') . \"</p>\";\necho \"<p>Players: \" . count($players) . \"</p>\";\necho \"<p>Dances: \" . implode(', ', $event_data['dances'] ?? []) . \"</p>\";\necho \"<p>Event Count: \" . $event_count . \" (Layout: \" . $layout_class . \")</p>\";\necho \"</div>\";\n?>\n\n<!-- 멀티이벤트 결승전 전용 스타일 -->\n<style>\n    /* 멀티 이벤트 레이아웃 컨테이너 */\n    .multievent-container {\n        display: grid;\n        gap: 10px;\n        margin-top: 10px;\n        background: #fff;\n        border: 2px solid #e0e0e0;\n        border-radius: 8px;\n        box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n        padding: 15px;\n        min-height: 400px;\n    }\n\n    /* 2개 이벤트: 상하 2분할 */\n    .multievent-2 .multievent-container {\n        grid-template-rows: 1fr 1fr;\n        grid-template-columns: 1fr;\n    }\n\n    /* 3개 이벤트: 상단 2개 + 하단 1개 */\n    .multievent-3 .multievent-container {\n        grid-template-rows: 1fr 1fr;\n        grid-template-columns: 1fr 1fr;\n    }\n    .multievent-3 .multievent-container .event-3 {\n        grid-column: 1 / -1;\n    }\n\n    /* 4개 이벤트: 2x2 그리드 */\n    .multievent-4 .multievent-container {\n        grid-template-rows: 1fr 1fr;\n        grid-template-columns: 1fr 1fr;\n    }\n\n    /* 5개 이벤트: 2x2 + 하단 1개 */\n    .multievent-5 .multievent-container {\n        grid-template-rows: 1fr 1fr 1fr;\n        grid-template-columns: 1fr 1fr;\n    }\n    .multievent-5 .multievent-container .event-5 {\n        grid-column: 1 / -1;\n    }\n\n    /* 6개 이벤트: 3x2 그리드 */\n    .multievent-6 .multievent-container {\n        grid-template-rows: 1fr 1fr 1fr;\n        grid-template-columns: 1fr 1fr;\n    }\n\n    /* 개별 이벤트 블록 */\n    .event-block {\n        background: #f8f9fa;\n        border: 2px solid #ddd;\n        border-radius: 8px;\n        padding: 15px;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        min-height: 150px;\n        position: relative;\n    }\n\n    .event-block h3 {\n        margin: 0 0 10px 0;\n        color: #333;\n        font-size: 18px;\n        font-weight: bold;\n        text-align: center;\n    }\n\n    .event-block .event-number {\n        position: absolute;\n        top: 10px;\n        left: 10px;\n        background: #007bff;\n        color: white;\n        padding: 5px 10px;\n        border-radius: 15px;\n        font-size: 12px;\n        font-weight: bold;\n    }\n\n    /* Final Round Styles */\n    .final-scoring-container {\n        display: flex;\n        gap: 15px;\n        margin-top: 10px;\n        background: #fff;\n        border: 2px solid #e0e0e0;\n        border-radius: 8px;\n        box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n        padding: 15px;\n    }\n    \n    .players-column, .ranking-column {\n        flex: 1;\n        background: #f8f9fa;\n        border: 1px solid #ddd;\n        border-radius: 6px;\n        padding: 10px;\n    }\n    \n    .players-column h3, .ranking-column h3 {\n        margin: 0 0 15px 0;\n        text-align: center;\n        color: #333;\n        font-size: 16px;\n        font-weight: bold;\n        padding: 8px;\n        background: #e9ecef;\n        border-radius: 4px;\n    }\n    \n    .player-item, .ranking-slot {\n        background: #fff;\n        border: 2px solid #ddd;\n        border-radius: 6px;\n        padding: 8px 12px;\n        margin: 5px 0;\n        cursor: pointer;\n        transition: all 0.3s ease;\n        text-align: center;\n        font-weight: bold;\n        font-size: 16px;\n        height: 60px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        position: relative;\n    }\n    \n    .player-item:hover {\n        border-color: #4CAF50;\n        background: #f1f8e9;\n        transform: translateY(-2px);\n        box-shadow: 0 4px 8px rgba(0,0,0,0.15);\n    }\n    \n    .player-item.selected {\n        border-color: #4CAF50;\n        background: linear-gradient(135deg, #e8f5e8, #c8e6c9);\n        transform: scale(1.05);\n        box-shadow: 0 6px 12px rgba(76, 175, 80, 0.3);\n    }\n    \n    .ranking-slot {\n        background: #f8f9fa;\n        border: 2px dashed #ccc;\n        color: #666;\n        font-style: italic;\n    }\n    \n    .ranking-slot.assigned {\n        background: #fff;\n        border: 2px solid #4CAF50;\n        color: #333;\n        font-style: normal;\n    }\n    \n    .ranking-slot:hover {\n        border-color: #4CAF50;\n        background: #f1f8e9;\n    }\n    \n    .ranking-slot.dragging {\n        opacity: 0.5;\n        transform: rotate(5deg);\n    }\n    \n    .ranking-slot.drag-over {\n        border-color: #ff9800;\n        background: #fff3e0;\n    }\n    \n    /* Rank labels */\n    .ranking-slot::before {\n        content: attr(data-rank) \"위\";\n        position: absolute;\n        left: -40px;\n        top: 50%;\n        transform: translateY(-50%);\n        font-size: 12px;\n        color: #666;\n        font-weight: bold;\n        white-space: nowrap;\n    }\n    \n    .ranking-column {\n        position: relative;\n    }\n    \n    .ranking-column::before {\n        content: \"\";\n        position: absolute;\n        left: -20px;\n        top: 0;\n        bottom: 0;\n        width: 1px;\n        background: #ddd;\n    }\n    \n    /* Dance Progress Header */\n    .dance-progress-header {\n        background: #f8f9fa;\n        border: 1px solid #ddd;\n        border-radius: 6px;\n        padding: 10px;\n        margin-bottom: 15px;\n        text-align: center;\n    }\n    \n    .dance-progress {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        gap: 10px;\n        margin-bottom: 10px;\n    }\n    \n    .dance-step {\n        padding: 8px 16px;\n        border-radius: 20px;\n        font-size: 14px;\n        font-weight: bold;\n        transition: all 0.3s ease;\n    }\n    \n    .dance-step.completed {\n        background: #4CAF50;\n        color: #fff;\n    }\n    \n    .dance-step.current {\n        background: #2196F3;\n        color: #fff;\n        transform: scale(1.1);\n    }\n    \n    .dance-step.pending {\n        background: #e0e0e0;\n        color: #666;\n    }\n    \n    .current-dance-display {\n        font-size: 18px;\n        font-weight: bold;\n        color: #333;\n        margin-bottom: 5px;\n    }\n    \n    /* Mobile responsive */\n    @media (max-width: 768px) {\n        .final-scoring-container {\n            flex-direction: row;\n            gap: 10px;\n            padding: 10px;\n        }\n        \n        .players-column, .ranking-column {\n            padding: 8px;\n        }\n        \n        .player-item, .ranking-slot {\n            height: 45px;\n            font-size: 14px;\n            padding: 6px 8px;\n            margin: 3px 0;\n        }\n        \n        .ranking-slot::before {\n            left: -35px;\n            font-size: 10px;\n        }\n        \n        .ranking-column::before {\n            left: -15px;\n        }\n        \n        .dance-step {\n            padding: 6px 12px;\n            font-size: 12px;\n        }\n        \n        .current-dance-display {\n            font-size: 16px;\n        }\n    }\n    \n    /* Tablet optimization */\n    @media (min-width: 769px) and (max-width: 1024px) {\n        .final-scoring-container {\n            padding: 12px;\n            gap: 12px;\n        }\n        \n        .players-column, .ranking-column {\n            padding: 8px;\n        }\n        \n        .player-item, .ranking-slot {\n            height: 50px;\n            font-size: 15px;\n            padding: 6px 10px;\n            margin: 4px 0;\n        }\n        \n        .ranking-slot::before {\n            left: -35px;\n            font-size: 11px;\n        }\n        \n        .ranking-column::before {\n            left: -18px;\n        }\n        \n        .dance-step {\n            padding: 7px 14px;\n            font-size: 13px;\n        }\n        \n        .current-dance-display {\n            font-size: 17px;\n        }\n    }\n</style>\n\n<!-- Dance Progress Header -->\n<div class=\"dance-progress-header\">\n    <div class=\"dance-progress\" id=\"danceProgress\">\n        <!-- Dance steps will be populated by JavaScript -->\n    </div>\n    <div class=\"current-dance-display\" id=\"currentDanceDisplay\">\n        현재 종목: <?= h($event_data['dances'][0] ?? '') ?>\n    </div>\n</div>\n\n<!-- Final Round Touch-based Ranking System -->\n<div class=\"final-scoring-container\">\n    <div class=\"players-column\">\n        <h3>선수 목록</h3>\n        <div id=\"playersList\">\n            <?php foreach ($players as $player_no): ?>\n                <div class=\"player-item\" \n                     data-player=\"<?=h($player_no)?>\" \n                     onclick=\"selectPlayer(<?=h($player_no)?>)\">\n                    <?=h($player_no)?>\n                </div>\n            <?php endforeach; ?>\n        </div>\n    </div>\n    \n    <div class=\"ranking-column\">\n        <h3>순위</h3>\n        <div id=\"rankingList\">\n            <?php for ($i = 1; $i <= count($players); $i++): ?>\n                <div class=\"ranking-slot\" \n                     data-rank=\"<?=$i?>\" \n                     onclick=\"assignRank(<?=$i?>)\"\n                     onmousedown=\"handleMouseDown(event)\"\n                     onmouseup=\"handleMouseUp(event)\"\n                     ondblclick=\"swapWithNext(this)\"\n                     draggable=\"true\"\n                     ondragstart=\"dragStart(event)\"\n                     ondragover=\"dragOver(event)\"\n                     ondrop=\"drop(event)\"\n                     ondragend=\"dragEnd(event)\">\n                </div>\n            <?php endforeach; ?>\n        </div>\n    </div>\n</div>\n\n<!-- Final Round Navigation -->\n<div style=\"text-align: center; margin-top: 20px;\">\n    <button type=\"button\" id=\"nextFinalDance\" class=\"btn btn-primary\" style=\"display: none;\">\n        다음 댄스\n    </button>\n    <button type=\"button\" id=\"submitFinalDance\" class=\"btn btn-primary\">\n        <?= h($event_data['dances'][0] ?? '') ?> 순위 제출\n    </button>\n    <button type=\"button\" id=\"clearFinalScores\" class=\"btn btn-secondary\">\n        초기화\n    </button>\n</div>\n\n<!-- 멀티이벤트 결승전 전용 JavaScript -->\n<script>\n// Final Round Variables\nlet selectedPlayer = null;\nlet playerRankings = {};\nlet currentDanceIndex = 0;\nlet totalDances = <?= count($event_data['dances']) ?>;\nlet finalDanceNames = <?= json_encode($event_data['dances']) ?>;\nlet finalCompletedDances = new Set();\nlet savedRankings = <?= json_encode($saved_rankings) ?>;\nlet currentJudgeId = '<?= h($_SESSION['scoring_judge_id'] ?? '') ?>';\nlet isDragging = false;\nlet dragStartTime = 0;\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    initializeFinalDanceSystem();\n    initializeTouchSystem();\n    setupFinalDanceNavigation();\n});\n\nfunction initializeFinalDanceSystem() {\n    // Set total dances\n    totalDances = finalDanceNames.length;\n    \n    // Populate dance progress\n    updateFinalDanceProgress();\n    \n    // Show first dance\n    showFinalDance(0);\n}\n\nfunction updateFinalDanceProgress() {\n    const progressContainer = document.getElementById('danceProgress');\n    if (!progressContainer) return;\n    \n    progressContainer.innerHTML = '';\n    \n    finalDanceNames.forEach((dance, index) => {\n        const step = document.createElement('div');\n        step.className = 'dance-step';\n        step.textContent = dance;\n        \n        if (index < currentDanceIndex) {\n            step.classList.add('completed');\n        } else if (index === currentDanceIndex) {\n            step.classList.add('current');\n        } else {\n            step.classList.add('pending');\n        }\n        \n        progressContainer.appendChild(step);\n    });\n}\n\nfunction showFinalDance(danceIndex) {\n    if (danceIndex < 0 || danceIndex >= totalDances) return;\n    \n    currentDanceIndex = danceIndex;\n    const currentDance = finalDanceNames[danceIndex];\n    \n    // Update progress\n    updateFinalDanceProgress();\n    \n    // Update current dance display\n    updateCurrentDanceDisplay();\n    \n    // Clear current scores\n    clearFinalScores();\n    \n    // Update navigation after DOM is ready\n    setTimeout(() => {\n        updateFinalDanceNav();\n    }, 50);\n    \n    // Restore saved rankings for current dance (after clearing)\n    setTimeout(() => {\n        restoreSavedRankings();\n    }, 100);\n}\n\nfunction updateCurrentDanceDisplay() {\n    const display = document.getElementById('currentDanceDisplay');\n    if (display) {\n        const currentDance = finalDanceNames[currentDanceIndex];\n        display.textContent = `현재 종목: ${currentDance}`;\n    }\n}\n\nfunction setupFinalDanceNavigation() {\n    // Submit button\n    const submitBtn = document.getElementById('submitFinalDance');\n    if (submitBtn) {\n        submitBtn.addEventListener('click', submitFinalDance);\n    }\n    \n    // Next dance button\n    const nextBtn = document.getElementById('nextFinalDance');\n    if (nextBtn) {\n        nextBtn.addEventListener('click', () => {\n            if (currentDanceIndex < totalDances - 1) {\n                showFinalDance(currentDanceIndex + 1);\n            }\n        });\n    }\n}\n\nfunction submitFinalDance() {\n    const currentDance = finalDanceNames[currentDanceIndex];\n    const rankings = Object.entries(playerRankings).map(([player, rank]) => [player, rank]);\n    \n    if (rankings.length === 0) {\n        alert('순위를 지정해주세요.');\n        return;\n    }\n    \n    // Prepare data\n    const adjudicator_marks = {};\n    adjudicator_marks[currentJudgeId] = rankings;\n    \n    const formData = new FormData();\n    formData.append('comp_id', '<?= h($comp_id) ?>');\n    formData.append('event_no', '<?= h($event_no) ?>');\n    formData.append('type', 'final');\n    formData.append('is_final', '1');\n    formData.append('dance', currentDance);\n    formData.append('adjudicator_marks', JSON.stringify(adjudicator_marks));\n    \n    console.log('Sending adjudicator_marks:', adjudicator_marks);\n    \n    // Show loading state\n    const submitBtn = document.getElementById('submitFinalDance');\n    const originalText = submitBtn.textContent;\n    submitBtn.textContent = '전송 중...';\n    submitBtn.disabled = true;\n    \n    fetch('scoring/save_scores.php', {\n        method: 'POST',\n        body: formData\n    })\n    .then(response => response.json())\n    .then(result => {\n        if (result.success) {\n            // Mark this dance as completed\n            finalCompletedDances.add(currentDance);\n            \n            // Update saved rankings\n            savedRankings[currentDance] = rankings;\n            \n            // Show success message\n            alert(`${currentDance} 댄스 순위가 저장되었습니다.`);\n            \n            // Update navigation\n            updateFinalDanceNav();\n            \n            // Check if all dances are completed\n            if (finalCompletedDances.size === totalDances) {\n                alert('모든 댄스의 순위가 완료되었습니다!');\n                // Redirect to dashboard or show completion message\n                setTimeout(() => {\n                    const compId = '<?= h($comp_id) ?>';\n                    const lang = '<?= h($lang) ?>';\n                    window.location.href = `scoring_dashboard.php?comp_id=${compId}&lang=${lang}`;\n                }, 2000);\n            } else {\n                // Move to next dance\n                if (currentDanceIndex < totalDances - 1) {\n                    showFinalDance(currentDanceIndex + 1);\n                }\n            }\n        } else {\n            alert('저장 실패: ' + (result.error || '알 수 없는 오류'));\n        }\n    })\n    .catch(error => {\n        console.error('Error:', error);\n        alert('전송 중 오류가 발생했습니다: ' + error);\n    })\n    .finally(() => {\n        submitBtn.textContent = originalText;\n        submitBtn.disabled = false;\n    });\n}\n\nfunction updateFinalDanceNav() {\n    const submitBtn = document.getElementById('submitFinalDance');\n    const nextBtn = document.getElementById('nextFinalDance');\n    \n    if (submitBtn) {\n        const currentDance = finalDanceNames[currentDanceIndex];\n        if (currentDanceIndex === totalDances - 1) {\n            submitBtn.textContent = '최종 저장';\n        } else {\n            submitBtn.textContent = `${currentDance} 순위 제출`;\n        }\n    }\n    \n    if (nextBtn) {\n        nextBtn.style.display = currentDanceIndex < totalDances - 1 ? 'inline-block' : 'none';\n    }\n}\n\nfunction initializeTouchSystem() {\n    // Clear button\n    const clearBtn = document.getElementById('clearFinalScores');\n    if (clearBtn) {\n        clearBtn.addEventListener('click', clearFinalScoresWithConfirm);\n    }\n}\n\nfunction clearFinalScores() {\n    // Clear player selections\n    selectedPlayer = null;\n    playerRankings = {};\n    \n    // Reset UI\n    document.querySelectorAll('.player-item').forEach(item => {\n        item.classList.remove('selected');\n    });\n    \n    document.querySelectorAll('.ranking-slot').forEach(slot => {\n        slot.classList.remove('assigned');\n        slot.textContent = '';\n        slot.setAttribute('data-player', '');\n    });\n}\n\nfunction clearFinalScoresWithConfirm() {\n    if (confirm('현재 댄스의 모든 순위를 초기화하시겠습니까?')) {\n        clearFinalScores();\n    }\n}\n\nfunction selectPlayer(playerNo) {\n    if (isDragging) return;\n    \n    selectedPlayer = playerNo;\n    \n    // Update UI\n    document.querySelectorAll('.player-item').forEach(item => {\n        item.classList.remove('selected');\n    });\n    \n    const playerItem = document.querySelector(`[data-player=\"${playerNo}\"]`);\n    if (playerItem) {\n        playerItem.classList.add('selected');\n    }\n}\n\nfunction assignRank(rank) {\n    if (isDragging) return;\n    \n    if (!selectedPlayer) {\n        alert('먼저 선수를 선택해주세요.');\n        return;\n    }\n    \n    const rankSlot = document.querySelector(`[data-rank=\"${rank}\"]`);\n    if (!rankSlot) return;\n    \n    // If slot is already occupied, move that player back to players list\n    if (rankSlot.classList.contains('assigned')) {\n        const currentPlayer = rankSlot.getAttribute('data-player');\n        if (currentPlayer) {\n            // Remove from rankings\n            delete playerRankings[currentPlayer];\n            \n            // Update UI\n            const playerItem = document.querySelector(`[data-player=\"${currentPlayer}\"]`);\n            if (playerItem) {\n                playerItem.classList.remove('selected');\n            }\n        }\n    }\n    \n    // Assign new player to rank\n    playerRankings[selectedPlayer] = rank;\n    \n    // Update UI\n    rankSlot.classList.add('assigned');\n    rankSlot.textContent = selectedPlayer;\n    rankSlot.setAttribute('data-player', selectedPlayer);\n    \n    // Remove player from players list\n    const playerItem = document.querySelector(`[data-player=\"${selectedPlayer}\"]`);\n    if (playerItem) {\n        playerItem.style.display = 'none';\n    }\n    \n    // Clear selection\n    selectedPlayer = null;\n}\n\nfunction cancelRank(rank) {\n    const rankSlot = document.querySelector(`[data-rank=\"${rank}\"]`);\n    if (!rankSlot || !rankSlot.classList.contains('assigned')) return;\n    \n    const playerNo = rankSlot.getAttribute('data-player');\n    if (playerNo) {\n        // Remove from rankings\n        delete playerRankings[playerNo];\n        \n        // Update UI\n        rankSlot.classList.remove('assigned');\n        rankSlot.textContent = '';\n        rankSlot.setAttribute('data-player', '');\n        \n        // Show player in players list\n        const playerItem = document.querySelector(`[data-player=\"${playerNo}\"]`);\n        if (playerItem) {\n            playerItem.style.display = 'flex';\n        }\n    }\n}\n\n// Drag and Drop Functions\nfunction handleMouseDown(event) {\n    dragStartTime = Date.now();\n    isDragging = false;\n}\n\nfunction handleMouseUp(event) {\n    const dragDuration = Date.now() - dragStartTime;\n    if (dragDuration < 200) { // Short click, not drag\n        isDragging = false;\n    }\n}\n\nfunction dragStart(event) {\n    isDragging = true;\n    event.dataTransfer.effectAllowed = 'move';\n    event.dataTransfer.setData('text/html', event.target.outerHTML);\n    event.target.classList.add('dragging');\n}\n\nfunction dragOver(event) {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n    event.target.classList.add('drag-over');\n}\n\nfunction drop(event) {\n    event.preventDefault();\n    event.target.classList.remove('drag-over');\n    \n    if (!isDragging) return;\n    \n    const draggedElement = event.target;\n    const draggedPlayer = draggedElement.getAttribute('data-player');\n    \n    if (draggedPlayer) {\n        // This is a ranking slot with a player\n        const targetRank = draggedElement.getAttribute('data-rank');\n        const sourceRank = Object.keys(playerRankings).find(player => playerRankings[player] == targetRank);\n        \n        if (sourceRank) {\n            // Swap the players\n            const tempRank = playerRankings[sourceRank];\n            playerRankings[sourceRank] = playerRankings[draggedPlayer];\n            playerRankings[draggedPlayer] = tempRank;\n            \n            // Update UI\n            updateRankingDisplay();\n        }\n    }\n}\n\nfunction dragEnd(event) {\n    event.target.classList.remove('dragging');\n    isDragging = false;\n}\n\nfunction updateRankingDisplay() {\n    // Clear all ranking slots\n    document.querySelectorAll('.ranking-slot').forEach(slot => {\n        slot.classList.remove('assigned');\n        slot.textContent = '';\n        slot.setAttribute('data-player', '');\n    });\n    \n    // Update with current rankings\n    Object.entries(playerRankings).forEach(([player, rank]) => {\n        const rankSlot = document.querySelector(`[data-rank=\"${rank}\"]`);\n        if (rankSlot) {\n            rankSlot.classList.add('assigned');\n            rankSlot.textContent = player;\n            rankSlot.setAttribute('data-player', player);\n        }\n    });\n}\n\n// Double-click swap function\nfunction swapWithNext(element) {\n    const currentRank = parseInt(element.getAttribute('data-rank'));\n    const nextRank = currentRank + 1;\n    const nextElement = document.querySelector(`[data-rank=\"${nextRank}\"]`);\n    \n    if (!nextElement) return;\n    \n    const currentPlayer = element.getAttribute('data-player');\n    const nextPlayer = nextElement.getAttribute('data-player');\n    \n    if (currentPlayer && nextPlayer) {\n        // Swap players\n        const tempRank = playerRankings[currentPlayer];\n        playerRankings[currentPlayer] = playerRankings[nextPlayer];\n        playerRankings[nextPlayer] = tempRank;\n        \n        // Update UI\n        updateRankingDisplay();\n    }\n}\n\nfunction restoreSavedRankings() {\n    const currentDance = finalDanceNames[currentDanceIndex];\n    \n    console.log('=== RESTORE SAVED RANKINGS DEBUG ===');\n    console.log('Current judge ID:', currentJudgeId);\n    console.log('Current dance:', currentDance);\n    console.log('Current dance index:', currentDanceIndex);\n    console.log('Available saved rankings:', savedRankings);\n    console.log('Final dance names:', finalDanceNames);\n    \n    if (savedRankings[currentDance]) {\n        const rankings = savedRankings[currentDance];\n        console.log('Found saved rankings for dance:', currentDance, rankings);\n        \n        // Restore rankings\n        rankings.forEach(([player, rank]) => {\n            playerRankings[player] = rank;\n            \n            // Update UI\n            const rankSlot = document.querySelector(`[data-rank=\"${rank}\"]`);\n            if (rankSlot) {\n                rankSlot.classList.add('assigned');\n                rankSlot.textContent = player;\n                rankSlot.setAttribute('data-player', player);\n            }\n            \n            // Hide player from players list\n            const playerItem = document.querySelector(`[data-player=\"${player}\"]`);\n            if (playerItem) {\n                playerItem.style.display = 'none';\n            }\n        });\n        \n        console.log('Restored rankings:', playerRankings);\n    } else {\n        console.log('No saved data for dance:', currentDance);\n    }\n}\n</script>\n\n<!-- 멀티 이벤트 동적 레이아웃 HTML -->\n<div class=\"<?= $layout_class ?>\">\n    <div class=\"multievent-container\">\n        <?php\n        $dances = $event_data['dances'] ?? [];\n        foreach($dances as $index => $dance) {\n            $event_number = $index + 1;\n            $event_class = ($event_count == 3 && $event_number == 3) ? 'event-3' : \n                          (($event_count == 5 && $event_number == 5) ? 'event-5' : '');\n            ?>\n            <div class=\"event-block <?= $event_class ?>\" data-event=\"<?= $event_number ?>\">\n                <div class=\"event-number\">#1-<?= $event_number ?></div>\n                <h3><?= htmlspecialchars($dance) ?></h3>\n                <div class=\"event-content\">\n                    <p>이벤트 <?= $event_number ?> 내용</p>\n                    <div class=\"scoring-area\">\n                        <!-- 여기에 각 이벤트별 채점 UI가 들어갑니다 -->\n                        <div class=\"players-list\">\n                            <?php foreach($players as $player): ?>\n                                <div class=\"player-item\" data-player=\"<?= htmlspecialchars($player) ?>\">\n                                    <?= htmlspecialchars($player) ?>\n                                </div>\n                            <?php endforeach; ?>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <?php\n        }\n        ?>\n    </div>\n</div>\n","size_bytes":26795},"comp/scoring/types/multievent_final_only.php":{"content":"<?php\n/**\n * 멀티이벤트 결승전 시스템 (준결승 없음)\n * 바로 결승전으로 진행되는 멀티이벤트\n */\n\n// 공통 파일들 포함\nrequire_once __DIR__ . '/../shared/functions.php';\nrequire_once __DIR__ . '/../shared/styles.php';\nrequire_once __DIR__ . '/../shared/components.php';\n?>\n\n<!-- 멀티이벤트 결승전 전용 스타일 -->\n<style>\n    .multievent-final-container {\n        background: #fff;\n        border: 2px solid #e0e0e0;\n        border-radius: 8px;\n        box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n        padding: 20px;\n        margin-top: 10px;\n    }\n    \n    .multievent-header {\n        text-align: center;\n        margin-bottom: 20px;\n        padding: 15px;\n        background: linear-gradient(135deg, #667eea, #764ba2);\n        color: white;\n        border-radius: 8px;\n    }\n    \n    .multievent-header h2 {\n        margin: 0 0 10px 0;\n        font-size: 24px;\n    }\n    \n    .multievent-header p {\n        margin: 0;\n        opacity: 0.9;\n        font-size: 14px;\n    }\n    \n    .dance-progress-header {\n        background: #f8f9fa;\n        border: 1px solid #ddd;\n        border-radius: 6px;\n        padding: 15px;\n        margin-bottom: 20px;\n        text-align: center;\n    }\n    \n    .dance-progress {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        gap: 15px;\n        margin-bottom: 15px;\n        flex-wrap: wrap;\n    }\n    \n    .dance-step {\n        padding: 10px 20px;\n        border-radius: 25px;\n        font-size: 16px;\n        font-weight: bold;\n        transition: all 0.3s ease;\n        cursor: pointer;\n    }\n    \n    .dance-step.completed {\n        background: #4CAF50;\n        color: #fff;\n    }\n    \n    .dance-step.current {\n        background: #2196F3;\n        color: #fff;\n        transform: scale(1.1);\n        box-shadow: 0 4px 8px rgba(33, 150, 243, 0.3);\n    }\n    \n    .dance-step.pending {\n        background: #e0e0e0;\n        color: #666;\n    }\n    \n    .current-dance-display {\n        font-size: 20px;\n        font-weight: bold;\n        color: #333;\n        margin-bottom: 10px;\n    }\n    \n    .scoring-area {\n        display: flex;\n        gap: 20px;\n        margin-top: 20px;\n    }\n    \n    .players-column, .ranking-column {\n        flex: 1;\n        background: #f8f9fa;\n        border: 1px solid #ddd;\n        border-radius: 8px;\n        padding: 15px;\n    }\n    \n    .players-column h3, .ranking-column h3 {\n        margin: 0 0 15px 0;\n        text-align: center;\n        color: #333;\n        font-size: 18px;\n        font-weight: bold;\n        padding: 10px;\n        background: #e9ecef;\n        border-radius: 6px;\n    }\n    \n    .player-item, .ranking-slot {\n        background: #fff;\n        border: 2px solid #ddd;\n        border-radius: 8px;\n        padding: 12px;\n        margin: 8px 0;\n        cursor: pointer;\n        transition: all 0.3s ease;\n        text-align: center;\n        font-weight: bold;\n        font-size: 18px;\n        height: 60px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        position: relative;\n    }\n    \n    .player-item:hover {\n        border-color: #667eea;\n        background: #f1f8e9;\n        transform: translateY(-2px);\n        box-shadow: 0 4px 8px rgba(0,0,0,0.15);\n    }\n    \n    .player-item.selected {\n        border-color: #667eea;\n        background: linear-gradient(135deg, #e8f5e8, #c8e6c9);\n        transform: scale(1.05);\n        box-shadow: 0 6px 12px rgba(102, 126, 234, 0.3);\n    }\n    \n    .ranking-slot {\n        background: #f8f9fa;\n        border: 2px dashed #ccc;\n        color: #666;\n        font-style: italic;\n    }\n    \n    .ranking-slot.assigned {\n        background: #fff;\n        border: 2px solid #667eea;\n        color: #333;\n        font-style: normal;\n    }\n    \n    .ranking-slot:hover {\n        border-color: #667eea;\n        background: #f1f8e9;\n    }\n    \n    .ranking-slot.dragging {\n        opacity: 0.5;\n        transform: rotate(5deg);\n    }\n    \n    .ranking-slot.drag-over {\n        border-color: #ff9800;\n        background: #fff3e0;\n    }\n    \n    /* 순위 라벨 */\n    .ranking-slot::before {\n        content: attr(data-rank) \"위\";\n        position: absolute;\n        left: -50px;\n        top: 50%;\n        transform: translateY(-50%);\n        font-size: 14px;\n        color: #666;\n        font-weight: bold;\n        white-space: nowrap;\n    }\n    \n    .ranking-column {\n        position: relative;\n    }\n    \n    .ranking-column::before {\n        content: \"\";\n        position: absolute;\n        left: -25px;\n        top: 0;\n        bottom: 0;\n        width: 1px;\n        background: #ddd;\n    }\n    \n    .navigation-buttons {\n        text-align: center;\n        margin-top: 20px;\n        display: flex;\n        justify-content: center;\n        gap: 15px;\n        flex-wrap: wrap;\n    }\n    \n    .nav-btn {\n        padding: 12px 24px;\n        border: none;\n        border-radius: 8px;\n        cursor: pointer;\n        font-size: 16px;\n        font-weight: bold;\n        transition: all 0.3s ease;\n    }\n    \n    .nav-btn-primary {\n        background: linear-gradient(135deg, #667eea, #764ba2);\n        color: white;\n    }\n    \n    .nav-btn-primary:hover {\n        transform: translateY(-2px);\n        box-shadow: 0 4px 8px rgba(0,0,0,0.2);\n    }\n    \n    .nav-btn-secondary {\n        background: #6c757d;\n        color: white;\n    }\n    \n    .nav-btn-secondary:hover {\n        background: #5a6268;\n    }\n    \n    .nav-btn:disabled {\n        background: #ccc;\n        cursor: not-allowed;\n        transform: none;\n        box-shadow: none;\n    }\n    \n    /* 모바일 반응형 */\n    @media (max-width: 768px) {\n        .scoring-area {\n            flex-direction: column;\n            gap: 15px;\n        }\n        \n        .dance-progress {\n            gap: 10px;\n        }\n        \n        .dance-step {\n            padding: 8px 16px;\n            font-size: 14px;\n        }\n        \n        .player-item, .ranking-slot {\n            height: 50px;\n            font-size: 16px;\n            padding: 10px;\n        }\n        \n        .ranking-slot::before {\n            left: -40px;\n            font-size: 12px;\n        }\n        \n        .ranking-column::before {\n            left: -20px;\n        }\n        \n        .navigation-buttons {\n            flex-direction: column;\n            align-items: center;\n        }\n        \n        .nav-btn {\n            width: 100%;\n            max-width: 200px;\n        }\n    }\n</style>\n\n<!-- 멀티이벤트 결승전 인터페이스 -->\n<div class=\"multievent-final-container\">\n    <div class=\"multievent-header\">\n        <h2>🏆 멀티이벤트 결승전</h2>\n        <p>여러 댄스의 순위를 종합하여 최종 결과를 결정합니다</p>\n    </div>\n    \n    <!-- 댄스 진행 상황 -->\n    <div class=\"dance-progress-header\">\n        <div class=\"dance-progress\" id=\"danceProgress\">\n            <!-- 댄스 단계들이 JavaScript로 생성됩니다 -->\n        </div>\n        <div class=\"current-dance-display\" id=\"currentDanceDisplay\">\n            현재 종목: <?= h($event_data['dances'][0] ?? '') ?>\n        </div>\n    </div>\n    \n    <!-- 채점 영역 -->\n    <div class=\"scoring-area\">\n        <div class=\"players-column\">\n            <h3>선수 목록</h3>\n            <div id=\"playersList\">\n                <?php foreach ($players as $player_no): ?>\n                    <div class=\"player-item\" \n                         data-player=\"<?=h($player_no)?>\" \n                         onclick=\"selectPlayer(<?=h($player_no)?>)\">\n                        <?=h($player_no)?>\n                    </div>\n                <?php endforeach; ?>\n            </div>\n        </div>\n        \n        <div class=\"ranking-column\">\n            <h3>순위</h3>\n            <div id=\"rankingList\">\n                <?php for ($i = 1; $i <= count($players); $i++): ?>\n                    <div class=\"ranking-slot\" \n                         data-rank=\"<?=$i?>\" \n                         onclick=\"assignRank(<?=$i?>)\"\n                         onmousedown=\"handleMouseDown(event)\"\n                         onmouseup=\"handleMouseUp(event)\"\n                         ondblclick=\"swapWithNext(this)\"\n                         draggable=\"true\"\n                         ondragstart=\"dragStart(event)\"\n                         ondragover=\"dragOver(event)\"\n                         ondrop=\"drop(event)\"\n                         ondragend=\"dragEnd(event)\">\n                    </div>\n                <?php endforeach; ?>\n            </div>\n        </div>\n    </div>\n    \n    <!-- 네비게이션 버튼 -->\n    <div class=\"navigation-buttons\">\n        <button type=\"button\" id=\"nextDance\" class=\"nav-btn nav-btn-primary\" style=\"display: none;\">\n            다음 댄스\n        </button>\n        <button type=\"button\" id=\"submitDance\" class=\"nav-btn nav-btn-primary\">\n            <?= h($event_data['dances'][0] ?? '') ?> 순위 제출\n        </button>\n        <button type=\"button\" id=\"clearScores\" class=\"nav-btn nav-btn-secondary\">\n            초기화\n        </button>\n    </div>\n</div>\n\n<!-- 멀티이벤트 결승전 전용 JavaScript -->\n<script>\n// 멀티이벤트 결승전 변수들\nlet selectedPlayer = null;\nlet playerRankings = {};\nlet currentDanceIndex = 0;\nlet totalDances = <?= count($event_data['dances']) ?>;\nlet danceNames = <?= json_encode($event_data['dances']) ?>;\nlet completedDances = new Set();\nlet savedRankings = <?= json_encode($saved_rankings ?? []) ?>;\nlet currentJudgeId = '<?= h($judge_id) ?>';\nlet isDragging = false;\nlet dragStartTime = 0;\nlet draggedSlot = null;\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    initializeMultieventFinalSystem();\n    setupDragAndDrop();\n});\n\nfunction initializeMultieventFinalSystem() {\n    // 댄스 진행 상황 업데이트\n    updateDanceProgress();\n    \n    // 첫 번째 댄스 표시\n    showDance(0);\n    \n    // 이벤트 리스너 설정\n    setupEventListeners();\n}\n\nfunction updateDanceProgress() {\n    const progressContainer = document.getElementById('danceProgress');\n    if (!progressContainer) return;\n    \n    progressContainer.innerHTML = '';\n    \n    danceNames.forEach((dance, index) => {\n        const step = document.createElement('div');\n        step.className = 'dance-step';\n        step.textContent = dance;\n        \n        if (index < currentDanceIndex) {\n            step.classList.add('completed');\n        } else if (index === currentDanceIndex) {\n            step.classList.add('current');\n        } else {\n            step.classList.add('pending');\n        }\n        \n        // 클릭 이벤트 추가\n        step.addEventListener('click', () => {\n            if (index <= currentDanceIndex || completedDances.has(dance)) {\n                showDance(index);\n            }\n        });\n        \n        progressContainer.appendChild(step);\n    });\n}\n\nfunction showDance(danceIndex) {\n    if (danceIndex < 0 || danceIndex >= totalDances) return;\n    \n    currentDanceIndex = danceIndex;\n    const currentDance = danceNames[danceIndex];\n    \n    // 진행 상황 업데이트\n    updateDanceProgress();\n    \n    // 현재 댄스 표시 업데이트\n    updateCurrentDanceDisplay();\n    \n    // 점수 초기화\n    clearScores();\n    \n    // 저장된 순위 복원\n    setTimeout(() => {\n        restoreSavedRankings();\n    }, 100);\n    \n    // 네비게이션 버튼 업데이트\n    updateNavigationButtons();\n}\n\nfunction updateCurrentDanceDisplay() {\n    const display = document.getElementById('currentDanceDisplay');\n    if (display) {\n        const currentDance = danceNames[currentDanceIndex];\n        display.textContent = `현재 종목: ${currentDance}`;\n    }\n}\n\nfunction setupEventListeners() {\n    // 다음 댄스 버튼\n    document.getElementById('nextDance').addEventListener('click', () => {\n        if (currentDanceIndex < totalDances - 1) {\n            showDance(currentDanceIndex + 1);\n        }\n    });\n    \n    // 댄스 제출 버튼\n    document.getElementById('submitDance').addEventListener('click', submitDance);\n    \n    // 초기화 버튼\n    document.getElementById('clearScores').addEventListener('click', clearScoresWithConfirm);\n}\n\nfunction setupDragAndDrop() {\n    document.querySelectorAll('.ranking-slot').forEach(slot => {\n        slot.addEventListener('dragstart', dragStart);\n        slot.addEventListener('dragover', dragOver);\n        slot.addEventListener('drop', drop);\n        slot.addEventListener('dragend', dragEnd);\n        slot.addEventListener('mousedown', handleMouseDown);\n        slot.addEventListener('mouseup', handleMouseUp);\n    });\n}\n\nfunction selectPlayer(playerNo) {\n    if (isDragging) return;\n    \n    selectedPlayer = playerNo;\n    \n    // UI 업데이트\n    document.querySelectorAll('.player-item').forEach(item => {\n        item.classList.remove('selected');\n    });\n    \n    const playerItem = document.querySelector(`[data-player=\"${playerNo}\"]`);\n    if (playerItem) {\n        playerItem.classList.add('selected');\n    }\n}\n\nfunction assignRank(rank) {\n    if (isDragging) return;\n    \n    if (!selectedPlayer) {\n        alert('먼저 선수를 선택해주세요.');\n        return;\n    }\n    \n    const rankSlot = document.querySelector(`[data-rank=\"${rank}\"]`);\n    if (!rankSlot) return;\n    \n    // 기존 할당이 있다면 해제\n    if (rankSlot.classList.contains('assigned')) {\n        const currentPlayer = rankSlot.getAttribute('data-player');\n        if (currentPlayer) {\n            delete playerRankings[currentPlayer];\n            const playerItem = document.querySelector(`[data-player=\"${currentPlayer}\"]`);\n            if (playerItem) {\n                playerItem.classList.remove('selected');\n            }\n        }\n    }\n    \n    // 새 선수 할당\n    playerRankings[selectedPlayer] = rank;\n    \n    // UI 업데이트\n    rankSlot.classList.add('assigned');\n    rankSlot.textContent = selectedPlayer;\n    rankSlot.setAttribute('data-player', selectedPlayer);\n    \n    // 선수 목록에서 숨기기\n    const playerItem = document.querySelector(`[data-player=\"${selectedPlayer}\"]`);\n    if (playerItem) {\n        playerItem.style.display = 'none';\n    }\n    \n    // 선택 해제\n    selectedPlayer = null;\n}\n\nfunction clearScores() {\n    selectedPlayer = null;\n    playerRankings = {};\n    \n    // UI 초기화\n    document.querySelectorAll('.player-item').forEach(item => {\n        item.classList.remove('selected');\n        item.style.display = 'flex';\n    });\n    \n    document.querySelectorAll('.ranking-slot').forEach(slot => {\n        slot.classList.remove('assigned');\n        slot.textContent = '';\n        slot.setAttribute('data-player', '');\n    });\n}\n\nfunction clearScoresWithConfirm() {\n    if (confirm('현재 댄스의 모든 순위를 초기화하시겠습니까?')) {\n        clearScores();\n    }\n}\n\nfunction restoreSavedRankings() {\n    const currentDance = danceNames[currentDanceIndex];\n    \n    if (savedRankings[currentDance]) {\n        const rankings = savedRankings[currentDance];\n        \n        rankings.forEach(([player, rank]) => {\n            playerRankings[player] = rank;\n            \n            const rankSlot = document.querySelector(`[data-rank=\"${rank}\"]`);\n            if (rankSlot) {\n                rankSlot.classList.add('assigned');\n                rankSlot.textContent = player;\n                rankSlot.setAttribute('data-player', player);\n            }\n            \n            const playerItem = document.querySelector(`[data-player=\"${player}\"]`);\n            if (playerItem) {\n                playerItem.style.display = 'none';\n            }\n        });\n    }\n}\n\nfunction submitDance() {\n    const currentDance = danceNames[currentDanceIndex];\n    const rankings = Object.entries(playerRankings).map(([player, rank]) => [player, rank]);\n    \n    if (rankings.length === 0) {\n        alert('순위를 지정해주세요.');\n        return;\n    }\n    \n    // 데이터 준비\n    const adjudicator_marks = {};\n    adjudicator_marks[currentJudgeId] = rankings;\n    \n    const formData = new FormData();\n    formData.append('comp_id', '<?= h($comp_id) ?>');\n    formData.append('event_no', '<?= h($event_no) ?>');\n    formData.append('type', 'final');\n    formData.append('is_final', '1');\n    formData.append('dance', currentDance);\n    formData.append('adjudicator_marks', JSON.stringify(adjudicator_marks));\n    \n    // 제출 버튼 비활성화\n    const submitBtn = document.getElementById('submitDance');\n    const originalText = submitBtn.textContent;\n    submitBtn.textContent = '전송 중...';\n    submitBtn.disabled = true;\n    \n    // 서버로 전송\n    fetch('scoring/save_scores.php', {\n        method: 'POST',\n        body: formData\n    })\n    .then(response => response.json())\n    .then(result => {\n        if (result.success) {\n            // 완료된 댄스로 표시\n            completedDances.add(currentDance);\n            \n            // 저장된 순위 업데이트\n            savedRankings[currentDance] = rankings;\n            \n            alert(`${currentDance} 댄스 순위가 저장되었습니다.`);\n            \n            // 네비게이션 업데이트\n            updateNavigationButtons();\n            \n            // 다음 댄스로 이동\n            if (currentDanceIndex < totalDances - 1) {\n                showDance(currentDanceIndex + 1);\n            } else {\n                alert('모든 댄스의 순위가 완료되었습니다!');\n            }\n        } else {\n            alert('저장 실패: ' + (result.error || '알 수 없는 오류'));\n        }\n    })\n    .catch(error => {\n        console.error('Error:', error);\n        alert('전송 중 오류가 발생했습니다: ' + error);\n    })\n    .finally(() => {\n        submitBtn.textContent = originalText;\n        submitBtn.disabled = false;\n    });\n}\n\nfunction updateNavigationButtons() {\n    const nextBtn = document.getElementById('nextDance');\n    const submitBtn = document.getElementById('submitDance');\n    \n    // 다음 댄스 버튼 표시/숨김\n    if (currentDanceIndex < totalDances - 1) {\n        nextBtn.style.display = 'inline-block';\n    } else {\n        nextBtn.style.display = 'none';\n    }\n    \n    // 제출 버튼 텍스트 업데이트\n    const currentDance = danceNames[currentDanceIndex];\n    if (currentDanceIndex === totalDances - 1) {\n        submitBtn.textContent = '최종 저장';\n    } else {\n        submitBtn.textContent = `${currentDance} 순위 제출`;\n    }\n}\n\n// 드래그 앤 드롭 함수들\nfunction handleMouseDown(event) {\n    dragStartTime = Date.now();\n    isDragging = false;\n}\n\nfunction handleMouseUp(event) {\n    const dragDuration = Date.now() - dragStartTime;\n    if (dragDuration < 200) {\n        isDragging = false;\n    }\n}\n\nfunction dragStart(event) {\n    isDragging = true;\n    draggedSlot = event.target;\n    draggedSlot.classList.add('dragging');\n    event.dataTransfer.effectAllowed = 'move';\n    event.dataTransfer.setData('text/html', draggedSlot.outerHTML);\n}\n\nfunction dragOver(event) {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n    \n    if (event.target.classList.contains('ranking-slot')) {\n        event.target.classList.add('drag-over');\n    }\n}\n\nfunction drop(event) {\n    event.preventDefault();\n    \n    document.querySelectorAll('.ranking-slot').forEach(slot => {\n        slot.classList.remove('drag-over');\n    });\n    \n    if (event.target.classList.contains('ranking-slot') && draggedSlot !== event.target) {\n        swapRankings(draggedSlot, event.target);\n    }\n}\n\nfunction dragEnd(event) {\n    document.querySelectorAll('.ranking-slot').forEach(slot => {\n        slot.classList.remove('dragging', 'drag-over');\n    });\n    draggedSlot = null;\n    isDragging = false;\n}\n\nfunction swapRankings(slot1, slot2) {\n    const player1 = slot1.getAttribute('data-player');\n    const player2 = slot2.getAttribute('data-player');\n    const rank1 = slot1.dataset.rank;\n    const rank2 = slot2.dataset.rank;\n    \n    // UI 업데이트\n    slot1.textContent = player2 || '';\n    slot2.textContent = player1 || '';\n    slot1.setAttribute('data-player', player2 || '');\n    slot2.setAttribute('data-player', player1 || '');\n    \n    // 클래스 업데이트\n    slot1.classList.toggle('assigned', !!player2);\n    slot2.classList.toggle('assigned', !!player1);\n    \n    // 데이터 업데이트\n    if (player1) {\n        playerRankings[player1] = rank2;\n    } else {\n        delete playerRankings[player1];\n    }\n    \n    if (player2) {\n        playerRankings[player2] = rank1;\n    } else {\n        delete playerRankings[player2];\n    }\n}\n\nfunction swapWithNext(element) {\n    const currentRank = parseInt(element.dataset.rank);\n    const nextRank = currentRank + 1;\n    const nextElement = document.querySelector(`[data-rank=\"${nextRank}\"]`);\n    \n    if (nextElement) {\n        swapRankings(element, nextElement);\n    }\n}\n</script>\n\n\n\n\n\n\n","size_bytes":20897},"comp/scoring/types/multievent_final_only_simple.php":{"content":"<?php\n/**\n * 간단한 멀티이벤트 결승전(준결승 없음) 심사 테스트\n */\n\necho \"<!-- DEBUG: multievent_final_only_simple.php loaded successfully -->\";\necho \"<div style='background: yellow; padding: 10px; margin: 10px; border: 2px solid red;'>\";\necho \"<h3>DEBUG: multievent_final_only_simple.php is working!</h3>\";\necho \"<p>Event: \" . htmlspecialchars($event_data['name'] ?? 'No event name') . \"</p>\";\necho \"<p>Players: \" . count($players) . \"</p>\";\necho \"<p>Dances: \" . implode(', ', $event_data['dances'] ?? []) . \"</p>\";\necho \"<p>Scoring Type: \" . htmlspecialchars($scoring_type ?? 'No scoring type') . \"</p>\";\necho \"</div>\";\n\n// 간단한 멀티이벤트 결승전 심사 시스템 UI\necho \"<div style='background: #f0f0f0; padding: 20px; margin: 10px; border: 2px solid #333;'>\";\necho \"<h2>멀티이벤트 결승전 심사 시스템 (간단 버전)</h2>\";\necho \"<p>이벤트: \" . htmlspecialchars($event_data['name'] ?? 'Unknown') . \"</p>\";\necho \"<p>선수 수: \" . count($players) . \"명</p>\";\necho \"<p>댄스: \" . implode(', ', $event_data['dances'] ?? []) . \"</p>\";\n\n// 선수 목록 표시\necho \"<h3>선수 목록:</h3>\";\necho \"<ul>\";\nforeach ($players as $player) {\n    echo \"<li>선수 번호: \" . htmlspecialchars($player) . \"</li>\";\n}\necho \"</ul>\";\n\n// 멀티이벤트 결승전 특별 안내\necho \"<div style='background: #fff3e0; padding: 15px; margin: 10px; border: 2px solid #FF9800; border-radius: 5px;'>\";\necho \"<h3>🏆 멀티이벤트 결승전 안내</h3>\";\necho \"<p>• 준결승 없이 바로 결승전으로 진행됩니다</p>\";\necho \"<p>• 모든 댄스를 한 번에 평가합니다</p>\";\necho \"<p>• 종합적인 실력과 일관성을 평가합니다</p>\";\necho \"<p>• 최종 순위를 직접 결정합니다</p>\";\necho \"</div>\";\n\necho \"</div>\";\n?>\n\n\n\n\n\n\n","size_bytes":1802},"comp/scoring/types/multievent_final_simple.php":{"content":"<?php\n/**\n * 간단한 멀티이벤트 결승전 테스트\n */\n\necho \"<!-- DEBUG: multievent_final_simple.php loaded successfully -->\";\necho \"<div style='background: yellow; padding: 10px; margin: 10px; border: 2px solid red;'>\";\necho \"<h3>DEBUG: multievent_final_simple.php is working!</h3>\";\necho \"<p>Event: \" . htmlspecialchars($event_data['name'] ?? 'No event name') . \"</p>\";\necho \"<p>Players: \" . count($players) . \"</p>\";\necho \"<p>Dances: \" . implode(', ', $event_data['dances'] ?? []) . \"</p>\";\necho \"<p>Scoring Type: \" . htmlspecialchars($scoring_type ?? 'No scoring type') . \"</p>\";\necho \"</div>\";\n\n// 간단한 심사 시스템 UI\necho \"<div style='background: #f0f0f0; padding: 20px; margin: 10px; border: 2px solid #333;'>\";\necho \"<h2>심사 시스템 (간단 버전)</h2>\";\necho \"<p>이벤트: \" . htmlspecialchars($event_data['name'] ?? 'Unknown') . \"</p>\";\necho \"<p>선수 수: \" . count($players) . \"명</p>\";\necho \"<p>댄스: \" . implode(', ', $event_data['dances'] ?? []) . \"</p>\";\n\n// 선수 목록 표시\necho \"<h3>선수 목록:</h3>\";\necho \"<ul>\";\nforeach ($players as $player) {\n    echo \"<li>선수 번호: \" . htmlspecialchars($player) . \"</li>\";\n}\necho \"</ul>\";\n\necho \"</div>\";\n?>\n\n\n\n\n\n\n","size_bytes":1214},"comp/scoring/types/multievent_preliminary.php":{"content":"<?php\n/**\n * 멀티이벤트 예선/준결승 심사 시스템\n * Instagram 스타일 댄스별 채점 시스템\n */\n\n// 공통 파일들 포함\nrequire_once __DIR__ . '/../shared/functions.php';\nrequire_once __DIR__ . '/../shared/styles.php';\nrequire_once __DIR__ . '/../shared/components.php';\n\n// 변수들이 메인에서 전달되어야 함\n// $comp_id, $event_no, $event_data, $players, $dance_mapping, $recall_count, $hits_data, $existing_selections, $saved_scores\n\n// 변수 확인 및 기본값 설정\n$recall_count = $recall_count ?? 0;\n$hits_data = $hits_data ?? null;\n$existing_selections = $existing_selections ?? [];\n$dance_mapping = $dance_mapping ?? [];\n?>\n\n<!-- 멀티이벤트 예선/준결승 전용 스타일 -->\n<style>\n    /* Instagram Style Dance Container */\n    .dance-container { \n        position: relative; \n        overflow: hidden; \n    }\n    \n    .dance-progress {\n        display: flex;\n        align-items: center;\n        margin-bottom: 20px;\n        padding: 0 20px;\n    }\n    \n    .progress-bar {\n        flex: 1;\n        height: 6px;\n        background: #e0e0e0;\n        border-radius: 3px;\n        margin-right: 15px;\n        overflow: hidden;\n    }\n    \n    .progress-fill {\n        height: 100%;\n        background: linear-gradient(90deg, #4CAF50, #2e7d32);\n        border-radius: 3px;\n        transition: width 0.3s ease;\n    }\n    \n    .progress-text {\n        font-size: 14px;\n        font-weight: bold;\n        color: #666;\n        white-space: nowrap;\n    }\n    \n    .dance-slider {\n        display: flex;\n        transition: transform 0.3s ease;\n    }\n    \n    .dance-page {\n        min-width: 100%;\n        padding: 0 20px;\n        box-sizing: border-box;\n    }\n    \n    .dance-header { \n        background:#4CAF50; \n        color:#fff; \n        padding:10px; \n        border-radius:6px; \n        margin-bottom:15px; \n        text-align:center;\n    }\n    \n    .dance-header h3 { \n        margin:0 0 5px 0; \n        font-size:16px;\n    }\n    \n    .dance-header p { \n        margin:0; \n        font-size:12px; \n        opacity:0.9;\n    }\n    \n    /* Heat section styles */\n    .heat-section { \n        margin-bottom:15px; \n        padding:10px; \n        background:#fff; \n        border-radius:6px; \n        border:1px solid #ddd;\n    }\n    \n    .heat-section h4 { \n        margin:0 0 10px 0; \n        color:#333; \n        font-size:14px; \n        text-align:center;\n    }\n    \n    /* Players grid styles - Mobile optimized */\n    .players-grid { \n        display:grid; \n        grid-template-columns:repeat(auto-fill, minmax(60px, 1fr)); \n        gap:4px; \n        margin-bottom:15px;\n    }\n    \n    .player-card { \n        background:#fff; \n        border:2px solid #ddd; \n        border-radius:6px; \n        padding:6px 2px; \n        text-align:center; \n        cursor:pointer; \n        transition:all 0.3s ease;\n        position:relative;\n        min-height:50px;\n        display:flex;\n        flex-direction:column;\n        justify-content:center;\n        align-items:center;\n        user-select: none;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n    }\n    \n    .player-card:hover { \n        border-color:#4CAF50; \n        transform:translateY(-2px); \n        box-shadow:0 4px 8px rgba(0,0,0,0.15);\n    }\n    \n    .player-card.selected { \n        border-color:#4CAF50; \n        background:linear-gradient(135deg, #e8f5e8, #c8e6c9);\n        transform:scale(1.05);\n        box-shadow:0 6px 12px rgba(76, 175, 80, 0.3);\n    }\n    \n    .player-number { \n        font-size:24px; \n        font-weight:900; \n        color:#333;\n        margin:0;\n        line-height:1;\n    }\n    \n    .player-card.selected .player-number {\n        color:#2e7d32;\n    }\n    \n    .recall-checkbox { \n        display:none; /* Hide checkbox, use card click instead */\n    }\n    \n    /* Recall status - Large and clear */\n    .recall-status { \n        text-align:center; \n        padding:15px; \n        background:#f0f0f0; \n        border-radius:8px; \n        font-weight:bold; \n        color:#333;\n        font-size:16px;\n        margin:15px 0;\n        border:2px solid #ddd;\n    }\n    \n    .recall-status.complete { \n        background:linear-gradient(135deg, #d4edda, #c3e6cb); \n        color:#155724; \n        border:3px solid #28a745;\n        animation:pulse 2s infinite;\n    }\n    \n    .recall-status.over { \n        background:linear-gradient(135deg, #f8d7da, #f5c6cb); \n        color:#721c24; \n        border:3px solid #dc3545;\n    }\n    \n    .recall-status .selected-count {\n        font-size:24px;\n        font-weight:900;\n    }\n    \n    @keyframes pulse {\n        0% { transform: scale(1); }\n        50% { transform: scale(1.02); }\n        100% { transform: scale(1); }\n    }\n    \n    /* Fixed Progress Bar for Mobile */\n    .fixed-progress {\n        position: fixed;\n        top: 0;\n        left: 0;\n        right: 0;\n        background: linear-gradient(135deg, #ff9800, #ff5722);\n        color: white;\n        padding: 12px 20px;\n        text-align: center;\n        font-size: 18px;\n        font-weight: bold;\n        z-index: 1000;\n        box-shadow: 0 2px 10px rgba(0,0,0,0.3);\n        transform: translateY(-100%);\n        transition: transform 0.3s ease;\n    }\n    \n    .fixed-progress.show {\n        transform: translateY(0);\n    }\n    \n    .fixed-progress.complete {\n        background: linear-gradient(135deg, #4CAF50, #2e7d32);\n    }\n    \n    .fixed-progress.over {\n        background: linear-gradient(135deg, #f44336, #d32f2f);\n    }\n    \n    /* Add top padding to body when progress bar is shown */\n    body.progress-bar-visible {\n        padding-top: 60px;\n    }\n    \n    /* Mobile responsive */\n    @media (max-width: 768px) {\n        .players-grid { \n            grid-template-columns:repeat(auto-fill, minmax(50px, 1fr)); \n            gap:4px;\n            margin-bottom:10px;\n        }\n        \n        .player-card { \n            padding:4px 2px;\n            min-height:45px;\n            border-width:2px;\n        }\n        \n        .player-number { \n            font-size:20px;\n        }\n        \n        .dance-header h3 { \n            font-size:14px;\n        }\n        \n        .dance-header p {\n            font-size:12px;\n        }\n        \n        .recall-status {\n            padding:15px;\n            font-size:16px;\n            margin:15px 0;\n        }\n        \n        .recall-status .selected-count {\n            font-size:20px;\n        }\n    }\n    \n    @media (max-width: 480px) {\n        .players-grid { \n            grid-template-columns:repeat(auto-fill, minmax(55px, 1fr)); \n            gap:5px;\n        }\n        \n        .player-card { \n            padding:5px 2px;\n            min-height:45px;\n        }\n        \n        .player-number { \n            font-size:22px;\n        }\n        \n        .recall-status {\n            padding:12px;\n            font-size:14px;\n        }\n        \n        .recall-status .selected-count {\n            font-size:18px;\n        }\n    }\n</style>\n\n<!-- 상단 헤더 -->\n<div class=\"scoring-container\">\n    <div class=\"event-info\" style=\"display:flex; justify-content:space-between; align-items:center; margin-bottom:15px; padding:15px; background:#f8f9fa; border-radius:8px; box-shadow:0 2px 4px rgba(0,0,0,0.1);\">\n        <div style=\"flex:1;\">\n            <h1 style=\"margin:0 0 5px 0; color:#333; font-size:20px; font-weight:bold;\"><?=h($event_data['name'])?></h1>\n            <div style=\"display:flex; gap:20px; font-size:14px; color:#666;\">\n                <span><strong>이벤트:</strong> #<?=h($event_data['no'])?></span>\n                <span><strong>라운드:</strong> <?=h($event_data['round'])?></span>\n                <span><strong>종목:</strong> <?=h(implode(', ', array_map(function($d) use ($dance_mapping) { return getDanceName($d, $dance_mapping); }, $event_data['dances'])))?></span>\n            </div>\n        </div>\n        <div style=\"text-align:right;\">\n            <div style=\"font-size:16px; font-weight:bold; color:#003399; margin-bottom:5px;\">\n                심사위원: <?=h($_SESSION['scoring_judge_name'] ?? 'Unknown')?>\n            </div>\n            <div style=\"font-size:12px; color:#666;\">\n                ID: <?=h($_SESSION['scoring_judge_id'] ?? 'Unknown')?>\n            </div>\n        </div>\n    </div>\n    \n    <!-- 고정 진행률 바 -->\n    <?php renderFixedProgressBar($recall_count, $is_final, $event_no); ?>\n\n    <!-- Instagram Style Dance by Dance System -->\n<div class=\"dance-container\">\n    <div class=\"dance-progress\">\n        <div class=\"progress-bar\">\n            <div class=\"progress-fill\" style=\"width: 0%\"></div>\n        </div>\n        <div class=\"progress-text\">\n            <span class=\"current-dance\">1</span> / <?= count($event_data['dances']) ?>\n        </div>\n    </div>\n    \n    <div class=\"dance-slider\" id=\"danceSlider\">\n        <?php foreach ($event_data['dances'] as $dance_index => $dance): ?>\n            <?php \n            $dance_display = isset($dance_mapping[$dance]) ? $dance_mapping[$dance] : $dance;\n            ?>\n            <div class=\"dance-page\" data-dance=\"<?=h($dance)?>\" data-dance-index=\"<?=$dance_index?>\">\n                <div class=\"dance-header\">\n                    <h3><?=h($dance_display)?></h3>\n                    <p>총 <?=count($players)?>명 중 <?= $recall_count ?>명 선택</p>\n                </div>\n                \n                <?php if ($hits_data && !empty($hits_data)): ?>\n                    <!-- Heat-based display -->\n                    <?php foreach ($hits_data as $heat_no => $heat_players): ?>\n                        <div class=\"heat-section\">\n                            <h4>히트 <?= $heat_no ?></h4>\n                            <div class=\"players-grid\">\n                        <?php foreach ($heat_players as $player_no): ?>\n                            <div class=\"player-card\" data-player=\"<?=h($player_no)?>\" onclick=\"togglePlayerSelection(this)\">\n                                <div class=\"player-number\"><?=h($player_no)?></div>\n                                <input type=\"checkbox\" \n                                       name=\"recall_marks[<?=h($dance)?>][<?=h($player_no)?>]\" \n                                       class=\"recall-checkbox\"\n                                       data-dance=\"<?=h($dance)?>\"\n                                       data-player=\"<?=h($player_no)?>\">\n                            </div>\n                        <?php endforeach; ?>\n                            </div>\n                        </div>\n                    <?php endforeach; ?>\n                <?php else: ?>\n                    <!-- No heats - all players together -->\n                    <div class=\"players-grid\">\n                        <?php foreach ($players as $player_no): ?>\n                            <div class=\"player-card\" data-player=\"<?=h($player_no)?>\" onclick=\"togglePlayerSelection(this)\">\n                                <div class=\"player-number\"><?=h($player_no)?></div>\n                                <input type=\"checkbox\" \n                                       name=\"recall_marks[<?=h($dance)?>][<?=h($player_no)?>]\" \n                                       class=\"recall-checkbox\"\n                                       data-dance=\"<?=h($dance)?>\"\n                                       data-player=\"<?=h($player_no)?>\">\n                            </div>\n                        <?php endforeach; ?>\n                    </div>\n                <?php endif; ?>\n                \n                <div class=\"recall-status\">\n                    <div style=\"font-size:20px; margin-bottom:5px;\">📊 Recall 진행 상황</div>\n                    <div style=\"font-size:28px; font-weight:900; color:#2e7d32;\">\n                        <span class=\"selected-count\">0</span> / <?= $recall_count ?>명\n                    </div>\n                    <div style=\"font-size:14px; margin-top:5px; opacity:0.8;\">\n                        <?= $recall_count ?>명을 선택하면 전송할 수 있습니다\n                    </div>\n                </div>\n                \n                <div class=\"dance-submit-section\" style=\"text-align:center; margin-top:20px; display:none;\">\n                    <button type=\"button\" \n                            class=\"dance-submit-btn\" \n                            data-dance=\"<?=h($dance)?>\"\n                            style=\"background:#4CAF50; color:#fff; border:none; padding:15px 30px; font-size:16px; font-weight:bold; border-radius:8px; cursor:pointer;\">\n                        <?=h($dance_display)?> 전송\n                    </button>\n                </div>\n            </div>\n        <?php endforeach; ?>\n    </div>\n    \n    <div class=\"dance-navigation\" style=\"text-align:center; margin-top:20px;\">\n        <button type=\"button\" id=\"prevDance\" style=\"background:#666; color:#fff; border:none; padding:10px 20px; margin:0 10px; border-radius:5px; cursor:pointer; display:none;\">이전</button>\n        <button type=\"button\" id=\"nextDance\" style=\"background:#2196F3; color:#fff; border:none; padding:10px 20px; margin:0 10px; border-radius:5px; cursor:pointer; display:none;\">다음</button>\n    </div>\n</div>\n\n<!-- 하단 네비게이션 -->\n<?php renderBottomNavigation($comp_id, $lang); ?>\n\n<!-- 멀티이벤트 예선/준결승 전용 JavaScript -->\n<script>\n// Instagram Style Dance System\nlet currentDanceIndex = 0;\nlet totalDances = 0;\nlet completedDances = new Set();\nlet existingSelections = <?= json_encode($existing_selections) ?>;\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    const firstInput = document.querySelector('.place-input');\n    if (firstInput) {\n        firstInput.focus();\n    }\n    \n    // Initialize dance system\n    const danceSlider = document.getElementById('danceSlider');\n    if (danceSlider) {\n        initializeDanceSystem();\n    }\n    \n    // Setup fixed action buttons\n    setupFixedButtons();\n});\n\nfunction setupFixedButtons() {\n    // Dashboard button\n    const dashboardBtn = document.getElementById('dashboardBtn');\n    if (dashboardBtn) {\n        dashboardBtn.addEventListener('click', function() {\n            const compId = '<?= h($comp_id) ?>';\n            const lang = '<?= h($lang) ?>';\n            window.location.href = `scoring_dashboard.php?comp_id=${compId}&lang=${lang}`;\n        });\n    }\n    \n    // Refresh button\n    const refreshBtn = document.getElementById('refreshBtn');\n    if (refreshBtn) {\n        refreshBtn.addEventListener('click', function() {\n            if (confirm('페이지를 새로고침하시겠습니까? 현재 작업 중인 내용이 저장되지 않을 수 있습니다.')) {\n                window.location.reload();\n            }\n        });\n    }\n}\n\nfunction loadExistingSelections() {\n    // Load existing selections for all dances\n    Object.keys(existingSelections).forEach(dance => {\n        const dancePage = document.querySelector(`[data-dance=\"${dance}\"]`);\n        if (!dancePage) return;\n        \n        const selectedPlayers = existingSelections[dance];\n        selectedPlayers.forEach(playerNo => {\n            const checkbox = dancePage.querySelector(`input[data-player=\"${playerNo}\"]`);\n            if (checkbox) {\n                checkbox.checked = true;\n                const card = checkbox.closest('.player-card');\n                if (card) {\n                    card.classList.add('selected');\n                }\n            }\n        });\n        \n        // Mark as completed if selections exist\n        if (selectedPlayers.length > 0) {\n            completedDances.add(dance);\n        }\n    });\n}\n\nfunction initializeDanceSystem() {\n    console.log('Initializing dance system');\n    \n    const dancePages = document.querySelectorAll('.dance-page');\n    totalDances = dancePages.length;\n    \n    console.log('Found dance pages:', totalDances);\n    \n    if (totalDances === 0) {\n        console.log('No dance pages found');\n        return;\n    }\n    \n    // Load existing selections for all dances\n    loadExistingSelections();\n    \n    // Show first dance page\n    showDancePage(0);\n    \n    // Setup event listeners\n    setupDanceEventListeners();\n    // setupPlayerCardEvents(); // 제거 - onclick 속성 사용\n    updateProgress();\n    \n    // Initialize top recall status\n    updateTopRecallStatus();\n}\n\n// setupBasicPlayerCardEvents 함수 제거 - onclick 속성 사용\n\n// setupPlayerCardEvents 함수 제거 - onclick 속성 사용\n\nfunction showDancePage(index) {\n    const danceSlider = document.getElementById('danceSlider');\n    const dancePages = document.querySelectorAll('.dance-page');\n    \n    if (index < 0 || index >= totalDances) return;\n    \n    currentDanceIndex = index;\n    danceSlider.style.transform = `translateX(-${index * 100}%)`;\n    \n    // Update progress\n    updateProgress();\n    \n    // Update navigation buttons\n    updateNavigationButtons();\n    \n    // Reset touch events for current page\n    resetTouchEvents();\n    \n    // Restore dance page state if going back to a completed dance\n    const currentPage = document.querySelector('.dance-page[data-dance-index=\"' + currentDanceIndex + '\"]');\n    if (currentPage) {\n        const dance = currentPage.dataset.dance;\n        const isCompleted = completedDances.has(dance);\n        \n        if (isCompleted) {\n            // Restore the page to editable state\n            restoreDancePageState(currentPage, dance);\n        } else {\n            // Load existing selections for this dance if not completed\n            loadExistingSelectionsForDance(currentPage, dance);\n        }\n    }\n    \n    // Update recall status for current page\n    updateTopRecallStatus();\n}\n\nfunction setupDanceEventListeners() {\n    // Navigation buttons\n    document.getElementById('prevDance')?.addEventListener('click', () => {\n        if (currentDanceIndex > 0) {\n            showDancePage(currentDanceIndex - 1);\n        }\n    });\n    \n    document.getElementById('nextDance')?.addEventListener('click', () => {\n        if (currentDanceIndex < totalDances - 1) {\n            showDancePage(currentDanceIndex + 1);\n        }\n    });\n    \n    // Dance submit buttons\n    document.querySelectorAll('.dance-submit-btn').forEach(btn => {\n        btn.addEventListener('click', function() {\n            const dance = this.dataset.dance;\n            submitDance(dance);\n        });\n    });\n    \n    // Touch/swipe events\n    let startX = 0;\n    let startY = 0;\n    let isSwipe = false;\n    \n    const danceSlider = document.getElementById('danceSlider');\n    \n    danceSlider.addEventListener('touchstart', function(e) {\n        startX = e.touches[0].clientX;\n        startY = e.touches[0].clientY;\n        isSwipe = false;\n    });\n    \n    danceSlider.addEventListener('touchmove', function(e) {\n        if (!startX || !startY) return;\n        \n        const currentX = e.touches[0].clientX;\n        const currentY = e.touches[0].clientY;\n        const diffX = startX - currentX;\n        const diffY = startY - currentY;\n        \n        // Determine if this is a horizontal swipe\n        if (Math.abs(diffX) > Math.abs(diffY) && Math.abs(diffX) > 50) {\n            isSwipe = true;\n            e.preventDefault();\n        }\n    });\n    \n    danceSlider.addEventListener('touchend', function(e) {\n        if (!isSwipe || !startX || !startY) return;\n        \n        const endX = e.changedTouches[0].clientX;\n        const diffX = startX - endX;\n        \n        if (Math.abs(diffX) > 100) {\n            if (diffX > 0 && currentDanceIndex < totalDances - 1) {\n                // Swipe left - next dance\n                showDancePage(currentDanceIndex + 1);\n            } else if (diffX < 0 && currentDanceIndex > 0) {\n                // Swipe right - previous dance\n                showDancePage(currentDanceIndex - 1);\n            }\n        }\n        \n        startX = 0;\n        startY = 0;\n        isSwipe = false;\n    });\n}\n\nfunction resetTouchEvents() {\n    // Remove existing event listeners and re-add them\n    const playerCards = document.querySelectorAll('.player-card');\n    playerCards.forEach(card => {\n        // Remove old listeners by cloning the element\n        const newCard = card.cloneNode(true);\n        card.parentNode.replaceChild(newCard, card);\n        \n        // Add new listeners\n        setupPlayerCardEvents(newCard);\n    });\n}\n\nfunction setupPlayerCardEvents(card) {\n    let touchStartTime = 0;\n    let touchStartPos = { x: 0, y: 0 };\n    \n    // Click event\n    card.addEventListener('click', function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        togglePlayerSelection(this);\n    });\n    \n    // Touch start\n    card.addEventListener('touchstart', function(e) {\n        touchStartTime = Date.now();\n        const touch = e.touches[0];\n        touchStartPos = { x: touch.clientX, y: touch.clientY };\n    });\n    \n    // Touch end\n    card.addEventListener('touchend', function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        \n        const touchEndTime = Date.now();\n        const touchDuration = touchEndTime - touchStartTime;\n        \n        // Only trigger if it's a quick tap (less than 500ms)\n        if (touchDuration < 500) {\n            togglePlayerSelection(this);\n        }\n    });\n    \n    // Prevent context menu on long press\n    card.addEventListener('contextmenu', function(e) {\n        e.preventDefault();\n    });\n}\n\nfunction updateProgress() {\n    const progressFill = document.querySelector('.progress-fill');\n    const currentDanceSpan = document.querySelector('.current-dance');\n    \n    if (progressFill) {\n        const progress = ((currentDanceIndex + 1) / totalDances) * 100;\n        progressFill.style.width = progress + '%';\n    }\n    \n    if (currentDanceSpan) {\n        currentDanceSpan.textContent = currentDanceIndex + 1;\n    }\n}\n\nfunction restoreDancePageState(page, dance) {\n    // Remove from completed dances to allow re-editing\n    completedDances.delete(dance);\n    \n    // Restore the recall status section\n    const statusDiv = page.querySelector('.recall-status');\n    if (statusDiv) {\n        statusDiv.innerHTML = `\n            <div style=\"font-size:20px; margin-bottom:5px;\">📊 Recall 진행 상황</div>\n            <div style=\"font-size:28px; font-weight:900; color:#2e7d32;\">\n                <span class=\"selected-count\">0</span> / <?= $recall_count ?>명\n            </div>\n            <div style=\"font-size:14px; margin-top:5px; opacity:0.8;\">\n                <?= $recall_count ?>명을 선택하면 전송할 수 있습니다\n            </div>\n        `;\n    }\n    \n    // Show submit section (will be hidden/shown based on selection count)\n    const submitSection = page.querySelector('.dance-submit-section');\n    if (submitSection) {\n        submitSection.style.display = 'none';\n    }\n    \n    // Load existing selections for this dance\n    if (existingSelections[dance]) {\n        const selectedPlayers = existingSelections[dance];\n        selectedPlayers.forEach(playerNo => {\n            const checkbox = page.querySelector(`input[data-player=\"${playerNo}\"]`);\n            if (checkbox) {\n                checkbox.checked = true;\n                const card = checkbox.closest('.player-card');\n                if (card) {\n                    card.classList.add('selected');\n                }\n            }\n        });\n    } else {\n        // No existing selections, clear all\n        const checkboxes = page.querySelectorAll('.recall-checkbox');\n        checkboxes.forEach(checkbox => {\n            checkbox.checked = false;\n        });\n        \n        // Update player card states\n        const playerCards = page.querySelectorAll('.player-card');\n        playerCards.forEach(card => {\n            card.classList.remove('selected');\n        });\n    }\n}\n\nfunction updateNavigationButtons() {\n    const prevBtn = document.getElementById('prevDance');\n    const nextBtn = document.getElementById('nextDance');\n    \n    if (prevBtn) {\n        prevBtn.style.display = currentDanceIndex > 0 ? 'inline-block' : 'none';\n    }\n    \n    if (nextBtn) {\n        // Show next button if there are more dances AND current dance is completed\n        const currentDance = document.querySelector('.dance-page[data-dance-index=\"' + currentDanceIndex + '\"]');\n        const isCurrentDanceCompleted = currentDance && completedDances.has(currentDance.dataset.dance);\n        \n        if (currentDanceIndex < totalDances - 1 && isCurrentDanceCompleted) {\n            nextBtn.style.display = 'inline-block';\n            nextBtn.disabled = false;\n            nextBtn.style.opacity = '1';\n            nextBtn.style.cursor = 'pointer';\n        } else {\n            nextBtn.style.display = 'none';\n        }\n    }\n}\n\nfunction submitDance(dance) {\n    const currentPage = document.querySelector(`[data-dance=\"${dance}\"]`);\n    const checkboxes = currentPage.querySelectorAll('.recall-checkbox:checked');\n    const recallCount = <?= json_encode(intval($recall_count)) ?>;\n    \n    if (checkboxes.length !== recallCount) {\n        alert(`${recallCount}명을 정확히 선택해주세요.`);\n        return;\n    }\n    \n    // Collect selected players for this dance\n    const selectedPlayers = Array.from(checkboxes).map(cb => cb.dataset.player);\n    \n    // Prepare data for this dance only\n    const recallMarks = {};\n    recallMarks[dance] = selectedPlayers;\n    \n    const data = {\n        comp_id: <?= json_encode($comp_id) ?>,\n        event_no: <?= json_encode($event_no) ?>,\n        type: 'recall',\n        recall_marks: recallMarks\n    };\n    \n    // Show loading state\n    const submitBtn = currentPage.querySelector('.dance-submit-btn');\n    const originalText = submitBtn.textContent;\n    submitBtn.textContent = '전송 중...';\n    submitBtn.disabled = true;\n    \n    fetch('scoring/save_scores.php', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data)\n    })\n    .then(response => response.json())\n    .then(result => {\n        if (result.success) {\n            // Mark this dance as completed\n            completedDances.add(dance);\n            \n            // Update existing selections\n            existingSelections[dance] = selectedPlayers;\n            \n            // Hide submit button and show completion message\n            submitBtn.style.display = 'none';\n            const statusDiv = currentPage.querySelector('.recall-status');\n            statusDiv.innerHTML = `\n                <div style=\"font-size:20px; margin-bottom:5px;\">✅ 완료</div>\n                <div style=\"font-size:18px; font-weight:bold; color:#4CAF50;\">\n                    ${recallCount}명 선택 완료\n                </div>\n                <div style=\"font-size:14px; margin-top:5px; opacity:0.8;\">\n                    다음 댄스로 진행하세요\n                </div>\n            `;\n            \n            // Enable next dance button if available\n            updateNavigationButtons();\n            \n            // Show completion message\n            if (currentDanceIndex < totalDances - 1) {\n                setTimeout(() => {\n                    alert(`${dance} 댄스 채점이 완료되었습니다. 다음 댄스로 진행하세요.`);\n                }, 1000);\n            } else {\n                // All dances completed\n                setTimeout(() => {\n                    alert('모든 댄스 채점이 완료되었습니다!');\n                }, 1000);\n            }\n        } else {\n            alert('전송 실패: ' + (result.error || '알 수 없는 오류'));\n            submitBtn.textContent = originalText;\n            submitBtn.disabled = false;\n        }\n    })\n    .catch(error => {\n        console.error('Error:', error);\n        alert('전송 중 오류가 발생했습니다: ' + error);\n        submitBtn.textContent = originalText;\n        submitBtn.disabled = false;\n    });\n}\n\n// Recall system event handlers\ndocument.addEventListener('DOMContentLoaded', function() {\n    console.log('DOM loaded, setting up event handlers');\n    \n    // Initialize dance system first\n    const danceSlider = document.getElementById('danceSlider');\n    if (danceSlider) {\n        initializeDanceSystem();\n    }\n    \n    // Setup fixed action buttons\n    setupFixedButtons();\n    \n    console.log('Event handlers setup complete');\n});\n\nfunction togglePlayerSelection(card) {\n    console.log('togglePlayerSelection called for card:', card);\n    const checkbox = card.querySelector('.recall-checkbox');\n    if (!checkbox) {\n        console.error('No checkbox found in card:', card);\n        return;\n    }\n    \n    console.log('Checkbox before toggle:', checkbox.checked);\n    checkbox.checked = !checkbox.checked;\n    console.log('Checkbox after toggle:', checkbox.checked);\n    \n    updatePlayerCardState(card);\n    updateRecallStatus();\n    updateTopRecallStatus();\n    \n    // 디버그: 현재 선택된 선수 수 확인\n    const selectedCount = document.querySelectorAll('.recall-checkbox:checked').length;\n    console.log('Total selected players:', selectedCount);\n}\n\nfunction updatePlayerCardState(card) {\n    console.log('updatePlayerCardState called for card:', card);\n    const checkbox = card.querySelector('.recall-checkbox');\n    if (!checkbox) {\n        console.error('No checkbox found in card for updatePlayerCardState:', card);\n        return;\n    }\n    \n    if (checkbox.checked) {\n        card.classList.add('selected');\n        console.log('Card marked as selected');\n    } else {\n        card.classList.remove('selected');\n        console.log('Card marked as unselected');\n    }\n}\n\nfunction updateTopRecallStatus() {\n    // Get all checked checkboxes from all pages\n    const allCheckboxes = document.querySelectorAll('.recall-checkbox:checked');\n    const selectedCount = allCheckboxes.length;\n    const recallCount = <?= json_encode(intval($recall_count)) ?>;\n    \n    // Update top recall progress display\n    const topRecallProgress = document.getElementById('recallProgress');\n    if (topRecallProgress) {\n        topRecallProgress.textContent = selectedCount;\n        \n        // Update color based on progress\n        if (selectedCount === recallCount) {\n            topRecallProgress.style.color = '#4CAF50';\n            topRecallProgress.style.fontWeight = 'bold';\n        } else if (selectedCount > recallCount) {\n            topRecallProgress.style.color = '#f44336';\n            topRecallProgress.style.fontWeight = 'bold';\n        } else {\n            topRecallProgress.style.color = '#ff9800';\n            topRecallProgress.style.fontWeight = 'normal';\n        }\n    }\n    \n    // Update fixed progress bar\n    const fixedRecallCount = document.getElementById('fixedRecallCount');\n    if (fixedRecallCount) {\n        fixedRecallCount.textContent = selectedCount;\n    }\n    \n    // Update submit button state for current dance page\n    const currentPage = document.querySelector('.dance-page[data-dance-index=\"' + currentDanceIndex + '\"]');\n    if (currentPage) {\n        const submitSection = currentPage.querySelector('.dance-submit-section');\n        const submitBtn = currentPage.querySelector('.dance-submit-btn');\n        \n        if (submitSection && submitBtn) {\n            // Show/hide submit section based on selection count\n            if (selectedCount === recallCount) {\n                submitSection.style.display = 'block';\n                submitBtn.disabled = false;\n                submitBtn.style.opacity = '1';\n                submitBtn.style.cursor = 'pointer';\n            } else {\n                submitSection.style.display = 'none';\n                submitBtn.disabled = true;\n                submitBtn.style.opacity = '0.5';\n                submitBtn.style.cursor = 'not-allowed';\n            }\n        }\n    }\n}\n\nfunction updateRecallStatus() {\n    console.log('updateRecallStatus called, currentDanceIndex:', currentDanceIndex);\n    const currentPage = document.querySelector('.dance-page[data-dance-index=\"' + currentDanceIndex + '\"]');\n    \n    console.log('Current page found:', currentPage);\n    \n    if (!currentPage) {\n        console.log('No current page found, using fallback');\n        // Fallback: get all checked checkboxes from all pages\n        const allCheckboxes = document.querySelectorAll('.recall-checkbox:checked');\n        const selectedCount = allCheckboxes.length;\n        const recallCount = <?= json_encode(intval($recall_count)) ?>;\n        \n        console.log('Fallback - selectedCount:', selectedCount, 'recallCount:', recallCount);\n        \n        // Update top recall progress display\n        const topRecallProgress = document.getElementById('recallProgress');\n        if (topRecallProgress) {\n            topRecallProgress.textContent = selectedCount;\n            \n            // Update color based on progress\n            if (selectedCount === recallCount) {\n                topRecallProgress.style.color = '#4CAF50';\n                topRecallProgress.style.fontWeight = 'bold';\n            } else if (selectedCount > recallCount) {\n                topRecallProgress.style.color = '#f44336';\n                topRecallProgress.style.fontWeight = 'bold';\n            } else {\n                topRecallProgress.style.color = '#ff9800';\n                topRecallProgress.style.fontWeight = 'normal';\n            }\n        }\n        return;\n    }\n    \n    const checkboxes = currentPage.querySelectorAll('.recall-checkbox:checked');\n    const selectedCount = checkboxes.length;\n    const recallCount = <?= json_encode(intval($recall_count)) ?>;\n    \n    console.log('Current page - selectedCount:', selectedCount, 'recallCount:', recallCount);\n    \n    // Top recall progress is handled by updateTopRecallStatus function\n    \n    // Update fixed progress bar\n    const fixedProgress = document.getElementById('fixedProgress');\n    console.log('Fixed progress bar found:', fixedProgress);\n    if (fixedProgress) {\n        const progressText = fixedProgress.querySelector('#fixedRecallCount');\n        console.log('Progress text element found:', progressText);\n        if (progressText) {\n            progressText.textContent = selectedCount;\n            console.log('Updated progress text to:', selectedCount);\n        }\n        \n        // Update progress bar styling\n        fixedProgress.classList.remove('complete', 'over');\n        if (selectedCount === recallCount) {\n            fixedProgress.classList.add('complete');\n        } else if (selectedCount > recallCount) {\n            fixedProgress.classList.add('over');\n        }\n    }\n    \n    // Update current page status\n    const statusDiv = currentPage.querySelector('.recall-status');\n    console.log('Status div found:', statusDiv);\n    const countSpan = statusDiv ? statusDiv.querySelector('.selected-count') : null;\n    console.log('Count span found:', countSpan);\n    const submitSection = currentPage.querySelector('.dance-submit-section');\n    console.log('Submit section found:', submitSection);\n    \n    if (countSpan) {\n        countSpan.textContent = selectedCount;\n        console.log('Updated count span to:', selectedCount);\n    }\n    \n    // Update status styling\n    statusDiv.classList.remove('complete', 'over');\n    if (selectedCount === recallCount) {\n        statusDiv.classList.add('complete');\n        if (submitSection) submitSection.style.display = 'block';\n    } else if (selectedCount > recallCount) {\n        statusDiv.classList.add('over');\n        if (submitSection) submitSection.style.display = 'none';\n    } else {\n        if (submitSection) submitSection.style.display = 'none';\n    }\n}\n\nfunction initializeFixedProgress() {\n    const fixedProgress = document.getElementById('fixedProgress');\n    if (!fixedProgress) return;\n    \n    let isScrolling = false;\n    let scrollTimeout;\n    \n    // Show progress bar when scrolling down\n    window.addEventListener('scroll', function() {\n        if (!isScrolling) {\n            fixedProgress.classList.add('show');\n            document.body.classList.add('progress-bar-visible');\n        }\n        \n        isScrolling = true;\n        clearTimeout(scrollTimeout);\n        \n        scrollTimeout = setTimeout(function() {\n            isScrolling = false;\n            // Hide progress bar after scrolling stops (only if no selections)\n            const totalSelected = document.querySelectorAll('.recall-checkbox:checked').length;\n            if (totalSelected === 0) {\n                fixedProgress.classList.remove('show');\n                document.body.classList.remove('progress-bar-visible');\n            }\n        }, 1000);\n    });\n    \n    // Touch events for mobile\n    document.addEventListener('touchstart', function() {\n        fixedProgress.classList.add('show');\n        document.body.classList.add('progress-bar-visible');\n    });\n}\n\nfunction loadExistingSelectionsForDance(page, dance) {\n    // Load existing selections for a specific dance\n    if (existingSelections[dance]) {\n        const selectedPlayers = existingSelections[dance];\n        selectedPlayers.forEach(playerNo => {\n            const checkbox = page.querySelector(`input[data-player=\"${playerNo}\"]`);\n            if (checkbox) {\n                checkbox.checked = true;\n                const card = checkbox.closest('.player-card');\n                if (card) {\n                    card.classList.add('selected');\n                }\n            }\n        });\n    }\n}\n</script>\n","size_bytes":37321},"lang/Language.php":{"content":"<?php\nclass Language {\n    private static $instance = null;\n    private $currentLang = 'ko';\n    private $translations = [];\n    private $availableLanguages = [\n        'ko' => ['name' => '한국어', 'flag' => '🇰🇷'],\n        'en' => ['name' => 'English', 'flag' => '🇺🇸'],\n        'ja' => ['name' => '日本語', 'flag' => '🇯🇵'],\n        'zh' => ['name' => '中文', 'flag' => '🇨🇳'],\n        'ru' => ['name' => 'Русский', 'flag' => '🇷🇺']\n    ];\n\n    private function __construct() {\n        $this->detectLanguage();\n        $this->loadTranslations();\n    }\n\n    public static function getInstance() {\n        if (self::$instance === null) {\n            self::$instance = new self();\n        }\n        return self::$instance;\n    }\n\n    private function detectLanguage() {\n        // URL 파라미터에서 언어 확인\n        if (isset($_GET['lang']) && array_key_exists($_GET['lang'], $this->availableLanguages)) {\n            $this->currentLang = $_GET['lang'];\n            $_SESSION['lang'] = $this->currentLang;\n            return;\n        }\n\n        // 세션에서 언어 확인\n        if (isset($_SESSION['lang']) && array_key_exists($_SESSION['lang'], $this->availableLanguages)) {\n            $this->currentLang = $_SESSION['lang'];\n            return;\n        }\n\n        // 브라우저 언어 감지\n        if (isset($_SERVER['HTTP_ACCEPT_LANGUAGE'])) {\n            $browserLang = substr($_SERVER['HTTP_ACCEPT_LANGUAGE'], 0, 2);\n            if (array_key_exists($browserLang, $this->availableLanguages)) {\n                $this->currentLang = $browserLang;\n                $_SESSION['lang'] = $this->currentLang;\n                return;\n            }\n        }\n\n        // 기본값: 한국어\n        $this->currentLang = 'ko';\n        $_SESSION['lang'] = $this->currentLang;\n    }\n\n    private function loadTranslations() {\n        $langFile = __DIR__ . '/' . $this->currentLang . '.php';\n        if (file_exists($langFile)) {\n            $this->translations = require $langFile;\n        } else {\n            // 폴백으로 한국어 로드\n            $this->translations = require __DIR__ . '/ko.php';\n        }\n    }\n\n    public function get($key, $default = null) {\n        return $this->translations[$key] ?? $default ?? $key;\n    }\n\n    public function getCurrentLang() {\n        return $this->currentLang;\n    }\n\n    public function getAvailableLanguages() {\n        return $this->availableLanguages;\n    }\n\n    public function getLangName($code = null) {\n        $code = $code ?? $this->currentLang;\n        return $this->availableLanguages[$code]['name'] ?? $code;\n    }\n\n    public function getLangFlag($code = null) {\n        $code = $code ?? $this->currentLang;\n        return $this->availableLanguages[$code]['flag'] ?? '';\n    }\n\n    public function getLanguageUrl($langCode) {\n        $currentUrl = $_SERVER['REQUEST_URI'];\n        $urlParts = parse_url($currentUrl);\n        $params = [];\n        \n        // 기존 lang 파라미터 제거\n        if (isset($urlParts['query'])) {\n            parse_str($urlParts['query'], $params);\n        }\n        \n        $params['lang'] = $langCode;\n        $queryString = http_build_query($params);\n\n        $path = $urlParts['path'] ?? '/';\n        return $path . '?' . $queryString;\n    }\n\n    public function formatDate($timestamp, $format = null) {\n        $format = $format ?? $this->get('date_format', 'Y-m-d');\n        return date($format, is_string($timestamp) ? strtotime($timestamp) : $timestamp);\n    }\n}\n\n// 헬퍼 함수\nfunction t($key, $default = null) {\n    return Language::getInstance()->get($key, $default);\n}\n\nfunction lang() {\n    return Language::getInstance();\n}\n?>","size_bytes":3700},"lang/en.php":{"content":"<?php\n// English translations\nreturn [\n    // Navigation\n    'nav_dashboard' => 'Dashboard',\n    'nav_competitions' => 'Competitions',\n    'nav_results' => 'Results',\n    'nav_management' => 'Management',\n    'nav_notices' => 'Notices',\n    \n    // Header\n    'site_title' => 'DanceOffice - International DanceSport Competition Management System',\n    'hero_title' => 'DanceOffice',\n    'hero_subtitle' => 'International DanceSport Competition Management System',\n    'hero_description' => 'Professional judging platform for global dance competitions',\n    \n    // Statistics\n    'stat_total_competitions' => 'Total Competitions',\n    'stat_upcoming_events' => 'Upcoming Events',\n    'stat_completed' => 'Completed',\n    \n    // Widget titles\n    'widget_upcoming_competitions' => 'Upcoming Competitions',\n    'widget_recent_results' => 'Recent Results',\n    'widget_announcements' => 'Announcements',\n    'widget_schedule' => 'Schedule',\n    \n    // Actions\n    'action_view_all' => 'View All',\n    'action_manage' => 'Manage',\n    'action_edit' => 'Edit',\n    'action_new_competition' => 'New Competition',\n    'action_view_results' => 'View Results',\n    'action_settings' => 'Settings',\n    \n    // Status\n    'status_upcoming' => 'Upcoming',\n    'status_completed' => 'Completed',\n    'status_ongoing' => 'Ongoing',\n    \n    // Messages\n    'no_upcoming_competitions' => 'No upcoming competitions scheduled',\n    'no_recent_competitions' => 'No recent competitions',\n    'no_notices' => 'No announcements registered',\n    'no_schedule' => 'No competition schedule registered',\n    \n    // Date/time\n    'date_format' => 'M d, Y',\n    'datetime_format' => 'M d, Y H:i',\n    \n    // Language selection\n    'language' => 'Language',\n    'select_language' => 'Select Language',\n    \n    // Admin page\n    'admin_title' => 'Admin Panel',\n    'admin_subtitle' => 'DanceOffice Management System',\n    'admin_login' => 'Administrator Login',\n    'admin_password' => 'Administrator Password',\n    'admin_login_btn' => 'Login',\n    'admin_password_placeholder' => 'Enter password',\n    \n    // Admin navigation\n    'admin_nav_home' => 'Back to Main',\n    'admin_nav_results' => 'Competition Results',\n    'admin_nav_competitions' => 'Competition Management',\n    'admin_nav_judging' => 'Freestyle Competition Judging',\n    \n    // Notice management\n    'notice_management' => 'Announcement Management',\n    'current_notice' => 'Current registered announcement:',\n    'notice_content' => 'Announcement Content',\n    'notice_placeholder' => 'Enter announcement content',\n    'notice_save' => 'Save Announcement',\n    'notice_delete' => 'Delete Announcement',\n    'notice_delete_confirm' => 'Delete this announcement?',\n    \n    // Schedule management\n    'schedule_management' => 'Competition Schedule Management',\n    'current_schedule' => 'Current registered competition schedule:',\n    'schedule_content' => 'Competition Schedule Content',\n    'schedule_placeholder' => 'Enter competition schedule',\n    'schedule_save' => 'Save Schedule',\n    'schedule_delete' => 'Delete Schedule',\n    'schedule_delete_confirm' => 'Delete this schedule?',\n    \n    // Banner management\n    'banner_management' => 'Advertisement Banner Management',\n    'banner_top' => 'Top',\n    'banner_bottom' => 'Bottom',\n    'banner_left' => 'Left',\n    'banner_right' => 'Right',\n    'banner_main' => 'Main',\n    'banner_recommended_size' => 'Recommended',\n    'banner_upload' => 'Image Upload',\n    'banner_link' => 'Banner Link (URL)',\n    'banner_link_placeholder' => 'Enter banner link',\n    'banner_upload_save' => 'Upload/Save Link',\n    'banner_image_delete' => 'Delete Image',\n    'banner_link_delete' => 'Delete Link',\n    'banner_view_link' => 'Visit Link',\n    'banner_current_link' => 'Current link:',\n    'banner_delete_image_confirm' => 'Delete this image?',\n    'banner_delete_link_confirm' => 'Delete this link file?',\n    \n    // Banner descriptions\n    'banner_top_desc' => 'Top horizontal banner (visible on PC/mobile)',\n    'banner_bottom_desc' => 'Bottom horizontal banner (visible on PC/mobile)',\n    'banner_left_desc' => 'Left vertical banner (PC screen only)',\n    'banner_right_desc' => 'Right vertical banner (PC screen only)',\n    'banner_main_desc' => 'Main/event area (variable size)',\n    \n    // Common\n    'or' => 'or',\n    'total' => 'Total',\n    'pinned' => 'Pinned',\n    'updated' => 'Updated',\n    'error' => 'Error',\n    'delete' => 'Delete',\n    'edit' => 'Edit',\n    'save_changes' => 'Save Changes',\n    'cancel' => 'Cancel',\n    'optional' => 'Optional',\n    \n    // Notice Management\n    'notice_title' => 'Title',\n    'notice_title_placeholder' => 'Enter notice title',\n    'notice_content_placeholder' => 'Enter notice content',\n    'notice_image' => 'Image',\n    'notice_image_help' => 'Only JPG, PNG, GIF, WebP files allowed (Max 5MB)',\n    'notice_pin' => 'Pin to Top',\n    'notice_unpin' => 'Unpin',\n    'notice_create' => 'Create Notice',\n    'create_notice' => 'Create New Notice',\n    'existing_notices' => 'Existing Notices',\n    'edit_notice' => 'Edit Notice',\n    'current_image' => 'Current Image',\n    'no_current_image' => 'No current image',\n    'notice_delete_confirm' => 'Are you sure you want to delete this notice?',\n    'view_all_notices' => 'View All Notices',\n];","size_bytes":5298},"lang/ja.php":{"content":"<?php\n// 日本語翻訳\nreturn [\n    // ナビゲーション\n    'nav_dashboard' => 'ダッシュボード',\n    'nav_competitions' => '大会',\n    'nav_results' => '結果',\n    'nav_management' => '管理',\n    'nav_notices' => 'お知らせ',\n    \n    // ヘッダー\n    'site_title' => 'DanceOffice - 国際ダンススポーツ大会管理システム',\n    'hero_title' => 'DanceOffice',\n    'hero_subtitle' => '国際ダンススポーツ大会管理システム',\n    'hero_description' => '世界のダンス大会のためのプロ審査プラットフォーム',\n    \n    // 統計\n    'stat_total_competitions' => '総大会数',\n    'stat_upcoming_events' => '予定イベント',\n    'stat_completed' => '完了済み',\n    \n    // ウィジェットタイトル\n    'widget_upcoming_competitions' => '予定大会',\n    'widget_recent_results' => '最近の結果',\n    'widget_announcements' => 'お知らせ',\n    'widget_schedule' => 'スケジュール',\n    \n    // アクション\n    'action_view_all' => 'すべて表示',\n    'action_manage' => '管理',\n    'action_edit' => '編集',\n    'action_new_competition' => '新しい大会',\n    'action_view_results' => '結果を見る',\n    'action_settings' => '設定',\n    \n    // ステータス\n    'status_upcoming' => '予定',\n    'status_completed' => '完了',\n    'status_ongoing' => '進行中',\n    \n    // メッセージ\n    'no_upcoming_competitions' => '予定されている大会はありません',\n    'no_recent_competitions' => '最近の大会はありません',\n    'no_notices' => '登録されたお知らせはありません',\n    'no_schedule' => '登録された大会スケジュールはありません',\n    \n    // 日付/時間\n    'date_format' => 'Y年m月d日',\n    'datetime_format' => 'Y年m月d日 H:i',\n    \n    // 言語選択\n    'language' => '言語',\n    'select_language' => '言語選択',\n    \n    // 管理者ページ\n    'admin_title' => '管理者ページ',\n    'admin_subtitle' => 'DanceOffice管理システム',\n    'admin_login' => '管理者ログイン',\n    'admin_password' => '管理者パスワード',\n    'admin_login_btn' => 'ログイン',\n    'admin_password_placeholder' => 'パスワードを入力してください',\n    \n    // 管理ナビゲーション\n    'admin_nav_home' => 'メインに戻る',\n    'admin_nav_results' => '競技結果',\n    'admin_nav_competitions' => '大会管理',\n    'admin_nav_judging' => 'フリースタイル大会採点',\n    \n    // お知らせ管理\n    'notice_management' => 'お知らせ管理',\n    'current_notice' => '現在登録されているお知らせ:',\n    'notice_content' => 'お知らせ内容',\n    'notice_placeholder' => 'お知らせ内容を入力してください',\n    'notice_save' => 'お知らせ保存',\n    'notice_delete' => 'お知らせ削除',\n    'notice_delete_confirm' => 'お知らせを削除しますか？',\n    \n    // スケジュール管理\n    'schedule_management' => '大会スケジュール管理',\n    'current_schedule' => '現在登録されている大会スケジュール:',\n    'schedule_content' => '大会スケジュール内容',\n    'schedule_placeholder' => '大会スケジュールを入力してください',\n    'schedule_save' => 'スケジュール保存',\n    'schedule_delete' => 'スケジュール削除',\n    'schedule_delete_confirm' => 'スケジュールを削除しますか？',\n    \n    // バナー管理\n    'banner_management' => '広告バナー管理',\n    'banner_top' => '上部',\n    'banner_bottom' => '下部',\n    'banner_left' => '左側',\n    'banner_right' => '右側',\n    'banner_main' => 'メイン',\n    'banner_recommended_size' => '推奨',\n    'banner_upload' => '画像アップロード',\n    'banner_link' => 'バナーリンク (URL)',\n    'banner_link_placeholder' => 'バナーリンクを入力してください',\n    'banner_upload_save' => 'アップロード/リンク保存',\n    'banner_image_delete' => '画像削除',\n    'banner_link_delete' => 'リンク削除',\n    'banner_view_link' => 'リンクを開く',\n    'banner_current_link' => '現在のリンク:',\n    'banner_delete_image_confirm' => '画像を削除しますか？',\n    'banner_delete_link_confirm' => 'リンクファイルを削除しますか？',\n    \n    // バナー説明\n    'banner_top_desc' => '上部横バナー（PC/モバイル両方表示）',\n    'banner_bottom_desc' => '下部横バナー（PC/モバイル両方表示）',\n    'banner_left_desc' => '左側縦バナー（PC画面のみ表示）',\n    'banner_right_desc' => '右側縦バナー（PC画面のみ表示）',\n    'banner_main_desc' => 'メイン/イベントエリア（可変サイズ）',\n    \n    // 共通\n    'or' => 'または',\n    'total' => '合計',\n    'pinned' => '固定',\n    'updated' => '更新',\n    'error' => 'エラー',\n    'delete' => '削除',\n    'edit' => '編集',\n    'save_changes' => '変更を保存',\n    'cancel' => 'キャンセル',\n    'optional' => 'オプション',\n    \n    // お知らせ管理\n    'notice_title' => 'タイトル',\n    'notice_title_placeholder' => 'お知らせのタイトルを入力',\n    'notice_content_placeholder' => 'お知らせの内容を入力',\n    'notice_image' => '画像',\n    'notice_image_help' => 'JPG、PNG、GIF、WebPファイルのみ可能（最大5MB）',\n    'notice_pin' => 'トップに固定',\n    'notice_unpin' => '固定解除',\n    'notice_create' => 'お知らせ作成',\n    'create_notice' => '新しいお知らせを作成',\n    'existing_notices' => '既存のお知らせ',\n    'edit_notice' => 'お知らせ編集',\n    'current_image' => '現在の画像',\n    'no_current_image' => '現在の画像がありません',\n    'notice_delete_confirm' => 'このお知らせを削除しますか？',\n    'view_all_notices' => 'すべてのお知らせを表示',\n];","size_bytes":5924},"lang/ko.php":{"content":"<?php\n// 한국어 번역\nreturn [\n    // 네비게이션\n    'nav_dashboard' => '대시보드',\n    'nav_competitions' => '대회',\n    'nav_results' => '결과',\n    'nav_management' => '관리',\n    'nav_notices' => '공지사항',\n    \n    // 헤더\n    'site_title' => 'DanceOffice - 국제 댄스스포츠 대회 관리 시스템',\n    'hero_title' => 'DanceOffice',\n    'hero_subtitle' => '국제 댄스스포츠 대회 관리 시스템',\n    'hero_description' => '전 세계 댄스 대회를 위한 전문 채점 플랫폼',\n    \n    // 통계\n    'stat_total_competitions' => '총 대회 수',\n    'stat_upcoming_events' => '예정된 이벤트',\n    'stat_completed' => '완료됨',\n    \n    // 위젯 제목\n    'widget_upcoming_competitions' => '예정된 대회',\n    'widget_recent_results' => '최근 결과',\n    'widget_announcements' => '공지사항',\n    'widget_schedule' => '일정',\n    \n    // 액션\n    'action_view_all' => '전체 보기',\n    'action_manage' => '관리',\n    'action_edit' => '편집',\n    'action_new_competition' => '새 대회',\n    'action_view_results' => '결과 보기',\n    'action_settings' => '설정',\n    \n    // 상태\n    'status_upcoming' => '예정됨',\n    'status_completed' => '완료됨',\n    'status_ongoing' => '진행 중',\n    \n    // 메시지\n    'no_upcoming_competitions' => '예정된 대회가 없습니다',\n    'no_recent_competitions' => '최근 대회가 없습니다',\n    'no_notices' => '등록된 공지가 없습니다',\n    'no_schedule' => '등록된 대회일정이 없습니다',\n    \n    // 날짜/시간\n    'date_format' => 'Y년 m월 d일',\n    'datetime_format' => 'Y년 m월 d일 H:i',\n    \n    // 언어 선택\n    'language' => '언어',\n    'select_language' => '언어 선택',\n    \n    // 관리 페이지\n    'admin_title' => '관리자 페이지',\n    'admin_subtitle' => 'DanceOffice 관리 시스템',\n    'admin_login' => '관리자 로그인',\n    'admin_password' => '관리자 비밀번호',\n    'admin_login_btn' => '로그인',\n    'admin_password_placeholder' => '비밀번호를 입력하세요',\n    \n    // 관리 메뉴\n    'admin_nav_home' => '메인으로',\n    'admin_nav_results' => '경기 결과',\n    'admin_nav_competitions' => '대회 관리',\n    'admin_nav_judging' => '프리스타일 대회 채점',\n    \n    // 공지사항 관리\n    'notice_management' => '공지사항 관리',\n    'current_notice' => '현재 등록된 공지사항:',\n    'notice_content' => '공지사항 내용',\n    'notice_placeholder' => '공지 내용을 입력하세요',\n    'notice_save' => '공지 저장',\n    'notice_delete' => '공지사항 삭제',\n    'notice_delete_confirm' => '공지사항을 삭제할까요?',\n    \n    // 일정 관리\n    'schedule_management' => '대회 일정 관리',\n    'current_schedule' => '현재 등록된 대회 일정:',\n    'schedule_content' => '대회 일정 내용',\n    'schedule_placeholder' => '대회 일정을 입력하세요',\n    'schedule_save' => '일정 저장',\n    'schedule_delete' => '대회일정 삭제',\n    'schedule_delete_confirm' => '대회일정을 삭제할까요?',\n    \n    // 광고 배너 관리\n    'banner_management' => '광고 배너 관리',\n    'banner_top' => '상단',\n    'banner_bottom' => '하단',\n    'banner_left' => '좌측',\n    'banner_right' => '우측',\n    'banner_main' => '메인',\n    'banner_recommended_size' => '권장',\n    'banner_upload' => '이미지 업로드',\n    'banner_link' => '배너 링크 (URL)',\n    'banner_link_placeholder' => '배너 링크를 입력하세요',\n    'banner_upload_save' => '업로드/링크 저장',\n    'banner_image_delete' => '이미지 삭제',\n    'banner_link_delete' => '링크 삭제',\n    'banner_view_link' => '링크로 이동',\n    'banner_current_link' => '현재 링크:',\n    'banner_delete_image_confirm' => '이미지를 삭제할까요?',\n    'banner_delete_link_confirm' => '링크 파일을 삭제할까요?',\n    \n    // 배너 설명\n    'banner_top_desc' => '상단 가로 배너 (PC/모바일 모두 노출)',\n    'banner_bottom_desc' => '하단 가로 배너 (PC/모바일 모두 노출)', \n    'banner_left_desc' => '좌측 세로 배너 (PC 화면만 노출)',\n    'banner_right_desc' => '우측 세로 배너 (PC 화면만 노출)',\n    'banner_main_desc' => '메인/이벤트 영역 (크기 가변)',\n    \n    // 공통\n    'or' => '또는',\n    'total' => '전체',\n    'pinned' => '고정',\n    'updated' => '수정됨',\n    'error' => '오류',\n    'delete' => '삭제',\n    'edit' => '편집',\n    'save_changes' => '변경사항 저장',\n    'cancel' => '취소',\n    'optional' => '선택사항',\n    \n    // 공지사항 관리\n    'notice_title' => '제목',\n    'notice_title_placeholder' => '공지사항 제목을 입력하세요',\n    'notice_content_placeholder' => '공지사항 내용을 입력하세요',\n    'notice_image' => '이미지',\n    'notice_image_help' => 'JPG, PNG, GIF, WebP 파일만 가능 (최대 5MB)',\n    'notice_pin' => '상단 고정',\n    'notice_unpin' => '고정 해제',\n    'notice_create' => '공지사항 작성',\n    'create_notice' => '새 공지사항 작성',\n    'existing_notices' => '기존 공지사항',\n    'edit_notice' => '공지사항 편집',\n    'current_image' => '현재 이미지',\n    'no_current_image' => '현재 이미지가 없습니다',\n    'notice_delete_confirm' => '이 공지사항을 삭제하시겠습니까?',\n    'view_all_notices' => '모든 공지사항 보기',\n];","size_bytes":5514},"lang/ru.php":{"content":"<?php\n// Русский перевод\nreturn [\n    // Навигация\n    'nav_dashboard' => 'Панель управления',\n    'nav_competitions' => 'Соревнования',\n    'nav_results' => 'Результаты',\n    'nav_management' => 'Управление',\n    'nav_notices' => 'Объявления',\n    \n    // Заголовок\n    'site_title' => 'DanceOffice - Международная система управления танцевальными соревнованиями',\n    'hero_title' => 'DanceOffice',\n    'hero_subtitle' => 'Международная система управления танцевальными соревнованиями',\n    'hero_description' => 'Профессиональная платформа для судейства танцевальных соревнований по всему миру',\n    \n    // Статистика\n    'stat_total_competitions' => 'Всего соревнований',\n    'stat_upcoming_events' => 'Предстоящие события',\n    'stat_completed' => 'Завершено',\n    \n    // Заголовки виджетов\n    'widget_upcoming_competitions' => 'Предстоящие соревнования',\n    'widget_recent_results' => 'Последние результаты',\n    'widget_announcements' => 'Объявления',\n    'widget_schedule' => 'Расписание',\n    \n    // Действия\n    'action_view_all' => 'Посмотреть все',\n    'action_manage' => 'Управление',\n    'action_edit' => 'Редактировать',\n    'action_new_competition' => 'Новое соревнование',\n    'action_view_results' => 'Посмотреть результаты',\n    'action_settings' => 'Настройки',\n    \n    // Статус\n    'status_upcoming' => 'Предстоящий',\n    'status_completed' => 'Завершен',\n    'status_ongoing' => 'В процессе',\n    \n    // Сообщения\n    'no_upcoming_competitions' => 'Нет запланированных соревнований',\n    'no_recent_competitions' => 'Нет недавних соревнований',\n    'no_notices' => 'Нет зарегистрированных объявлений',\n    'no_schedule' => 'Нет зарегистрированного расписания соревнований',\n    \n    // Дата/время\n    'date_format' => 'd.m.Y',\n    'datetime_format' => 'd.m.Y H:i',\n    \n    // Выбор языка\n    'language' => 'Язык',\n    'select_language' => 'Выбрать язык',\n    \n    // Страница администратора\n    'admin_title' => 'Панель администратора',\n    'admin_subtitle' => 'Система управления DanceOffice',\n    'admin_login' => 'Вход администратора',\n    'admin_password' => 'Пароль администратора',\n    'admin_login_btn' => 'Войти',\n    'admin_password_placeholder' => 'Введите пароль',\n    \n    // Навигация администратора\n    'admin_nav_home' => 'Вернуться на главную',\n    'admin_nav_results' => 'Результаты соревнований',\n    'admin_nav_competitions' => 'Управление соревнованиями',\n    'admin_nav_judging' => 'Оценка фристайл соревнований',\n    \n    // Управление объявлениями\n    'notice_management' => 'Управление объявлениями',\n    'current_notice' => 'Текущее зарегистрированное объявление:',\n    'notice_content' => 'Содержание объявления',\n    'notice_placeholder' => 'Введите содержание объявления',\n    'notice_save' => 'Сохранить объявление',\n    'notice_delete' => 'Удалить объявление',\n    'notice_delete_confirm' => 'Удалить это объявление?',\n    \n    // Управление расписанием\n    'schedule_management' => 'Управление расписанием соревнований',\n    'current_schedule' => 'Текущее зарегистрированное расписание:',\n    'schedule_content' => 'Содержание расписания',\n    'schedule_placeholder' => 'Введите расписание соревнований',\n    'schedule_save' => 'Сохранить расписание',\n    'schedule_delete' => 'Удалить расписание',\n    'schedule_delete_confirm' => 'Удалить это расписание?',\n    \n    // Управление баннерами\n    'banner_management' => 'Управление рекламными баннерами',\n    'banner_top' => 'Вверху',\n    'banner_bottom' => 'Внизу',\n    'banner_left' => 'Слева',\n    'banner_right' => 'Справа',\n    'banner_main' => 'Основной',\n    'banner_recommended_size' => 'Рекомендуемый',\n    'banner_upload' => 'Загрузка изображения',\n    'banner_link' => 'Ссылка баннера (URL)',\n    'banner_link_placeholder' => 'Введите ссылку баннера',\n    'banner_upload_save' => 'Загрузить/Сохранить ссылку',\n    'banner_image_delete' => 'Удалить изображение',\n    'banner_link_delete' => 'Удалить ссылку',\n    'banner_view_link' => 'Перейти по ссылке',\n    'banner_current_link' => 'Текущая ссылка:',\n    'banner_delete_image_confirm' => 'Удалить это изображение?',\n    'banner_delete_link_confirm' => 'Удалить этот файл ссылки?',\n    \n    // Описания баннеров\n    'banner_top_desc' => 'Верхний горизонтальный баннер (видимый на ПК/мобильных)',\n    'banner_bottom_desc' => 'Нижний горизонтальный баннер (видимый на ПК/мобильных)',\n    'banner_left_desc' => 'Левый вертикальный баннер (только ПК экран)',\n    'banner_right_desc' => 'Правый вертикальный баннер (только ПК экран)',\n    'banner_main_desc' => 'Основная/событийная область (переменный размер)',\n    \n    // Общие\n    'or' => 'или',\n    'total' => 'Всего',\n    'pinned' => 'Закреплено',\n    'updated' => 'Обновлено',\n    'error' => 'Ошибка',\n    'delete' => 'Удалить',\n    'edit' => 'Редактировать',\n    'save_changes' => 'Сохранить изменения',\n    'cancel' => 'Отмена',\n    'optional' => 'Опционально',\n    \n    // Управление объявлениями\n    'notice_title' => 'Заголовок',\n    'notice_title_placeholder' => 'Введите заголовок объявления',\n    'notice_content_placeholder' => 'Введите содержание объявления',\n    'notice_image' => 'Изображение',\n    'notice_image_help' => 'Разрешены только файлы JPG, PNG, GIF, WebP (макс. 5МБ)',\n    'notice_pin' => 'Закрепить вверху',\n    'notice_unpin' => 'Открепить',\n    'notice_create' => 'Создать объявление',\n    'create_notice' => 'Создать новое объявление',\n    'existing_notices' => 'Существующие объявления',\n    'edit_notice' => 'Редактировать объявление',\n    'current_image' => 'Текущее изображение',\n    'no_current_image' => 'Нет текущего изображения',\n    'notice_delete_confirm' => 'Вы уверены, что хотите удалить это объявление?',\n    'view_all_notices' => 'Посмотреть все объявления',\n];","size_bytes":7949},"lang/zh.php":{"content":"<?php\n// 中文翻译\nreturn [\n    // 导航\n    'nav_dashboard' => '仪表板',\n    'nav_competitions' => '比赛',\n    'nav_results' => '结果',\n    'nav_management' => '管理',\n    'nav_notices' => '公告',\n    \n    // 标题\n    'site_title' => 'DanceOffice - 国际体育舞蹈比赛管理系统',\n    'hero_title' => 'DanceOffice',\n    'hero_subtitle' => '国际体育舞蹈比赛管理系统',\n    'hero_description' => '全球舞蹈比赛专业评审平台',\n    \n    // 统计\n    'stat_total_competitions' => '比赛总数',\n    'stat_upcoming_events' => '即将举行',\n    'stat_completed' => '已完成',\n    \n    // 小部件标题\n    'widget_upcoming_competitions' => '即将举行的比赛',\n    'widget_recent_results' => '最近结果',\n    'widget_announcements' => '公告',\n    'widget_schedule' => '日程',\n    \n    // 操作\n    'action_view_all' => '查看全部',\n    'action_manage' => '管理',\n    'action_edit' => '编辑',\n    'action_new_competition' => '新建比赛',\n    'action_view_results' => '查看结果',\n    'action_settings' => '设置',\n    \n    // 状态\n    'status_upcoming' => '即将举行',\n    'status_completed' => '已完成',\n    'status_ongoing' => '进行中',\n    \n    // 消息\n    'no_upcoming_competitions' => '没有即将举行的比赛',\n    'no_recent_competitions' => '没有最近的比赛',\n    'no_notices' => '没有注册的公告',\n    'no_schedule' => '没有注册的比赛日程',\n    \n    // 日期/时间\n    'date_format' => 'Y年m月d日',\n    'datetime_format' => 'Y年m月d日 H:i',\n    \n    // 语言选择\n    'language' => '语言',\n    'select_language' => '选择语言',\n    \n    // 管理员页面\n    'admin_title' => '管理员面板',\n    'admin_subtitle' => 'DanceOffice管理系统',\n    'admin_login' => '管理员登录',\n    'admin_password' => '管理员密码',\n    'admin_login_btn' => '登录',\n    'admin_password_placeholder' => '请输入密码',\n    \n    // 管理导航\n    'admin_nav_home' => '返回主页',\n    'admin_nav_results' => '比赛结果',\n    'admin_nav_competitions' => '比赛管理',\n    'admin_nav_judging' => '自由式比赛评分',\n    \n    // 公告管理\n    'notice_management' => '公告管理',\n    'current_notice' => '当前注册的公告:',\n    'notice_content' => '公告内容',\n    'notice_placeholder' => '请输入公告内容',\n    'notice_save' => '保存公告',\n    'notice_delete' => '删除公告',\n    'notice_delete_confirm' => '删除此公告吗？',\n    \n    // 日程管理\n    'schedule_management' => '比赛日程管理',\n    'current_schedule' => '当前注册的比赛日程:',\n    'schedule_content' => '比赛日程内容',\n    'schedule_placeholder' => '请输入比赛日程',\n    'schedule_save' => '保存日程',\n    'schedule_delete' => '删除日程',\n    'schedule_delete_confirm' => '删除此日程吗？',\n    \n    // 横幅管理\n    'banner_management' => '广告横幅管理',\n    'banner_top' => '顶部',\n    'banner_bottom' => '底部',\n    'banner_left' => '左侧',\n    'banner_right' => '右侧',\n    'banner_main' => '主要',\n    'banner_recommended_size' => '推荐',\n    'banner_upload' => '图片上传',\n    'banner_link' => '横幅链接 (URL)',\n    'banner_link_placeholder' => '请输入横幅链接',\n    'banner_upload_save' => '上传/保存链接',\n    'banner_image_delete' => '删除图片',\n    'banner_link_delete' => '删除链接',\n    'banner_view_link' => '访问链接',\n    'banner_current_link' => '当前链接:',\n    'banner_delete_image_confirm' => '删除此图片吗？',\n    'banner_delete_link_confirm' => '删除此链接文件吗？',\n    \n    // 横幅说明\n    'banner_top_desc' => '顶部横向横幅（PC/移动设备可见）',\n    'banner_bottom_desc' => '底部横向横幅（PC/移动设备可见）',\n    'banner_left_desc' => '左侧垂直横幅（仅PC屏幕可见）',\n    'banner_right_desc' => '右侧垂直横幅（仅PC屏幕可见）',\n    'banner_main_desc' => '主要/活动区域（可变大小）',\n    \n    // 公共\n    'or' => '或',\n    'total' => '总计',\n    'pinned' => '置顶',\n    'updated' => '已更新',\n    'error' => '错误',\n    'delete' => '删除',\n    'edit' => '编辑',\n    'save_changes' => '保存更改',\n    'cancel' => '取消',\n    'optional' => '可选',\n    \n    // 公告管理\n    'notice_title' => '标题',\n    'notice_title_placeholder' => '请输入公告标题',\n    'notice_content_placeholder' => '请输入公告内容',\n    'notice_image' => '图片',\n    'notice_image_help' => '仅允许JPG、PNG、GIF、WebP文件（最大5MB）',\n    'notice_pin' => '置顶',\n    'notice_unpin' => '取消置顶',\n    'notice_create' => '创建公告',\n    'create_notice' => '创建新公告',\n    'existing_notices' => '现有公告',\n    'edit_notice' => '编辑公告',\n    'current_image' => '当前图片',\n    'no_current_image' => '当前没有图片',\n    'notice_delete_confirm' => '确定要删除这个公告吗？',\n    'view_all_notices' => '查看所有公告',\n];","size_bytes":5048},"replit.md":{"content":"# Overview\n\nDanceOffice is a comprehensive dance sport competition management system that integrates with DanceScore to provide seamless tournament organization and result presentation. The system serves as a unified platform for managing competitions, displaying real-time results, and providing intuitive navigation for participants and spectators.\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# System Architecture\n\n## Frontend Architecture\nThe system uses a responsive web design with distinct layouts for desktop and mobile:\n- **Desktop Layout**: Three-column structure with left navigation, main content area, and right sidebar for advertisements\n- **Mobile Layout**: Header navigation, main content, and bottom navigation bar\n- **CSS Framework**: Custom CSS using Grid and Flexbox for responsive design\n- **Typography**: Google Fonts (Noto Sans KR) for Korean language support\n- **Icons**: Material Symbols for consistent iconography\n\n## Backend Architecture\n- **Server Technology**: PHP 7.4+ with file-based data storage\n- **Data Storage**: JSON files for competition data and text files for configuration\n- **Session Management**: PHP sessions for user state management\n- **File Processing**: Automated synchronization with DanceScore results\n\n## Competition Management System\n- **Scheduler System**: Unified scheduler that integrates both DanceScore and internal system results\n- **Competition States**: Automatic state management (upcoming, ongoing, completed)\n- **Result Integration**: Real-time monitoring and processing of DanceScore output files\n- **Content Management**: JSON-based flexible competition information storage\n\n## Real-time Result Monitoring\n- **File Watcher**: Continuous monitoring of DanceScore result directories (C:\\dancescore\\Web)\n- **Result Processing**: Automatic combination of summary and detailed result files\n- **Live Display**: Full-screen monitoring system with 30-second auto-refresh\n- **Event Control**: Real-time event status and result announcement control\n\n## Data Processing Pipeline\n- **Text Processing**: Regular expression-based content replacement for Korean localization\n- **File Synchronization**: Automated copying and conversion from DanceScore to web directory\n- **Content Filtering**: Removal of copyrighted content and branding elements\n- **Link Management**: Dynamic URL rewriting for proper navigation\n\n## User Interface Components\n- **Card-based Design**: Modern card layout for competition listings\n- **Timeline View**: Chronological display of competition history\n- **Weekly Status**: Clear distinction between past, current, and upcoming week competitions\n- **Responsive Tables**: Mobile-optimized result display tables\n\n# External Dependencies\n\n## DanceScore Integration\n- **Primary Dependency**: DanceScore competition management software\n- **File Locations**: C:\\dancescore\\Web for results, C:\\dancescore\\Recall for recall data\n- **File Formats**: HTML files with numeric naming convention (e.g., 1.html, 1-d.html)\n- **Synchronization**: Real-time file monitoring and processing\n\n## Web Technologies\n- **Google Fonts API**: For Noto Sans KR and Material Symbols\n- **Frontend Libraries**: No external JavaScript frameworks (vanilla JS approach)\n- **Image Processing**: PIL (Python Imaging Library) for logo generation\n\n## File System Dependencies\n- **Network Drive**: Y: drive mapping for shared file access\n- **Directory Structure**: Specific folder organization for results, assets, and data\n- **File Permissions**: Read/write access to competition directories\n\n## Development Tools\n- **Python Scripts**: For logo generation and file synchronization\n- **Batch Scripts**: Windows automation for monitoring processes\n- **Text Processing**: Regular expressions for content localization\n\n## Server Requirements\n- **Web Server**: Apache or IIS with PHP support\n- **File System**: Windows-based file paths and drive mappings\n- **Network Access**: Shared drive connectivity for DanceScore integration","size_bytes":3998},"competition.php":{"content":"<?php\nsession_start();\n\n// 다국어 시스템 로드\nrequire_once __DIR__ . '/lang/Language.php';\n$lang = Language::getInstance();\n\n// 대회 스케줄러 로드\nrequire_once __DIR__ . '/data/scheduler.php';\n$scheduler = new CompetitionScheduler();\n\n// URL에서 대회 ID 가져오기\n$comp_id = $_GET['id'] ?? '';\n$page = $_GET['page'] ?? 'main';\n\nif (!$comp_id) {\n    header('Location: /');\n    exit;\n}\n\n// 대회 정보 가져오기\n$competition = $scheduler->getCompetitionById($comp_id);\nif (!$competition) {\n    header('Location: /');\n    exit;\n}\n\n// 대회별 기능 함수들\nfunction getCompetitionNotices($comp_data_path) {\n    if (!$comp_data_path) return [];\n    \n    $notices_file = $comp_data_path . '/notices.json';\n    if (file_exists($notices_file)) {\n        return json_decode(file_get_contents($notices_file), true) ?: [];\n    }\n    return [];\n}\n\nfunction getCompetitionSchedule($comp_data_path) {\n    if (!$comp_data_path) return [];\n    \n    $schedule_file = $comp_data_path . '/schedule.json';\n    if (file_exists($schedule_file)) {\n        return json_decode(file_get_contents($schedule_file), true) ?: [];\n    }\n    return [];\n}\n\nfunction getCompetitionResults($comp_data_path) {\n    if (!$comp_data_path) return [];\n    \n    $results_file = $comp_data_path . '/results.json';\n    if (file_exists($results_file)) {\n        return json_decode(file_get_contents($results_file), true) ?: [];\n    }\n    return [];\n}\n\n// 대회 데이터 디렉토리 경로\n$comp_data_path = isset($competition['comp_data_path']) ? $competition['comp_data_path'] : null;\n\n// 페이지별 데이터 로드\n$notices = getCompetitionNotices($comp_data_path);\n$schedule = getCompetitionSchedule($comp_data_path);\n$results = getCompetitionResults($comp_data_path);\n\n?>\n<!DOCTYPE html>\n<html lang=\"<?= $lang->getCurrentLang() ?>\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title><?= htmlspecialchars($competition['title']) ?> | DanceOffice</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@24,400,0,0\" rel=\"stylesheet\">\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n\n        body {\n            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n            background: linear-gradient(135deg, #0f172a 0%, #1e293b 50%, #334155 100%);\n            color: #e2e8f0;\n            min-height: 100vh;\n        }\n\n        .container {\n            max-width: 1200px;\n            margin: 0 auto;\n            padding: 20px;\n        }\n\n        /* 상단 헤더 */\n        .comp-header {\n            background: rgba(30, 41, 59, 0.8);\n            backdrop-filter: blur(20px);\n            border: 1px solid rgba(59, 130, 246, 0.2);\n            border-radius: 20px;\n            padding: 32px;\n            margin-bottom: 32px;\n            text-align: center;\n            position: relative;\n            overflow: hidden;\n        }\n\n        .comp-header::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            background: radial-gradient(circle at 30% 20%, rgba(59, 130, 246, 0.1) 0%, transparent 50%);\n            pointer-events: none;\n        }\n\n        .comp-header-content {\n            position: relative;\n            z-index: 2;\n        }\n\n        .comp-title {\n            font-size: 32px;\n            font-weight: 700;\n            color: #f1f5f9;\n            margin-bottom: 16px;\n        }\n\n        .comp-info {\n            display: flex;\n            justify-content: center;\n            gap: 32px;\n            margin-top: 24px;\n            flex-wrap: wrap;\n        }\n\n        .comp-info-item {\n            display: flex;\n            align-items: center;\n            gap: 8px;\n            color: #94a3b8;\n            font-size: 14px;\n        }\n\n        .comp-info-item .material-symbols-rounded {\n            color: #3b82f6;\n            font-size: 20px;\n        }\n\n        /* 네비게이션 탭 */\n        .comp-nav {\n            background: rgba(30, 41, 59, 0.6);\n            border: 1px solid rgba(59, 130, 246, 0.2);\n            border-radius: 16px;\n            padding: 8px;\n            margin-bottom: 32px;\n            display: flex;\n            gap: 8px;\n            overflow-x: auto;\n        }\n\n        .comp-nav-item {\n            padding: 12px 24px;\n            border-radius: 12px;\n            text-decoration: none;\n            color: #94a3b8;\n            font-weight: 500;\n            transition: all 0.3s ease;\n            white-space: nowrap;\n            display: flex;\n            align-items: center;\n            gap: 8px;\n        }\n\n        .comp-nav-item:hover {\n            background: rgba(59, 130, 246, 0.1);\n            color: #3b82f6;\n        }\n\n        .comp-nav-item.active {\n            background: #3b82f6;\n            color: white;\n        }\n\n        /* 컨텐츠 섹션 */\n        .comp-content {\n            background: rgba(30, 41, 59, 0.6);\n            backdrop-filter: blur(20px);\n            border: 1px solid rgba(59, 130, 246, 0.2);\n            border-radius: 20px;\n            padding: 32px;\n            min-height: 400px;\n        }\n\n        .section-title {\n            font-size: 24px;\n            font-weight: 600;\n            color: #f1f5f9;\n            margin-bottom: 24px;\n            display: flex;\n            align-items: center;\n            gap: 12px;\n        }\n\n        .section-title .material-symbols-rounded {\n            color: #3b82f6;\n            font-size: 28px;\n        }\n\n        /* 대회 개요 스타일 */\n        .comp-overview {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n            gap: 24px;\n        }\n\n        .overview-card {\n            background: rgba(15, 23, 42, 0.6);\n            border: 1px solid rgba(59, 130, 246, 0.1);\n            border-radius: 16px;\n            padding: 24px;\n        }\n\n        .overview-card h3 {\n            color: #3b82f6;\n            font-size: 18px;\n            margin-bottom: 16px;\n            display: flex;\n            align-items: center;\n            gap: 8px;\n        }\n\n        .overview-card p {\n            color: #94a3b8;\n            line-height: 1.6;\n        }\n\n        /* 공지사항/일정 목록 스타일 */\n        .item-list {\n            space-y: 16px;\n        }\n\n        .item-card {\n            background: rgba(15, 23, 42, 0.6);\n            border: 1px solid rgba(59, 130, 246, 0.1);\n            border-radius: 16px;\n            padding: 20px;\n            margin-bottom: 16px;\n        }\n\n        .item-header {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            margin-bottom: 12px;\n        }\n\n        .item-title {\n            font-size: 16px;\n            font-weight: 600;\n            color: #f1f5f9;\n        }\n\n        .item-date {\n            font-size: 12px;\n            color: #64748b;\n            background: rgba(59, 130, 246, 0.1);\n            padding: 4px 12px;\n            border-radius: 12px;\n        }\n\n        .item-content {\n            color: #94a3b8;\n            line-height: 1.6;\n        }\n\n        /* 빈 상태 */\n        .empty-state {\n            text-align: center;\n            padding: 60px 20px;\n            color: #64748b;\n        }\n\n        .empty-state .material-symbols-rounded {\n            font-size: 48px;\n            margin-bottom: 16px;\n            opacity: 0.5;\n        }\n\n        /* 백 버튼 */\n        .back-btn {\n            display: inline-flex;\n            align-items: center;\n            gap: 8px;\n            padding: 12px 24px;\n            background: rgba(59, 130, 246, 0.1);\n            color: #3b82f6;\n            text-decoration: none;\n            border-radius: 12px;\n            margin-bottom: 24px;\n            transition: all 0.3s ease;\n        }\n\n        .back-btn:hover {\n            background: rgba(59, 130, 246, 0.2);\n        }\n\n        /* 모바일 대응 */\n        @media (max-width: 768px) {\n            .container {\n                padding: 16px;\n            }\n\n            .comp-title {\n                font-size: 24px;\n            }\n\n            .comp-info {\n                flex-direction: column;\n                gap: 16px;\n                align-items: center;\n            }\n\n            .comp-nav {\n                flex-direction: column;\n                gap: 4px;\n            }\n\n            .comp-content {\n                padding: 24px 20px;\n            }\n\n            .comp-overview {\n                grid-template-columns: 1fr;\n            }\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <!-- 백 버튼 -->\n        <a href=\"/\" class=\"back-btn\">\n            <span class=\"material-symbols-rounded\">arrow_back</span>\n            <?= t('nav_dashboard') ?>\n        </a>\n\n        <!-- 대회 헤더 -->\n        <div class=\"comp-header\">\n            <div class=\"comp-header-content\">\n                <h1 class=\"comp-title\"><?= htmlspecialchars($competition['title']) ?></h1>\n                \n                <div class=\"comp-info\">\n                    <div class=\"comp-info-item\">\n                        <span class=\"material-symbols-rounded\">schedule</span>\n                        <?= $lang->formatDate($competition['date']) ?>\n                    </div>\n                    <div class=\"comp-info-item\">\n                        <span class=\"material-symbols-rounded\">location_on</span>\n                        <?= htmlspecialchars($competition['location']) ?>\n                    </div>\n                    <div class=\"comp-info-item\">\n                        <span class=\"material-symbols-rounded\">group</span>\n                        <?= htmlspecialchars($competition['host']) ?>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- 네비게이션 탭 -->\n        <nav class=\"comp-nav\">\n            <a href=\"?id=<?= $comp_id ?>&page=main\" class=\"comp-nav-item <?= $page === 'main' ? 'active' : '' ?>\">\n                <span class=\"material-symbols-rounded\">home</span>\n                개요\n            </a>\n            <a href=\"?id=<?= $comp_id ?>&page=schedule\" class=\"comp-nav-item <?= $page === 'schedule' ? 'active' : '' ?>\">\n                <span class=\"material-symbols-rounded\">schedule</span>\n                시간표\n            </a>\n            <a href=\"?id=<?= $comp_id ?>&page=notices\" class=\"comp-nav-item <?= $page === 'notices' ? 'active' : '' ?>\">\n                <span class=\"material-symbols-rounded\">campaign</span>\n                공지사항\n            </a>\n            <a href=\"?id=<?= $comp_id ?>&page=results\" class=\"comp-nav-item <?= $page === 'results' ? 'active' : '' ?>\">\n                <span class=\"material-symbols-rounded\">trophy</span>\n                종합결과\n            </a>\n            <a href=\"?id=<?= $comp_id ?>&page=live\" class=\"comp-nav-item <?= $page === 'live' ? 'active' : '' ?>\">\n                <span class=\"material-symbols-rounded\">live_tv</span>\n                실시간 결과\n            </a>\n        </nav>\n\n        <!-- 컨텐츠 -->\n        <div class=\"comp-content\">\n            <?php if ($page === 'main'): ?>\n                <!-- 대회 개요 -->\n                <h2 class=\"section-title\">\n                    <span class=\"material-symbols-rounded\">info</span>\n                    대회 개요\n                </h2>\n                \n                <div class=\"comp-overview\">\n                    <div class=\"overview-card\">\n                        <h3>\n                            <span class=\"material-symbols-rounded\">event</span>\n                            대회 정보\n                        </h3>\n                        <p><strong>대회명:</strong> <?= htmlspecialchars($competition['title']) ?></p>\n                        <p><strong>개최일:</strong> <?= $lang->formatDate($competition['date']) ?></p>\n                        <p><strong>장소:</strong> <?= htmlspecialchars($competition['location']) ?></p>\n                        <p><strong>주최:</strong> <?= htmlspecialchars($competition['host']) ?></p>\n                        <p><strong>상태:</strong> \n                            <span style=\"color: <?= $competition['status'] === 'upcoming' ? '#22c55e' : ($competition['status'] === 'ongoing' ? '#f59e0b' : '#64748b') ?>\">\n                                <?= t('status_' . $competition['status']) ?>\n                            </span>\n                        </p>\n                    </div>\n                    \n                    <div class=\"overview-card\">\n                        <h3>\n                            <span class=\"material-symbols-rounded\">analytics</span>\n                            대회 현황\n                        </h3>\n                        <p><strong>공지사항:</strong> <?= count($notices) ?>건</p>\n                        <p><strong>경기일정:</strong> <?= count($schedule) ?>개 종목</p>\n                        <p><strong>결과:</strong> <?= count($results) ?>개 종목 완료</p>\n                        <p><strong>생성일:</strong> <?= isset($competition['created_at']) ? date('Y-m-d', strtotime($competition['created_at'])) : '정보없음' ?></p>\n                    </div>\n                </div>\n\n            <?php elseif ($page === 'schedule'): ?>\n                <!-- 시간표 -->\n                <h2 class=\"section-title\">\n                    <span class=\"material-symbols-rounded\">schedule</span>\n                    대회 시간표\n                </h2>\n                \n                <?php if (empty($schedule)): ?>\n                    <div class=\"empty-state\">\n                        <div class=\"material-symbols-rounded\">schedule</div>\n                        <h3>시간표가 아직 등록되지 않았습니다</h3>\n                        <p>대회 시간표는 대회 관리자가 등록할 예정입니다.</p>\n                    </div>\n                <?php else: ?>\n                    <div class=\"item-list\">\n                        <?php foreach ($schedule as $item): ?>\n                            <div class=\"item-card\">\n                                <div class=\"item-header\">\n                                    <h3 class=\"item-title\"><?= htmlspecialchars($item['title'] ?? '경기 종목') ?></h3>\n                                    <span class=\"item-date\"><?= htmlspecialchars($item['time'] ?? '') ?></span>\n                                </div>\n                                <div class=\"item-content\">\n                                    <?= htmlspecialchars($item['description'] ?? '') ?>\n                                </div>\n                            </div>\n                        <?php endforeach; ?>\n                    </div>\n                <?php endif; ?>\n\n            <?php elseif ($page === 'notices'): ?>\n                <!-- 공지사항 -->\n                <h2 class=\"section-title\">\n                    <span class=\"material-symbols-rounded\">campaign</span>\n                    공지사항\n                </h2>\n                \n                <?php if (empty($notices)): ?>\n                    <div class=\"empty-state\">\n                        <div class=\"material-symbols-rounded\">campaign</div>\n                        <h3>공지사항이 아직 등록되지 않았습니다</h3>\n                        <p>중요한 공지사항이 있을 때 이곳에 표시됩니다.</p>\n                    </div>\n                <?php else: ?>\n                    <div class=\"item-list\">\n                        <?php foreach ($notices as $notice): ?>\n                            <div class=\"item-card\">\n                                <div class=\"item-header\">\n                                    <h3 class=\"item-title\"><?= htmlspecialchars($notice['title'] ?? '공지') ?></h3>\n                                    <span class=\"item-date\"><?= isset($notice['date']) ? date('Y-m-d', strtotime($notice['date'])) : '' ?></span>\n                                </div>\n                                <div class=\"item-content\">\n                                    <?= nl2br(htmlspecialchars($notice['content'] ?? '')) ?>\n                                </div>\n                            </div>\n                        <?php endforeach; ?>\n                    </div>\n                <?php endif; ?>\n\n            <?php elseif ($page === 'results'): ?>\n                <!-- 종합결과 -->\n                <h2 class=\"section-title\">\n                    <span class=\"material-symbols-rounded\">trophy</span>\n                    종합결과\n                </h2>\n                \n                <?php if (empty($results)): ?>\n                    <div class=\"empty-state\">\n                        <div class=\"material-symbols-rounded\">trophy</div>\n                        <h3>결과가 아직 발표되지 않았습니다</h3>\n                        <p>대회 종료 후 결과가 이곳에 표시됩니다.</p>\n                    </div>\n                <?php else: ?>\n                    <div class=\"item-list\">\n                        <?php foreach ($results as $result): ?>\n                            <div class=\"item-card\">\n                                <div class=\"item-header\">\n                                    <h3 class=\"item-title\"><?= htmlspecialchars($result['category'] ?? '경기 종목') ?></h3>\n                                    <span class=\"item-date\">결과 발표</span>\n                                </div>\n                                <div class=\"item-content\">\n                                    <?= htmlspecialchars($result['summary'] ?? '') ?>\n                                </div>\n                            </div>\n                        <?php endforeach; ?>\n                    </div>\n                <?php endif; ?>\n\n            <?php elseif ($page === 'live'): ?>\n                <!-- 실시간 결과 -->\n                <h2 class=\"section-title\">\n                    <span class=\"material-symbols-rounded\">live_tv</span>\n                    실시간 결과\n                </h2>\n                \n                <div class=\"empty-state\">\n                    <div class=\"material-symbols-rounded\">live_tv</div>\n                    <h3>실시간 결과 서비스 준비 중</h3>\n                    <p>대회 진행 중 실시간으로 결과를 확인할 수 있습니다.</p>\n                </div>\n\n            <?php endif; ?>\n        </div>\n    </div>\n</body>\n</html>","size_bytes":18649},"competitions.php":{"content":"<?php\nsession_start();\n\n// 다국어 시스템 로드\nrequire_once __DIR__ . '/lang/Language.php';\n$lang = Language::getInstance();\n\n// 대회 스케줄러 로드\nrequire_once __DIR__ . '/data/scheduler.php';\n$scheduler = new CompetitionScheduler();\n\n// 국가 이름 매핑 (전역 함수로 이동)\nif (!function_exists('getCountryName')) {\n    function getCountryName($code) {\n    $countries = [\n        'KR' => '대한민국',\n        'CN' => '중국',\n        'JP' => '일본',\n        'US' => '미국',\n        'DE' => '독일',\n        'UK' => '영국',\n        'FR' => '프랑스',\n        'IT' => '이탈리아',\n        'RU' => '러시아',\n        'AU' => '호주',\n        'CA' => '캐나다',\n        'SG' => '싱가포르',\n        'HK' => '홍콩',\n        'TW' => '대만',\n        'TH' => '태국',\n        'MY' => '말레이시아',\n        'VN' => '베트남',\n        'ID' => '인도네시아',\n        'PH' => '필리핀',\n        'IN' => '인도',\n        'BR' => '브라질',\n        'AR' => '아르헨티나',\n        'MX' => '멕시코',\n        'ES' => '스페인',\n        'NL' => '네덜란드',\n        'BE' => '벨기에',\n        'CH' => '스위스',\n        'AT' => '오스트리아',\n        'SE' => '스웨덴',\n        'NO' => '노르웨이',\n        'DK' => '덴마크',\n        'FI' => '핀란드',\n        'PL' => '폴란드',\n        'CZ' => '체코',\n        'OTHER' => '기타'\n    ];\n    return $countries[$code] ?? $code;\n    }\n}\n\n// 모든 대회 가져오기\n$all_competitions = $scheduler->getAllCompetitions();\n\n// 필터링\n$selected_country = $_GET['country'] ?? '';\nif ($selected_country) {\n    $all_competitions = array_filter($all_competitions, function($comp) use ($selected_country) {\n        return ($comp['country'] ?? 'KR') === $selected_country;\n    });\n}\n\n// 사용 가능한 국가 목록 생성\n$available_countries = [];\n$temp_competitions = $scheduler->getAllCompetitions();\nforeach ($temp_competitions as $comp) {\n    $country = $comp['country'] ?? 'KR';\n    if (!in_array($country, $available_countries)) {\n        $available_countries[] = $country;\n    }\n}\nsort($available_countries);\n\n// 상태별 분류\n$upcoming = [];\n$ongoing = [];\n$completed = [];\n\nforeach ($all_competitions as $comp) {\n    switch ($comp['status']) {\n        case 'upcoming':\n            $upcoming[] = $comp;\n            break;\n        case 'ongoing':\n            $ongoing[] = $comp;\n            break;\n        case 'completed':\n            $completed[] = $comp;\n            break;\n    }\n}\n\n?>\n<!DOCTYPE html>\n<html lang=\"<?= $lang->getCurrentLang() ?>\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title><?= t('nav_competitions') ?> | DanceOffice</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@24,400,0,0\" rel=\"stylesheet\">\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n\n        body {\n            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n            background: linear-gradient(135deg, #0f172a 0%, #1e293b 50%, #334155 100%);\n            color: #e2e8f0;\n            min-height: 100vh;\n        }\n\n        .container {\n            max-width: 1200px;\n            margin: 0 auto;\n            padding: 20px;\n        }\n\n        /* 상단 헤더 */\n        .page-header {\n            background: rgba(30, 41, 59, 0.8);\n            backdrop-filter: blur(20px);\n            border: 1px solid rgba(59, 130, 246, 0.2);\n            border-radius: 20px;\n            padding: 32px;\n            margin-bottom: 32px;\n            text-align: center;\n            position: relative;\n            overflow: hidden;\n        }\n\n        .page-header::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            background: radial-gradient(circle at 30% 20%, rgba(59, 130, 246, 0.1) 0%, transparent 50%);\n            pointer-events: none;\n        }\n\n        .page-header-content {\n            position: relative;\n            z-index: 2;\n        }\n\n        .page-title {\n            font-size: 32px;\n            font-weight: 700;\n            color: #f1f5f9;\n            margin-bottom: 16px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 12px;\n        }\n\n        .page-title .material-symbols-rounded {\n            color: #3b82f6;\n            font-size: 36px;\n        }\n\n        .page-subtitle {\n            color: #94a3b8;\n            font-size: 16px;\n        }\n\n        /* 백 버튼 */\n        .back-btn {\n            display: inline-flex;\n            align-items: center;\n            gap: 8px;\n            padding: 12px 24px;\n            background: rgba(59, 130, 246, 0.1);\n            color: #3b82f6;\n            text-decoration: none;\n            border-radius: 12px;\n            margin-bottom: 24px;\n            transition: all 0.3s ease;\n        }\n\n        .back-btn:hover {\n            background: rgba(59, 130, 246, 0.2);\n        }\n\n        /* 대회 섹션 */\n        .competition-section {\n            margin-bottom: 40px;\n        }\n\n        .section-header {\n            display: flex;\n            align-items: center;\n            gap: 12px;\n            margin-bottom: 24px;\n        }\n\n        .section-title {\n            font-size: 24px;\n            font-weight: 600;\n            color: #f1f5f9;\n        }\n\n        .section-title .material-symbols-rounded {\n            color: #3b82f6;\n            font-size: 28px;\n        }\n\n        .section-count {\n            background: rgba(59, 130, 246, 0.2);\n            color: #3b82f6;\n            padding: 4px 12px;\n            border-radius: 12px;\n            font-size: 14px;\n            font-weight: 500;\n        }\n\n        /* 대회 그리드 */\n        .competitions-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fill, minmax(360px, 1fr));\n            gap: 24px;\n        }\n\n        .competition-card {\n            background: rgba(30, 41, 59, 0.6);\n            backdrop-filter: blur(20px);\n            border: 1px solid rgba(59, 130, 246, 0.2);\n            border-radius: 16px;\n            padding: 24px;\n            transition: all 0.3s ease;\n            text-decoration: none;\n            color: inherit;\n            display: block;\n        }\n\n        .competition-card:hover {\n            border-color: rgba(59, 130, 246, 0.4);\n            transform: translateY(-4px);\n            box-shadow: 0 8px 32px rgba(59, 130, 246, 0.1);\n        }\n\n        .card-header {\n            display: flex;\n            justify-content: space-between;\n            align-items: flex-start;\n            margin-bottom: 16px;\n        }\n\n        .card-title {\n            font-size: 18px;\n            font-weight: 600;\n            color: #f1f5f9;\n            margin-bottom: 8px;\n        }\n\n        .card-status {\n            padding: 6px 12px;\n            border-radius: 20px;\n            font-size: 12px;\n            font-weight: 500;\n            white-space: nowrap;\n        }\n\n        .status-upcoming {\n            background: rgba(34, 197, 94, 0.2);\n            color: #22c55e;\n        }\n\n        .status-ongoing {\n            background: rgba(245, 158, 11, 0.2);\n            color: #f59e0b;\n        }\n\n        .status-completed {\n            background: rgba(100, 116, 139, 0.2);\n            color: #64748b;\n        }\n\n        .card-info {\n            space-y: 12px;\n        }\n\n        .info-item {\n            display: flex;\n            align-items: center;\n            gap: 8px;\n            color: #94a3b8;\n            margin-bottom: 8px;\n        }\n\n        .info-item .material-symbols-rounded {\n            color: #3b82f6;\n            font-size: 18px;\n        }\n\n        .card-description {\n            color: #64748b;\n            font-size: 14px;\n            margin-top: 12px;\n            line-height: 1.5;\n        }\n\n        /* 빈 상태 */\n        .empty-section {\n            text-align: center;\n            padding: 60px 20px;\n            background: rgba(30, 41, 59, 0.3);\n            border: 1px solid rgba(59, 130, 246, 0.1);\n            border-radius: 16px;\n            color: #64748b;\n        }\n\n        .empty-section .material-symbols-rounded {\n            font-size: 48px;\n            margin-bottom: 16px;\n            opacity: 0.5;\n        }\n\n        .empty-section h3 {\n            margin-bottom: 8px;\n        }\n\n        /* 필터링 섹션 */\n        .filter-section {\n            background: rgba(30, 41, 59, 0.6);\n            backdrop-filter: blur(20px);\n            border: 1px solid rgba(59, 130, 246, 0.2);\n            border-radius: 16px;\n            padding: 24px;\n            margin-bottom: 32px;\n        }\n\n        .filter-form {\n            display: flex;\n            align-items: center;\n            gap: 20px;\n            flex-wrap: wrap;\n        }\n\n        .filter-group {\n            display: flex;\n            align-items: center;\n            gap: 12px;\n        }\n\n        .filter-group label {\n            display: flex;\n            align-items: center;\n            gap: 8px;\n            font-weight: 500;\n            color: #f1f5f9;\n        }\n\n        .filter-group label .material-symbols-rounded {\n            color: #3b82f6;\n            font-size: 20px;\n        }\n\n        .filter-group select {\n            background: rgba(15, 23, 42, 0.8);\n            border: 1px solid rgba(59, 130, 246, 0.3);\n            border-radius: 8px;\n            color: #e2e8f0;\n            padding: 8px 16px;\n            font-size: 14px;\n            outline: none;\n            transition: all 0.3s ease;\n        }\n\n        .filter-group select:focus {\n            border-color: #3b82f6;\n            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n        }\n\n        .clear-filter {\n            display: flex;\n            align-items: center;\n            gap: 6px;\n            padding: 8px 16px;\n            background: rgba(239, 68, 68, 0.1);\n            color: #ef4444;\n            text-decoration: none;\n            border-radius: 8px;\n            font-size: 14px;\n            transition: all 0.3s ease;\n        }\n\n        .clear-filter:hover {\n            background: rgba(239, 68, 68, 0.2);\n        }\n\n        .clear-filter .material-symbols-rounded {\n            font-size: 18px;\n        }\n\n        /* 국가 표시 */\n        .country-flag {\n            display: inline-flex;\n            align-items: center;\n            gap: 6px;\n            background: rgba(59, 130, 246, 0.1);\n            color: #3b82f6;\n            padding: 4px 8px;\n            border-radius: 12px;\n            font-size: 12px;\n            font-weight: 500;\n        }\n\n        .country-flag .material-symbols-rounded {\n            font-size: 16px;\n        }\n\n        /* 모바일 대응 */\n        @media (max-width: 768px) {\n            .container {\n                padding: 16px;\n            }\n\n            .page-title {\n                font-size: 24px;\n            }\n\n            .competitions-grid {\n                grid-template-columns: 1fr;\n                gap: 16px;\n            }\n\n            .competition-card {\n                padding: 20px;\n            }\n\n            .section-title {\n                font-size: 20px;\n            }\n\n            .filter-form {\n                flex-direction: column;\n                align-items: stretch;\n                gap: 16px;\n            }\n\n            .filter-group {\n                justify-content: space-between;\n            }\n\n            .filter-group select {\n                flex: 1;\n                min-width: 0;\n            }\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <!-- 백 버튼 -->\n        <a href=\"/\" class=\"back-btn\">\n            <span class=\"material-symbols-rounded\">arrow_back</span>\n            <?= t('nav_dashboard') ?>\n        </a>\n\n        <!-- 페이지 헤더 -->\n        <div class=\"page-header\">\n            <div class=\"page-header-content\">\n                <h1 class=\"page-title\">\n                    <span class=\"material-symbols-rounded\">event</span>\n                    <?= t('nav_competitions') ?>\n                </h1>\n                <p class=\"page-subtitle\">\n                    댄스스포츠 대회 일정과 결과를 확인하세요\n                </p>\n            </div>\n        </div>\n\n        <!-- 필터링 -->\n        <div class=\"filter-section\">\n            <form method=\"get\" class=\"filter-form\">\n                <div class=\"filter-group\">\n                    <label for=\"country\">\n                        <span class=\"material-symbols-rounded\">flag</span>\n                        개최국가\n                    </label>\n                    <select id=\"country\" name=\"country\" onchange=\"this.form.submit()\">\n                        <option value=\"\">모든 국가</option>\n                        <?php foreach ($available_countries as $country_code): ?>\n                            <option value=\"<?= $country_code ?>\" <?= $selected_country === $country_code ? 'selected' : '' ?>>\n                                <?= getCountryName($country_code) ?>\n                            </option>\n                        <?php endforeach; ?>\n                    </select>\n                </div>\n                <?php if ($selected_country): ?>\n                    <a href=\"competitions.php\" class=\"clear-filter\">\n                        <span class=\"material-symbols-rounded\">clear</span>\n                        필터 초기화\n                    </a>\n                <?php endif; ?>\n            </form>\n        </div>\n\n        <!-- 진행 예정 대회 -->\n        <?php if (!empty($upcoming)): ?>\n        <div class=\"competition-section\">\n            <div class=\"section-header\">\n                <h2 class=\"section-title\">\n                    <span class=\"material-symbols-rounded\">upcoming</span>\n                    <?= t('status_upcoming') ?> <?= t('nav_competitions') ?>\n                </h2>\n                <span class=\"section-count\"><?= count($upcoming) ?>개</span>\n            </div>\n            <div class=\"competitions-grid\">\n                <?php foreach ($upcoming as $comp): ?>\n                <a href=\"/competition.php?id=<?= urlencode($comp['id']) ?>\" class=\"competition-card\">\n                    <div class=\"card-header\">\n                        <div>\n                            <h3 class=\"card-title\"><?= htmlspecialchars($comp['title'] ?? $comp['name']) ?></h3>\n                        </div>\n                        <span class=\"card-status status-upcoming\"><?= t('status_upcoming') ?></span>\n                    </div>\n                    <div class=\"card-info\">\n                        <div class=\"info-item\">\n                            <span class=\"material-symbols-rounded\">schedule</span>\n                            <?= $lang->formatDate($comp['date']) ?>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"material-symbols-rounded\">location_on</span>\n                            <?= htmlspecialchars($comp['location'] ?? $comp['place']) ?>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"material-symbols-rounded\">group</span>\n                            <?= htmlspecialchars($comp['host']) ?>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"country-flag\">\n                                <span class=\"material-symbols-rounded\">flag</span>\n                                <?= getCountryName($comp['country'] ?? 'KR') ?>\n                            </span>\n                        </div>\n                    </div>\n                    <?php if (!empty($comp['description'])): ?>\n                    <div class=\"card-description\">\n                        <?= htmlspecialchars($comp['description']) ?>\n                    </div>\n                    <?php endif; ?>\n                </a>\n                <?php endforeach; ?>\n            </div>\n        </div>\n        <?php endif; ?>\n\n        <!-- 진행 중인 대회 -->\n        <?php if (!empty($ongoing)): ?>\n        <div class=\"competition-section\">\n            <div class=\"section-header\">\n                <h2 class=\"section-title\">\n                    <span class=\"material-symbols-rounded\">live_tv</span>\n                    <?= t('status_ongoing') ?> <?= t('nav_competitions') ?>\n                </h2>\n                <span class=\"section-count\"><?= count($ongoing) ?>개</span>\n            </div>\n            <div class=\"competitions-grid\">\n                <?php foreach ($ongoing as $comp): ?>\n                <a href=\"/competition.php?id=<?= urlencode($comp['id']) ?>\" class=\"competition-card\">\n                    <div class=\"card-header\">\n                        <div>\n                            <h3 class=\"card-title\"><?= htmlspecialchars($comp['title'] ?? $comp['name']) ?></h3>\n                        </div>\n                        <span class=\"card-status status-ongoing\"><?= t('status_ongoing') ?></span>\n                    </div>\n                    <div class=\"card-info\">\n                        <div class=\"info-item\">\n                            <span class=\"material-symbols-rounded\">schedule</span>\n                            <?= $lang->formatDate($comp['date']) ?>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"material-symbols-rounded\">location_on</span>\n                            <?= htmlspecialchars($comp['location'] ?? $comp['place']) ?>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"material-symbols-rounded\">group</span>\n                            <?= htmlspecialchars($comp['host']) ?>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"country-flag\">\n                                <span class=\"material-symbols-rounded\">flag</span>\n                                <?= getCountryName($comp['country'] ?? 'KR') ?>\n                            </span>\n                        </div>\n                    </div>\n                    <?php if (!empty($comp['description'])): ?>\n                    <div class=\"card-description\">\n                        <?= htmlspecialchars($comp['description']) ?>\n                    </div>\n                    <?php endif; ?>\n                </a>\n                <?php endforeach; ?>\n            </div>\n        </div>\n        <?php endif; ?>\n\n        <!-- 완료된 대회 -->\n        <?php if (!empty($completed)): ?>\n        <div class=\"competition-section\">\n            <div class=\"section-header\">\n                <h2 class=\"section-title\">\n                    <span class=\"material-symbols-rounded\">trophy</span>\n                    <?= t('status_completed') ?> <?= t('nav_competitions') ?>\n                </h2>\n                <span class=\"section-count\"><?= count($completed) ?>개</span>\n            </div>\n            <div class=\"competitions-grid\">\n                <?php foreach ($completed as $comp): ?>\n                <a href=\"/competition.php?id=<?= urlencode($comp['id']) ?>\" class=\"competition-card\">\n                    <div class=\"card-header\">\n                        <div>\n                            <h3 class=\"card-title\"><?= htmlspecialchars($comp['title'] ?? $comp['name']) ?></h3>\n                        </div>\n                        <span class=\"card-status status-completed\"><?= t('status_completed') ?></span>\n                    </div>\n                    <div class=\"card-info\">\n                        <div class=\"info-item\">\n                            <span class=\"material-symbols-rounded\">schedule</span>\n                            <?= $lang->formatDate($comp['date']) ?>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"material-symbols-rounded\">location_on</span>\n                            <?= htmlspecialchars($comp['location'] ?? $comp['place']) ?>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"material-symbols-rounded\">group</span>\n                            <?= htmlspecialchars($comp['host']) ?>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"country-flag\">\n                                <span class=\"material-symbols-rounded\">flag</span>\n                                <?= getCountryName($comp['country'] ?? 'KR') ?>\n                            </span>\n                        </div>\n                    </div>\n                    <?php if (!empty($comp['description'])): ?>\n                    <div class=\"card-description\">\n                        <?= htmlspecialchars($comp['description']) ?>\n                    </div>\n                    <?php endif; ?>\n                </a>\n                <?php endforeach; ?>\n            </div>\n        </div>\n        <?php endif; ?>\n\n        <!-- 대회가 없는 경우 -->\n        <?php if (empty($upcoming) && empty($ongoing) && empty($completed)): ?>\n        <div class=\"empty-section\">\n            <div class=\"material-symbols-rounded\">event_busy</div>\n            <h3>등록된 대회가 없습니다</h3>\n            <p>아직 등록된 대회가 없습니다. 새로운 대회가 등록되면 이곳에 표시됩니다.</p>\n        </div>\n        <?php endif; ?>\n    </div>\n</body>\n</html>","size_bytes":21754},"results.php":{"content":"<?php\nsession_start();\n\n// 다국어 시스템 로드\nrequire_once __DIR__ . '/lang/Language.php';\n$lang = Language::getInstance();\n\n// 대회 스케줄러 로드\nrequire_once __DIR__ . '/data/scheduler.php';\n$scheduler = new CompetitionScheduler();\n\n// 국가 이름 매핑\nfunction getCountryName($code) {\n    $countries = [\n        'KR' => '대한민국',\n        'CN' => '중국',\n        'JP' => '일본',\n        'US' => '미국',\n        'DE' => '독일',\n        'UK' => '영국',\n        'FR' => '프랑스',\n        'IT' => '이탈리아',\n        'RU' => '러시아',\n        'AU' => '호주',\n        'CA' => '캐나다',\n        'SG' => '싱가포르',\n        'HK' => '홍콩',\n        'TW' => '대만',\n        'TH' => '태국',\n        'MY' => '말레이시아',\n        'VN' => '베트남',\n        'ID' => '인도네시아',\n        'PH' => '필리핀',\n        'IN' => '인도',\n        'BR' => '브라질',\n        'AR' => '아르헨티나',\n        'MX' => '멕시코',\n        'ES' => '스페인',\n        'NL' => '네덜란드',\n        'BE' => '벨기에',\n        'CH' => '스위스',\n        'AT' => '오스트리아',\n        'SE' => '스웨덴',\n        'NO' => '노르웨이',\n        'DK' => '덴마크',\n        'FI' => '핀란드',\n        'PL' => '폴란드',\n        'CZ' => '체코',\n        'OTHER' => '기타'\n    ];\n    return $countries[$code] ?? $code;\n}\n\n// 완료된 대회들만 가져와서 최신순으로 정렬\n$all_competitions = $scheduler->getAllCompetitions();\n$completed_competitions = array_filter($all_competitions, function($comp) {\n    return $comp['status'] === 'completed';\n});\n\n// 날짜 기준으로 최신순 정렬\nusort($completed_competitions, function($a, $b) {\n    return strtotime($b['date']) - strtotime($a['date']);\n});\n\n// 특정 대회의 결과 보기\n$view_comp_id = $_GET['comp_id'] ?? '';\n$selected_competition = null;\nif ($view_comp_id) {\n    foreach ($completed_competitions as $comp) {\n        if ($comp['id'] === $view_comp_id) {\n            $selected_competition = $comp;\n            break;\n        }\n    }\n}\n\n// 결과 데이터 로드 함수\nfunction getCompetitionResults($comp_data_path) {\n    if (!$comp_data_path) return [];\n    \n    $results_file = $comp_data_path . '/results.json';\n    if (file_exists($results_file)) {\n        return json_decode(file_get_contents($results_file), true) ?: [];\n    }\n    return [];\n}\n\n$competition_results = [];\nif ($selected_competition && isset($selected_competition['comp_data_path'])) {\n    $competition_results = getCompetitionResults($selected_competition['comp_data_path']);\n}\n\n?>\n<!DOCTYPE html>\n<html lang=\"<?= $lang->getCurrentLang() ?>\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title><?= $selected_competition ? htmlspecialchars($selected_competition['title']) . ' - ' : '' ?><?= t('nav_results') ?> | DanceOffice</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@24,400,0,0\" rel=\"stylesheet\">\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n\n        body {\n            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n            background: linear-gradient(135deg, #0f172a 0%, #1e293b 50%, #334155 100%);\n            color: #e2e8f0;\n            min-height: 100vh;\n        }\n\n        .container {\n            max-width: 1200px;\n            margin: 0 auto;\n            padding: 20px;\n        }\n\n        /* 상단 헤더 */\n        .page-header {\n            background: rgba(30, 41, 59, 0.8);\n            backdrop-filter: blur(20px);\n            border: 1px solid rgba(59, 130, 246, 0.2);\n            border-radius: 20px;\n            padding: 32px;\n            margin-bottom: 32px;\n            text-align: center;\n            position: relative;\n            overflow: hidden;\n        }\n\n        .page-header::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            background: radial-gradient(circle at 30% 20%, rgba(59, 130, 246, 0.1) 0%, transparent 50%);\n            pointer-events: none;\n        }\n\n        .page-header-content {\n            position: relative;\n            z-index: 2;\n        }\n\n        .page-title {\n            font-size: 32px;\n            font-weight: 700;\n            color: #f1f5f9;\n            margin-bottom: 16px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 12px;\n        }\n\n        .page-title .material-symbols-rounded {\n            color: #3b82f6;\n            font-size: 36px;\n        }\n\n        .page-subtitle {\n            color: #94a3b8;\n            font-size: 16px;\n        }\n\n        /* 백 버튼 */\n        .back-btn {\n            display: inline-flex;\n            align-items: center;\n            gap: 8px;\n            padding: 12px 24px;\n            background: rgba(59, 130, 246, 0.1);\n            color: #3b82f6;\n            text-decoration: none;\n            border-radius: 12px;\n            margin-bottom: 24px;\n            transition: all 0.3s ease;\n        }\n\n        .back-btn:hover {\n            background: rgba(59, 130, 246, 0.2);\n        }\n\n        /* 대회 리스트 스타일 */\n        .competitions-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fill, minmax(360px, 1fr));\n            gap: 24px;\n            margin-bottom: 32px;\n        }\n\n        .competition-card {\n            background: rgba(30, 41, 59, 0.6);\n            backdrop-filter: blur(20px);\n            border: 1px solid rgba(59, 130, 246, 0.2);\n            border-radius: 16px;\n            padding: 24px;\n            transition: all 0.3s ease;\n            text-decoration: none;\n            color: inherit;\n            display: block;\n        }\n\n        .competition-card:hover {\n            border-color: rgba(59, 130, 246, 0.4);\n            transform: translateY(-4px);\n            box-shadow: 0 8px 32px rgba(59, 130, 246, 0.1);\n        }\n\n        .card-header {\n            display: flex;\n            justify-content: space-between;\n            align-items: flex-start;\n            margin-bottom: 16px;\n        }\n\n        .card-title {\n            font-size: 18px;\n            font-weight: 600;\n            color: #f1f5f9;\n            margin-bottom: 8px;\n        }\n\n        .card-date {\n            color: #64748b;\n            font-size: 14px;\n            background: rgba(100, 116, 139, 0.2);\n            padding: 4px 12px;\n            border-radius: 12px;\n        }\n\n        .card-info {\n            space-y: 12px;\n        }\n\n        .info-item {\n            display: flex;\n            align-items: center;\n            gap: 8px;\n            color: #94a3b8;\n            margin-bottom: 8px;\n            font-size: 14px;\n        }\n\n        .info-item .material-symbols-rounded {\n            color: #3b82f6;\n            font-size: 18px;\n        }\n\n        .country-flag {\n            display: inline-flex;\n            align-items: center;\n            gap: 6px;\n            background: rgba(59, 130, 246, 0.1);\n            color: #3b82f6;\n            padding: 4px 8px;\n            border-radius: 12px;\n            font-size: 12px;\n            font-weight: 500;\n        }\n\n        .country-flag .material-symbols-rounded {\n            font-size: 16px;\n        }\n\n        /* 결과 상세 보기 */\n        .results-detail {\n            background: rgba(30, 41, 59, 0.6);\n            backdrop-filter: blur(20px);\n            border: 1px solid rgba(59, 130, 246, 0.2);\n            border-radius: 20px;\n            padding: 32px;\n        }\n\n        .competition-info {\n            background: rgba(15, 23, 42, 0.6);\n            border: 1px solid rgba(59, 130, 246, 0.1);\n            border-radius: 16px;\n            padding: 24px;\n            margin-bottom: 32px;\n        }\n\n        .competition-info h2 {\n            color: #f1f5f9;\n            font-size: 24px;\n            margin-bottom: 16px;\n            display: flex;\n            align-items: center;\n            gap: 12px;\n        }\n\n        .competition-info h2 .material-symbols-rounded {\n            color: #3b82f6;\n            font-size: 28px;\n        }\n\n        .info-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n            gap: 16px;\n        }\n\n        .results-section {\n            margin-top: 32px;\n        }\n\n        .section-title {\n            font-size: 24px;\n            font-weight: 600;\n            color: #f1f5f9;\n            margin-bottom: 24px;\n            display: flex;\n            align-items: center;\n            gap: 12px;\n        }\n\n        .section-title .material-symbols-rounded {\n            color: #3b82f6;\n            font-size: 28px;\n        }\n\n        .result-item {\n            background: rgba(15, 23, 42, 0.6);\n            border: 1px solid rgba(59, 130, 246, 0.1);\n            border-radius: 16px;\n            padding: 20px;\n            margin-bottom: 16px;\n        }\n\n        .result-header {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            margin-bottom: 12px;\n        }\n\n        .result-title {\n            font-size: 16px;\n            font-weight: 600;\n            color: #f1f5f9;\n        }\n\n        .result-content {\n            color: #94a3b8;\n            line-height: 1.6;\n        }\n\n        /* 빈 상태 */\n        .empty-state {\n            text-align: center;\n            padding: 60px 20px;\n            color: #64748b;\n        }\n\n        .empty-state .material-symbols-rounded {\n            font-size: 48px;\n            margin-bottom: 16px;\n            opacity: 0.5;\n        }\n\n        .empty-state h3 {\n            margin-bottom: 8px;\n        }\n\n        /* 모바일 대응 */\n        @media (max-width: 768px) {\n            .container {\n                padding: 16px;\n            }\n\n            .page-title {\n                font-size: 24px;\n            }\n\n            .competitions-grid {\n                grid-template-columns: 1fr;\n                gap: 16px;\n            }\n\n            .competition-card {\n                padding: 20px;\n            }\n\n            .results-detail {\n                padding: 24px 20px;\n            }\n\n            .info-grid {\n                grid-template-columns: 1fr;\n            }\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <!-- 백 버튼 -->\n        <a href=\"/\" class=\"back-btn\">\n            <span class=\"material-symbols-rounded\">arrow_back</span>\n            <?= t('nav_dashboard') ?>\n        </a>\n\n        <?php if ($selected_competition): ?>\n        <!-- 특정 대회 결과 상세 보기 -->\n        <div class=\"page-header\">\n            <div class=\"page-header-content\">\n                <h1 class=\"page-title\">\n                    <span class=\"material-symbols-rounded\">trophy</span>\n                    <?= htmlspecialchars($selected_competition['title']) ?> 결과\n                </h1>\n                <p class=\"page-subtitle\">\n                    <?= $lang->formatDate($selected_competition['date']) ?> 개최\n                </p>\n            </div>\n        </div>\n\n        <div class=\"results-detail\">\n            <!-- 대회 정보 -->\n            <div class=\"competition-info\">\n                <h2>\n                    <span class=\"material-symbols-rounded\">info</span>\n                    대회 정보\n                </h2>\n                <div class=\"info-grid\">\n                    <div class=\"info-item\">\n                        <span class=\"material-symbols-rounded\">event</span>\n                        <strong>대회명:</strong> <?= htmlspecialchars($selected_competition['title']) ?>\n                    </div>\n                    <div class=\"info-item\">\n                        <span class=\"material-symbols-rounded\">schedule</span>\n                        <strong>개최일:</strong> <?= $lang->formatDate($selected_competition['date']) ?>\n                    </div>\n                    <div class=\"info-item\">\n                        <span class=\"material-symbols-rounded\">location_on</span>\n                        <strong>장소:</strong> <?= htmlspecialchars($selected_competition['location']) ?>\n                    </div>\n                    <div class=\"info-item\">\n                        <span class=\"material-symbols-rounded\">group</span>\n                        <strong>주최:</strong> <?= htmlspecialchars($selected_competition['host']) ?>\n                    </div>\n                    <div class=\"info-item\">\n                        <span class=\"country-flag\">\n                            <span class=\"material-symbols-rounded\">flag</span>\n                            <?= getCountryName($selected_competition['country'] ?? 'KR') ?>\n                        </span>\n                    </div>\n                </div>\n            </div>\n\n            <!-- 종합 결과 -->\n            <div class=\"results-section\">\n                <h2 class=\"section-title\">\n                    <span class=\"material-symbols-rounded\">military_tech</span>\n                    종합 결과\n                </h2>\n\n                <?php if (empty($competition_results)): ?>\n                    <div class=\"empty-state\">\n                        <div class=\"material-symbols-rounded\">trophy</div>\n                        <h3>결과가 아직 발표되지 않았습니다</h3>\n                        <p>대회 결과가 집계되면 이곳에 표시됩니다.</p>\n                    </div>\n                <?php else: ?>\n                    <?php foreach ($competition_results as $result): ?>\n                        <div class=\"result-item\">\n                            <div class=\"result-header\">\n                                <h3 class=\"result-title\"><?= htmlspecialchars($result['category'] ?? '경기 종목') ?></h3>\n                            </div>\n                            <div class=\"result-content\">\n                                <?= nl2br(htmlspecialchars($result['summary'] ?? $result['content'] ?? '')) ?>\n                            </div>\n                        </div>\n                    <?php endforeach; ?>\n                <?php endif; ?>\n            </div>\n\n            <!-- 대회 목록으로 돌아가기 -->\n            <div style=\"text-align: center; margin-top: 32px;\">\n                <a href=\"/results.php\" class=\"back-btn\">\n                    <span class=\"material-symbols-rounded\">list</span>\n                    대회 목록으로 돌아가기\n                </a>\n            </div>\n        </div>\n\n        <?php else: ?>\n        <!-- 대회 목록 보기 -->\n        <div class=\"page-header\">\n            <div class=\"page-header-content\">\n                <h1 class=\"page-title\">\n                    <span class=\"material-symbols-rounded\">trophy</span>\n                    <?= t('nav_results') ?>\n                </h1>\n                <p class=\"page-subtitle\">\n                    완료된 대회의 종합 결과를 확인하세요\n                </p>\n            </div>\n        </div>\n\n        <?php if (empty($completed_competitions)): ?>\n            <div class=\"empty-state\">\n                <div class=\"material-symbols-rounded\">trophy</div>\n                <h3>완료된 대회가 없습니다</h3>\n                <p>대회가 완료되면 이곳에 결과가 표시됩니다.</p>\n            </div>\n        <?php else: ?>\n            <div class=\"competitions-grid\">\n                <?php foreach ($completed_competitions as $comp): ?>\n                <a href=\"results.php?comp_id=<?= urlencode($comp['id']) ?>\" class=\"competition-card\">\n                    <div class=\"card-header\">\n                        <div>\n                            <h3 class=\"card-title\"><?= htmlspecialchars($comp['title'] ?? $comp['name']) ?></h3>\n                        </div>\n                        <span class=\"card-date\"><?= date('Y.m.d', strtotime($comp['date'])) ?></span>\n                    </div>\n                    <div class=\"card-info\">\n                        <div class=\"info-item\">\n                            <span class=\"material-symbols-rounded\">location_on</span>\n                            <?= htmlspecialchars($comp['location'] ?? $comp['place']) ?>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"material-symbols-rounded\">group</span>\n                            <?= htmlspecialchars($comp['host']) ?>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"country-flag\">\n                                <span class=\"material-symbols-rounded\">flag</span>\n                                <?= getCountryName($comp['country'] ?? 'KR') ?>\n                            </span>\n                        </div>\n                    </div>\n                </a>\n                <?php endforeach; ?>\n            </div>\n        <?php endif; ?>\n\n        <?php endif; ?>\n    </div>\n</body>\n</html>","size_bytes":17219},"data/NoticeManager.php":{"content":"<?php\nclass NoticeManager {\n    private $pdo;\n    \n    public function __construct() {\n        $this->connect();\n    }\n    \n    private function connect() {\n        // 먼저 PDO PostgreSQL 드라이버가 사용 가능한지 확인\n        if (!extension_loaded('pdo_pgsql')) {\n            throw new Exception('PDO PostgreSQL extension not loaded');\n        }\n        \n        // 환경 변수에서 DATABASE_URL 가져오기\n        $database_url = $_ENV['DATABASE_URL'] ?? getenv('DATABASE_URL');\n        if (!$database_url) {\n            // 개별 환경 변수로 DSN 구성 시도\n            $host = $_ENV['PGHOST'] ?? getenv('PGHOST');\n            $port = $_ENV['PGPORT'] ?? getenv('PGPORT') ?? '5432';\n            $dbname = $_ENV['PGDATABASE'] ?? getenv('PGDATABASE');\n            $user = $_ENV['PGUSER'] ?? getenv('PGUSER');\n            $password = $_ENV['PGPASSWORD'] ?? getenv('PGPASSWORD');\n            \n            if ($host && $dbname && $user && $password) {\n                $database_url = \"pgsql:host={$host};port={$port};dbname={$dbname};user={$user};password={$password}\";\n            } else {\n                throw new Exception('DATABASE_URL or individual PostgreSQL environment variables not set');\n            }\n        }\n        \n        try {\n            // PDO 옵션 설정\n            $options = [\n                PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION,\n                PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC,\n                PDO::ATTR_EMULATE_PREPARES => false,\n                PDO::ATTR_STRINGIFY_FETCHES => false\n            ];\n            \n            $this->pdo = new PDO($database_url, null, null, $options);\n            \n            // 연결 테스트\n            $this->pdo->query('SELECT 1');\n            \n        } catch (PDOException $e) {\n            throw new Exception('Database connection failed: ' . $e->getMessage());\n        }\n    }\n    \n    /**\n     * 공지사항 생성\n     */\n    public function createNotice($title, $content, $imagePath = null, $isPinned = false) {\n        $sql = \"INSERT INTO notices (title, content, image_path, is_pinned, created_at, updated_at) \n                VALUES (:title, :content, :image_path, :is_pinned, NOW(), NOW())\";\n        \n        $stmt = $this->pdo->prepare($sql);\n        $stmt->execute([\n            ':title' => $title,\n            ':content' => $content,\n            ':image_path' => $imagePath,\n            ':is_pinned' => $isPinned\n        ]);\n        \n        return $this->pdo->lastInsertId();\n    }\n    \n    /**\n     * 모든 공지사항 조회 (고정글 우선, 최신순)\n     */\n    public function getAllNotices($limit = null) {\n        $sql = \"SELECT * FROM notices ORDER BY is_pinned DESC, created_at DESC\";\n        if ($limit) {\n            $sql .= \" LIMIT :limit\";\n        }\n        \n        $stmt = $this->pdo->prepare($sql);\n        if ($limit) {\n            $stmt->bindValue(':limit', $limit, PDO::PARAM_INT);\n        }\n        $stmt->execute();\n        \n        return $stmt->fetchAll();\n    }\n    \n    /**\n     * 고정된 공지사항만 조회\n     */\n    public function getPinnedNotices() {\n        $sql = \"SELECT * FROM notices WHERE is_pinned = true ORDER BY created_at DESC\";\n        $stmt = $this->pdo->prepare($sql);\n        $stmt->execute();\n        \n        return $stmt->fetchAll();\n    }\n    \n    /**\n     * 최신 공지사항 조회 (메인 페이지용)\n     */\n    public function getRecentNotices($limit = 5) {\n        $sql = \"SELECT * FROM notices ORDER BY is_pinned DESC, created_at DESC LIMIT :limit\";\n        $stmt = $this->pdo->prepare($sql);\n        $stmt->bindValue(':limit', $limit, PDO::PARAM_INT);\n        $stmt->execute();\n        \n        return $stmt->fetchAll();\n    }\n    \n    /**\n     * 특정 공지사항 조회\n     */\n    public function getNoticeById($id) {\n        $sql = \"SELECT * FROM notices WHERE id = :id\";\n        $stmt = $this->pdo->prepare($sql);\n        $stmt->execute([':id' => $id]);\n        \n        return $stmt->fetch();\n    }\n    \n    /**\n     * 공지사항 수정\n     */\n    public function updateNotice($id, $title, $content, $imagePath = null, $isPinned = false) {\n        $sql = \"UPDATE notices SET title = :title, content = :content, image_path = :image_path, \n                is_pinned = :is_pinned, updated_at = NOW() WHERE id = :id\";\n        \n        $stmt = $this->pdo->prepare($sql);\n        return $stmt->execute([\n            ':id' => $id,\n            ':title' => $title,\n            ':content' => $content,\n            ':image_path' => $imagePath,\n            ':is_pinned' => $isPinned\n        ]);\n    }\n    \n    /**\n     * 공지사항 삭제\n     */\n    public function deleteNotice($id) {\n        // 이미지 파일도 함께 삭제\n        $notice = $this->getNoticeById($id);\n        if ($notice && $notice['image_path']) {\n            $imagePath = __DIR__ . '/../' . $notice['image_path'];\n            if (file_exists($imagePath)) {\n                unlink($imagePath);\n            }\n        }\n        \n        $sql = \"DELETE FROM notices WHERE id = :id\";\n        $stmt = $this->pdo->prepare($sql);\n        return $stmt->execute([':id' => $id]);\n    }\n    \n    /**\n     * 고정 상태 토글\n     */\n    public function togglePin($id) {\n        $sql = \"UPDATE notices SET is_pinned = NOT is_pinned, updated_at = NOW() WHERE id = :id\";\n        $stmt = $this->pdo->prepare($sql);\n        return $stmt->execute([':id' => $id]);\n    }\n    \n    /**\n     * 이미지 업로드 처리\n     */\n    public function uploadImage($file) {\n        $uploadDir = __DIR__ . '/../uploads/notices/';\n        if (!is_dir($uploadDir)) {\n            mkdir($uploadDir, 0755, true);\n        }\n        \n        $allowedTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];\n        if (!in_array($file['type'], $allowedTypes)) {\n            throw new Exception('허용되지 않는 파일 형식입니다. (JPG, PNG, GIF, WebP만 가능)');\n        }\n        \n        $maxSize = 5 * 1024 * 1024; // 5MB\n        if ($file['size'] > $maxSize) {\n            throw new Exception('파일 크기가 너무 큽니다. (최대 5MB)');\n        }\n        \n        $extension = pathinfo($file['name'], PATHINFO_EXTENSION);\n        $filename = uniqid('notice_') . '.' . $extension;\n        $uploadPath = $uploadDir . $filename;\n        \n        if (!move_uploaded_file($file['tmp_name'], $uploadPath)) {\n            throw new Exception('파일 업로드에 실패했습니다.');\n        }\n        \n        return 'uploads/notices/' . $filename;\n    }\n    \n    /**\n     * 공지사항 통계\n     */\n    public function getNoticeStats() {\n        $sql = \"SELECT \n                    COUNT(*) as total,\n                    COUNT(CASE WHEN is_pinned = true THEN 1 END) as pinned,\n                    COUNT(CASE WHEN created_at >= NOW() - INTERVAL '7 days' THEN 1 END) as recent\n                FROM notices\";\n        \n        $stmt = $this->pdo->prepare($sql);\n        $stmt->execute();\n        \n        return $stmt->fetch();\n    }\n}\n?>","size_bytes":7014},"test-pdo.php":{"content":"<?php\necho \"<h2>PDO Test</h2>\";\n\necho \"<h3>Available PDO Drivers:</h3>\";\nprint_r(PDO::getAvailableDrivers());\n\necho \"<h3>Extension Check:</h3>\";\necho \"PDO extension loaded: \" . (extension_loaded('pdo') ? '✓ Yes' : '✗ No') . \"<br>\";\necho \"PDO_PGSQL extension loaded: \" . (extension_loaded('pdo_pgsql') ? '✓ Yes' : '✗ No') . \"<br>\";\n\necho \"<h3>Environment Variables:</h3>\";\necho \"DATABASE_URL: \" . ($_ENV['DATABASE_URL'] ?? getenv('DATABASE_URL') ?? 'Not set') . \"<br>\";\n\nif (extension_loaded('pdo_pgsql')) {\n    echo \"<h3>Testing PostgreSQL Connection:</h3>\";\n    try {\n        $database_url = $_ENV['DATABASE_URL'] ?? getenv('DATABASE_URL');\n        if (!$database_url) {\n            echo \"DATABASE_URL not set\";\n        } else {\n            $pdo = new PDO($database_url);\n            $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n            echo \"✓ PostgreSQL connection successful!\";\n        }\n    } catch (PDOException $e) {\n        echo \"✗ Connection failed: \" . $e->getMessage();\n    }\n} else {\n    echo \"PDO_PGSQL extension not loaded\";\n}\n?>","size_bytes":1077},"comp/push_timetable.php":{"content":"<?php\n/**\n * 타임테이블 데이터를 메인 시스템으로 푸시하는 API\n */\n\nheader('Content-Type: application/json');\nerror_reporting(E_ALL);\nini_set('display_errors', 1);\n\nsession_start();\nrequire_once 'auth.php';\n\n// 권한 확인\nif (!isset($_SESSION['user']) || !hasPermission($_SESSION['user'], 'create_comp')) {\n    echo json_encode(['success' => false, 'message' => '권한이 없습니다.']);\n    exit;\n}\n\n$comp_id = $_POST['comp_id'] ?? '';\nif (!$comp_id || !preg_match('/^\\d{8}-\\d+$/', $comp_id)) {\n    echo json_encode(['success' => false, 'message' => '유효하지 않은 대회 ID입니다.']);\n    exit;\n}\n\ntry {\n    $data_dir = __DIR__ . \"/data/$comp_id\";\n    $info_file = \"$data_dir/info.json\";\n    $runorder_file = \"$data_dir/RunOrder_Tablet.txt\";\n    $special_events_file = \"$data_dir/special_events.json\";\n    \n    // 대회 정보 확인\n    if (!file_exists($info_file)) {\n        throw new Exception('대회 정보를 찾을 수 없습니다.');\n    }\n    \n    $info = json_decode(file_get_contents($info_file), true);\n    if (!$info) {\n        throw new Exception('대회 정보를 읽을 수 없습니다.');\n    }\n    \n    // 타임테이블 데이터 처리\n    $timetable_data = [];\n    $events = [];\n    \n    // RunOrder에서 이벤트 불러오기\n    if (file_exists($runorder_file)) {\n        $lines = file($runorder_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n        foreach ($lines as $line) {\n            if (preg_match('/^bom/', $line)) continue;\n            \n            $cols = array_map('trim', explode(',', $line));\n            if (count($cols) < 14) continue;\n            \n            $events[] = [\n                'no' => $cols[0] ?? '',\n                'desc' => $cols[1] ?? '',\n                'roundtype' => $cols[2] ?? '',\n                'roundnum' => $cols[3] ?? '',\n                'dances' => array_filter(array_slice($cols, 6, 5)), // 6~10번째 컬럼\n                'extra_time' => isset($cols[14]) && !empty($cols[14]) ? intval($cols[14]) : 0\n            ];\n        }\n    }\n    \n    // 특별 이벤트 불러오기\n    $special_events = [];\n    if (file_exists($special_events_file)) {\n        $special_events = json_decode(file_get_contents($special_events_file), true) ?? [];\n    }\n    \n    // 타임테이블 데이터 구성\n    $timetable_data = [\n        'comp_id' => $comp_id,\n        'competition_info' => $info,\n        'events' => $events,\n        'special_events' => $special_events,\n        'generated_at' => date('Y-m-d H:i:s'),\n        'generated_by' => $_SESSION['user']['username']\n    ];\n    \n    // 메인 시스템 타임테이블 디렉토리에 저장\n    $main_timetable_dir = __DIR__ . '/../data/timetables';\n    if (!is_dir($main_timetable_dir)) {\n        mkdir($main_timetable_dir, 0755, true);\n    }\n    \n    $timetable_file = \"$main_timetable_dir/timetable_$comp_id.json\";\n    $result = file_put_contents($timetable_file, json_encode($timetable_data, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE));\n    \n    if ($result === false) {\n        throw new Exception('타임테이블 데이터 저장에 실패했습니다.');\n    }\n    \n    // 메인 시스템의 competitions.json 업데이트\n    $competitions_file = __DIR__ . '/../data/competitions.json';\n    $competitions = [];\n    \n    if (file_exists($competitions_file)) {\n        $competitions = json_decode(file_get_contents($competitions_file), true) ?? [];\n    }\n    \n    // 기존 대회 정보 찾기\n    $competition_updated = false;\n    foreach ($competitions as &$competition) {\n        if (isset($competition['our_system_id']) && $competition['our_system_id'] === $comp_id) {\n            $competition['timetable_updated_at'] = date('Y-m-d H:i:s');\n            $competition['timetable_file'] = \"timetables/timetable_$comp_id.json\";\n            $competition['has_timetable'] = true;\n            $competition_updated = true;\n            break;\n        }\n    }\n    \n    // 새로운 대회라면 추가\n    if (!$competition_updated) {\n        $competitions[] = [\n            'id' => 'comp_' . $comp_id,\n            'name' => $info['title'],\n            'title' => $info['title'],\n            'subtitle' => '',\n            'date' => $info['date'],\n            'location' => $info['place'],\n            'place' => $info['place'],\n            'host' => $info['host'],\n            'country' => $info['country'] ?? 'KR',\n            'status' => (strtotime($info['date']) < time()) ? 'completed' : 'upcoming',\n            'our_system_id' => $comp_id,\n            'timetable_file' => \"timetables/timetable_$comp_id.json\",\n            'timetable_updated_at' => date('Y-m-d H:i:s'),\n            'has_timetable' => true,\n            'created_at' => date('Y-m-d H:i:s', $info['created']),\n            'updated_at' => date('Y-m-d H:i:s')\n        ];\n    }\n    \n    // competitions.json 저장\n    file_put_contents($competitions_file, json_encode($competitions, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE));\n    \n    echo json_encode([\n        'success' => true,\n        'message' => '타임테이블이 성공적으로 대회 대쉬보드에 푸시되었습니다.',\n        'data' => [\n            'comp_id' => $comp_id,\n            'competition_title' => $info['title'],\n            'events_count' => count($events),\n            'special_events_count' => count($special_events),\n            'timetable_file' => $timetable_file,\n            'pushed_at' => date('Y-m-d H:i:s')\n        ]\n    ]);\n    \n} catch (Exception $e) {\n    echo json_encode([\n        'success' => false,\n        'message' => '타임테이블 푸시 중 오류가 발생했습니다: ' . $e->getMessage()\n    ]);\n}\n?>","size_bytes":5642},"comp/create_results_folder.php":{"content":"<?php\nheader('Content-Type: application/json; charset=utf-8');\n\n// POST 데이터 받기\n$input = json_decode(file_get_contents('php://input'), true);\n$comp_id = $input['comp_id'] ?? '';\n$event_no = $input['event_no'] ?? '';\n$event_name = $input['event_name'] ?? '';\n$aggregation_data = $input['aggregation_data'] ?? [];\n\nif (empty($comp_id) || empty($event_no)) {\n    echo json_encode(['success' => false, 'message' => '필수 파라미터가 누락되었습니다.'], JSON_UNESCAPED_UNICODE);\n    exit;\n}\n\n// 대회 데이터 디렉토리\n$data_dir = __DIR__ . \"/data/$comp_id\";\n\n// 웹 접근 가능한 results_reports 폴더 생성\n$web_root = dirname(__DIR__);\n$results_reports_dir = \"$web_root/results_reports/$comp_id\";\nif (!is_dir($results_reports_dir)) {\n    if (!mkdir($results_reports_dir, 0755, true)) {\n        echo json_encode(['success' => false, 'message' => 'Results reports 폴더 생성에 실패했습니다.'], JSON_UNESCAPED_UNICODE);\n        exit;\n    }\n}\n\n// 이벤트별 폴더 생성\n$event_results_dir = \"$results_reports_dir/Event_$event_no\";\nif (!is_dir($event_results_dir)) {\n    if (!mkdir($event_results_dir, 0755, true)) {\n        echo json_encode(['success' => false, 'message' => 'Event 폴더 생성에 실패했습니다.'], JSON_UNESCAPED_UNICODE);\n        exit;\n    }\n}\n\ntry {\n    // 1. 상세 리포트 생성\n    $detailed_report = generateDetailedReport($comp_id, $event_no, $event_name, $aggregation_data, $data_dir);\n    $detailed_report_path = \"$event_results_dir/detailed_report_$event_no.html\";\n    file_put_contents($detailed_report_path, $detailed_report);\n    \n    // 2. 리콜 리포트 생성\n    $recall_report = generateRecallReport($comp_id, $event_no, $event_name, $aggregation_data, $data_dir);\n    $recall_report_path = \"$event_results_dir/recall_report_$event_no.html\";\n    file_put_contents($recall_report_path, $recall_report);\n    \n    // 3. 컴바인 리포트 생성\n    $combined_report = generateCombinedReport($comp_id, $event_no, $event_name, $aggregation_data, $data_dir);\n    $combined_report_path = \"$event_results_dir/combined_report_$event_no.html\";\n    file_put_contents($combined_report_path, $combined_report);\n    \n    // 4. 메타데이터 저장\n    $metadata = [\n        'event_no' => $event_no,\n        'event_name' => $event_name,\n        'generated_at' => date('Y-m-d H:i:s'),\n        'files' => [\n            'detailed_report' => \"detailed_report_$event_no.html\",\n            'recall_report' => \"recall_report_$event_no.html\",\n            'combined_report' => \"combined_report_$event_no.html\"\n        ]\n    ];\n    $metadata_path = \"$event_results_dir/metadata.json\";\n    file_put_contents($metadata_path, json_encode($metadata, JSON_UNESCAPED_UNICODE | JSON_PRETTY_PRINT));\n    \n    echo json_encode([\n        'success' => true,\n        'message' => '결과 파일이 성공적으로 생성되었습니다.',\n        'files' => $metadata['files'],\n        'results_dir' => $event_results_dir\n    ], JSON_UNESCAPED_UNICODE);\n    \n} catch (Exception $e) {\n    echo json_encode([\n        'success' => false,\n        'message' => '결과 파일 생성 중 오류가 발생했습니다: ' . $e->getMessage()\n    ], JSON_UNESCAPED_UNICODE);\n}\n\nfunction generateDetailedReport($comp_id, $event_no, $event_name, $aggregation_data, $data_dir) {\n    // 대회 정보 로드\n    $comp_info = json_decode(file_get_contents(\"$data_dir/info.json\"), true);\n    \n    // 선수 정보 로드\n    $players_file = \"$data_dir/players.txt\";\n    $all_players = [];\n    if (file_exists($players_file)) {\n        $lines = file($players_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n        foreach ($lines as $line) {\n            if (preg_match('/^bom/', $line)) continue;\n            $cols = array_map('trim', explode(',', $line));\n            if (count($cols) >= 3) {\n                $all_players[$cols[0]] = [\n                    'male' => $cols[1],\n                    'female' => $cols[2]\n                ];\n            }\n        }\n    }\n    \n    // 결과 파일 로드\n    $result_file = \"$data_dir/players_hits_$event_no.json\";\n    $final_rankings = [];\n    if (file_exists($result_file)) {\n        $result_data = json_decode(file_get_contents($result_file), true);\n        if ($result_data) {\n            foreach ($result_data as $rank => $players) {\n                foreach ($players as $player_no) {\n                    $final_rankings[] = [\n                        'rank' => $rank,\n                        'player_no' => $player_no,\n                        'player_name' => isset($all_players[$player_no]) ? \n                            $all_players[$player_no]['male'] . ' / ' . $all_players[$player_no]['female'] : \n                            \"선수 $player_no\"\n                    ];\n                }\n            }\n        }\n    }\n    \n    // 실제 채점 데이터 로드 (.adj 파일들)\n    $scoring_data = loadScoringData($data_dir, $event_no);\n    \n    // 댄스 이름 로드\n    $dance_names = [];\n    $dance_file = \"$data_dir/DanceName.txt\";\n    if (file_exists($dance_file)) {\n        $dance_lines = file($dance_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n        foreach ($dance_lines as $line) {\n            $parts = explode(',', $line);\n            if (count($parts) >= 2) {\n                $dance_names[trim($parts[0])] = trim($parts[1]);\n            }\n        }\n    }\n    \n    // 심사위원 정보 로드\n    $adjudicators = [];\n    $adj_file = \"$data_dir/adjudicators.txt\";\n    if (file_exists($adj_file)) {\n        $adj_lines = file($adj_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n        foreach ($adj_lines as $line) {\n            $parts = explode(',', $line);\n            if (count($parts) >= 2) {\n                $adjudicators[trim($parts[0])] = trim($parts[1]);\n            }\n        }\n    }\n    \n    // 모든 선수 번호 수집 (면제자 제외)\n    $all_player_numbers = [];\n    foreach ($scoring_data as $dance => $players) {\n        foreach ($players as $player_no => $scores) {\n            if (!in_array($player_no, $all_player_numbers)) {\n                // 면제자 확인\n                $is_exempted = false;\n                foreach ($final_rankings as $ranking) {\n                    if ($ranking['player_no'] == $player_no && $ranking['rank'] == 1) {\n                        $is_exempted = true;\n                        break;\n                    }\n                }\n                \n                // 면제자가 아닌 경우만 추가\n                if (!$is_exempted) {\n                    $all_player_numbers[] = $player_no;\n                }\n            }\n        }\n    }\n    sort($all_player_numbers);\n    \n    // HTML 생성\n    $html = '<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>' . htmlspecialchars($event_name) . ' - 상세 리포트</title>\n    <style>\n        * { margin: 0; padding: 0; box-sizing: border-box; }\n        body { \n            font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif; \n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            min-height: 100vh;\n            color: #333;\n        }\n        .container { max-width: 1400px; margin: 0 auto; padding: 20px; }\n        .header { \n            text-align: center; color: white; margin-bottom: 30px; \n            background: rgba(255,255,255,0.1); padding: 30px; border-radius: 15px;\n        }\n        .header h1 { font-size: 2.5em; margin-bottom: 10px; text-shadow: 2px 2px 4px rgba(0,0,0,0.3); }\n        .header p { font-size: 1.2em; opacity: 0.9; }\n        .report-section { \n            background: white; border-radius: 15px; padding: 25px; margin-bottom: 20px; \n            box-shadow: 0 10px 30px rgba(0,0,0,0.2);\n        }\n        .report-section h2 { \n            color: #667eea; margin-bottom: 20px; font-size: 1.5em; \n            border-bottom: 3px solid #667eea; padding-bottom: 10px;\n        }\n        table { \n            width: 100%; border-collapse: collapse; margin-top: 15px; \n            background: white; border-radius: 8px; overflow: hidden;\n        }\n        th, td { \n            padding: 8px; text-align: center; border: 1px solid #e0e0e0; \n            font-size: 12px;\n        }\n        th { \n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); \n            color: white; font-weight: bold;\n        }\n        tr:nth-child(even) { background: #f8f9fa; }\n        tr:hover { background: #e3f2fd; }\n        .player-name { text-align: left; font-weight: 500; }\n        .rank-1 { background: linear-gradient(135deg, #ffd700, #ffed4e); color: #333; font-weight: bold; }\n        .rank-2 { background: linear-gradient(135deg, #c0c0c0, #e8e8e8); color: #333; font-weight: bold; }\n        .rank-3 { background: linear-gradient(135deg, #cd7f32, #daa520); color: white; font-weight: bold; }\n        .print-btn { \n            position: fixed; top: 20px; right: 20px; z-index: 1000;\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            color: white; border: none; padding: 12px 25px; border-radius: 25px;\n            cursor: pointer; font-size: 14px; font-weight: bold;\n            box-shadow: 0 4px 15px rgba(0,0,0,0.2); transition: all 0.3s ease;\n        }\n        .print-btn:hover { transform: translateY(-2px); box-shadow: 0 6px 20px rgba(0,0,0,0.3); }\n        @media print {\n            .print-btn { display: none; }\n            body { background: white; }\n            .header { background: #f8f9fa; color: #333; }\n        }\n    </style>\n</head>\n<body>\n    <button class=\"print-btn\" onclick=\"window.print()\">🖨️ 인쇄</button>\n    <div class=\"container\">\n        <div class=\"header\">\n            <h1>' . htmlspecialchars($comp_info['name'] ?? '대회') . '</h1>\n            <p>' . htmlspecialchars($event_name) . ' - 상세 리포트</p>\n            <p>생성일: ' . date('Y-m-d H:i:s') . '</p>\n        </div>';\n    \n    // 각 댄스별 채점 테이블 생성\n    $dance_names_map = [\n        '6' => 'Cha Cha Cha',\n        '7' => 'Samba', \n        '8' => 'Rumba',\n        '9' => 'Jive'\n    ];\n    \n    foreach (['6', '7', '8', '9'] as $dance) {\n        $dance_name = $dance_names_map[$dance];\n        $html .= '\n        <div class=\"report-section\">\n            <h2>' . $dance_name . '</h2>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Tag</th>\n                        <th>Competitor Name(s)</th>';\n        \n        // 심사위원 컬럼 생성 (12-24)\n        for ($i = 12; $i <= 24; $i++) {\n            $html .= '<th>' . $i . '</th>';\n        }\n        \n        $html .= '\n                        <th>Mark</th>\n                    </tr>\n                </thead>\n                <tbody>';\n        \n        // 각 선수별 행 생성\n        foreach ($all_player_numbers as $player_no) {\n            $player_name = isset($all_players[$player_no]) ? \n                $all_players[$player_no]['male'] . ' / ' . $all_players[$player_no]['female'] : \n                \"선수 $player_no\";\n            \n            // 면제 선수 확인\n            $is_exempted = false;\n            foreach ($final_rankings as $ranking) {\n                if ($ranking['player_no'] == $player_no && $ranking['rank'] == 1) {\n                    $is_exempted = true;\n                    break;\n                }\n            }\n            \n            $html .= '\n                    <tr>\n                        <td>' . $player_no . '</td>\n                        <td class=\"player-name\">' . htmlspecialchars($player_name) . ($is_exempted ? ' ⭐' : '') . '</td>';\n            \n            // 각 심사위원의 점수\n            $total_recall = 0;\n            for ($i = 12; $i <= 24; $i++) {\n                $recall = isset($scoring_data[$dance][$player_no][$i]) ? \n                    $scoring_data[$dance][$player_no][$i] : '0';\n                $html .= '<td>' . $recall . '</td>';\n                if ($recall == '1') $total_recall++;\n            }\n            \n            // Mark 컬럼 (면제 또는 총 리콜 수)\n            $mark = $is_exempted ? '면제' : $total_recall;\n            $html .= '<td>' . $mark . '</td>\n                    </tr>';\n        }\n        \n        $html .= '\n                </tbody>\n            </table>\n        </div>';\n    }\n    \n    // 심사위원 정보 섹션\n    $html .= '\n        <div class=\"report-section\">\n            <h2>Adjudicators</h2>\n            <div style=\"display: flex; flex-wrap: wrap; gap: 10px;\">';\n    \n    // 심사위원 코드 매핑 (12-24 -> A-M)\n    $judge_mapping = [\n        12 => 'A', 13 => 'B', 14 => 'C', 15 => 'D', 16 => 'E',\n        17 => 'F', 18 => 'G', 19 => 'H', 20 => 'I', 21 => 'J',\n        22 => 'K', 23 => 'L', 24 => 'M'\n    ];\n    \n    // 실제 심사위원 번호 매핑\n    $actual_judge_nums = [\n        12 => '5', 13 => '9', 14 => '7', 15 => '10', 16 => '2',\n        17 => '4', 18 => '3', 19 => '6', 20 => '11', 21 => '8',\n        22 => '12', 23 => '1', 24 => '13'\n    ];\n    \n    for ($i = 12; $i <= 24; $i++) {\n        $judge_code = $judge_mapping[$i];\n        $actual_judge_num = $actual_judge_nums[$i];\n        $html .= '<span style=\"background: #f0f0f0; padding: 5px 10px; border-radius: 5px; margin: 2px;\">' . \n                 $judge_code . '. ' . $actual_judge_num . '</span>';\n    }\n    \n    $html .= '\n            </div>\n        </div>\n    </div>\n</body>\n</html>';\n    \n    return $html;\n}\n\nfunction generateRecallReport($comp_id, $event_no, $event_name, $aggregation_data, $data_dir) {\n    return generateDetailedReport($comp_id, $event_no, $event_name, $aggregation_data, $data_dir);\n}\n\nfunction generateCombinedReport($comp_id, $event_no, $event_name, $aggregation_data, $data_dir) {\n    return generateDetailedReport($comp_id, $event_no, $event_name, $aggregation_data, $data_dir);\n}\n\n// 실제 채점 데이터를 로드하는 함수\nfunction loadScoringData($data_dir, $event_no) {\n    $scoring_data = [];\n    \n    // 이벤트의 댄스들 확인 (6, 7, 8, 9 = Cha Cha Cha, Samba, Rumba, Jive)\n    $dances = ['6', '7', '8', '9'];\n    \n    foreach ($dances as $dance) {\n        $scoring_data[$dance] = [];\n        \n        // 각 심사위원의 채점 데이터 로드 (12-24)\n        for ($judge_num = 12; $judge_num <= 24; $judge_num++) {\n            $adj_file = \"$data_dir/{$event_no}_{$dance}_{$judge_num}.adj\";\n            \n            if (file_exists($adj_file)) {\n                $content = file_get_contents($adj_file);\n                $lines = array_filter(array_map('trim', explode(\"\\n\", $content)));\n                \n                foreach ($lines as $line) {\n                    // .adj 파일 형식: 각 줄에 선수 번호만 있음 (리콜된 선수)\n                    $player_number = trim($line, '\"');\n                    if (!empty($player_number)) {\n                        $scoring_data[$dance][$player_number][$judge_num] = '1'; // 리콜됨\n                    }\n                }\n            }\n        }\n    }\n    \n    return $scoring_data;\n}\n?>\n","size_bytes":15069}},"version":1}